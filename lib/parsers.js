'use strict';

var lexers = require('occam-lexers'),
    parsers = require('occam-parsers'),
    necessary = require('necessary');

var arrayUtilities = necessary.arrayUtilities,
    push = arrayUtilities.push,
    BNFLexer = lexers.BNFLexer,
    BNFParser = parsers.BNFParser,
    FlorenceParser = parsers.FlorenceParser;


var bnfLexer = BNFLexer.fromNothing(),
    bnfParser = BNFParser.fromNothing();

function florenceParserFromCombinedCustomGrammars(combinedCustomGrammars) {
      var bnf = FlorenceParser.bnf,
          florenceParser = florenceParserFromBNFAndCombinedCustomGrammars(bnf, combinedCustomGrammars);


      return florenceParser;
}

function florenceParserFromBNFAndCombinedCustomGrammars(bnf, combinedCustomGrammars) {
      var combinedCustomGrammarsRules = combinedCustomGrammars.getRules(),
          tokens = bnfLexer.tokensFromBNF(bnf),
          rulesNode = bnfParser.rulesNodeFromTokens(tokens),
          rules = BNFParser.generateRules(rulesNode);

      push(rules, combinedCustomGrammarsRules);

      var florenceParser = new FlorenceParser(rules);

      return florenceParser;
}

module.exports = {
      florenceParserFromCombinedCustomGrammars: florenceParserFromCombinedCustomGrammars,
      florenceParserFromBNFAndCombinedCustomGrammars: florenceParserFromBNFAndCombinedCustomGrammars
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9wYXJzZXJzLmpzIl0sIm5hbWVzIjpbImxleGVycyIsInJlcXVpcmUiLCJwYXJzZXJzIiwibmVjZXNzYXJ5IiwiYXJyYXlVdGlsaXRpZXMiLCJwdXNoIiwiQk5GTGV4ZXIiLCJCTkZQYXJzZXIiLCJGbG9yZW5jZVBhcnNlciIsImJuZkxleGVyIiwiZnJvbU5vdGhpbmciLCJibmZQYXJzZXIiLCJmbG9yZW5jZVBhcnNlckZyb21Db21iaW5lZEN1c3RvbUdyYW1tYXJzIiwiY29tYmluZWRDdXN0b21HcmFtbWFycyIsImJuZiIsImZsb3JlbmNlUGFyc2VyIiwiZmxvcmVuY2VQYXJzZXJGcm9tQk5GQW5kQ29tYmluZWRDdXN0b21HcmFtbWFycyIsImNvbWJpbmVkQ3VzdG9tR3JhbW1hcnNSdWxlcyIsImdldFJ1bGVzIiwidG9rZW5zIiwidG9rZW5zRnJvbUJORiIsInJ1bGVzTm9kZSIsInJ1bGVzTm9kZUZyb21Ub2tlbnMiLCJydWxlcyIsImdlbmVyYXRlUnVsZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxTQUFTQyxRQUFRLGNBQVIsQ0FBZjtBQUFBLElBQ01DLFVBQVVELFFBQVEsZUFBUixDQURoQjtBQUFBLElBRU1FLFlBQVlGLFFBQVEsV0FBUixDQUZsQjs7QUFJTSxJQUFFRyxjQUFGLEdBQXFCRCxTQUFyQixDQUFFQyxjQUFGO0FBQUEsSUFDRUMsSUFERixHQUNXRCxjQURYLENBQ0VDLElBREY7QUFBQSxJQUVFQyxRQUZGLEdBRWVOLE1BRmYsQ0FFRU0sUUFGRjtBQUFBLElBR0VDLFNBSEYsR0FHZ0NMLE9BSGhDLENBR0VLLFNBSEY7QUFBQSxJQUdhQyxjQUhiLEdBR2dDTixPQUhoQyxDQUdhTSxjQUhiOzs7QUFLTixJQUFNQyxXQUFXSCxTQUFTSSxXQUFULEVBQWpCO0FBQUEsSUFDTUMsWUFBWUosVUFBVUcsV0FBVixFQURsQjs7QUFHQSxTQUFTRSx3Q0FBVCxDQUFrREMsc0JBQWxELEVBQTBFO0FBQ2xFLFVBQUVDLEdBQUYsR0FBVU4sY0FBVixDQUFFTSxHQUFGO0FBQUEsVUFDQUMsY0FEQSxHQUNpQkMsK0NBQStDRixHQUEvQyxFQUFvREQsc0JBQXBELENBRGpCOzs7QUFHTixhQUFPRSxjQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsOENBQVQsQ0FBd0RGLEdBQXhELEVBQTZERCxzQkFBN0QsRUFBcUY7QUFDbkYsVUFBTUksOEJBQThCSix1QkFBdUJLLFFBQXZCLEVBQXBDO0FBQUEsVUFDTUMsU0FBU1YsU0FBU1csYUFBVCxDQUF1Qk4sR0FBdkIsQ0FEZjtBQUFBLFVBRU1PLFlBQVlWLFVBQVVXLG1CQUFWLENBQThCSCxNQUE5QixDQUZsQjtBQUFBLFVBR01JLFFBQVFoQixVQUFVaUIsYUFBVixDQUF3QkgsU0FBeEIsQ0FIZDs7QUFLQWhCLFdBQUtrQixLQUFMLEVBQVlOLDJCQUFaOztBQUVBLFVBQU1GLGlCQUFpQixJQUFJUCxjQUFKLENBQW1CZSxLQUFuQixDQUF2Qjs7QUFFQSxhQUFPUixjQUFQO0FBQ0Q7O0FBRURVLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmQsd0ZBRGU7QUFFZkk7QUFGZSxDQUFqQiIsImZpbGUiOiJwYXJzZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBsZXhlcnMgPSByZXF1aXJlKCdvY2NhbS1sZXhlcnMnKSxcbiAgICAgIHBhcnNlcnMgPSByZXF1aXJlKCdvY2NhbS1wYXJzZXJzJyksXG4gICAgICBuZWNlc3NhcnkgPSByZXF1aXJlKCduZWNlc3NhcnknKTtcblxuY29uc3QgeyBhcnJheVV0aWxpdGllcyB9ID0gbmVjZXNzYXJ5LFxuICAgICAgeyBwdXNoIH0gPSBhcnJheVV0aWxpdGllcyxcbiAgICAgIHsgQk5GTGV4ZXIgfSA9IGxleGVycyxcbiAgICAgIHsgQk5GUGFyc2VyLCBGbG9yZW5jZVBhcnNlciB9ID0gcGFyc2VycztcblxuY29uc3QgYm5mTGV4ZXIgPSBCTkZMZXhlci5mcm9tTm90aGluZygpLFxuICAgICAgYm5mUGFyc2VyID0gQk5GUGFyc2VyLmZyb21Ob3RoaW5nKCk7XG5cbmZ1bmN0aW9uIGZsb3JlbmNlUGFyc2VyRnJvbUNvbWJpbmVkQ3VzdG9tR3JhbW1hcnMoY29tYmluZWRDdXN0b21HcmFtbWFycykge1xuICBjb25zdCB7IGJuZiB9ID0gRmxvcmVuY2VQYXJzZXIsXG4gICAgICAgIGZsb3JlbmNlUGFyc2VyID0gZmxvcmVuY2VQYXJzZXJGcm9tQk5GQW5kQ29tYmluZWRDdXN0b21HcmFtbWFycyhibmYsIGNvbWJpbmVkQ3VzdG9tR3JhbW1hcnMpO1xuXG4gIHJldHVybiBmbG9yZW5jZVBhcnNlcjtcbn1cblxuZnVuY3Rpb24gZmxvcmVuY2VQYXJzZXJGcm9tQk5GQW5kQ29tYmluZWRDdXN0b21HcmFtbWFycyhibmYsIGNvbWJpbmVkQ3VzdG9tR3JhbW1hcnMpIHtcbiAgY29uc3QgY29tYmluZWRDdXN0b21HcmFtbWFyc1J1bGVzID0gY29tYmluZWRDdXN0b21HcmFtbWFycy5nZXRSdWxlcygpLFxuICAgICAgICB0b2tlbnMgPSBibmZMZXhlci50b2tlbnNGcm9tQk5GKGJuZiksXG4gICAgICAgIHJ1bGVzTm9kZSA9IGJuZlBhcnNlci5ydWxlc05vZGVGcm9tVG9rZW5zKHRva2VucyksXG4gICAgICAgIHJ1bGVzID0gQk5GUGFyc2VyLmdlbmVyYXRlUnVsZXMocnVsZXNOb2RlKTtcblxuICBwdXNoKHJ1bGVzLCBjb21iaW5lZEN1c3RvbUdyYW1tYXJzUnVsZXMpO1xuXG4gIGNvbnN0IGZsb3JlbmNlUGFyc2VyID0gbmV3IEZsb3JlbmNlUGFyc2VyKHJ1bGVzKTtcblxuICByZXR1cm4gZmxvcmVuY2VQYXJzZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBmbG9yZW5jZVBhcnNlckZyb21Db21iaW5lZEN1c3RvbUdyYW1tYXJzLFxuICBmbG9yZW5jZVBhcnNlckZyb21CTkZBbmRDb21iaW5lZEN1c3RvbUdyYW1tYXJzXG59O1xuIl19