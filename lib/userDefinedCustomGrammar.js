"use strict";

var constants = require("./constants"),
    CustomGrammar = require("./customGrammar");

var USER_DEFINED_CUSTOM_GRAMMAR_NAME = constants.USER_DEFINED_CUSTOM_GRAMMAR_NAME;
var name = USER_DEFINED_CUSTOM_GRAMMAR_NAME,
    ///
lexicalPattern = "<=|\\+|\\-|\\||insert|delete|empty",
    termBNF = "                term  ::=  operation\n\n                        |  operator\n                       \n                        |  substring\n\n                        |  stringLength\n\n                        ;\n\n\n           operation  ::=  operator<NO_WHITESPACE>\"(\" term \")\" ;\n\n\n            operator  ::=  \"insert\"<NO_WHITESPACE>\"(\" term \",\" term \")\"\n\n                        |  \"delete\"<NO_WHITESPACE>\"(\" term \",\" term \")\" \n\n                        |  \"empty\"<NO_WHITESPACE>\"(\"<NO_WHITESPACE>\")\"\n\n                        ;\n\n\n           substring  ::=  name<NO_WHITESPACE>\"[\" \"...\" expression \"]\" \n\n                        |  name<NO_WHITESPACE>\"[\" expression \"...\" expression \"]\" \n\n                        |  name<NO_WHITESPACE>\"[\" expression \"...\"  \"]\" \n\n                        ;\n\n\n      stringLength  ::=  \"|\" term \"|\" ;",
    expressionBNF = "          expression  ::=  arithmeticExpression\n\n                        ;\n\n\narithmeticExpression  ::=  addition \n\n                        |  subtraction \n\n                        ;\n\n\n            addition  ::=  expression \"+\" expression ;\n\n         subtraction  ::=  expression \"-\" expression ;",
    statementBNF = "           statement  ::=  lessThanOrEqualTo\n\n                        ;\n\n\n   lessThanOrEqualTo  ::=  expression \"<=\" expression ;",
    metastatementBNF = "",
    userDefinedCustomGrammar = CustomGrammar.fromName(name);
userDefinedCustomGrammar.setLexicalPattern(lexicalPattern);
userDefinedCustomGrammar.setBNF("term", termBNF);
userDefinedCustomGrammar.setBNF("expression", expressionBNF);
userDefinedCustomGrammar.setBNF("statement", statementBNF);
userDefinedCustomGrammar.setBNF("metastatement", metastatementBNF);
module.exports = userDefinedCustomGrammar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hci5qcyJdLCJuYW1lcyI6WyJjb25zdGFudHMiLCJyZXF1aXJlIiwiQ3VzdG9tR3JhbW1hciIsIlVTRVJfREVGSU5FRF9DVVNUT01fR1JBTU1BUl9OQU1FIiwibmFtZSIsImxleGljYWxQYXR0ZXJuIiwidGVybUJORiIsImV4cHJlc3Npb25CTkYiLCJzdGF0ZW1lbnRCTkYiLCJtZXRhc3RhdGVtZW50Qk5GIiwidXNlckRlZmluZWRDdXN0b21HcmFtbWFyIiwiZnJvbU5hbWUiLCJzZXRMZXhpY2FsUGF0dGVybiIsInNldEJORiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBekI7QUFBQSxJQUNNQyxhQUFhLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUQ3Qjs7SUFHUUUsZ0MsR0FBcUNILFMsQ0FBckNHLGdDO0FBRVIsSUFBTUMsSUFBSSxHQUFHRCxnQ0FBYjtBQUFBLElBQWdEO0FBQzFDRSxjQUFjLHVDQURwQjtBQUFBLElBRU1DLE9BQU8sczRCQUZiO0FBQUEsSUFtQ01DLGFBQWEsNlRBbkNuQjtBQUFBLElBa0RNQyxZQUFZLDZJQWxEbEI7QUFBQSxJQXdETUMsZ0JBQWdCLEtBeER0QjtBQUFBLElBeURNQyx3QkFBd0IsR0FBR1IsYUFBYSxDQUFDUyxRQUFkLENBQXVCUCxJQUF2QixDQXpEakM7QUEyREFNLHdCQUF3QixDQUFDRSxpQkFBekIsQ0FBMkNQLGNBQTNDO0FBRUFLLHdCQUF3QixDQUFDRyxNQUF6QixDQUFnQyxNQUFoQyxFQUF3Q1AsT0FBeEM7QUFDQUksd0JBQXdCLENBQUNHLE1BQXpCLENBQWdDLFlBQWhDLEVBQThDTixhQUE5QztBQUNBRyx3QkFBd0IsQ0FBQ0csTUFBekIsQ0FBZ0MsV0FBaEMsRUFBNkNMLFlBQTdDO0FBQ0FFLHdCQUF3QixDQUFDRyxNQUF6QixDQUFnQyxlQUFoQyxFQUFpREosZ0JBQWpEO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsd0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKSxcbiAgICAgIEN1c3RvbUdyYW1tYXIgPSByZXF1aXJlKFwiLi9jdXN0b21HcmFtbWFyXCIpO1xuXG5jb25zdCB7IFVTRVJfREVGSU5FRF9DVVNUT01fR1JBTU1BUl9OQU1FIH0gPSBjb25zdGFudHM7XG5cbmNvbnN0IG5hbWUgPSBVU0VSX0RFRklORURfQ1VTVE9NX0dSQU1NQVJfTkFNRSwgIC8vL1xuICAgICAgbGV4aWNhbFBhdHRlcm4gPSBgPD18XFxcXCt8XFxcXC18XFxcXHx8aW5zZXJ0fGRlbGV0ZXxlbXB0eWAsXG4gICAgICB0ZXJtQk5GID0gYCAgICAgICAgICAgICAgICB0ZXJtICA6Oj0gIG9wZXJhdGlvblxuXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBvcGVyYXRvclxuICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHwgIHN1YnN0cmluZ1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBzdHJpbmdMZW5ndGhcblxuICAgICAgICAgICAgICAgICAgICAgICAgO1xuXG5cbiAgICAgICAgICAgb3BlcmF0aW9uICA6Oj0gIG9wZXJhdG9yPE5PX1dISVRFU1BBQ0U+XCIoXCIgdGVybSBcIilcIiA7XG5cblxuICAgICAgICAgICAgb3BlcmF0b3IgIDo6PSAgXCJpbnNlcnRcIjxOT19XSElURVNQQUNFPlwiKFwiIHRlcm0gXCIsXCIgdGVybSBcIilcIlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBcImRlbGV0ZVwiPE5PX1dISVRFU1BBQ0U+XCIoXCIgdGVybSBcIixcIiB0ZXJtIFwiKVwiIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBcImVtcHR5XCI8Tk9fV0hJVEVTUEFDRT5cIihcIjxOT19XSElURVNQQUNFPlwiKVwiXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG4gICAgICAgICAgIHN1YnN0cmluZyAgOjo9ICBuYW1lPE5PX1dISVRFU1BBQ0U+XCJbXCIgXCIuLi5cIiBleHByZXNzaW9uIFwiXVwiIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBuYW1lPE5PX1dISVRFU1BBQ0U+XCJbXCIgZXhwcmVzc2lvbiBcIi4uLlwiIGV4cHJlc3Npb24gXCJdXCIgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHwgIG5hbWU8Tk9fV0hJVEVTUEFDRT5cIltcIiBleHByZXNzaW9uIFwiLi4uXCIgIFwiXVwiIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuICAgICAgc3RyaW5nTGVuZ3RoICA6Oj0gIFwifFwiIHRlcm0gXCJ8XCIgO2AsXG4gICAgICBleHByZXNzaW9uQk5GID0gYCAgICAgICAgICBleHByZXNzaW9uICA6Oj0gIGFyaXRobWV0aWNFeHByZXNzaW9uXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG5hcml0aG1ldGljRXhwcmVzc2lvbiAgOjo9ICBhZGRpdGlvbiBcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgc3VidHJhY3Rpb24gXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG4gICAgICAgICAgICBhZGRpdGlvbiAgOjo9ICBleHByZXNzaW9uIFwiK1wiIGV4cHJlc3Npb24gO1xuXG4gICAgICAgICBzdWJ0cmFjdGlvbiAgOjo9ICBleHByZXNzaW9uIFwiLVwiIGV4cHJlc3Npb24gO2AsXG4gICAgICBzdGF0ZW1lbnRCTkYgPSBgICAgICAgICAgICBzdGF0ZW1lbnQgIDo6PSAgbGVzc1RoYW5PckVxdWFsVG9cblxuICAgICAgICAgICAgICAgICAgICAgICAgO1xuXG5cbiAgIGxlc3NUaGFuT3JFcXVhbFRvICA6Oj0gIGV4cHJlc3Npb24gXCI8PVwiIGV4cHJlc3Npb24gO2AsXG4gICAgICBtZXRhc3RhdGVtZW50Qk5GID0gYGAsXG4gICAgICB1c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIgPSBDdXN0b21HcmFtbWFyLmZyb21OYW1lKG5hbWUpO1xuXG51c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIuc2V0TGV4aWNhbFBhdHRlcm4obGV4aWNhbFBhdHRlcm4pO1xuXG51c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIuc2V0Qk5GKFwidGVybVwiLCB0ZXJtQk5GKTtcbnVzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hci5zZXRCTkYoXCJleHByZXNzaW9uXCIsIGV4cHJlc3Npb25CTkYpO1xudXNlckRlZmluZWRDdXN0b21HcmFtbWFyLnNldEJORihcInN0YXRlbWVudFwiLCBzdGF0ZW1lbnRCTkYpO1xudXNlckRlZmluZWRDdXN0b21HcmFtbWFyLnNldEJORihcIm1ldGFzdGF0ZW1lbnRcIiwgbWV0YXN0YXRlbWVudEJORik7XG5cbm1vZHVsZS5leHBvcnRzID0gdXNlckRlZmluZWRDdXN0b21HcmFtbWFyO1xuIl19