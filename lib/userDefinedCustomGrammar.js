'use strict';

var constants = require('./constants'),
    CustomGrammar = require('./customGrammar');

var USER_DEFINED_CUSTOM_GRAMMAR_NAME = constants.USER_DEFINED_CUSTOM_GRAMMAR_NAME;


var name = USER_DEFINED_CUSTOM_GRAMMAR_NAME,
    ///
lexicalPattern = '<=|\\+|\\-|\\||insert|delete|empty',
    termBNF = '                term  ::=  operation\n\n                        |  operator\n                       \n                        |  substring\n\n                        |  stringLength\n\n                        ;\n\n\n           operation  ::=  operator<NO_WHITESPACE>"(" term ")" ;\n\n\n            operator  ::=  "insert"<NO_WHITESPACE>"(" term "," term ")"\n\n                        |  "delete"<NO_WHITESPACE>"(" term "," term ")" \n\n                        |  "empty"<NO_WHITESPACE>"("<NO_WHITESPACE>")"\n\n                        ;\n\n\n           substring  ::=  name<NO_WHITESPACE>"[" "..." expression "]" \n\n                        |  name<NO_WHITESPACE>"[" expression "..." expression "]" \n\n                        |  name<NO_WHITESPACE>"[" expression "..."  "]" \n\n                        ;\n\n\n      stringLength  ::=  "|" term "|" ;',
    expressionBNF = '          expression  ::=  arithmeticExpression\n\n                        ;\n\n\narithmeticExpression  ::=  addition \n\n                        |  subtraction \n\n                        ;\n\n\n            addition  ::=  expression "+" expression ;\n\n         subtraction  ::=  expression "-" expression ;',
    statementBNF = '           statement  ::=  lessThanOrEqualTo\n\n                        ;\n\n\n   lessThanOrEqualTo  ::=  expression "<=" expression ;',
    metastatementBNF = '',
    userDefinedCustomGrammar = CustomGrammar.fromName(name);

userDefinedCustomGrammar.setLexicalPattern(lexicalPattern);

userDefinedCustomGrammar.setBNF('term', termBNF);
userDefinedCustomGrammar.setBNF('expression', expressionBNF);
userDefinedCustomGrammar.setBNF('statement', statementBNF);
userDefinedCustomGrammar.setBNF('metastatement', metastatementBNF);

module.exports = userDefinedCustomGrammar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi91c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIuanMiXSwibmFtZXMiOlsiY29uc3RhbnRzIiwicmVxdWlyZSIsIkN1c3RvbUdyYW1tYXIiLCJVU0VSX0RFRklORURfQ1VTVE9NX0dSQU1NQVJfTkFNRSIsIm5hbWUiLCJsZXhpY2FsUGF0dGVybiIsInRlcm1CTkYiLCJleHByZXNzaW9uQk5GIiwic3RhdGVtZW50Qk5GIiwibWV0YXN0YXRlbWVudEJORiIsInVzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hciIsImZyb21OYW1lIiwic2V0TGV4aWNhbFBhdHRlcm4iLCJzZXRCTkYiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxZQUFZQyxRQUFRLGFBQVIsQ0FBbEI7QUFBQSxJQUNNQyxnQkFBZ0JELFFBQVEsaUJBQVIsQ0FEdEI7O0lBR1FFLGdDLEdBQXFDSCxTLENBQXJDRyxnQzs7O0FBRVIsSUFBTUMsT0FBT0QsZ0NBQWI7QUFBQSxJQUFnRDtBQUMxQ0UscURBRE47QUFBQSxJQUVNQyw2MUJBRk47QUFBQSxJQW1DTUMsc1VBbkNOO0FBQUEsSUFrRE1DLHVKQWxETjtBQUFBLElBd0RNQyxxQkF4RE47QUFBQSxJQXlETUMsMkJBQTJCUixjQUFjUyxRQUFkLENBQXVCUCxJQUF2QixDQXpEakM7O0FBMkRBTSx5QkFBeUJFLGlCQUF6QixDQUEyQ1AsY0FBM0M7O0FBRUFLLHlCQUF5QkcsTUFBekIsQ0FBZ0MsTUFBaEMsRUFBd0NQLE9BQXhDO0FBQ0FJLHlCQUF5QkcsTUFBekIsQ0FBZ0MsWUFBaEMsRUFBOENOLGFBQTlDO0FBQ0FHLHlCQUF5QkcsTUFBekIsQ0FBZ0MsV0FBaEMsRUFBNkNMLFlBQTdDO0FBQ0FFLHlCQUF5QkcsTUFBekIsQ0FBZ0MsZUFBaEMsRUFBaURKLGdCQUFqRDs7QUFFQUssT0FBT0MsT0FBUCxHQUFpQkwsd0JBQWpCIiwiZmlsZSI6InVzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hci5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKSxcbiAgICAgIEN1c3RvbUdyYW1tYXIgPSByZXF1aXJlKCcuL2N1c3RvbUdyYW1tYXInKTtcblxuY29uc3QgeyBVU0VSX0RFRklORURfQ1VTVE9NX0dSQU1NQVJfTkFNRSB9ID0gY29uc3RhbnRzO1xuXG5jb25zdCBuYW1lID0gVVNFUl9ERUZJTkVEX0NVU1RPTV9HUkFNTUFSX05BTUUsICAvLy9cbiAgICAgIGxleGljYWxQYXR0ZXJuID0gYDw9fFxcXFwrfFxcXFwtfFxcXFx8fGluc2VydHxkZWxldGV8ZW1wdHlgLFxuICAgICAgdGVybUJORiA9IGAgICAgICAgICAgICAgICAgdGVybSAgOjo9ICBvcGVyYXRpb25cblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgb3BlcmF0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBzdWJzdHJpbmdcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgc3RyaW5nTGVuZ3RoXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG4gICAgICAgICAgIG9wZXJhdGlvbiAgOjo9ICBvcGVyYXRvcjxOT19XSElURVNQQUNFPlwiKFwiIHRlcm0gXCIpXCIgO1xuXG5cbiAgICAgICAgICAgIG9wZXJhdG9yICA6Oj0gIFwiaW5zZXJ0XCI8Tk9fV0hJVEVTUEFDRT5cIihcIiB0ZXJtIFwiLFwiIHRlcm0gXCIpXCJcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgXCJkZWxldGVcIjxOT19XSElURVNQQUNFPlwiKFwiIHRlcm0gXCIsXCIgdGVybSBcIilcIiBcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgXCJlbXB0eVwiPE5PX1dISVRFU1BBQ0U+XCIoXCI8Tk9fV0hJVEVTUEFDRT5cIilcIlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuICAgICAgICAgICBzdWJzdHJpbmcgIDo6PSAgbmFtZTxOT19XSElURVNQQUNFPlwiW1wiIFwiLi4uXCIgZXhwcmVzc2lvbiBcIl1cIiBcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgbmFtZTxOT19XSElURVNQQUNFPlwiW1wiIGV4cHJlc3Npb24gXCIuLi5cIiBleHByZXNzaW9uIFwiXVwiIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBuYW1lPE5PX1dISVRFU1BBQ0U+XCJbXCIgZXhwcmVzc2lvbiBcIi4uLlwiICBcIl1cIiBcblxuICAgICAgICAgICAgICAgICAgICAgICAgO1xuXG5cbiAgICAgIHN0cmluZ0xlbmd0aCAgOjo9ICBcInxcIiB0ZXJtIFwifFwiIDtgLFxuICAgICAgZXhwcmVzc2lvbkJORiA9IGAgICAgICAgICAgZXhwcmVzc2lvbiAgOjo9ICBhcml0aG1ldGljRXhwcmVzc2lvblxuXG4gICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuYXJpdGhtZXRpY0V4cHJlc3Npb24gIDo6PSAgYWRkaXRpb24gXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHwgIHN1YnRyYWN0aW9uIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuICAgICAgICAgICAgYWRkaXRpb24gIDo6PSAgZXhwcmVzc2lvbiBcIitcIiBleHByZXNzaW9uIDtcblxuICAgICAgICAgc3VidHJhY3Rpb24gIDo6PSAgZXhwcmVzc2lvbiBcIi1cIiBleHByZXNzaW9uIDtgLFxuICAgICAgc3RhdGVtZW50Qk5GID0gYCAgICAgICAgICAgc3RhdGVtZW50ICA6Oj0gIGxlc3NUaGFuT3JFcXVhbFRvXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG4gICBsZXNzVGhhbk9yRXF1YWxUbyAgOjo9ICBleHByZXNzaW9uIFwiPD1cIiBleHByZXNzaW9uIDtgLFxuICAgICAgbWV0YXN0YXRlbWVudEJORiA9IGBgLFxuICAgICAgdXNlckRlZmluZWRDdXN0b21HcmFtbWFyID0gQ3VzdG9tR3JhbW1hci5mcm9tTmFtZShuYW1lKTtcblxudXNlckRlZmluZWRDdXN0b21HcmFtbWFyLnNldExleGljYWxQYXR0ZXJuKGxleGljYWxQYXR0ZXJuKTtcblxudXNlckRlZmluZWRDdXN0b21HcmFtbWFyLnNldEJORigndGVybScsIHRlcm1CTkYpO1xudXNlckRlZmluZWRDdXN0b21HcmFtbWFyLnNldEJORignZXhwcmVzc2lvbicsIGV4cHJlc3Npb25CTkYpO1xudXNlckRlZmluZWRDdXN0b21HcmFtbWFyLnNldEJORignc3RhdGVtZW50Jywgc3RhdGVtZW50Qk5GKTtcbnVzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hci5zZXRCTkYoJ21ldGFzdGF0ZW1lbnQnLCBtZXRhc3RhdGVtZW50Qk5GKTtcblxubW9kdWxlLmV4cG9ydHMgPSB1c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXI7XG4iXX0=