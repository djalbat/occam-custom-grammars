"use strict";

var parsers = require("occam-parsers"); ///


var BasicParser = parsers.BasicParser;

function rulesFromBNF(bnf) {
  var basicParser = BasicParser.fromBNF(bnf),
      rules = basicParser.getRules();
  return rules;
}

function rulesAsString(rules, multiLine) {
  var maximumRuleNameLength = rules.reduce(function (maximumRuleNameLength, rule) {
    var ruleName = rule.getName(),
        ruleNameLength = ruleName.length;
    maximumRuleNameLength = Math.max(maximumRuleNameLength, ruleNameLength);
    return maximumRuleNameLength;
  }, 0),
      rulesString = rules.reduce(function (rulesString, rule) {
    var ruleString = rule.asString(maximumRuleNameLength, multiLine);
    rulesString += ruleString;
    return rulesString;
  }, "").replace(/^\n\n/, "");
  return rulesString;
}

module.exports = {
  rulesFromBNF: rulesFromBNF,
  rulesAsString: rulesAsString
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGVzLmpzIl0sIm5hbWVzIjpbInBhcnNlcnMiLCJyZXF1aXJlIiwiQmFzaWNQYXJzZXIiLCJydWxlc0Zyb21CTkYiLCJibmYiLCJiYXNpY1BhcnNlciIsImZyb21CTkYiLCJydWxlcyIsImdldFJ1bGVzIiwicnVsZXNBc1N0cmluZyIsIm11bHRpTGluZSIsIm1heGltdW1SdWxlTmFtZUxlbmd0aCIsInJlZHVjZSIsInJ1bGUiLCJydWxlTmFtZSIsImdldE5hbWUiLCJydWxlTmFtZUxlbmd0aCIsImxlbmd0aCIsIk1hdGgiLCJtYXgiLCJydWxlc1N0cmluZyIsInJ1bGVTdHJpbmciLCJhc1N0cmluZyIsInJlcGxhY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQXZCLEMsQ0FBMEM7OztJQUVsQ0MsVyxHQUFnQkYsTyxDQUFoQkUsVzs7QUFFUixTQUFTQyxZQUFULENBQXNCQyxHQUF0QixFQUEyQjtBQUMzQixNQUFNQyxXQUFXLEdBQUdILFdBQVcsQ0FBQ0ksT0FBWixDQUFvQkYsR0FBcEIsQ0FBcEI7QUFBQSxNQUNNRyxLQUFLLEdBQUdGLFdBQVcsQ0FBQ0csUUFBWixFQURkO0FBR0EsU0FBT0QsS0FBUDtBQUNDOztBQUVELFNBQVNFLGFBQVQsQ0FBdUJGLEtBQXZCLEVBQThCRyxTQUE5QixFQUF5QztBQUN2QyxNQUFNQyxxQkFBcUIsR0FBR0osS0FBSyxDQUFDSyxNQUFOLENBQWEsVUFBQ0QscUJBQUQsRUFBd0JFLElBQXhCLEVBQWlDO0FBQ3BFLFFBQU1DLFFBQVEsR0FBR0QsSUFBSSxDQUFDRSxPQUFMLEVBQWpCO0FBQUEsUUFDTUMsY0FBYyxHQUFHRixRQUFRLENBQUNHLE1BRGhDO0FBR0FOLElBQUFBLHFCQUFxQixHQUFHTyxJQUFJLENBQUNDLEdBQUwsQ0FBU1IscUJBQVQsRUFBZ0NLLGNBQWhDLENBQXhCO0FBRUEsV0FBT0wscUJBQVA7QUFDRCxHQVB1QixFQU9yQixDQVBxQixDQUE5QjtBQUFBLE1BUU1TLFdBQVcsR0FBR2IsS0FBSyxDQUFDSyxNQUFOLENBQWEsVUFBQ1EsV0FBRCxFQUFjUCxJQUFkLEVBQXVCO0FBQ2hELFFBQU1RLFVBQVUsR0FBR1IsSUFBSSxDQUFDUyxRQUFMLENBQWNYLHFCQUFkLEVBQXFDRCxTQUFyQyxDQUFuQjtBQUVBVSxJQUFBQSxXQUFXLElBQUlDLFVBQWY7QUFFQSxXQUFPRCxXQUFQO0FBQ0QsR0FOYSxFQU1YLEVBTlcsRUFNUEcsT0FOTyxDQU1DLE9BTkQsRUFNVSxFQU5WLENBUnBCO0FBZ0JBLFNBQU9ILFdBQVA7QUFDRDs7QUFFREksTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2Z0QixFQUFBQSxZQUFZLEVBQVpBLFlBRGU7QUFFZk0sRUFBQUEsYUFBYSxFQUFiQTtBQUZlLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHBhcnNlcnMgPSByZXF1aXJlKFwib2NjYW0tcGFyc2Vyc1wiKTsgLy8vXG5cbmNvbnN0IHsgQmFzaWNQYXJzZXIgfSA9IHBhcnNlcnM7XG5cbmZ1bmN0aW9uIHJ1bGVzRnJvbUJORihibmYpIHtcbmNvbnN0IGJhc2ljUGFyc2VyID0gQmFzaWNQYXJzZXIuZnJvbUJORihibmYpLFxuICAgICAgcnVsZXMgPSBiYXNpY1BhcnNlci5nZXRSdWxlcygpO1xuXG5yZXR1cm4gcnVsZXM7XG59XG5cbmZ1bmN0aW9uIHJ1bGVzQXNTdHJpbmcocnVsZXMsIG11bHRpTGluZSkge1xuICBjb25zdCBtYXhpbXVtUnVsZU5hbWVMZW5ndGggPSBydWxlcy5yZWR1Y2UoKG1heGltdW1SdWxlTmFtZUxlbmd0aCwgcnVsZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHJ1bGVOYW1lID0gcnVsZS5nZXROYW1lKCksXG4gICAgICAgICAgICAgICAgcnVsZU5hbWVMZW5ndGggPSBydWxlTmFtZS5sZW5ndGg7XG5cbiAgICAgICAgICBtYXhpbXVtUnVsZU5hbWVMZW5ndGggPSBNYXRoLm1heChtYXhpbXVtUnVsZU5hbWVMZW5ndGgsIHJ1bGVOYW1lTGVuZ3RoKTtcblxuICAgICAgICAgIHJldHVybiBtYXhpbXVtUnVsZU5hbWVMZW5ndGg7XG4gICAgICAgIH0sIDApLFxuICAgICAgICBydWxlc1N0cmluZyA9IHJ1bGVzLnJlZHVjZSgocnVsZXNTdHJpbmcsIHJ1bGUpID0+IHtcbiAgICAgICAgICBjb25zdCBydWxlU3RyaW5nID0gcnVsZS5hc1N0cmluZyhtYXhpbXVtUnVsZU5hbWVMZW5ndGgsIG11bHRpTGluZSk7XG5cbiAgICAgICAgICBydWxlc1N0cmluZyArPSBydWxlU3RyaW5nO1xuXG4gICAgICAgICAgcmV0dXJuIHJ1bGVzU3RyaW5nO1xuICAgICAgICB9LCBcIlwiKS5yZXBsYWNlKC9eXFxuXFxuLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVzU3RyaW5nO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcnVsZXNGcm9tQk5GLFxuICBydWxlc0FzU3RyaW5nXG59O1xuIl19