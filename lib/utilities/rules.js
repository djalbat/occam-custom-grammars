"use strict";

var _occamParsers = require("occam-parsers");

function rulesFromBNF(bnf) {
  var basicParser = _occamParsers.BasicParser.fromBNF(bnf),
      rules = basicParser.getRules();

  return rules;
}

function rulesAsString(rules, multiLine) {
  var maximumRuleNameLength = rules.reduce(function (maximumRuleNameLength, rule) {
    var ruleName = rule.getName(),
        ruleNameLength = ruleName.length;
    maximumRuleNameLength = Math.max(maximumRuleNameLength, ruleNameLength);
    return maximumRuleNameLength;
  }, 0),
      rulesString = rules.reduce(function (rulesString, rule) {
    var ruleString = rule.asString(maximumRuleNameLength, multiLine);
    rulesString += ruleString;
    return rulesString;
  }, "").replace(/^\n\n/, "");
  return rulesString;
}

module.exports = {
  rulesFromBNF: rulesFromBNF,
  rulesAsString: rulesAsString
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGVzLmpzIl0sIm5hbWVzIjpbInJ1bGVzRnJvbUJORiIsImJuZiIsImJhc2ljUGFyc2VyIiwiQmFzaWNQYXJzZXIiLCJmcm9tQk5GIiwicnVsZXMiLCJnZXRSdWxlcyIsInJ1bGVzQXNTdHJpbmciLCJtdWx0aUxpbmUiLCJtYXhpbXVtUnVsZU5hbWVMZW5ndGgiLCJyZWR1Y2UiLCJydWxlIiwicnVsZU5hbWUiLCJnZXROYW1lIiwicnVsZU5hbWVMZW5ndGgiLCJsZW5ndGgiLCJNYXRoIiwibWF4IiwicnVsZXNTdHJpbmciLCJydWxlU3RyaW5nIiwiYXNTdHJpbmciLCJyZXBsYWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUEsU0FBU0EsWUFBVCxDQUFzQkMsR0FBdEIsRUFBMkI7QUFDM0IsTUFBTUMsV0FBVyxHQUFHQywwQkFBWUMsT0FBWixDQUFvQkgsR0FBcEIsQ0FBcEI7QUFBQSxNQUNNSSxLQUFLLEdBQUdILFdBQVcsQ0FBQ0ksUUFBWixFQURkOztBQUdBLFNBQU9ELEtBQVA7QUFDQzs7QUFFRCxTQUFTRSxhQUFULENBQXVCRixLQUF2QixFQUE4QkcsU0FBOUIsRUFBeUM7QUFDdkMsTUFBTUMscUJBQXFCLEdBQUdKLEtBQUssQ0FBQ0ssTUFBTixDQUFhLFVBQUNELHFCQUFELEVBQXdCRSxJQUF4QixFQUFpQztBQUNwRSxRQUFNQyxRQUFRLEdBQUdELElBQUksQ0FBQ0UsT0FBTCxFQUFqQjtBQUFBLFFBQ01DLGNBQWMsR0FBR0YsUUFBUSxDQUFDRyxNQURoQztBQUdBTixJQUFBQSxxQkFBcUIsR0FBR08sSUFBSSxDQUFDQyxHQUFMLENBQVNSLHFCQUFULEVBQWdDSyxjQUFoQyxDQUF4QjtBQUVBLFdBQU9MLHFCQUFQO0FBQ0QsR0FQdUIsRUFPckIsQ0FQcUIsQ0FBOUI7QUFBQSxNQVFNUyxXQUFXLEdBQUdiLEtBQUssQ0FBQ0ssTUFBTixDQUFhLFVBQUNRLFdBQUQsRUFBY1AsSUFBZCxFQUF1QjtBQUNoRCxRQUFNUSxVQUFVLEdBQUdSLElBQUksQ0FBQ1MsUUFBTCxDQUFjWCxxQkFBZCxFQUFxQ0QsU0FBckMsQ0FBbkI7QUFFQVUsSUFBQUEsV0FBVyxJQUFJQyxVQUFmO0FBRUEsV0FBT0QsV0FBUDtBQUNELEdBTmEsRUFNWCxFQU5XLEVBTVBHLE9BTk8sQ0FNQyxPQU5ELEVBTVUsRUFOVixDQVJwQjtBQWdCQSxTQUFPSCxXQUFQO0FBQ0Q7O0FBRURJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmdkIsRUFBQUEsWUFBWSxFQUFaQSxZQURlO0FBRWZPLEVBQUFBLGFBQWEsRUFBYkE7QUFGZSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBCYXNpY1BhcnNlciB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5cbmZ1bmN0aW9uIHJ1bGVzRnJvbUJORihibmYpIHtcbmNvbnN0IGJhc2ljUGFyc2VyID0gQmFzaWNQYXJzZXIuZnJvbUJORihibmYpLFxuICAgICAgcnVsZXMgPSBiYXNpY1BhcnNlci5nZXRSdWxlcygpO1xuXG5yZXR1cm4gcnVsZXM7XG59XG5cbmZ1bmN0aW9uIHJ1bGVzQXNTdHJpbmcocnVsZXMsIG11bHRpTGluZSkge1xuICBjb25zdCBtYXhpbXVtUnVsZU5hbWVMZW5ndGggPSBydWxlcy5yZWR1Y2UoKG1heGltdW1SdWxlTmFtZUxlbmd0aCwgcnVsZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHJ1bGVOYW1lID0gcnVsZS5nZXROYW1lKCksXG4gICAgICAgICAgICAgICAgcnVsZU5hbWVMZW5ndGggPSBydWxlTmFtZS5sZW5ndGg7XG5cbiAgICAgICAgICBtYXhpbXVtUnVsZU5hbWVMZW5ndGggPSBNYXRoLm1heChtYXhpbXVtUnVsZU5hbWVMZW5ndGgsIHJ1bGVOYW1lTGVuZ3RoKTtcblxuICAgICAgICAgIHJldHVybiBtYXhpbXVtUnVsZU5hbWVMZW5ndGg7XG4gICAgICAgIH0sIDApLFxuICAgICAgICBydWxlc1N0cmluZyA9IHJ1bGVzLnJlZHVjZSgocnVsZXNTdHJpbmcsIHJ1bGUpID0+IHtcbiAgICAgICAgICBjb25zdCBydWxlU3RyaW5nID0gcnVsZS5hc1N0cmluZyhtYXhpbXVtUnVsZU5hbWVMZW5ndGgsIG11bHRpTGluZSk7XG5cbiAgICAgICAgICBydWxlc1N0cmluZyArPSBydWxlU3RyaW5nO1xuXG4gICAgICAgICAgcmV0dXJuIHJ1bGVzU3RyaW5nO1xuICAgICAgICB9LCBcIlwiKS5yZXBsYWNlKC9eXFxuXFxuLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVzU3RyaW5nO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcnVsZXNGcm9tQk5GLFxuICBydWxlc0FzU3RyaW5nXG59O1xuIl19