(() => {
  var __commonJS = (callback, module) => () => {
    if (!module) {
      module = {exports: {}};
      callback(module.exports, module);
    }
    return module.exports;
  };

  // node_modules/easy/lib/offset.js
  var require_offset = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Offset = /* @__PURE__ */ function() {
      function Offset2(top, left) {
        _classCallCheck(this, Offset2);
        this.top = top;
        this.left = left;
      }
      _createClass(Offset2, [
        {
          key: "getTop",
          value: function getTop() {
            return this.top;
          }
        },
        {
          key: "getLeft",
          value: function getLeft() {
            return this.left;
          }
        }
      ]);
      return Offset2;
    }();
    exports.default = Offset;
  });

  // node_modules/easy/lib/bounds.js
  var require_bounds = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Bounds = /* @__PURE__ */ function() {
      function Bounds2(top, left, right, bottom) {
        _classCallCheck(this, Bounds2);
        this.top = top;
        this.left = left;
        this.right = right;
        this.bottom = bottom;
      }
      _createClass(Bounds2, [
        {
          key: "getTop",
          value: function getTop() {
            return this.top;
          }
        },
        {
          key: "getLeft",
          value: function getLeft() {
            return this.left;
          }
        },
        {
          key: "getRight",
          value: function getRight() {
            return this.right;
          }
        },
        {
          key: "getBottom",
          value: function getBottom() {
            return this.bottom;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            var width = this.right - this.left;
            return width;
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            var height = this.bottom - this.top;
            return height;
          }
        },
        {
          key: "setTop",
          value: function setTop(top) {
            this.top = top;
          }
        },
        {
          key: "setLeft",
          value: function setLeft(left) {
            this.left = left;
          }
        },
        {
          key: "setRight",
          value: function setRight(right) {
            this.right = right;
          }
        },
        {
          key: "setBottom",
          value: function setBottom(bottom) {
            this.bottom = bottom;
          }
        },
        {
          key: "shift",
          value: function shift(horizontalOffset, verticalOffset) {
            this.top += verticalOffset;
            this.left += horizontalOffset;
            this.right += horizontalOffset;
            this.bottom += verticalOffset;
          }
        },
        {
          key: "isOverlappingMouse",
          value: function isOverlappingMouse(mouseTop, mouseLeft) {
            return this.top <= mouseTop && this.left <= mouseLeft && this.right > mouseLeft && this.bottom > mouseTop;
          }
        },
        {
          key: "areOverlapping",
          value: function areOverlapping(bounds) {
            return this.top < bounds.bottom && this.left < bounds.right && this.right > bounds.left && this.bottom > bounds.top;
          }
        }
      ], [
        {
          key: "fromBoundingClientRect",
          value: function fromBoundingClientRect(boundingClientRect) {
            var windowScrollTop = window.pageYOffset, windowScrollLeft = window.pageXOffset, top = boundingClientRect.top + windowScrollTop, left = boundingClientRect.left + windowScrollLeft, right = boundingClientRect.right + windowScrollLeft, bottom = boundingClientRect.bottom + windowScrollTop, bounds = new Bounds2(top, left, right, bottom);
            return bounds;
          }
        },
        {
          key: "fromTopLeftWidthAndHeight",
          value: function fromTopLeftWidthAndHeight(top, left, width, height) {
            var bottom = top + height, right = left + width, bounds = new Bounds2(top, left, right, bottom);
            return bounds;
          }
        }
      ]);
      return Bounds2;
    }();
    exports.default = Bounds;
  });

  // node_modules/easy/lib/constants.js
  var require_constants = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.IGNORED_PROPERTIES = exports.DEFAULT_PROPERTIES = exports.SVG_NAMESPACE_URI = exports.EMPTY_STRING = exports.ABOUT_BLANK = exports.CLASS_NAME = exports.UNDEFINED = exports.HTML_FOR = exports.WILDCARD = exports.FUNCTION = exports.DISABLED = exports.BOOLEAN = exports.DISPLAY = exports.STRING = exports.OBJECT = exports.HEIGHT = exports.BLOCK = exports.WIDTH = exports.CLASS = exports.SPACE = exports.NONE = exports.BODY = exports.FOR = void 0;
    var FOR = "for";
    exports.FOR = FOR;
    var BODY = "body";
    exports.BODY = BODY;
    var NONE = "none";
    exports.NONE = NONE;
    var SPACE = " ";
    exports.SPACE = SPACE;
    var CLASS = "class";
    exports.CLASS = CLASS;
    var WIDTH = "width";
    exports.WIDTH = WIDTH;
    var BLOCK = "block";
    exports.BLOCK = BLOCK;
    var HEIGHT = "height";
    exports.HEIGHT = HEIGHT;
    var OBJECT = "object";
    exports.OBJECT = OBJECT;
    var STRING = "string";
    exports.STRING = STRING;
    var DISPLAY = "display";
    exports.DISPLAY = DISPLAY;
    var BOOLEAN = "boolean";
    exports.BOOLEAN = BOOLEAN;
    var DISABLED = "disabled";
    exports.DISABLED = DISABLED;
    var FUNCTION = "function";
    exports.FUNCTION = FUNCTION;
    var WILDCARD = "*";
    exports.WILDCARD = WILDCARD;
    var HTML_FOR = "htmlFor";
    exports.HTML_FOR = HTML_FOR;
    var UNDEFINED = "undefined";
    exports.UNDEFINED = UNDEFINED;
    var CLASS_NAME = "className";
    exports.CLASS_NAME = CLASS_NAME;
    var ABOUT_BLANK = "about:blank";
    exports.ABOUT_BLANK = ABOUT_BLANK;
    var EMPTY_STRING = "";
    exports.EMPTY_STRING = EMPTY_STRING;
    var SVG_NAMESPACE_URI = "http://www.w3.org/2000/svg";
    exports.SVG_NAMESPACE_URI = SVG_NAMESPACE_URI;
    var DEFAULT_PROPERTIES = "defaultProperties";
    exports.DEFAULT_PROPERTIES = DEFAULT_PROPERTIES;
    var IGNORED_PROPERTIES = "ignoredProperties";
    exports.IGNORED_PROPERTIES = IGNORED_PROPERTIES;
  });

  // node_modules/easy/lib/utilities/object.js
  var require_object = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.combine = combine;
    exports.prune = prune;
    var _constants = require_constants();
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys.forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function combine(target) {
      var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      target = _objectSpread({}, target);
      var names = Object.keys(source);
      names.forEach(function(name) {
        var targetValue = target[name], sourceValue = source[name], targetHasOwnProperty = target.hasOwnProperty(name);
        target[name] = targetHasOwnProperty ? combineValues(targetValue, sourceValue) : sourceValue;
      });
      return target;
    }
    function prune(target) {
      var names = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      target = _objectSpread({}, target);
      names.forEach(function(name) {
        var targetHasOwnProperty = target.hasOwnProperty(name);
        if (targetHasOwnProperty) {
          delete target[name];
        }
      });
      return target;
    }
    function combineValues(targetValue, sourceValue) {
      var targetValueBoolean = isValueBoolean(targetValue), sourceValueBoolean = isValueBoolean(sourceValue), combinedValue = targetValueBoolean && sourceValueBoolean ? targetValue : "".concat(targetValue, " ").concat(sourceValue);
      return combinedValue;
    }
    function isValueBoolean(value) {
      var valueBoolean = (typeof value === "undefined" ? "undefined" : _typeof(value)) === _constants.BOOLEAN;
      return valueBoolean;
    }
  });

  // node_modules/easy/lib/utilities/array.js
  var require_array = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.first = first;
    exports.push = push;
    exports.augment = augment;
    exports.flatten = flatten;
    exports.guarantee = guarantee;
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function first(array) {
      return array[0];
    }
    function push(array1, array2) {
      Array.prototype.push.apply(array1, array2);
    }
    function augment(array1, array2, test) {
      array1 = _toConsumableArray(array1);
      array2.forEach(function(element, index) {
        var passed = test(element, index);
        if (passed) {
          array1.push(element);
        }
      });
      return array1;
    }
    function flatten(array1) {
      return array1.reduce(function(array, element) {
        array = array.concat(element);
        return array;
      }, []);
    }
    function guarantee(arrayOrElement) {
      arrayOrElement = arrayOrElement || [];
      return _instanceof(arrayOrElement, Array) ? arrayOrElement : [
        arrayOrElement
      ];
    }
  });

  // node_modules/easy/lib/utilities/name.js
  var require_name = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isSVGTagName = isSVGTagName;
    exports.isSVGAttributeName = isSVGAttributeName;
    exports.isHTMLAttributeName = isHTMLAttributeName;
    function isSVGTagName(tagName) {
      return svgTagNames.includes(tagName);
    }
    function isSVGAttributeName(attributeName) {
      return svgAttributeNames.includes(attributeName);
    }
    function isHTMLAttributeName(attributeName) {
      return htmlAttributeNames.includes(attributeName);
    }
    var svgTagNames = [
      "altGlyph",
      "animate",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "animation",
      "audio",
      "circle",
      "clipPath",
      "color-profile",
      "cursor",
      "defs",
      "desc",
      "discard",
      "ellipse",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feDropShadow",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "filter",
      "font",
      "font-face",
      "font-face-format",
      "font-face-name",
      "font-face-uri",
      "foreignObject",
      "g",
      "glyph",
      "glyphRef",
      "handler",
      "hatch",
      "hatchpath",
      "hkern",
      "image",
      "line",
      "linearGradient",
      "listener",
      "marker",
      "mask",
      "mesh",
      "meshgradient",
      "meshpatch",
      "meshrow",
      "metadata",
      "missing-glyph",
      "mpath",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "prefetch",
      "radialGradient",
      "rect",
      "script",
      "set",
      "solidcolor",
      "stop",
      "style",
      "svg",
      "switch",
      "symbol",
      "tbreak",
      "text",
      "textArea",
      "textPath",
      "title",
      "tref",
      "tspan",
      "unknown",
      "use",
      "video",
      "view",
      "vkern"
    ];
    var svgAttributeNames = [
      "accent-height",
      "accumulate",
      "additive",
      "alignment-baseline",
      "alphabetic",
      "amplitude",
      "arabic-form",
      "ascent",
      "attributeName",
      "attributeType",
      "azimuth",
      "bandwidth",
      "baseFrequency",
      "baseProfile",
      "baseline-shift",
      "bbox",
      "begin",
      "bias",
      "by",
      "calcMode",
      "cap-height",
      "clip",
      "className",
      "clip-path",
      "clip-rule",
      "clipPathUnits",
      "color",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "contentScriptType",
      "contentStyleType",
      "crossorigin",
      "cursor",
      "cx",
      "cy",
      "d",
      "defaultAction",
      "descent",
      "diffuseConstant",
      "direction",
      "display",
      "divisor",
      "dominant-baseline",
      "download",
      "dur",
      "dx",
      "dy",
      "edgeMode",
      "editable",
      "elevation",
      "enable-background",
      "end",
      "event",
      "exponent",
      "externalResourcesRequired",
      "fill",
      "fill-opacity",
      "fill-rule",
      "filter",
      "filterRes",
      "filterUnits",
      "flood-color",
      "flood-opacity",
      "focusHighlight",
      "focusable",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "format",
      "fr",
      "from",
      "fx",
      "fy",
      "g1",
      "g2",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "glyphRef",
      "gradientTransform",
      "gradientUnits",
      "handler",
      "hanging",
      "hatchContentUnits",
      "hatchUnits",
      "height",
      "horiz-adv-x",
      "horiz-origin-x",
      "horiz-origin-y",
      "href",
      "hreflang",
      "id",
      "ideographic",
      "image-rendering",
      "in",
      "in2",
      "initialVisibility",
      "intercept",
      "k",
      "k1",
      "k2",
      "k3",
      "k4",
      "kernelMatrix",
      "kernelUnitLength",
      "kerning",
      "keyPoints",
      "keySplines",
      "keyTimes",
      "lengthAdjust",
      "letter-spacing",
      "lighting-color",
      "limitingConeAngle",
      "local",
      "marker-end",
      "marker-mid",
      "marker-start",
      "markerHeight",
      "markerUnits",
      "markerWidth",
      "mask",
      "maskContentUnits",
      "maskUnits",
      "mathematical",
      "max",
      "media",
      "mediaCharacterEncoding",
      "mediaContentEncodings",
      "mediaSize",
      "mediaTime",
      "method",
      "min",
      "mode",
      "name",
      "nav-down",
      "nav-down-left",
      "nav-down-right",
      "nav-left",
      "nav-next",
      "nav-prev",
      "nav-right",
      "nav-up",
      "nav-up-left",
      "nav-up-right",
      "numOctaves",
      "observer",
      "offset",
      "opacity",
      "operator",
      "order",
      "orient",
      "orientation",
      "origin",
      "overflow",
      "overlay",
      "overline-position",
      "overline-thickness",
      "panose-1",
      "path",
      "pathLength",
      "patternContentUnits",
      "patternTransform",
      "patternUnits",
      "phase",
      "pitch",
      "playbackOrder",
      "playbackorder",
      "pointer-events",
      "points",
      "pointsAtX",
      "pointsAtY",
      "pointsAtZ",
      "preserveAlpha",
      "preserveAspectRatio",
      "primitiveUnits",
      "propagate",
      "r",
      "radius",
      "refX",
      "refY",
      "rendering-intent",
      "repeatCount",
      "repeatDur",
      "requiredExtensions",
      "requiredFeatures",
      "requiredFonts",
      "requiredFormats",
      "restart",
      "result",
      "rotate",
      "rx",
      "ry",
      "scale",
      "seed",
      "shape-rendering",
      "side",
      "slope",
      "snapshotTime",
      "spacing",
      "specularConstant",
      "specularExponent",
      "spreadMethod",
      "src",
      "startOffset",
      "stdDeviation",
      "stemh",
      "stemv",
      "stitchTiles",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "string",
      "stroke",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "style",
      "surfaceScale",
      "syncBehavior",
      "syncBehaviorDefault",
      "syncMaster",
      "syncTolerance",
      "syncToleranceDefault",
      "systemLanguage",
      "tableValues",
      "target",
      "targetX",
      "targetY",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "textLength",
      "timelineBegin",
      "timelinebegin",
      "title",
      "to",
      "transform",
      "transformBehavior",
      "type",
      "u1",
      "u2",
      "underline-position",
      "underline-thickness",
      "unicode",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "values",
      "version",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "viewBox",
      "viewTarget",
      "visibility",
      "width",
      "widths",
      "word-spacing",
      "writing-mode",
      "x",
      "x-height",
      "x1",
      "x2",
      "xChannelSelector",
      "y",
      "y1",
      "y2",
      "yChannelSelector",
      "z",
      "zoomAndPan"
    ];
    var htmlAttributeNames = [
      "accept",
      "acceptCharset",
      "accessKey",
      "action",
      "allow",
      "allowFullScreen",
      "allowTransparency",
      "alt",
      "async",
      "autoComplete",
      "autoFocus",
      "autoPlay",
      "capture",
      "cellPadding",
      "cellSpacing",
      "challenge",
      "charSet",
      "checked",
      "cite",
      "classID",
      "className",
      "colSpan",
      "cols",
      "content",
      "contentEditable",
      "contextMenu",
      "controls",
      "coords",
      "crossOrigin",
      "data",
      "dateTime",
      "default",
      "defer",
      "dir",
      "disabled",
      "download",
      "draggable",
      "encType",
      "form",
      "formAction",
      "formEncType",
      "formMethod",
      "formNoValidate",
      "formTarget",
      "frameBorder",
      "headers",
      "height",
      "hidden",
      "high",
      "href",
      "hrefLang",
      "htmlFor",
      "httpEquiv",
      "icon",
      "id",
      "inputMode",
      "integrity",
      "is",
      "keyParams",
      "keyType",
      "kind",
      "label",
      "lang",
      "list",
      "loop",
      "low",
      "manifest",
      "marginHeight",
      "marginWidth",
      "max",
      "maxLength",
      "media",
      "mediaGroup",
      "method",
      "min",
      "minLength",
      "multiple",
      "muted",
      "name",
      "noValidate",
      "nonce",
      "open",
      "optimum",
      "pattern",
      "placeholder",
      "poster",
      "preload",
      "profile",
      "radioGroup",
      "readOnly",
      "rel",
      "required",
      "reversed",
      "role",
      "rowSpan",
      "rows",
      "sandbox",
      "scope",
      "scoped",
      "scrolling",
      "seamless",
      "selected",
      "shape",
      "size",
      "sizes",
      "span",
      "spellCheck",
      "src",
      "srcDoc",
      "srcLang",
      "srcSet",
      "start",
      "step",
      "style",
      "summary",
      "tabIndex",
      "target",
      "title",
      "type",
      "useMap",
      "value",
      "width",
      "wmode",
      "wrap"
    ];
  });

  // node_modules/easy/lib/utilities/dom.js
  var require_dom = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.elementsFromDOMElements = elementsFromDOMElements;
    exports.ascendantDOMNodesFromDOMNode = ascendantDOMNodesFromDOMNode;
    exports.descendantDOMNodesFromDOMNode = descendantDOMNodesFromDOMNode;
    exports.filterDOMNodesBySelector = filterDOMNodesBySelector;
    exports.domNodeMatchesSelector = domNodeMatchesSelector;
    exports.filterDOMNodes = filterDOMNodes;
    var _array = require_array();
    var _constants = require_constants();
    function elementsFromDOMElements(domElements) {
      var domElementsWithElements = filterDOMNodes(domElements, function(domElement) {
        return domElement.__element__ !== void 0;
      }), elements = domElementsWithElements.map(function(domElement) {
        return domElement.__element__;
      });
      return elements;
    }
    function ascendantDOMNodesFromDOMNode(domNode, height) {
      var ascendantDOMNodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      if (height > 0) {
        var parentDOMNode = domNode.parentElement;
        if (parentDOMNode !== null) {
          ascendantDOMNodes.push(parentDOMNode);
          height--;
          ascendantDOMNodesFromDOMNode(parentDOMNode, height, ascendantDOMNodes);
        }
      }
      return ascendantDOMNodes;
    }
    function descendantDOMNodesFromDOMNode(domNode, depth) {
      var descendantDOMNodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      if (depth > 0) {
        var childDOMNodes = domNode.childNodes;
        (0, _array).push(descendantDOMNodes, childDOMNodes);
        depth--;
        childDOMNodes.forEach(function(childDOMNode) {
          return descendantDOMNodesFromDOMNode(childDOMNode, depth, descendantDOMNodes);
        });
      }
      return descendantDOMNodes;
    }
    function filterDOMNodesBySelector(domNodes, selector) {
      var filteredDOMNodes = filterDOMNodes(domNodes, function(domNode) {
        return domNodeMatchesSelector(domNode, selector);
      });
      return filteredDOMNodes;
    }
    function domNodeMatchesSelector(domNode, selector) {
      var domNodeType = domNode.nodeType;
      switch (domNodeType) {
        case Node.ELEMENT_NODE: {
          var domElement = domNode;
          return domElement.matches(selector);
        }
        case Node.TEXT_NODE: {
          if (selector === _constants.WILDCARD) {
            return true;
          }
        }
      }
      return false;
    }
    function filterDOMNodes(domNodes, test) {
      var filteredDOMNodes = [], domNodesLength = domNodes.length;
      for (var index = 0; index < domNodesLength; index++) {
        var domNode = domNodes[index], result = test(domNode);
        if (result) {
          filteredDOMNodes.push(domNode);
        }
      }
      return filteredDOMNodes;
    }
  });

  // node_modules/easy/lib/mixins/element.js
  var require_element = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _array = require_array();
    var _constants = require_constants();
    var _dom = require_dom();
    function getParentElement() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var parentElement = null;
      var parentDOMElement = this.domElement.parentElement;
      if (parentDOMElement !== null) {
        if (parentDOMElement.matches(selector)) {
          var parentDOMElements = [
            parentDOMElement
          ], parentElements = (0, _dom).elementsFromDOMElements(parentDOMElements), firstParentElement = (0, _array).first(parentElements);
          parentElement = firstParentElement || null;
        }
      }
      return parentElement;
    }
    function getChildElements() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var childDOMNodes = this.domElement.childNodes, childDOMElements = (0, _dom).filterDOMNodesBySelector(childDOMNodes, selector), childElements = (0, _dom).elementsFromDOMElements(childDOMElements);
      return childElements;
    }
    function getAscendantElements() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD, maximumHeight = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
      var height = maximumHeight, domNode = this.domElement, ascendantDOMNodes = (0, _dom).ascendantDOMNodesFromDOMNode(domNode, height), ascendantDOMElements = (0, _dom).filterDOMNodesBySelector(ascendantDOMNodes, selector), ascendantElements = (0, _dom).elementsFromDOMElements(ascendantDOMElements);
      return ascendantElements;
    }
    function getDescendantElements() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD, maximumDepth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
      var depth = maximumDepth, domNode = this.domElement, descendantDOMNodes = (0, _dom).descendantDOMNodesFromDOMNode(domNode, depth), descendantDOMElements = (0, _dom).filterDOMNodesBySelector(descendantDOMNodes, selector), descendantElements = (0, _dom).elementsFromDOMElements(descendantDOMElements);
      return descendantElements;
    }
    function getNextSiblingElement() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var nextSiblingElement = null;
      var nextSiblingDOMNode = this.domElement.nextSibling;
      if (nextSiblingDOMNode !== null && (0, _dom).domNodeMatchesSelector(nextSiblingDOMNode, selector)) {
        nextSiblingElement = nextSiblingDOMNode.__element__ || null;
      }
      return nextSiblingElement;
    }
    function getPreviousSiblingElement() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var previousSiblingElement = null;
      var previousSiblingDOMNode = this.domElement.previousSibling;
      if (previousSiblingDOMNode !== null && (0, _dom).domNodeMatchesSelector(previousSiblingDOMNode, selector)) {
        previousSiblingElement = previousSiblingDOMNode.__element__ || null;
      }
      return previousSiblingElement;
    }
    var elementMixins = {
      getParentElement,
      getChildElements,
      getAscendantElements,
      getDescendantElements,
      getNextSiblingElement,
      getPreviousSiblingElement
    };
    var _default = elementMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/textElement.js
  var require_textElement = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _offset = _interopRequireDefault2(require_offset());
    var _bounds = _interopRequireDefault2(require_bounds());
    var _element = _interopRequireDefault2(require_element());
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var TextElement = /* @__PURE__ */ function() {
      function TextElement2(text) {
        _classCallCheck(this, TextElement2);
        this.domElement = document.createTextNode(text);
        this.domElement.__element__ = this;
      }
      _createClass(TextElement2, [
        {
          key: "getText",
          value: function getText() {
            var nodeValue = this.domElement.nodeValue, text = nodeValue;
            return text;
          }
        },
        {
          key: "setText",
          value: function setText(text) {
            var nodeValue = text;
            this.domElement.nodeValue = nodeValue;
          }
        },
        {
          key: "getOffset",
          value: function getOffset() {
            var top = this.domElement.offsetTop, left = this.domElement.offsetLeft, offset = new _offset.default(top, left);
            return offset;
          }
        },
        {
          key: "getBounds",
          value: function getBounds() {
            var boundingClientRect = this.domElement.getBoundingClientRect(), bounds = _bounds.default.fromBoundingClientRect(boundingClientRect);
            return bounds;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            var clientWidth = this.domElement.clientWidth, width = clientWidth;
            return width;
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            var clientHeight = this.domElement.clientHeight, height = clientHeight;
            return height;
          }
        },
        {
          key: "prependTo",
          value: function prependTo(parentElement) {
            parentElement.prepend(this);
          }
        },
        {
          key: "appendTo",
          value: function appendTo(parentElement) {
            parentElement.append(this);
          }
        },
        {
          key: "addTo",
          value: function addTo(parentElement) {
            parentElement.add(this);
          }
        },
        {
          key: "removeFrom",
          value: function removeFrom(parentElement) {
            parentElement.remove(this);
          }
        },
        {
          key: "insertBefore",
          value: function insertBefore(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, siblingDOMElement = siblingElement.domElement;
            parentDOMNode.insertBefore(this.domElement, siblingDOMElement);
          }
        },
        {
          key: "insertAfter",
          value: function insertAfter(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, siblingDOMElement = siblingElement.domElement;
            parentDOMNode.insertBefore(this.domElement, siblingDOMElement.nextSibling);
          }
        },
        {
          key: "remove",
          value: function remove() {
            this.domElement.remove();
          }
        }
      ]);
      return TextElement2;
    }();
    Object.assign(TextElement.prototype, _element.default);
    var _default = TextElement;
    exports.default = _default;
  });

  // node_modules/easy/lib/utilities/elements.js
  var require_elements = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.removeFalseyElements = removeFalseyElements;
    exports.replaceStringsWithTextElements = replaceStringsWithTextElements;
    var _textElement = _interopRequireDefault2(require_textElement());
    var _constants = require_constants();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function removeFalseyElements(elements1) {
      elements1 = elements1.reduce(function(elements, element) {
        if (element) {
          elements.push(element);
        }
        return elements;
      }, []);
      return elements1;
    }
    function replaceStringsWithTextElements(elements) {
      elements = elements.map(function(element) {
        if ((typeof element === "undefined" ? "undefined" : _typeof(element)) === _constants.STRING) {
          var text = element, textElement = new _textElement.default(text);
          element = textElement;
        }
        return element;
      });
      return elements;
    }
  });

  // node_modules/easy/lib/mixins/jsx.js
  var require_jsx = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _object = require_object();
    var _array = require_array();
    var _name = require_name();
    var _elements = require_elements();
    var _constants = require_constants();
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function applyProperties(properties, defaultProperties, ignoredProperties) {
      var _this = this;
      this.properties = (0, _object).combine(properties, defaultProperties);
      properties = (0, _object).prune(this.properties, ignoredProperties);
      var namespaceURI = this.domElement.namespaceURI, svg = namespaceURI === _constants.SVG_NAMESPACE_URI, propertiesKeys = Object.keys(properties), names = propertiesKeys;
      names.forEach(function(name) {
        var value = properties[name], nameHandlerName = isNameHandlerName(name);
        if (nameHandlerName) {
          addHandler(_this, name, value);
        } else {
          var nameAttributeName = isNameAttributeName(name, svg);
          if (nameAttributeName) {
            addAttribute(_this, name, value);
          }
        }
      });
      var childElements = childElementsFromElement(this) || properties.childElements, context = {};
      childElements.forEach(function(childElement) {
        updateContext(childElement, context);
        _this.add(childElement);
      });
      this.context = context;
    }
    function getProperties() {
      return this.properties;
    }
    function getContext() {
      return this.context;
    }
    function assignContext(names, thenDelete) {
      var _this = this;
      var argumentsLength = arguments.length;
      if (argumentsLength === 1) {
        var firstArgument = (0, _array).first(arguments);
        if ((typeof firstArgument === "undefined" ? "undefined" : _typeof(firstArgument)) === _constants.BOOLEAN) {
          names = Object.keys(this.context);
          thenDelete = firstArgument;
        } else {
          thenDelete = true;
        }
      }
      if (argumentsLength === 0) {
        names = Object.keys(this.context);
        thenDelete = true;
      }
      names.forEach(function(name) {
        var value = _this.context[name], propertyName = name, descriptor = {
          value
        };
        Object.defineProperty(_this, propertyName, descriptor);
        if (thenDelete) {
          delete _this.context[name];
        }
      }, []);
    }
    var jsxMixins = {
      applyProperties,
      getProperties,
      getContext,
      assignContext
    };
    var _default = jsxMixins;
    exports.default = _default;
    function childElementsFromElement(element) {
      var childElements = null;
      if (_typeof(element.childElements) === _constants.FUNCTION) {
        childElements = element.childElements.call(element);
        childElements = (0, _array).guarantee(childElements);
        childElements = (0, _elements).removeFalseyElements(childElements);
        childElements = (0, _elements).replaceStringsWithTextElements(childElements);
      }
      return childElements;
    }
    function updateContext(childElement, context) {
      var parentContext = _typeof(childElement.parentContext) === _constants.FUNCTION ? childElement.parentContext() : childElement.context;
      Object.assign(context, parentContext);
    }
    function addHandler(element, name, value) {
      var eventType = name.substr(2).toLowerCase(), handler = value;
      element.on(eventType, handler);
    }
    function addAttribute(element, name, value) {
      if (name === _constants.CLASS_NAME) {
        name = _constants.CLASS;
      }
      if (name === _constants.HTML_FOR) {
        name = _constants.FOR;
      }
      if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === _constants.OBJECT) {
        var keys = Object.keys(value);
        keys.forEach(function(key) {
          element.domElement[name][key] = value[key];
        });
      } else if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === _constants.BOOLEAN) {
        if (value) {
          value = name;
          element.addAttribute(name, value);
        }
      } else {
        element.addAttribute(name, value);
      }
    }
    function isNameHandlerName(name) {
      return /^on/.test(name);
    }
    function isNameAttributeName(name, svg) {
      return svg ? (0, _name).isSVGAttributeName(name) : (0, _name).isHTMLAttributeName(name);
    }
  });

  // node_modules/easy/lib/eventTypes.js
  var require_eventTypes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.CONTEXTMENU_EVENT_TYPE = exports.START_DRAG_EVENT_TYPE = exports.STOP_DRAG_EVENT_TYPE = exports.DRAG_OVER_EVENT_TYPE = exports.MOUSEMOVE_EVENT_TYPE = exports.MOUSEDOWN_EVENT_TYPE = exports.MOUSEOVER_EVENT_TYPE = exports.DBLCLICK_EVENT_TYPE = exports.MOUSEOUT_EVENT_TYPE = exports.DRAG_OUT_EVENT_TYPE = exports.AUXCLICK_EVENT_TYPE = exports.MOUSEUP_EVENT_TYPE = exports.KEYDOWN_EVENT_TYPE = exports.SCROLL_EVENT_TYPE = exports.RESIZE_EVENT_TYPE = exports.CHANGE_EVENT_TYPE = exports.REMOVE_EVENT_TYPE = exports.KEYUP_EVENT_TYPE = exports.CLICK_EVENT_TYPE = exports.FOCUS_EVENT_TYPE = exports.INPUT_EVENT_TYPE = exports.WHEEL_EVENT_TYPE = exports.DROP_EVENT_TYPE = exports.DRAG_EVENT_TYPE = exports.BLUR_EVENT_TYPE = exports.MOVE_EVENT_TYPE = exports.OPEN_EVENT_TYPE = void 0;
    var OPEN_EVENT_TYPE = "open";
    exports.OPEN_EVENT_TYPE = OPEN_EVENT_TYPE;
    var MOVE_EVENT_TYPE = "move";
    exports.MOVE_EVENT_TYPE = MOVE_EVENT_TYPE;
    var BLUR_EVENT_TYPE = "blur";
    exports.BLUR_EVENT_TYPE = BLUR_EVENT_TYPE;
    var DRAG_EVENT_TYPE = "drag";
    exports.DRAG_EVENT_TYPE = DRAG_EVENT_TYPE;
    var DROP_EVENT_TYPE = "drop";
    exports.DROP_EVENT_TYPE = DROP_EVENT_TYPE;
    var WHEEL_EVENT_TYPE = "wheel";
    exports.WHEEL_EVENT_TYPE = WHEEL_EVENT_TYPE;
    var INPUT_EVENT_TYPE = "input";
    exports.INPUT_EVENT_TYPE = INPUT_EVENT_TYPE;
    var FOCUS_EVENT_TYPE = "focus";
    exports.FOCUS_EVENT_TYPE = FOCUS_EVENT_TYPE;
    var CLICK_EVENT_TYPE = "click";
    exports.CLICK_EVENT_TYPE = CLICK_EVENT_TYPE;
    var KEYUP_EVENT_TYPE = "keyup";
    exports.KEYUP_EVENT_TYPE = KEYUP_EVENT_TYPE;
    var REMOVE_EVENT_TYPE = "remove";
    exports.REMOVE_EVENT_TYPE = REMOVE_EVENT_TYPE;
    var CHANGE_EVENT_TYPE = "change";
    exports.CHANGE_EVENT_TYPE = CHANGE_EVENT_TYPE;
    var RESIZE_EVENT_TYPE = "resize";
    exports.RESIZE_EVENT_TYPE = RESIZE_EVENT_TYPE;
    var SCROLL_EVENT_TYPE = "scroll";
    exports.SCROLL_EVENT_TYPE = SCROLL_EVENT_TYPE;
    var KEYDOWN_EVENT_TYPE = "keydown";
    exports.KEYDOWN_EVENT_TYPE = KEYDOWN_EVENT_TYPE;
    var MOUSEUP_EVENT_TYPE = "mouseup";
    exports.MOUSEUP_EVENT_TYPE = MOUSEUP_EVENT_TYPE;
    var AUXCLICK_EVENT_TYPE = "auxclick";
    exports.AUXCLICK_EVENT_TYPE = AUXCLICK_EVENT_TYPE;
    var DRAG_OUT_EVENT_TYPE = "dragout";
    exports.DRAG_OUT_EVENT_TYPE = DRAG_OUT_EVENT_TYPE;
    var MOUSEOUT_EVENT_TYPE = "mouseout";
    exports.MOUSEOUT_EVENT_TYPE = MOUSEOUT_EVENT_TYPE;
    var DBLCLICK_EVENT_TYPE = "dblclick";
    exports.DBLCLICK_EVENT_TYPE = DBLCLICK_EVENT_TYPE;
    var MOUSEOVER_EVENT_TYPE = "mouseover";
    exports.MOUSEOVER_EVENT_TYPE = MOUSEOVER_EVENT_TYPE;
    var MOUSEDOWN_EVENT_TYPE = "mousedown";
    exports.MOUSEDOWN_EVENT_TYPE = MOUSEDOWN_EVENT_TYPE;
    var MOUSEMOVE_EVENT_TYPE = "mousemove";
    exports.MOUSEMOVE_EVENT_TYPE = MOUSEMOVE_EVENT_TYPE;
    var DRAG_OVER_EVENT_TYPE = "dragover";
    exports.DRAG_OVER_EVENT_TYPE = DRAG_OVER_EVENT_TYPE;
    var STOP_DRAG_EVENT_TYPE = "stopdrag";
    exports.STOP_DRAG_EVENT_TYPE = STOP_DRAG_EVENT_TYPE;
    var START_DRAG_EVENT_TYPE = "startdrag";
    exports.START_DRAG_EVENT_TYPE = START_DRAG_EVENT_TYPE;
    var CONTEXTMENU_EVENT_TYPE = "contextmenu";
    exports.CONTEXTMENU_EVENT_TYPE = CONTEXTMENU_EVENT_TYPE;
    var _default = {
      OPEN_EVENT_TYPE,
      MOVE_EVENT_TYPE,
      BLUR_EVENT_TYPE,
      DRAG_EVENT_TYPE,
      DROP_EVENT_TYPE,
      WHEEL_EVENT_TYPE,
      INPUT_EVENT_TYPE,
      FOCUS_EVENT_TYPE,
      CLICK_EVENT_TYPE,
      KEYUP_EVENT_TYPE,
      REMOVE_EVENT_TYPE,
      CHANGE_EVENT_TYPE,
      RESIZE_EVENT_TYPE,
      SCROLL_EVENT_TYPE,
      KEYDOWN_EVENT_TYPE,
      MOUSEUP_EVENT_TYPE,
      AUXCLICK_EVENT_TYPE,
      DRAG_OUT_EVENT_TYPE,
      MOUSEOUT_EVENT_TYPE,
      DBLCLICK_EVENT_TYPE,
      MOUSEOVER_EVENT_TYPE,
      MOUSEDOWN_EVENT_TYPE,
      MOUSEMOVE_EVENT_TYPE,
      DRAG_OVER_EVENT_TYPE,
      STOP_DRAG_EVENT_TYPE,
      START_DRAG_EVENT_TYPE,
      CONTEXTMENU_EVENT_TYPE
    };
    exports.default = _default;
  });

  // node_modules/easy/lib/mixins/key.js
  var require_key = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _eventTypes = require_eventTypes();
    function onKeyUp(keyUpHandler, element) {
      this.on(_eventTypes.KEYUP_EVENT_TYPE, keyUpHandler, element);
    }
    function offKeyUp(keyUpHandler, element) {
      this.off(_eventTypes.KEYUP_EVENT_TYPE, keyUpHandler, element);
    }
    function onKeyDown(keyDownHandler, element) {
      this.on(_eventTypes.KEYDOWN_EVENT_TYPE, keyDownHandler, element);
    }
    function offKeyDown(keyDownHandler, element) {
      this.off(_eventTypes.KEYDOWN_EVENT_TYPE, keyDownHandler, element);
    }
    var keyMixins = {
      onKeyUp,
      offKeyUp,
      onKeyDown,
      offKeyDown
    };
    var _default = keyMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/mixins/click.js
  var require_click = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _eventTypes = require_eventTypes();
    function onClick(clickHandler, element) {
      this.on(_eventTypes.CLICK_EVENT_TYPE, clickHandler, element);
    }
    function offClick(clickHandler, element) {
      this.off(_eventTypes.CLICK_EVENT_TYPE, clickHandler, element);
    }
    var clickMixins = {
      onClick,
      offClick
    };
    var _default = clickMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/mixins/state.js
  var require_state = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function getState() {
      return this.state;
    }
    function setState(state) {
      this.state = state;
    }
    function updateState(state) {
      Object.assign(this.state, state);
    }
    var stateMixins = {
      getState,
      setState,
      updateState
    };
    var _default = stateMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/contentTypes.js
  var require_contentTypes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TEXT_HTML_CONTENT_TYPE = void 0;
    var TEXT_HTML_CONTENT_TYPE = "text/html";
    exports.TEXT_HTML_CONTENT_TYPE = TEXT_HTML_CONTENT_TYPE;
  });

  // node_modules/easy/lib/mixins/resize.js
  var require_resize = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.onResize = onResize;
    exports.offResize = offResize;
    exports.default = void 0;
    var _eventTypes = require_eventTypes();
    var _constants = require_constants();
    var _contentTypes = require_contentTypes();
    function onResize(resizeHandler, element) {
      this.on(_eventTypes.RESIZE_EVENT_TYPE, resizeHandler, element);
    }
    function offResize(resizeHandler, element) {
      this.off(_eventTypes.RESIZE_EVENT_TYPE, resizeHandler, element);
    }
    function addResizeObject() {
      var _this = this;
      var resizeObject = document.createElement(_constants.OBJECT), style = "display: block; \n                 position: absolute; \n                 top: 0; \n                 left: 0; \n                 height: 100%; \n                 width: 100%; \n                 overflow: hidden; \n                 pointer-events: none; \n                 z-index: -1;", data = _constants.ABOUT_BLANK, type = _contentTypes.TEXT_HTML_CONTENT_TYPE;
      resizeObject.setAttribute("style", style);
      resizeObject.data = data;
      resizeObject.type = type;
      this.__resizeObject__ = resizeObject;
      resizeObject.onload = function() {
        return resizeObjectLoadHandler(_this);
      };
      this.domElement.appendChild(resizeObject);
    }
    function removeResizeObject() {
      var resizeObject = this.__resizeObject__, objectWindow = resizeObject.contentDocument.defaultView;
      objectWindow.removeEventListener(_eventTypes.RESIZE_EVENT_TYPE, resizeEventListener);
      this.domElement.removeChild(resizeObject);
      delete this.__resizeObject__;
    }
    var resizeMixins = {
      onResize,
      offResize,
      addResizeObject,
      removeResizeObject
    };
    var _default = resizeMixins;
    exports.default = _default;
    function resizeObjectLoadHandler(element) {
      var resizeObject = element.__resizeObject__, resizeObjectWindow = resizeObject.contentDocument.defaultView;
      resizeObjectWindow.addEventListener(_eventTypes.RESIZE_EVENT_TYPE, function(event) {
        var resizeEventListeners = element.findEventListeners(_eventTypes.RESIZE_EVENT_TYPE);
        resizeEventListeners.forEach(function(resizeEventListener2) {
          return resizeEventListener2(event);
        });
      });
    }
  });

  // node_modules/easy/lib/mixins/event.js
  var require_event = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _constants = require_constants();
    var _eventTypes = require_eventTypes();
    var _resize = require_resize();
    function on(eventTypes, handler) {
      var element = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this;
      var _this = this;
      eventTypes = eventTypes.split(_constants.SPACE);
      eventTypes.forEach(function(eventType) {
        if (eventType === _eventTypes.RESIZE_EVENT_TYPE) {
          var resizeEventListeners = _this.findEventListeners(_eventTypes.RESIZE_EVENT_TYPE), resizeEventListenersLength = resizeEventListeners.length;
          if (resizeEventListenersLength === 0) {
            _this.addResizeObject();
          }
        }
        var eventListener = _this.addEventListener(eventType, handler, element);
        _this.domElement.addEventListener(eventType, eventListener);
      });
    }
    function off(eventTypes, handler) {
      var element = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this;
      var _this = this;
      eventTypes = eventTypes.split(_constants.SPACE);
      eventTypes.forEach(function(eventType) {
        var eventListener = _this.removeEventListener(eventType, handler, element);
        _this.domElement.removeEventListener(eventType, eventListener);
        if (eventType === _eventTypes.RESIZE_EVENT_TYPE) {
          var resizeEventListeners = _this.findEventListeners(_eventTypes.RESIZE_EVENT_TYPE), resizeEventListenersLength = resizeEventListeners.length;
          if (resizeEventListenersLength === 0) {
            (0, _resize).removeResizeObject(_this);
          }
        }
      });
    }
    function addEventListener(eventType, handler, element) {
      if (this.eventListeners === void 0) {
        this.eventListeners = [];
      }
      var eventListener = this.createEventListener(eventType, handler, element);
      this.eventListeners.push(eventListener);
      return eventListener;
    }
    function removeEventListener(eventType, handler, element) {
      var eventListener = this.findEventListener(eventType, handler, element), index = this.eventListeners.indexOf(eventListener), start = index, deleteCount = 1;
      this.eventListeners.splice(start, deleteCount);
      if (this.eventListeners.length === 0) {
        delete this.eventListeners;
      }
      return eventListener;
    }
    function findEventListener(eventType, handler, element) {
      var eventListener1 = this.eventListeners.find(function(eventListener) {
        if (eventListener.element === element && eventListener.handler === handler && eventListener.eventType === eventType) {
          return true;
        }
      });
      return eventListener1;
    }
    function findEventListeners(eventType) {
      var eventListeners = [];
      if (this.eventListeners !== void 0) {
        this.eventListeners.forEach(function(eventListener) {
          var found = eventListener.eventType === eventType;
          if (found) {
            eventListeners.push(eventListener);
          }
        });
      }
      return eventListeners;
    }
    function createEventListener(eventType, handler, element1) {
      var _this = this;
      var eventListener;
      var handlerElement = element1;
      eventListener = function(event) {
        var element = _this;
        handler.call(handlerElement, event, element);
      };
      Object.assign(eventListener, {
        element: element1,
        handler,
        eventType
      });
      return eventListener;
    }
    var eventMixins = {
      on,
      off,
      addEventListener,
      removeEventListener,
      createEventListener,
      findEventListener,
      findEventListeners
    };
    var _default = eventMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/mixins/mouse.js
  var require_mouse = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _eventTypes = require_eventTypes();
    function onMouseUp(mouseUpHandler, element) {
      this.on(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
    }
    function offMouseUp(mouseUpHandler, element) {
      this.off(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
    }
    function onMouseOut(mouseOutHandler, element) {
      this.on(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
    }
    function offMouseOut(mouseOutHandler, element) {
      this.off(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
    }
    function onMouseDown(mouseDownHandler, element) {
      this.on(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
    }
    function offMouseDown(mouseDownHandler, element) {
      this.off(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
    }
    function onMouseOver(mouseOverHandler, element) {
      this.on(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
    }
    function offMouseOver(mouseOverHandler, element) {
      this.off(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
    }
    function onMouseMove(mouseMoveHandler, element) {
      this.on(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
    }
    function offMouseMove(mouseMoveHandler, element) {
      this.off(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
    }
    var mouseMixins = {
      onMouseUp,
      offMouseUp,
      onMouseOut,
      offMouseOut,
      onMouseDown,
      offMouseDown,
      onMouseOver,
      offMouseOver,
      onMouseMove,
      offMouseMove
    };
    var _default = mouseMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/mixins/scroll.js
  var require_scroll = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _eventTypes = require_eventTypes();
    function onScroll(scrollHandler, element) {
      this.on(_eventTypes.SCROLL_EVENT_TYPE, scrollHandler, element);
    }
    function offScroll(scrollHandler, element) {
      this.off(_eventTypes.SCROLL_EVENT_TYPE, scrollHandler, element);
    }
    function getScrollTop() {
      return this.domElement.scrollTop;
    }
    function getScrollLeft() {
      return this.domElement.scrollLeft;
    }
    function setScrollTop(scrollTop) {
      this.domElement.scrollTop = scrollTop;
    }
    function setScrollLeft(scrollLeft) {
      this.domElement.scrollLeft = scrollLeft;
    }
    var scrollMixins = {
      onScroll,
      offScroll,
      getScrollTop,
      getScrollLeft,
      setScrollTop,
      setScrollLeft
    };
    var _default = scrollMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/element.js
  var require_element2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _offset = _interopRequireDefault2(require_offset());
    var _bounds = _interopRequireDefault2(require_bounds());
    var _jsx = _interopRequireDefault2(require_jsx());
    var _key = _interopRequireDefault2(require_key());
    var _click = _interopRequireDefault2(require_click());
    var _state = _interopRequireDefault2(require_state());
    var _event = _interopRequireDefault2(require_event());
    var _mouse = _interopRequireDefault2(require_mouse());
    var _resize = _interopRequireDefault2(require_resize());
    var _scroll = _interopRequireDefault2(require_scroll());
    var _element = _interopRequireDefault2(require_element());
    var _object = require_object();
    var _name = require_name();
    var _array = require_array();
    var _constants = require_constants();
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    var Element = /* @__PURE__ */ function() {
      function Element2(selector) {
        _classCallCheck(this, Element2);
        if (selector) {
          this.domElement = document.querySelector(selector);
          this.domElement.__element__ = this;
        }
      }
      _createClass(Element2, [
        {
          key: "getDOMElement",
          value: function getDOMElement() {
            return this.domElement;
          }
        },
        {
          key: "getOffset",
          value: function getOffset() {
            var top = this.domElement.offsetTop, left = this.domElement.offsetLeft, offset = new _offset.default(top, left);
            return offset;
          }
        },
        {
          key: "getBounds",
          value: function getBounds() {
            var boundingClientRect = this.domElement.getBoundingClientRect(), bounds = _bounds.default.fromBoundingClientRect(boundingClientRect);
            return bounds;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            var includeBorder = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
            var width = includeBorder ? this.domElement.offsetWidth : this.domElement.clientWidth;
            return width;
          }
        },
        {
          key: "setWidth",
          value: function setWidth(width) {
            width = "".concat(width, "px");
            this.style(_constants.WIDTH, width);
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            var includeBorder = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
            var height = includeBorder ? this.domElement.offsetHeight : this.domElement.clientHeight;
            return height;
          }
        },
        {
          key: "setHeight",
          value: function setHeight(height) {
            height = "".concat(height, "px");
            this.style(_constants.HEIGHT, height);
          }
        },
        {
          key: "hasAttribute",
          value: function hasAttribute(name) {
            return this.domElement.hasAttribute(name);
          }
        },
        {
          key: "getAttribute",
          value: function getAttribute(name) {
            return this.domElement.getAttribute(name);
          }
        },
        {
          key: "setAttribute",
          value: function setAttribute(name, value) {
            this.domElement.setAttribute(name, value);
          }
        },
        {
          key: "clearAttribute",
          value: function clearAttribute(name) {
            this.domElement.removeAttribute(name);
          }
        },
        {
          key: "addAttribute",
          value: function addAttribute(name, value) {
            this.setAttribute(name, value);
          }
        },
        {
          key: "removeAttribute",
          value: function removeAttribute(name) {
            this.clearAttribute(name);
          }
        },
        {
          key: "setClass",
          value: function setClass(className) {
            this.domElement.className = className;
          }
        },
        {
          key: "addClass",
          value: function addClass(className) {
            this.domElement.classList.add(className);
          }
        },
        {
          key: "removeClass",
          value: function removeClass(className) {
            this.domElement.classList.remove(className);
          }
        },
        {
          key: "toggleClass",
          value: function toggleClass(className) {
            this.domElement.classList.toggle(className);
          }
        },
        {
          key: "hasClass",
          value: function hasClass(className) {
            return this.domElement.classList.contains(className);
          }
        },
        {
          key: "clearClasses",
          value: function clearClasses() {
            this.domElement.className = _constants.EMPTY_STRING;
          }
        },
        {
          key: "prependTo",
          value: function prependTo(parentElement) {
            parentElement.prepend(this);
          }
        },
        {
          key: "appendTo",
          value: function appendTo(parentElement) {
            parentElement.append(this);
          }
        },
        {
          key: "addTo",
          value: function addTo(parentElement) {
            parentElement.add(this);
          }
        },
        {
          key: "removeFrom",
          value: function removeFrom(parentElement) {
            parentElement.remove(this);
          }
        },
        {
          key: "insertBefore",
          value: function insertBefore(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, siblingDOMElement = siblingElement.domElement;
            parentDOMNode.insertBefore(this.domElement, siblingDOMElement);
          }
        },
        {
          key: "insertAfter",
          value: function insertAfter(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, siblingDOMElement = siblingElement.domElement;
            parentDOMNode.insertBefore(this.domElement, siblingDOMElement.nextSibling);
          }
        },
        {
          key: "prepend",
          value: function prepend(element) {
            var domElement = element.domElement, firstChildDOMElement = this.domElement.firstChild;
            this.domElement.insertBefore(domElement, firstChildDOMElement);
          }
        },
        {
          key: "append",
          value: function append(element) {
            var domElement = element.domElement;
            this.domElement.insertBefore(domElement, null);
          }
        },
        {
          key: "add",
          value: function add(element) {
            this.append(element);
          }
        },
        {
          key: "remove",
          value: function remove(element) {
            if (element) {
              var domElement = element.domElement;
              this.domElement.removeChild(domElement);
            } else {
              this.domElement.remove();
            }
          }
        },
        {
          key: "mount",
          value: function mount(element1) {
            var descendantElements = element1.getDescendantElements(), elements = [
              element1
            ].concat(_toConsumableArray(descendantElements));
            this.add(element1);
            elements.reverse();
            elements.forEach(function(element) {
              return element.didMount && element.didMount();
            });
          }
        },
        {
          key: "unmount",
          value: function unmount(element2) {
            var descendantElements = element2.getDescendantElements(), elements = [
              element2
            ].concat(_toConsumableArray(descendantElements));
            elements.forEach(function(element) {
              return element.willUnmount && element.willUnmount();
            });
            this.remove(element2);
          }
        },
        {
          key: "show",
          value: function show() {
            var displayStyle = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.BLOCK;
            this.display(displayStyle);
          }
        },
        {
          key: "hide",
          value: function hide() {
            this.style(_constants.DISPLAY, _constants.NONE);
          }
        },
        {
          key: "display",
          value: function display1(display) {
            this.style(_constants.DISPLAY, display);
          }
        },
        {
          key: "enable",
          value: function enable() {
            this.clearAttribute(_constants.DISABLED);
          }
        },
        {
          key: "disable",
          value: function disable() {
            this.setAttribute(_constants.DISABLED, _constants.DISABLED);
          }
        },
        {
          key: "isEnabled",
          value: function isEnabled() {
            var disabled = this.isDisabled(), enabled = !disabled;
            return enabled;
          }
        },
        {
          key: "isDisabled",
          value: function isDisabled() {
            var disabled = this.hasAttribute(_constants.DISABLED);
            return disabled;
          }
        },
        {
          key: "isDisplayed",
          value: function isDisplayed() {
            var display = this.css(_constants.DISPLAY), displayed = display !== _constants.NONE;
            return displayed;
          }
        },
        {
          key: "isShowing",
          value: function isShowing() {
            var displayed = this.isDisplayed(), showing = displayed;
            return showing;
          }
        },
        {
          key: "isHidden",
          value: function isHidden() {
            var displayed = this.isDisplayed(), hidden = !displayed;
            return hidden;
          }
        },
        {
          key: "style",
          value: function style(name, value) {
            if (value !== void 0) {
              this.domElement.style[name] = value;
            } else {
              var style1 = this.domElement.style[name];
              return style1;
            }
          }
        },
        {
          key: "html",
          value: function html1(html) {
            if (html === void 0) {
              var innerHTML = this.domElement.innerHTML;
              html = innerHTML;
              return html;
            } else {
              var innerHTML1 = html;
              this.domElement.innerHTML = innerHTML1;
            }
          }
        },
        {
          key: "css",
          value: function css1(css) {
            if (css === void 0) {
              var computedStyle = getComputedStyle(this.domElement), css2 = {};
              for (var index = 0; index < computedStyle.length; index++) {
                var firstComputedStyle = _array.first[computedStyle], name = firstComputedStyle, value = computedStyle.getPropertyValue(name);
                css2[name] = value;
              }
              return css2;
            } else if ((typeof css === "undefined" ? "undefined" : _typeof(css)) === _constants.STRING) {
              var name1 = css;
              var computedStyle1 = getComputedStyle(this.domElement), value1 = computedStyle1.getPropertyValue(name1);
              css = value1;
              return css;
            } else {
              var _this = this;
              var names = Object.keys(css);
              names.forEach(function(name2) {
                var value2 = css[name2];
                _this.style(name2, value2);
              });
            }
          }
        },
        {
          key: "blur",
          value: function blur() {
            this.domElement.blur();
          }
        },
        {
          key: "focus",
          value: function focus() {
            this.domElement.focus();
          }
        },
        {
          key: "hasFocus",
          value: function hasFocus() {
            var focus = document.activeElement === this.domElement;
            return focus;
          }
        }
      ], [
        {
          key: "fromClass",
          value: function fromClass(Class, properties) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key1 = 2; _key1 < _len; _key1++) {
              remainingArguments[_key1 - 2] = arguments[_key1];
            }
            var tagName = Class.tagName, element = elementFromTagName.apply(void 0, [
              Class,
              tagName
            ].concat(_toConsumableArray(remainingArguments))), defaultProperties = defaultPropertiesFromClass(Class), ignoredProperties = ignoredPropertiesFromClass(Class);
            element.applyProperties(properties, defaultProperties, ignoredProperties);
            element.initialise && element.initialise();
            return element;
          }
        },
        {
          key: "fromTagName",
          value: function fromTagName(tagName, properties) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key2 = 2; _key2 < _len; _key2++) {
              remainingArguments[_key2 - 2] = arguments[_key2];
            }
            var Class = Element2, element = elementFromTagName.apply(void 0, [
              Class,
              tagName
            ].concat(_toConsumableArray(remainingArguments))), defaultProperties = {}, ignoredProperties = [];
            element.applyProperties(properties, defaultProperties, ignoredProperties);
            element.initialise && element.initialise();
            return element;
          }
        }
      ]);
      return Element2;
    }();
    Object.assign(Element.prototype, _jsx.default);
    Object.assign(Element.prototype, _key.default);
    Object.assign(Element.prototype, _click.default);
    Object.assign(Element.prototype, _state.default);
    Object.assign(Element.prototype, _event.default);
    Object.assign(Element.prototype, _mouse.default);
    Object.assign(Element.prototype, _resize.default);
    Object.assign(Element.prototype, _scroll.default);
    Object.assign(Element.prototype, _element.default);
    var _default = Element;
    exports.default = _default;
    function elementFromTagName(Class, tagName) {
      for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key3 = 2; _key3 < _len; _key3++) {
        remainingArguments[_key3 - 2] = arguments[_key3];
      }
      var _bind;
      var selector = null, element = new ((_bind = Function.prototype.bind).call.apply(_bind, [
        Class,
        null,
        selector
      ].concat(_toConsumableArray(remainingArguments))))();
      element.domElement = (0, _name).isSVGTagName(tagName) ? document.createElementNS(_constants.SVG_NAMESPACE_URI, tagName) : document.createElement(tagName);
      element.domElement.__element__ = element;
      return element;
    }
    function defaultPropertiesFromClass(Class) {
      var defaultProperties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (Class.hasOwnProperty(_constants.DEFAULT_PROPERTIES)) {
        defaultProperties = (0, _object).combine(defaultProperties, Class[_constants.DEFAULT_PROPERTIES]);
      }
      var superClass = Object.getPrototypeOf(Class);
      if (superClass !== null) {
        defaultProperties = defaultPropertiesFromClass(superClass, defaultProperties);
      }
      return defaultProperties;
    }
    function ignoredPropertiesFromClass(Class) {
      var ignoredProperties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      if (Class.hasOwnProperty(_constants.IGNORED_PROPERTIES)) {
        ignoredProperties = (0, _array).augment(ignoredProperties, Class[_constants.IGNORED_PROPERTIES], function(ignoredProperty) {
          return !ignoredProperties.includes(ignoredProperty);
        });
      }
      var superClass = Object.getPrototypeOf(Class);
      if (superClass !== null) {
        ignoredProperties = ignoredPropertiesFromClass(superClass, ignoredProperties);
      }
      return ignoredProperties;
    }
  });

  // node_modules/easy/lib/react.js
  var require_react = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _element = _interopRequireDefault2(require_element2());
    var _array = require_array();
    var _constants = require_constants();
    var _elements = require_elements();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function createElement(firstArgument, properties) {
      for (var _len = arguments.length, childElements = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        childElements[_key - 2] = arguments[_key];
      }
      var element = null;
      if (firstArgument !== void 0) {
        childElements = sanitiseChildElements(childElements);
        properties = Object.assign({
          childElements
        }, properties);
        if (false) {
        } else if (isSubclassOf(firstArgument, _element.default)) {
          var Class = firstArgument;
          element = Class.fromClass(Class, properties);
        } else if ((typeof firstArgument === "undefined" ? "undefined" : _typeof(firstArgument)) === _constants.STRING) {
          var tagName = firstArgument;
          element = _element.default.fromTagName(tagName, properties);
        } else if ((typeof firstArgument === "undefined" ? "undefined" : _typeof(firstArgument)) === _constants.FUNCTION) {
          var elementFunction = firstArgument;
          element = elementFunction(properties);
        }
      }
      return element;
    }
    var React2 = {
      createElement
    };
    var _default = React2;
    exports.default = _default;
    function sanitiseChildElements(childElements) {
      childElements = (0, _array).flatten(childElements);
      childElements = (0, _elements).removeFalseyElements(childElements);
      childElements = (0, _elements).replaceStringsWithTextElements(childElements);
      return childElements;
    }
    function isSubclassOf(argument, Class) {
      var subclassOf = false;
      if (argument.name === Class.name) {
        subclassOf = true;
      } else {
        argument = Object.getPrototypeOf(argument);
        if (argument) {
          subclassOf = isSubclassOf(argument, Class);
        }
      }
      return subclassOf;
    }
  });

  // node_modules/easy/lib/element/body.js
  var require_body = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _element = _interopRequireDefault2(require_element2());
    var _constants = require_constants();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var Body = /* @__PURE__ */ function(Element) {
      _inherits(Body2, Element);
      var _super = _createSuper(Body2);
      function Body2() {
        var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.BODY;
        _classCallCheck(this, Body2);
        return _super.call(this, selector);
      }
      return Body2;
    }(_wrapNativeSuper(_element.default));
    _defineProperty(Body, "tagName", "body");
    exports.default = Body;
  });

  // node_modules/easy/lib/element/link.js
  var require_link = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _element = _interopRequireDefault2(require_element2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var Link = /* @__PURE__ */ function(Element) {
      _inherits(Link2, Element);
      var _super = _createSuper(Link2);
      function Link2() {
        _classCallCheck(this, Link2);
        return _super.apply(this, arguments);
      }
      _createClass(Link2, [
        {
          key: "getHRef",
          value: function getHRef() {
            return this.getAttribute("href");
          }
        },
        {
          key: "setHRef",
          value: function setHRef(href) {
            return this.setAttribute("href", href);
          }
        }
      ]);
      return Link2;
    }(_wrapNativeSuper(_element.default));
    _defineProperty(Link, "tagName", "a");
    exports.default = Link;
  });

  // node_modules/easy/lib/mixins/change.js
  var require_change = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _eventTypes = require_eventTypes();
    function onChange(changeHandler, element) {
      this.on(_eventTypes.CHANGE_EVENT_TYPE, changeHandler, element);
    }
    function offChange(changeHandler, element) {
      this.off(_eventTypes.CHANGE_EVENT_TYPE, changeHandler, element);
    }
    var changeMixins = {
      onChange,
      offChange
    };
    var _default = changeMixins;
    exports.default = _default;
  });

  // node_modules/easy/lib/inputElement.js
  var require_inputElement = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _element = _interopRequireDefault2(require_element2());
    var _change = _interopRequireDefault2(require_change());
    var _eventTypes = require_eventTypes();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var InputElement = /* @__PURE__ */ function(Element) {
      _inherits(InputElement2, Element);
      var _super = _createSuper(InputElement2);
      function InputElement2() {
        _classCallCheck(this, InputElement2);
        return _super.apply(this, arguments);
      }
      _createClass(InputElement2, [
        {
          key: "onChange",
          value: function onChange(changeHandler, element) {
            this.on(_eventTypes.CHANGE_EVENT_TYPE, changeHandler, element);
          }
        },
        {
          key: "offChange",
          value: function offChange(changeHandler, element) {
            this.off(_eventTypes.CHANGE_EVENT_TYPE, changeHandler, element);
          }
        },
        {
          key: "onResize",
          value: function onResize(resizeHandler, element) {
          }
        },
        {
          key: "offResize",
          value: function offResize(resizeHandler, element) {
          }
        },
        {
          key: "getValue",
          value: function getValue() {
            return this.domElement.value;
          }
        },
        {
          key: "getSelectionStart",
          value: function getSelectionStart() {
            return this.domElement.selectionStart;
          }
        },
        {
          key: "getSelectionEnd",
          value: function getSelectionEnd() {
            return this.domElement.selectionEnd;
          }
        },
        {
          key: "isReadOnly",
          value: function isReadOnly() {
            return this.domElement.readOnly;
          }
        },
        {
          key: "setValue",
          value: function setValue(value) {
            this.domElement.value = value;
          }
        },
        {
          key: "setSelectionStart",
          value: function setSelectionStart(selectionStart) {
            this.domElement.selectionStart = selectionStart;
          }
        },
        {
          key: "setSelectionEnd",
          value: function setSelectionEnd(selectionEnd) {
            this.domElement.selectionEnd = selectionEnd;
          }
        },
        {
          key: "setReadOnly",
          value: function setReadOnly(readOnly) {
            this.domElement.readOnly = readOnly;
          }
        },
        {
          key: "select",
          value: function select() {
            this.domElement.select();
          }
        }
      ]);
      return InputElement2;
    }(_wrapNativeSuper(_element.default));
    Object.assign(InputElement.prototype, _change.default);
    var _default = InputElement;
    exports.default = _default;
  });

  // node_modules/easy/lib/inputElement/input.js
  var require_input = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _inputElement = _interopRequireDefault2(require_inputElement());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var Input = /* @__PURE__ */ function(InputElement) {
      _inherits(Input2, InputElement);
      var _super = _createSuper(Input2);
      function Input2() {
        _classCallCheck(this, Input2);
        return _super.apply(this, arguments);
      }
      return Input2;
    }(_inputElement.default);
    _defineProperty(Input, "tagName", "input");
    exports.default = Input;
  });

  // node_modules/easy/lib/element/button.js
  var require_button = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _element = _interopRequireDefault2(require_element2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var Button = /* @__PURE__ */ function(Element) {
      _inherits(Button2, Element);
      var _super = _createSuper(Button2);
      function Button2() {
        _classCallCheck(this, Button2);
        return _super.apply(this, arguments);
      }
      return Button2;
    }(_wrapNativeSuper(_element.default));
    _defineProperty(Button, "tagName", "button");
    exports.default = Button;
  });

  // node_modules/easy/lib/element/select.js
  var require_select = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _element = _interopRequireDefault2(require_element2());
    var _change = _interopRequireDefault2(require_change());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var Select = /* @__PURE__ */ function(Element) {
      _inherits(Select2, Element);
      var _super = _createSuper(Select2);
      function Select2() {
        _classCallCheck(this, Select2);
        return _super.apply(this, arguments);
      }
      _createClass(Select2, [
        {
          key: "onResize",
          value: function onResize(resizeHandler, element) {
          }
        },
        {
          key: "offResize",
          value: function offResize(resizeHandler, element) {
          }
        },
        {
          key: "getValue",
          value: function getValue() {
            return this.domElement.value;
          }
        },
        {
          key: "setValue",
          value: function setValue(value) {
            this.domElement.value = value;
          }
        }
      ]);
      return Select2;
    }(_wrapNativeSuper(_element.default));
    _defineProperty(Select, "tagName", "select");
    Object.assign(Select.prototype, _change.default);
    var _default = Select;
    exports.default = _default;
  });

  // node_modules/easy/lib/element/checkbox.js
  var require_checkbox = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _element = _interopRequireDefault2(require_element2());
    var _change = _interopRequireDefault2(require_change());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var Checkbox = /* @__PURE__ */ function(Element) {
      _inherits(Checkbox2, Element);
      var _super = _createSuper(Checkbox2);
      function Checkbox2() {
        _classCallCheck(this, Checkbox2);
        return _super.apply(this, arguments);
      }
      _createClass(Checkbox2, [
        {
          key: "isChecked",
          value: function isChecked() {
            return this.domElement.checked;
          }
        },
        {
          key: "check",
          value: function check() {
            var checked = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
            this.domElement.checked = checked;
          }
        }
      ]);
      return Checkbox2;
    }(_wrapNativeSuper(_element.default));
    _defineProperty(Checkbox, "tagName", "input");
    _defineProperty(Checkbox, "defaultProperties", {
      type: "checkbox"
    });
    Object.assign(Checkbox.prototype, _change.default);
    var _default = Checkbox;
    exports.default = _default;
  });

  // node_modules/easy/lib/inputElement/textarea.js
  var require_textarea = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _inputElement = _interopRequireDefault2(require_inputElement());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var Textarea = /* @__PURE__ */ function(InputElement) {
      _inherits(Textarea2, InputElement);
      var _super = _createSuper(Textarea2);
      function Textarea2() {
        _classCallCheck(this, Textarea2);
        return _super.apply(this, arguments);
      }
      return Textarea2;
    }(_inputElement.default);
    _defineProperty(Textarea, "tagName", "textarea");
    exports.default = Textarea;
  });

  // node_modules/easy/lib/mixins/window.js
  var require_window = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _resize = require_resize();
    var _default = {
      onResize: _resize.onResize,
      offResize: _resize.offResize
    };
    exports.default = _default;
  });

  // node_modules/easy/lib/window.js
  var require_window2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _key = _interopRequireDefault2(require_key());
    var _event = _interopRequireDefault2(require_event());
    var _mouse = _interopRequireDefault2(require_mouse());
    var _click = _interopRequireDefault2(require_click());
    var _window = _interopRequireDefault2(require_window());
    var _constants = require_constants();
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    var Window = /* @__PURE__ */ function() {
      function Window2() {
        _classCallCheck(this, Window2);
        this.domElement = window;
      }
      _createClass(Window2, [
        {
          key: "assign",
          value: function assign() {
            for (var _len = arguments.length, sources = new Array(_len), _key1 = 0; _key1 < _len; _key1++) {
              sources[_key1] = arguments[_key1];
            }
            var _Object;
            var target = this.domElement;
            (_Object = Object).assign.apply(_Object, [
              target
            ].concat(_toConsumableArray(sources)));
          }
        },
        {
          key: "addResizeObject",
          value: function addResizeObject() {
          }
        },
        {
          key: "removeResizeObject",
          value: function removeResizeObject() {
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            return this.domElement.innerWidth;
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            return this.domElement.innerHeight;
          }
        },
        {
          key: "getScrollTop",
          value: function getScrollTop() {
            return this.domElement.pageYOffset;
          }
        },
        {
          key: "getScrollLeft",
          value: function getScrollLeft() {
            return this.domElement.pageXOffset;
          }
        }
      ]);
      return Window2;
    }();
    Object.assign(Window.prototype, _key.default);
    Object.assign(Window.prototype, _event.default);
    Object.assign(Window.prototype, _mouse.default);
    Object.assign(Window.prototype, _click.default);
    Object.assign(Window.prototype, _window.default);
    var _default = (typeof window === "undefined" ? "undefined" : _typeof(window)) === _constants.UNDEFINED ? void 0 : new Window();
    exports.default = _default;
  });

  // node_modules/easy/lib/buttons.js
  var require_buttons = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.MIDDLE_MOUSE_BUTTON = exports.RIGHT_MOUSE_BUTTON = exports.LEFT_MOUSE_BUTTON = void 0;
    var LEFT_MOUSE_BUTTON = 0;
    exports.LEFT_MOUSE_BUTTON = LEFT_MOUSE_BUTTON;
    var RIGHT_MOUSE_BUTTON = 2;
    exports.RIGHT_MOUSE_BUTTON = RIGHT_MOUSE_BUTTON;
    var MIDDLE_MOUSE_BUTTON = 1;
    exports.MIDDLE_MOUSE_BUTTON = MIDDLE_MOUSE_BUTTON;
    var _default = {
      LEFT_MOUSE_BUTTON,
      RIGHT_MOUSE_BUTTON,
      MIDDLE_MOUSE_BUTTON
    };
    exports.default = _default;
  });

  // node_modules/easy/lib/document.js
  var require_document = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _key = _interopRequireDefault2(require_key());
    var _click = _interopRequireDefault2(require_click());
    var _event = _interopRequireDefault2(require_event());
    var _mouse = _interopRequireDefault2(require_mouse());
    var _constants = require_constants();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    var Document = function Document2() {
      _classCallCheck(this, Document2);
      this.domElement = document;
    };
    var _default = (typeof document === "undefined" ? "undefined" : _typeof(document)) === _constants.UNDEFINED ? void 0 : new Document();
    exports.default = _default;
    Object.assign(Document.prototype, _key.default);
    Object.assign(Document.prototype, _click.default);
    Object.assign(Document.prototype, _event.default);
    Object.assign(Document.prototype, _mouse.default);
  });

  // node_modules/easy/lib/index.js
  var require_lib = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "React", {
      enumerable: true,
      get: function() {
        return _react.default;
      }
    });
    Object.defineProperty(exports, "Bounds", {
      enumerable: true,
      get: function() {
        return _bounds.default;
      }
    });
    Object.defineProperty(exports, "Offset", {
      enumerable: true,
      get: function() {
        return _offset.default;
      }
    });
    Object.defineProperty(exports, "Body", {
      enumerable: true,
      get: function() {
        return _body.default;
      }
    });
    Object.defineProperty(exports, "Link", {
      enumerable: true,
      get: function() {
        return _link.default;
      }
    });
    Object.defineProperty(exports, "Input", {
      enumerable: true,
      get: function() {
        return _input.default;
      }
    });
    Object.defineProperty(exports, "Button", {
      enumerable: true,
      get: function() {
        return _button.default;
      }
    });
    Object.defineProperty(exports, "Select", {
      enumerable: true,
      get: function() {
        return _select.default;
      }
    });
    Object.defineProperty(exports, "Element", {
      enumerable: true,
      get: function() {
        return _element.default;
      }
    });
    Object.defineProperty(exports, "Checkbox", {
      enumerable: true,
      get: function() {
        return _checkbox.default;
      }
    });
    Object.defineProperty(exports, "Textarea", {
      enumerable: true,
      get: function() {
        return _textarea.default;
      }
    });
    Object.defineProperty(exports, "TextElement", {
      enumerable: true,
      get: function() {
        return _textElement.default;
      }
    });
    Object.defineProperty(exports, "InputElement", {
      enumerable: true,
      get: function() {
        return _inputElement.default;
      }
    });
    Object.defineProperty(exports, "window", {
      enumerable: true,
      get: function() {
        return _window.default;
      }
    });
    Object.defineProperty(exports, "buttons", {
      enumerable: true,
      get: function() {
        return _buttons.default;
      }
    });
    Object.defineProperty(exports, "document", {
      enumerable: true,
      get: function() {
        return _document.default;
      }
    });
    Object.defineProperty(exports, "eventTypes", {
      enumerable: true,
      get: function() {
        return _eventTypes.default;
      }
    });
    var _react = _interopRequireDefault2(require_react());
    var _bounds = _interopRequireDefault2(require_bounds());
    var _offset = _interopRequireDefault2(require_offset());
    var _body = _interopRequireDefault2(require_body());
    var _link = _interopRequireDefault2(require_link());
    var _input = _interopRequireDefault2(require_input());
    var _button = _interopRequireDefault2(require_button());
    var _select = _interopRequireDefault2(require_select());
    var _element = _interopRequireDefault2(require_element2());
    var _checkbox = _interopRequireDefault2(require_checkbox());
    var _textarea = _interopRequireDefault2(require_textarea());
    var _textElement = _interopRequireDefault2(require_textElement());
    var _inputElement = _interopRequireDefault2(require_inputElement());
    var _window = _interopRequireDefault2(require_window2());
    var _buttons = _interopRequireDefault2(require_buttons());
    var _document = _interopRequireDefault2(require_document());
    var _eventTypes = _interopRequireDefault2(require_eventTypes());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/juxtapose/lib/juxtapose.js
  var require_juxtapose = __commonJS(() => {
    "use strict";
    var _easy2 = require_lib();
    _easy2.window.assign({
      React: _easy2.React
    });
  });

  // node_modules/juxtapose/lib/index.js
  var require_lib2 = __commonJS(() => {
    "use strict";
    require_juxtapose();
  });

  // node_modules/with-style/lib/tagNames.js
  var require_tagNames = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var tagNames = [
      "a",
      "abbr",
      "address",
      "aside",
      "audio",
      "b",
      "base",
      "bdi",
      "bdo",
      "blockquote",
      "body",
      "br",
      "button",
      "canvas",
      "caption",
      "cite",
      "code",
      "col",
      "colgroup",
      "data",
      "datalist",
      "dd",
      "del",
      "details",
      "dfn",
      "dialog",
      "div",
      "dl",
      "dt",
      "em",
      "embed",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hr",
      "html",
      "i",
      "iframe",
      "img",
      "input",
      "ins",
      "kbd",
      "label",
      "legend",
      "li",
      "link",
      "main",
      "map",
      "mark",
      "meta",
      "meter",
      "nav",
      "noscript",
      "object",
      "ol",
      "optgroup",
      "option",
      "output",
      "p",
      "param",
      "picture",
      "pre",
      "progress",
      "q",
      "rp",
      "rt",
      "ruby",
      "s",
      "samp",
      "script",
      "section",
      "select",
      "small",
      "source",
      "span",
      "strong",
      "style",
      "sub",
      "summary",
      "sup",
      "svg",
      "table",
      "tbody",
      "td",
      "template",
      "textarea",
      "tfoot",
      "th",
      "thead",
      "time",
      "title",
      "tr",
      "track",
      "u",
      "ul",
      "var",
      "video",
      "wbr"
    ];
    var _default = tagNames;
    exports.default = _default;
  });

  // node_modules/necessary/lib/levels.js
  var require_levels = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.FATAL_LEVEL = exports.ERROR_LEVEL = exports.WARNING_LEVEL = exports.INFO_LEVEL = exports.DEBUG_LEVEL = exports.TRACE_LEVEL = void 0;
    var TRACE_LEVEL = "trace";
    exports.TRACE_LEVEL = TRACE_LEVEL;
    var DEBUG_LEVEL = "debug";
    exports.DEBUG_LEVEL = DEBUG_LEVEL;
    var INFO_LEVEL = "info";
    exports.INFO_LEVEL = INFO_LEVEL;
    var WARNING_LEVEL = "warning";
    exports.WARNING_LEVEL = WARNING_LEVEL;
    var ERROR_LEVEL = "error";
    exports.ERROR_LEVEL = ERROR_LEVEL;
    var FATAL_LEVEL = "fatal";
    exports.FATAL_LEVEL = FATAL_LEVEL;
    var _default = {
      TRACE_LEVEL,
      DEBUG_LEVEL,
      INFO_LEVEL,
      WARNING_LEVEL,
      ERROR_LEVEL,
      FATAL_LEVEL
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/methods.js
  var require_methods = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.OPTIONS_METHOD = exports.DELETE_METHOD = exports.PATCH_METHOD = exports.POST_METHOD = exports.GET_METHOD = void 0;
    var GET_METHOD = "GET";
    exports.GET_METHOD = GET_METHOD;
    var POST_METHOD = "POST";
    exports.POST_METHOD = POST_METHOD;
    var PATCH_METHOD = "PATCH";
    exports.PATCH_METHOD = PATCH_METHOD;
    var DELETE_METHOD = "DELETE";
    exports.DELETE_METHOD = DELETE_METHOD;
    var OPTIONS_METHOD = "OPTIONS";
    exports.OPTIONS_METHOD = OPTIONS_METHOD;
    var _default = {
      GET_METHOD,
      POST_METHOD,
      PATCH_METHOD,
      DELETE_METHOD,
      OPTIONS_METHOD
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/headers.js
  var require_headers = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.ACCESS_CONTROL_REQUEST_METHOD_HEADER = exports.ACCESS_CONTROL_ALLOW_HEADERS_HEADER = exports.ACCESS_CONTROL_ALLOW_METHODS_HEADER = exports.ACCESS_CONTROL_ALLOW_ORIGIN_HEADER = exports.CONTENT_DISPOSITION_HEADER = exports.TRANSFER_ENCODING_HEADER = exports.CONTENT_LENGTH_HEADER = exports.CACHE_CONTROL_HEADER = exports.AUTHORIZATION_HEADER = exports.CONTENT_TYPE_HEADER = exports.USER_AGENT_HEADER = exports.LOCATION_HEADER = exports.ACCEPT_HEADER = exports.PRAGMA_HEADER = void 0;
    var PRAGMA_HEADER = "pragma";
    exports.PRAGMA_HEADER = PRAGMA_HEADER;
    var ACCEPT_HEADER = "accept";
    exports.ACCEPT_HEADER = ACCEPT_HEADER;
    var LOCATION_HEADER = "location";
    exports.LOCATION_HEADER = LOCATION_HEADER;
    var USER_AGENT_HEADER = "user-agent";
    exports.USER_AGENT_HEADER = USER_AGENT_HEADER;
    var CONTENT_TYPE_HEADER = "content-type";
    exports.CONTENT_TYPE_HEADER = CONTENT_TYPE_HEADER;
    var AUTHORIZATION_HEADER = "authorization";
    exports.AUTHORIZATION_HEADER = AUTHORIZATION_HEADER;
    var CACHE_CONTROL_HEADER = "cache-control";
    exports.CACHE_CONTROL_HEADER = CACHE_CONTROL_HEADER;
    var CONTENT_LENGTH_HEADER = "content-length";
    exports.CONTENT_LENGTH_HEADER = CONTENT_LENGTH_HEADER;
    var TRANSFER_ENCODING_HEADER = "transfer-encoding";
    exports.TRANSFER_ENCODING_HEADER = TRANSFER_ENCODING_HEADER;
    var CONTENT_DISPOSITION_HEADER = "content-disposition";
    exports.CONTENT_DISPOSITION_HEADER = CONTENT_DISPOSITION_HEADER;
    var ACCESS_CONTROL_ALLOW_ORIGIN_HEADER = "access-control-allow-origin";
    exports.ACCESS_CONTROL_ALLOW_ORIGIN_HEADER = ACCESS_CONTROL_ALLOW_ORIGIN_HEADER;
    var ACCESS_CONTROL_ALLOW_METHODS_HEADER = "access-control-allow-methods";
    exports.ACCESS_CONTROL_ALLOW_METHODS_HEADER = ACCESS_CONTROL_ALLOW_METHODS_HEADER;
    var ACCESS_CONTROL_ALLOW_HEADERS_HEADER = "access-control-allow-headers";
    exports.ACCESS_CONTROL_ALLOW_HEADERS_HEADER = ACCESS_CONTROL_ALLOW_HEADERS_HEADER;
    var ACCESS_CONTROL_REQUEST_METHOD_HEADER = "access-control-request-method";
    exports.ACCESS_CONTROL_REQUEST_METHOD_HEADER = ACCESS_CONTROL_REQUEST_METHOD_HEADER;
    var _default = {
      PRAGMA_HEADER,
      ACCEPT_HEADER,
      LOCATION_HEADER,
      USER_AGENT_HEADER,
      CONTENT_TYPE_HEADER,
      AUTHORIZATION_HEADER,
      CACHE_CONTROL_HEADER,
      CONTENT_LENGTH_HEADER,
      TRANSFER_ENCODING_HEADER,
      CONTENT_DISPOSITION_HEADER,
      ACCESS_CONTROL_ALLOW_ORIGIN_HEADER,
      ACCESS_CONTROL_ALLOW_METHODS_HEADER,
      ACCESS_CONTROL_ALLOW_HEADERS_HEADER,
      ACCESS_CONTROL_REQUEST_METHOD_HEADER
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/keyCodes.js
  var require_keyCodes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.ESCAPE_KEYCODE = exports.SHIFT_KEY_CODE = void 0;
    var SHIFT_KEY_CODE = 16;
    exports.SHIFT_KEY_CODE = SHIFT_KEY_CODE;
    var ESCAPE_KEYCODE = 27;
    exports.ESCAPE_KEYCODE = ESCAPE_KEYCODE;
    var _default = {
      SHIFT_KEY_CODE,
      ESCAPE_KEYCODE
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/encodings.js
  var require_encodings = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.BASE64_ENCODING = exports.UTF_8_ENCODING = exports.UTF8_ENCODING = void 0;
    var UTF8_ENCODING = "utf8";
    exports.UTF8_ENCODING = UTF8_ENCODING;
    var UTF_8_ENCODING = "utf-8";
    exports.UTF_8_ENCODING = UTF_8_ENCODING;
    var BASE64_ENCODING = "base64";
    exports.BASE64_ENCODING = BASE64_ENCODING;
    var _default = {
      UTF8_ENCODING,
      UTF_8_ENCODING,
      BASE64_ENCODING
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/characters.js
  var require_characters = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.EXCLAMATION_MARK_CHARACTER = exports.CARRIAGE_RETURN_CHARACTER = exports.FORWARD_SLASH_CHARACTER = exports.GREATER_THAN_CHARACTER = exports.LESS_THAN_CHARACTER = exports.AMPERSAND_CHARACTER = exports.BACKSPACE_CHARACTER = exports.NEW_LINE_CHARACTER = exports.BACKTICK_DELIMITER = exports.WILDCARD_CHARACTER = exports.CTRL_C_CHARACTER = exports.PERIOD_CHARACTER = exports.COLON_CHARACTER = exports.COMMA_CHARACTER = exports.SPACE_CHARACTER = exports.DASH_CHARACTER = exports.BAR_CHARACTER = exports.ETX_CHARACTER = void 0;
    var ETX_CHARACTER = "";
    exports.ETX_CHARACTER = ETX_CHARACTER;
    var BAR_CHARACTER = "|";
    exports.BAR_CHARACTER = BAR_CHARACTER;
    var DASH_CHARACTER = "-";
    exports.DASH_CHARACTER = DASH_CHARACTER;
    var SPACE_CHARACTER = " ";
    exports.SPACE_CHARACTER = SPACE_CHARACTER;
    var COMMA_CHARACTER = ",";
    exports.COMMA_CHARACTER = COMMA_CHARACTER;
    var COLON_CHARACTER = ":";
    exports.COLON_CHARACTER = COLON_CHARACTER;
    var PERIOD_CHARACTER = ".";
    exports.PERIOD_CHARACTER = PERIOD_CHARACTER;
    var CTRL_C_CHARACTER = "^C";
    exports.CTRL_C_CHARACTER = CTRL_C_CHARACTER;
    var WILDCARD_CHARACTER = "*";
    exports.WILDCARD_CHARACTER = WILDCARD_CHARACTER;
    var BACKTICK_DELIMITER = "`";
    exports.BACKTICK_DELIMITER = BACKTICK_DELIMITER;
    var NEW_LINE_CHARACTER = "\n";
    exports.NEW_LINE_CHARACTER = NEW_LINE_CHARACTER;
    var BACKSPACE_CHARACTER = String.fromCharCode(127);
    exports.BACKSPACE_CHARACTER = BACKSPACE_CHARACTER;
    var AMPERSAND_CHARACTER = "&";
    exports.AMPERSAND_CHARACTER = AMPERSAND_CHARACTER;
    var LESS_THAN_CHARACTER = "&lt;";
    exports.LESS_THAN_CHARACTER = LESS_THAN_CHARACTER;
    var GREATER_THAN_CHARACTER = "&gt;";
    exports.GREATER_THAN_CHARACTER = GREATER_THAN_CHARACTER;
    var FORWARD_SLASH_CHARACTER = "/";
    exports.FORWARD_SLASH_CHARACTER = FORWARD_SLASH_CHARACTER;
    var CARRIAGE_RETURN_CHARACTER = "\r";
    exports.CARRIAGE_RETURN_CHARACTER = CARRIAGE_RETURN_CHARACTER;
    var EXCLAMATION_MARK_CHARACTER = "!";
    exports.EXCLAMATION_MARK_CHARACTER = EXCLAMATION_MARK_CHARACTER;
    var _default = {
      ETX_CHARACTER,
      BAR_CHARACTER,
      DASH_CHARACTER,
      SPACE_CHARACTER,
      COMMA_CHARACTER,
      COLON_CHARACTER,
      PERIOD_CHARACTER,
      CTRL_C_CHARACTER,
      WILDCARD_CHARACTER,
      BACKTICK_DELIMITER,
      NEW_LINE_CHARACTER,
      AMPERSAND_CHARACTER,
      BACKSPACE_CHARACTER,
      LESS_THAN_CHARACTER,
      GREATER_THAN_CHARACTER,
      FORWARD_SLASH_CHARACTER,
      CARRIAGE_RETURN_CHARACTER,
      EXCLAMATION_MARK_CHARACTER
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/statusCodes.js
  var require_statusCodes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.INTERNAL_SERVER_ERROR_500_STATUS_CODE = exports.TOO_MANY_REQUESTS_429_STATUS_CODE = exports.UNAUTHORISED_401_STATUS_CODE = exports.BAD_REQUEST_400_STATUS_CODE = exports.BAD_GATEWAY_502_STATUS_CODE = exports.NO_CONTENT_204_STATUS_CODE = exports.NOT_FOUND_404_STATUS_CODE = exports.FORBIDDEN_403_STATUS_CODE = exports.SEE_OTHER_303_STATUS_CODE = exports.CREATED_201_STATUS_CODE = exports.FOUND_302_STATUS_CODE = exports.OK_200_STATUS_CODE = exports.ZERO_0_STATUS_CODE = void 0;
    var ZERO_0_STATUS_CODE = 0;
    exports.ZERO_0_STATUS_CODE = ZERO_0_STATUS_CODE;
    var OK_200_STATUS_CODE = 200;
    exports.OK_200_STATUS_CODE = OK_200_STATUS_CODE;
    var FOUND_302_STATUS_CODE = 302;
    exports.FOUND_302_STATUS_CODE = FOUND_302_STATUS_CODE;
    var CREATED_201_STATUS_CODE = 201;
    exports.CREATED_201_STATUS_CODE = CREATED_201_STATUS_CODE;
    var SEE_OTHER_303_STATUS_CODE = 303;
    exports.SEE_OTHER_303_STATUS_CODE = SEE_OTHER_303_STATUS_CODE;
    var FORBIDDEN_403_STATUS_CODE = 403;
    exports.FORBIDDEN_403_STATUS_CODE = FORBIDDEN_403_STATUS_CODE;
    var NOT_FOUND_404_STATUS_CODE = 404;
    exports.NOT_FOUND_404_STATUS_CODE = NOT_FOUND_404_STATUS_CODE;
    var NO_CONTENT_204_STATUS_CODE = 204;
    exports.NO_CONTENT_204_STATUS_CODE = NO_CONTENT_204_STATUS_CODE;
    var BAD_GATEWAY_502_STATUS_CODE = 502;
    exports.BAD_GATEWAY_502_STATUS_CODE = BAD_GATEWAY_502_STATUS_CODE;
    var BAD_REQUEST_400_STATUS_CODE = 400;
    exports.BAD_REQUEST_400_STATUS_CODE = BAD_REQUEST_400_STATUS_CODE;
    var UNAUTHORISED_401_STATUS_CODE = 401;
    exports.UNAUTHORISED_401_STATUS_CODE = UNAUTHORISED_401_STATUS_CODE;
    var TOO_MANY_REQUESTS_429_STATUS_CODE = 429;
    exports.TOO_MANY_REQUESTS_429_STATUS_CODE = TOO_MANY_REQUESTS_429_STATUS_CODE;
    var INTERNAL_SERVER_ERROR_500_STATUS_CODE = 500;
    exports.INTERNAL_SERVER_ERROR_500_STATUS_CODE = INTERNAL_SERVER_ERROR_500_STATUS_CODE;
    var _default = {
      ZERO_0_STATUS_CODE,
      OK_200_STATUS_CODE,
      FOUND_302_STATUS_CODE,
      CREATED_201_STATUS_CODE,
      SEE_OTHER_303_STATUS_CODE,
      FORBIDDEN_403_STATUS_CODE,
      NOT_FOUND_404_STATUS_CODE,
      NO_CONTENT_204_STATUS_CODE,
      BAD_GATEWAY_502_STATUS_CODE,
      BAD_REQUEST_400_STATUS_CODE,
      UNAUTHORISED_401_STATUS_CODE,
      TOO_MANY_REQUESTS_429_STATUS_CODE,
      INTERNAL_SERVER_ERROR_500_STATUS_CODE
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/contentTypes.js
  var require_contentTypes2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE = exports.APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE = exports.TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE = exports.TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE = exports.APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE = exports.APPLICATION_JSON_CONTENT_TYPE = exports.TEXT_PLAIN_CONTENT_TYPE = exports.TEXT_HTML_CONTENT_TYPE = void 0;
    var TEXT_HTML_CONTENT_TYPE = "text/html";
    exports.TEXT_HTML_CONTENT_TYPE = TEXT_HTML_CONTENT_TYPE;
    var TEXT_PLAIN_CONTENT_TYPE = "text/plain";
    exports.TEXT_PLAIN_CONTENT_TYPE = TEXT_PLAIN_CONTENT_TYPE;
    var APPLICATION_JSON_CONTENT_TYPE = "application/json";
    exports.APPLICATION_JSON_CONTENT_TYPE = APPLICATION_JSON_CONTENT_TYPE;
    var APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE = "application/x-www-form-urlencoded";
    exports.APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE = APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE;
    var TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE = "text/html; charset=utf-8";
    exports.TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE = TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE;
    var TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE = "text/plain; charset=utf-8";
    exports.TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE = TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE;
    var APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE = "application/json; charset=utf-8";
    exports.APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE = APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE;
    var APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE = "application/x-www-form-urlencoded; charset=utf-8";
    exports.APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE = APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE;
    var _default = {
      TEXT_HTML_CONTENT_TYPE,
      TEXT_PLAIN_CONTENT_TYPE,
      APPLICATION_JSON_CONTENT_TYPE,
      APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE,
      TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE,
      TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE,
      APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE,
      APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/statusMessages.js
  var require_statusMessages = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE = exports.TOO_MANY_REQUESTS_429_STATUS_MESSAGE = exports.UNAUTHORISED_401_STATUS_MESSAGE = exports.BAD_REQUEST_400_STATUS_MESSAGE = exports.BAD_GATEWAY_502_STATUS_MESSAGE = exports.NO_CONTENT_204_STATUS_MESSAGE = exports.NOT_FOUND_404_STATUS_MESSAGE = exports.FORBIDDEN_403_STATUS_MESSAGE = exports.SEE_OTHER_303_STATUS_MESSAGE = exports.CREATED_201_STATUS_MESSAGE = exports.FOUND_302_STATUS_MESSAGE = exports.OK_200_STATUS_MESSAGE = void 0;
    var OK_200_STATUS_MESSAGE = "OK";
    exports.OK_200_STATUS_MESSAGE = OK_200_STATUS_MESSAGE;
    var FOUND_302_STATUS_MESSAGE = "Found";
    exports.FOUND_302_STATUS_MESSAGE = FOUND_302_STATUS_MESSAGE;
    var CREATED_201_STATUS_MESSAGE = "Created";
    exports.CREATED_201_STATUS_MESSAGE = CREATED_201_STATUS_MESSAGE;
    var SEE_OTHER_303_STATUS_MESSAGE = "See other";
    exports.SEE_OTHER_303_STATUS_MESSAGE = SEE_OTHER_303_STATUS_MESSAGE;
    var FORBIDDEN_403_STATUS_MESSAGE = "Forbidden";
    exports.FORBIDDEN_403_STATUS_MESSAGE = FORBIDDEN_403_STATUS_MESSAGE;
    var NOT_FOUND_404_STATUS_MESSAGE = "Not found";
    exports.NOT_FOUND_404_STATUS_MESSAGE = NOT_FOUND_404_STATUS_MESSAGE;
    var NO_CONTENT_204_STATUS_MESSAGE = "No content";
    exports.NO_CONTENT_204_STATUS_MESSAGE = NO_CONTENT_204_STATUS_MESSAGE;
    var BAD_GATEWAY_502_STATUS_MESSAGE = "Bad gateway";
    exports.BAD_GATEWAY_502_STATUS_MESSAGE = BAD_GATEWAY_502_STATUS_MESSAGE;
    var BAD_REQUEST_400_STATUS_MESSAGE = "Bad request";
    exports.BAD_REQUEST_400_STATUS_MESSAGE = BAD_REQUEST_400_STATUS_MESSAGE;
    var UNAUTHORISED_401_STATUS_MESSAGE = "Unauthorised";
    exports.UNAUTHORISED_401_STATUS_MESSAGE = UNAUTHORISED_401_STATUS_MESSAGE;
    var TOO_MANY_REQUESTS_429_STATUS_MESSAGE = "Too many requests";
    exports.TOO_MANY_REQUESTS_429_STATUS_MESSAGE = TOO_MANY_REQUESTS_429_STATUS_MESSAGE;
    var INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE = "Internal server error";
    exports.INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE = INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE;
    var _default = {
      OK_200_STATUS_MESSAGE,
      FOUND_302_STATUS_MESSAGE,
      CREATED_201_STATUS_MESSAGE,
      SEE_OTHER_303_STATUS_MESSAGE,
      FORBIDDEN_403_STATUS_MESSAGE,
      NOT_FOUND_404_STATUS_MESSAGE,
      NO_CONTENT_204_STATUS_MESSAGE,
      BAD_GATEWAY_502_STATUS_MESSAGE,
      BAD_REQUEST_400_STATUS_MESSAGE,
      UNAUTHORISED_401_STATUS_MESSAGE,
      TOO_MANY_REQUESTS_429_STATUS_MESSAGE,
      INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/utilities/array.js
  var require_array2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.first = first;
    exports.second = second;
    exports.third = third;
    exports.fourth = fourth;
    exports.fifth = fifth;
    exports.fifthLast = fifthLast;
    exports.fourthLast = fourthLast;
    exports.thirdLast = thirdLast;
    exports.secondLast = secondLast;
    exports.firstLast = firstLast;
    exports.last = last;
    exports.head = head;
    exports.tail = tail;
    exports.back = back;
    exports.front = front;
    exports.push = push;
    exports.unshift = unshift;
    exports.concat = concat;
    exports.clear = clear;
    exports.copy = copy;
    exports.merge = merge;
    exports.splice = splice;
    exports.replace = replace;
    exports.filter = filter;
    exports.find = find;
    exports.prune = prune;
    exports.patch = patch;
    exports.augment = augment;
    exports.separate = separate;
    exports.forwardsSome = forwardsSome;
    exports.backwardsSome = backwardsSome;
    exports.forwardsEvery = forwardsEvery;
    exports.backwardsEvery = backwardsEvery;
    exports.forwardsReduce = forwardsReduce;
    exports.backwardsReduce = backwardsReduce;
    exports.forwardsForEach = forwardsForEach;
    exports.backwardsForEach = backwardsForEach;
    exports.default = void 0;
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function first(array) {
      return array[0];
    }
    function second(array) {
      return array[1];
    }
    function third(array) {
      return array[2];
    }
    function fourth(array) {
      return array[3];
    }
    function fifth(array) {
      return array[4];
    }
    function fifthLast(array) {
      return array[array.length - 5];
    }
    function fourthLast(array) {
      return array[array.length - 4];
    }
    function thirdLast(array) {
      return array[array.length - 3];
    }
    function secondLast(array) {
      return array[array.length - 2];
    }
    function firstLast(array) {
      return array[array.length - 1];
    }
    function last(array) {
      return array[array.length - 1];
    }
    function head(array) {
      return array.slice(0, 1);
    }
    function tail(array) {
      return array.slice(1);
    }
    function back(array) {
      return array.slice(array.length - 1);
    }
    function front(array) {
      return array.slice(0, array.length - 1);
    }
    function push(array1, array2) {
      Array.prototype.push.apply(array1, array2);
    }
    function unshift(array1, array2) {
      Array.prototype.unshift.apply(array1, array2);
    }
    function concat(array1, elementOrArray2) {
      var array2 = _instanceof(elementOrArray2, Array) ? elementOrArray2 : [
        elementOrArray2
      ];
      push(array1, array2);
    }
    function clear(array) {
      var start = 0;
      return array.splice(start);
    }
    function copy(array1, array2) {
      var start = 0, deleteCount = array2.length;
      splice(array1, start, deleteCount, array2);
    }
    function merge(array1, array2) {
      Array.prototype.push.apply(array1, array2);
    }
    function splice(array1, start) {
      var deleteCount = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity, array2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
      var args = [
        start,
        deleteCount
      ].concat(_toConsumableArray(array2)), deletedItemsArray = Array.prototype.splice.apply(array1, args);
      return deletedItemsArray;
    }
    function replace(array, element1, test) {
      var start;
      var found = array.some(function(element, index) {
        var passed = test(element, index);
        if (passed) {
          start = index;
          return true;
        }
      });
      if (found) {
        var deleteCount = 1;
        array.splice(start, deleteCount, element1);
      }
      return found;
    }
    function filter(array, test) {
      var filteredElements = [];
      backwardsForEach(array, function(element, index) {
        var passed = test(element, index);
        if (!passed) {
          var start = index, deleteCount = 1, deletedElements = array.splice(start, deleteCount), firstDeletedElement = first(deletedElements);
          filteredElements.unshift(firstDeletedElement);
        }
      });
      return filteredElements;
    }
    function find(array, test) {
      var elements = [];
      forwardsForEach(array, function(element, index) {
        var passed = test(element, index);
        if (passed) {
          elements.push(element);
        }
      });
      return elements;
    }
    function prune(array, test) {
      var prunedElement = void 0;
      array.some(function(element, index) {
        var passed = test(element, index);
        if (!passed) {
          var start = index, deleteCount = 1, deletedElements = array.splice(start, deleteCount), firstDeletedElement = first(deletedElements);
          prunedElement = firstDeletedElement;
          return true;
        }
      });
      return prunedElement;
    }
    function patch(array, element2, test) {
      var found = array.some(function(element, index) {
        var passed = test(element, index);
        if (passed) {
          return true;
        }
      });
      if (found) {
        array.push(element2);
      }
      return found;
    }
    function augment(array1, array2, test) {
      array2.forEach(function(element, index) {
        var passed = test(element, index);
        if (passed) {
          array1.push(element);
        }
      });
    }
    function separate(array, array1, array2, test) {
      array.forEach(function(element, index) {
        var passed = test(element, index);
        passed ? array1.push(element) : array2.push(element);
      });
    }
    function forwardsSome(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index], result = callback(element, index);
        if (result) {
          return true;
        }
      }
      return false;
    }
    function backwardsSome(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index], result = callback(element, index);
        if (result) {
          return true;
        }
      }
      return false;
    }
    function forwardsEvery(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index], result = callback(element, index);
        if (!result) {
          return false;
        }
      }
      return true;
    }
    function backwardsEvery(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index], result = callback(element, index);
        if (!result) {
          return false;
        }
      }
      return true;
    }
    function forwardsReduce(array, callback, initialValue) {
      var value = initialValue;
      forwardsForEach(array, function(element, index) {
        value = callback(value, element, index);
      });
      return value;
    }
    function backwardsReduce(array, callback, initialValue) {
      var value = initialValue;
      backwardsForEach(array, function(element, index) {
        value = callback(value, element, index);
      });
      return value;
    }
    function forwardsForEach(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index];
        callback(element, index);
      }
    }
    function backwardsForEach(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index];
        callback(element, index);
      }
    }
    var _default = {
      first,
      second,
      third,
      fourth,
      fifth,
      fifthLast,
      fourthLast,
      thirdLast,
      secondLast,
      firstLast,
      last,
      head,
      tail,
      back,
      front,
      push,
      unshift,
      concat,
      clear,
      copy,
      merge,
      splice,
      replace,
      filter,
      find,
      prune,
      patch,
      augment,
      separate,
      forwardsSome,
      backwardsSome,
      forwardsEvery,
      backwardsEvery,
      forwardsReduce,
      backwardsReduce,
      forwardsForEach,
      backwardsForEach
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/constants.js
  var require_constants2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.EMPTY_STRING = exports.ENVIRONMENT = exports.DEFAULT = exports.BOOLEAN = exports.NUMBER = exports.STRING = exports.ERROR = exports.DATA = void 0;
    var DATA = "data";
    exports.DATA = DATA;
    var ERROR = "error";
    exports.ERROR = ERROR;
    var STRING = "string";
    exports.STRING = STRING;
    var NUMBER = "number";
    exports.NUMBER = NUMBER;
    var BOOLEAN = "boolean";
    exports.BOOLEAN = BOOLEAN;
    var DEFAULT = "default";
    exports.DEFAULT = DEFAULT;
    var ENVIRONMENT = "ENVIRONMENT";
    exports.ENVIRONMENT = ENVIRONMENT;
    var EMPTY_STRING = "";
    exports.EMPTY_STRING = EMPTY_STRING;
  });

  // node_modules/necessary/lib/utilities/http.js
  var require_http = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.overwrite = overwrite;
    exports.underwrite = underwrite;
    exports.portFromHost = portFromHost;
    exports.secureFromHost = secureFromHost;
    exports.hostnameFromHost = hostnameFromHost;
    exports.queryStringFromQuery = queryStringFromQuery;
    exports.urlFromHostURIAndQuery = urlFromHostURIAndQuery;
    exports.default = void 0;
    var _array = require_array2();
    var _constants = require_constants2();
    var _characters = require_characters();
    function overwrite(headers, name, value) {
      var lowerCaseName = name.toLowerCase(), existingNames = Object.getOwnPropertyNames(headers), existingName1 = existingNames.find(function(existingName) {
        var existingLowerCaseName = existingName.toLowerCase();
        if (existingLowerCaseName === lowerCaseName) {
          return true;
        }
      }) || null;
      if (existingName1 !== null) {
        headers[existingName1] = value;
      }
    }
    function underwrite(headers, name, value) {
      var lowerCaseName = name.toLowerCase(), existingNames = Object.getOwnPropertyNames(headers), existingName2 = existingNames.find(function(existingName) {
        var existingLowerCaseName = existingName.toLowerCase();
        if (existingLowerCaseName === lowerCaseName) {
          return true;
        }
      }) || null;
      if (existingName2 === null) {
        headers[name] = value;
      }
    }
    function portFromHost(host) {
      var port;
      var matches = host.match(/^https?:\/\/([^\/]+)/), secondMatch = (0, _array).second(matches), index = secondMatch.indexOf(_characters.COLON_CHARACTER);
      if (index === -1) {
        var secure = secureFromHost(host);
        port = secure ? 443 : 80;
      } else {
        var start = index + 1, portString = secondMatch.substring(start);
        port = Number(portString);
      }
      return port;
    }
    function secureFromHost(host) {
      var secure = /^https:\/\//.test(host);
      return secure;
    }
    function hostnameFromHost(host) {
      var matches = host.match(/^https?:\/\/([^:\/]+)/), secondMatch = (0, _array).second(matches), hostname = secondMatch;
      return hostname;
    }
    function queryStringFromQuery(query) {
      var names = Object.keys(query), namesLength = names.length, lastIndex = namesLength - 1, queryString1 = names.reduce(function(queryString, name, index) {
        var value = query[name], encodedName = encodeURIComponent(name), encodedValue = encodeURIComponent(value), ampersandOrNothing = index !== lastIndex ? _characters.AMPERSAND_CHARACTER : _constants.EMPTY_STRING;
        queryString += "".concat(encodedName, "=").concat(encodedValue).concat(ampersandOrNothing);
        return queryString;
      }, _constants.EMPTY_STRING);
      return queryString1;
    }
    function urlFromHostURIAndQuery(host, uri, query) {
      var queryString = queryStringFromQuery(query), url = queryString === _constants.EMPTY_STRING ? "".concat(host).concat(uri) : "".concat(host).concat(uri, "?").concat(queryString);
      return url;
    }
    var _default = {
      overwrite,
      underwrite,
      portFromHost,
      secureFromHost,
      hostnameFromHost,
      queryStringFromQuery,
      urlFromHostURIAndQuery
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/utilities/ajax.js
  var require_ajax = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.get = get;
    exports.post = post;
    exports.request = request;
    exports.default = void 0;
    var _methods = require_methods();
    var _contentTypes = require_contentTypes2();
    var _headers = require_headers();
    var _http = require_http();
    function get(host, uri, query, headers, callback) {
      if (callback === void 0) {
        callback = headers;
        headers = {};
      }
      var method = _methods.GET_METHOD, accept = _contentTypes.APPLICATION_JSON_CONTENT_TYPE, content = null;
      underwriteAcceptHeader(headers, accept);
      request(host, uri, query, method, headers, content, callback);
    }
    function post(host, uri, query, headers, content, callback) {
      if (callback === void 0) {
        callback = content;
        content = headers;
        headers = {};
      }
      var method = _methods.POST_METHOD, accept = _contentTypes.APPLICATION_JSON_CONTENT_TYPE, contentType = _contentTypes.APPLICATION_JSON_CONTENT_TYPE;
      underwriteAcceptHeader(headers, accept);
      underwriteContentTypeHeader(headers, contentType);
      request(host, uri, query, method, headers, content, callback);
    }
    function request(host, uri, query, method, headers, content1, callback) {
      var url = (0, _http).urlFromHostURIAndQuery(host, uri, query), accept = headers[_headers.ACCEPT_HEADER] || null, contentType = headers[_headers.CONTENT_TYPE_HEADER] || null, xmlHttpRequest = new XMLHttpRequest();
      if (contentType === _contentTypes.APPLICATION_JSON_CONTENT_TYPE) {
        var json = content1, jsonString = JSON.stringify(json);
        content1 = jsonString;
      }
      xmlHttpRequest.onreadystatechange = function() {
        var readyState = xmlHttpRequest.readyState, status = xmlHttpRequest.status, response = xmlHttpRequest.response, statusCode = status;
        if (readyState == 4) {
          var content = response;
          if (accept === _contentTypes.APPLICATION_JSON_CONTENT_TYPE) {
            try {
              var jsonString2 = content, json2 = JSON.parse(jsonString2);
              content = json2;
            } catch (error) {
              content = null;
            }
          }
          callback(content, statusCode);
        }
      };
      xmlHttpRequest.open(method, url);
      if (accept !== null) {
        xmlHttpRequest.setRequestHeader(_headers.ACCEPT_HEADER, accept);
      }
      if (contentType !== null) {
        xmlHttpRequest.setRequestHeader(_headers.CONTENT_TYPE_HEADER, contentType);
      }
      content1 !== null ? xmlHttpRequest.send(content1) : xmlHttpRequest.send();
    }
    var _default = {
      get,
      post,
      request
    };
    exports.default = _default;
    function underwriteAcceptHeader(headers, accept) {
      var name = _headers.ACCEPT_HEADER, value = accept;
      (0, _http).underwrite(headers, name, value);
    }
    function underwriteContentTypeHeader(headers, contentTYpe) {
      var name = _headers.CONTENT_TYPE_HEADER, value = contentTYpe;
      (0, _http).underwrite(headers, name, value);
    }
  });

  // node_modules/necessary/lib/utilities/path.js
  var require_path = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isPathName = isPathName;
    exports.isPathTopmostName = isPathTopmostName;
    exports.isPathRelativePath = isPathRelativePath;
    exports.isPathAbsolutePath = isPathAbsolutePath;
    exports.isTopmostNameInAbsolutePath = isTopmostNameInAbsolutePath;
    exports.combinePaths = combinePaths;
    exports.concatenatePaths = concatenatePaths;
    exports.bottommostNameFromPath = bottommostNameFromPath;
    exports.topmostDirectoryPathFromPath = topmostDirectoryPathFromPath;
    exports.topmostDirectoryNameFromPath = topmostDirectoryNameFromPath;
    exports.pathWithoutBottommostNameFromPath = pathWithoutBottommostNameFromPath;
    exports.pathWithoutTopmostDirectoryNameFromPath = pathWithoutTopmostDirectoryNameFromPath;
    exports.default = void 0;
    var _constants = require_constants2();
    var _array = require_array2();
    function isPathName(path) {
      path = path.replace(/^\//, _constants.EMPTY_STRING).replace(/\/$/, _constants.EMPTY_STRING);
      var pathName = /\//.test(path) === false;
      return pathName;
    }
    function isPathTopmostName(path) {
      var pathName = isPathName(path), pathAbsolutePath = isPathAbsolutePath(path), pathTopmostName = pathName && pathAbsolutePath;
      return pathTopmostName;
    }
    function isPathRelativePath(path) {
      var pathRelativePath = !/^\//.test(path);
      return pathRelativePath;
    }
    function isPathAbsolutePath(path) {
      var pathAbsolutePath = /^\//.test(path);
      return pathAbsolutePath;
    }
    function isTopmostNameInAbsolutePath(topmostName, absolutePath) {
      var regExp = new RegExp("^".concat(topmostName, "(?:\\/.+)?$")), topmostNameInAbsolutePath = regExp.test(absolutePath);
      return topmostNameInAbsolutePath;
    }
    function combinePaths(path, relativePath) {
      var combinedPath = null;
      var pathNames = path.split(/\//), relativePathNames = relativePath.split(/\//);
      var lastPathName, firstRelativePathName = (0, _array).first(relativePathNames);
      if (firstRelativePathName === ".") {
        relativePathNames.shift();
      }
      firstRelativePathName = (0, _array).first(relativePathNames);
      lastPathName = (0, _array).last(pathNames);
      while (firstRelativePathName === ".." && lastPathName !== void 0) {
        relativePathNames.shift();
        pathNames.pop();
        firstRelativePathName = (0, _array).first(relativePathNames);
        lastPathName = (0, _array).last(pathNames);
      }
      if (lastPathName !== void 0) {
        var combinedPathNames = [].concat(pathNames).concat(relativePathNames);
        combinedPath = combinedPathNames.join("/");
      }
      return combinedPath;
    }
    function concatenatePaths(path, relativePath) {
      path = path.replace(/\/$/, _constants.EMPTY_STRING);
      var concatenatedPath = "".concat(path, "/").concat(relativePath);
      return concatenatedPath;
    }
    function bottommostNameFromPath(path) {
      var bottommostName = null;
      var matches = path.match(/^.*\/([^\/]+\/?)$/);
      if (matches !== null) {
        var secondMatch = (0, _array).second(matches);
        bottommostName = secondMatch;
      }
      return bottommostName;
    }
    function topmostDirectoryPathFromPath(path) {
      var matches = path.match(/^(.+)\/[^\/]+\/?$/), secondMatch = (0, _array).second(matches), topmostDirectoryPath = secondMatch;
      return topmostDirectoryPath;
    }
    function topmostDirectoryNameFromPath(path) {
      var topmostDirectoryName = null;
      var matches = path.match(/^([^\/]+)\/.+$/);
      if (matches !== null) {
        var secondMatch = (0, _array).second(matches);
        topmostDirectoryName = secondMatch;
      }
      return topmostDirectoryName;
    }
    function pathWithoutBottommostNameFromPath(path) {
      var pathWithoutBottommostName = null;
      var matches = path.match(/^(.*)\/[^\/]+\/?$/);
      if (matches !== null) {
        var secondMatch = (0, _array).second(matches);
        pathWithoutBottommostName = secondMatch;
      }
      return pathWithoutBottommostName;
    }
    function pathWithoutTopmostDirectoryNameFromPath(path) {
      var pathWithoutTopmostDirectoryName = null;
      var matches = path.match(/^[^\/]+\/(.+)$/);
      if (matches !== null) {
        var secondMatch = (0, _array).second(matches);
        pathWithoutTopmostDirectoryName = secondMatch;
      }
      return pathWithoutTopmostDirectoryName;
    }
    var _default = {
      isPathName,
      isPathTopmostName,
      isPathRelativePath,
      isPathAbsolutePath,
      isTopmostNameInAbsolutePath,
      combinePaths,
      concatenatePaths,
      bottommostNameFromPath,
      topmostDirectoryPathFromPath,
      topmostDirectoryNameFromPath,
      pathWithoutBottommostNameFromPath,
      pathWithoutTopmostDirectoryNameFromPath
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/utilities/asynchronous.js
  var require_asynchronous = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.whilst = whilst;
    exports.forEach = forEach;
    exports.sequence = sequence;
    exports.eventually = eventually;
    exports.repeatedly = repeatedly;
    exports.forwardsForEach = forwardsForEach;
    exports.backwardsForEach = backwardsForEach;
    exports.default = void 0;
    function whilst(operation, done, context) {
      var count = -1;
      function next() {
        count++;
        var index = count, terminate = operation(next, done, context, index);
        if (terminate) {
          done();
        }
      }
      next();
    }
    function forEach(array, operation, done, context) {
      var length = array.length;
      var count = -1;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        } else {
          var index = count, element = array[index];
          operation(element, next, done, context, index);
        }
      }
      next();
    }
    function sequence(operations, done, context) {
      var length = operations.length;
      var count = -1;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        } else {
          var index = count, operation = operations[index];
          operation(next, done, context, index);
        }
      }
      next();
    }
    function eventually(operations, done, context) {
      var next = function next2() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        }
      };
      var length = operations.length;
      var count = 0;
      operations.forEach(function(operation, index) {
        operation(next, done, context, index);
      });
    }
    function repeatedly(operation, length, done, context) {
      var next = function next2() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        }
      };
      var count = 0;
      for (var index = 0; index < length; index++) {
        operation(next, done, context, index);
      }
    }
    function forwardsForEach(array, operation, done, context) {
      var length = array.length;
      var count = -1;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        } else {
          var index = count, element = array[index];
          operation(element, next, done, context, index);
        }
      }
      next();
    }
    function backwardsForEach(array, operation, done, context) {
      var length = array.length;
      var count = length;
      function next() {
        count--;
        var terminate = count === -1;
        if (terminate) {
          done();
        } else {
          var index = count, element = array[index];
          operation(element, next, done, context, index);
        }
      }
      next();
    }
    var _default = {
      whilst,
      forEach,
      sequence,
      eventually,
      repeatedly,
      forwardsForEach,
      backwardsForEach
    };
    exports.default = _default;
  });

  // node_modules/necessary/lib/browser.js
  var require_browser = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "levels", {
      enumerable: true,
      get: function() {
        return _levels.default;
      }
    });
    Object.defineProperty(exports, "methods", {
      enumerable: true,
      get: function() {
        return _methods.default;
      }
    });
    Object.defineProperty(exports, "headers", {
      enumerable: true,
      get: function() {
        return _headers.default;
      }
    });
    Object.defineProperty(exports, "keyCodes", {
      enumerable: true,
      get: function() {
        return _keyCodes.default;
      }
    });
    Object.defineProperty(exports, "encodings", {
      enumerable: true,
      get: function() {
        return _encodings.default;
      }
    });
    Object.defineProperty(exports, "characters", {
      enumerable: true,
      get: function() {
        return _characters.default;
      }
    });
    Object.defineProperty(exports, "statusCodes", {
      enumerable: true,
      get: function() {
        return _statusCodes.default;
      }
    });
    Object.defineProperty(exports, "contentTypes", {
      enumerable: true,
      get: function() {
        return _contentTypes.default;
      }
    });
    Object.defineProperty(exports, "statusMessages", {
      enumerable: true,
      get: function() {
        return _statusMessages.default;
      }
    });
    Object.defineProperty(exports, "ajaxUtilities", {
      enumerable: true,
      get: function() {
        return _ajax.default;
      }
    });
    Object.defineProperty(exports, "pathUtilities", {
      enumerable: true,
      get: function() {
        return _path.default;
      }
    });
    Object.defineProperty(exports, "httpUtilities", {
      enumerable: true,
      get: function() {
        return _http.default;
      }
    });
    Object.defineProperty(exports, "arrayUtilities", {
      enumerable: true,
      get: function() {
        return _array.default;
      }
    });
    Object.defineProperty(exports, "asynchronousUtilities", {
      enumerable: true,
      get: function() {
        return _asynchronous.default;
      }
    });
    var _levels = _interopRequireDefault2(require_levels());
    var _methods = _interopRequireDefault2(require_methods());
    var _headers = _interopRequireDefault2(require_headers());
    var _keyCodes = _interopRequireDefault2(require_keyCodes());
    var _encodings = _interopRequireDefault2(require_encodings());
    var _characters = _interopRequireDefault2(require_characters());
    var _statusCodes = _interopRequireDefault2(require_statusCodes());
    var _contentTypes = _interopRequireDefault2(require_contentTypes2());
    var _statusMessages = _interopRequireDefault2(require_statusMessages());
    var _ajax = _interopRequireDefault2(require_ajax());
    var _path = _interopRequireDefault2(require_path());
    var _http = _interopRequireDefault2(require_http());
    var _array = _interopRequireDefault2(require_array2());
    var _asynchronous = _interopRequireDefault2(require_asynchronous());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/occam-lexers/lib/utilities/content.js
  var require_content = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.sanitiseContent = sanitiseContent;
    var _necessary = require_browser();
    var LESS_THAN_CHARACTER = _necessary.characters.LESS_THAN_CHARACTER;
    var AMPERSAND_CHARACTER = _necessary.characters.AMPERSAND_CHARACTER;
    var GREATER_THAN_CHARACTER = _necessary.characters.GREATER_THAN_CHARACTER;
    function sanitiseContent(content) {
      var sanitisedContent = content.replace(/&/, AMPERSAND_CHARACTER).replace(/</, LESS_THAN_CHARACTER).replace(/>/, GREATER_THAN_CHARACTER);
      return sanitisedContent;
    }
  });

  // node_modules/occam-lexers/lib/types.js
  var require_types = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.middleOfMultiLineCommentType = exports.startOfMultiLineCommentType = exports.endOfMultiLineCommentType = exports.regularExpressionType = exports.singleLineCommentType = exports.endOfLineCommentType = exports.stringLiteralType = exports.whitespaceType = exports.endOfLineType = exports.commentType = exports.nameType = exports.typeType = void 0;
    var typeType = "type";
    exports.typeType = typeType;
    var nameType = "name";
    exports.nameType = nameType;
    var commentType = "comment";
    exports.commentType = commentType;
    var endOfLineType = "end-of-line";
    exports.endOfLineType = endOfLineType;
    var whitespaceType = "whitespace";
    exports.whitespaceType = whitespaceType;
    var stringLiteralType = "string-literal";
    exports.stringLiteralType = stringLiteralType;
    var endOfLineCommentType = "".concat(endOfLineType, " ").concat(commentType);
    exports.endOfLineCommentType = endOfLineCommentType;
    var singleLineCommentType = "single-line ".concat(commentType);
    exports.singleLineCommentType = singleLineCommentType;
    var regularExpressionType = "regular-expression";
    exports.regularExpressionType = regularExpressionType;
    var endOfMultiLineCommentType = "end-of-multi-line ".concat(commentType);
    exports.endOfMultiLineCommentType = endOfMultiLineCommentType;
    var startOfMultiLineCommentType = "start-of-multi-line ".concat(commentType);
    exports.startOfMultiLineCommentType = startOfMultiLineCommentType;
    var middleOfMultiLineCommentType = "middle-of-multi-line ".concat(commentType);
    exports.middleOfMultiLineCommentType = middleOfMultiLineCommentType;
    var _default = {
      typeType,
      nameType,
      commentType,
      endOfLineType,
      whitespaceType,
      stringLiteralType,
      endOfLineCommentType,
      singleLineCommentType,
      regularExpressionType,
      endOfMultiLineCommentType,
      startOfMultiLineCommentType,
      middleOfMultiLineCommentType
    };
    exports.default = _default;
  });

  // node_modules/occam-lexers/lib/token.js
  var require_token = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _content = require_content();
    var _types = require_types();
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    var first = _necessary.arrayUtilities.first;
    var Token = /* @__PURE__ */ function() {
      function Token2(type, content, innerHTML, significant) {
        _classCallCheck(this, Token2);
        this.type = type;
        this.content = content;
        this.innerHTML = innerHTML;
        this.significant = significant;
      }
      _createClass(Token2, [
        {
          key: "getType",
          value: function getType() {
            return this.type;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            return this.content;
          }
        },
        {
          key: "getInnerHTML",
          value: function getInnerHTML() {
            return this.innerHTML;
          }
        },
        {
          key: "getContentLength",
          value: function getContentLength() {
            var contentLength = this.content.length;
            return contentLength;
          }
        },
        {
          key: "isSignificant",
          value: function isSignificant() {
            return this.significant;
          }
        },
        {
          key: "isCommentToken",
          value: function isCommentToken() {
            var typeIncludesCommentType = this.type.includes(_types.commentType), commentToken = typeIncludesCommentType;
            return commentToken;
          }
        },
        {
          key: "isEndOfLineToken",
          value: function isEndOfLineToken() {
            var typeEndOfLineType = this.type.includes(_types.endOfLineType), endOfLineToken = typeEndOfLineType;
            return endOfLineToken;
          }
        },
        {
          key: "isWhitespaceToken",
          value: function isWhitespaceToken() {
            var typeWhitespaceType = this.type === _types.whitespaceType, whitespaceToken = typeWhitespaceType;
            return whitespaceToken;
          }
        },
        {
          key: "isEqualTo",
          value: function isEqualTo(token) {
            var equalToToken = this === token;
            return equalToToken;
          }
        },
        {
          key: "match",
          value: function match(token) {
            var type = token.getType(), content = token.getContent(), significant = token.isSignificant(), matches = this.type === type && this.content === content && this.significant === significant;
            return matches;
          }
        },
        {
          key: "asHTML",
          value: function asHTML() {
            var className = this.type, html = '<span class="'.concat(className, '">').concat(this.innerHTML, "</span>");
            return html;
          }
        },
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition, significant) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
              remainingArguments[_key - 4] = arguments[_key];
            }
            var token = null;
            if (startPosition !== endPosition) {
              var content = this.getContent();
              content = content.substring(startPosition, endPosition);
              var type = this.getType(), sanitisedContent = (0, _content).sanitiseContent(content), innerHTML = sanitisedContent;
              token = _construct(Class, [
                type,
                content,
                innerHTML,
                significant
              ].concat(_toConsumableArray(remainingArguments)));
            }
            return token;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content, significant) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              remainingArguments[_key - 3] = arguments[_key];
            }
            var token = null;
            var regularExpression = Class.regularExpression, matches = content.match(regularExpression);
            if (matches !== null) {
              var index = matches.index;
              if (index === 0) {
                var firstMatch = first(matches);
                content = firstMatch;
                var contentLength = content.length;
                if (contentLength > 0) {
                  var type = Class.type, sanitisedContent = (0, _content).sanitiseContent(content), innerHTML = sanitisedContent;
                  token = _construct(Class, [
                    type,
                    content,
                    innerHTML,
                    significant
                  ].concat(_toConsumableArray(remainingArguments)));
                }
              }
            }
            return token;
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content, significant) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              remainingArguments[_key - 3] = arguments[_key];
            }
            var type = Class.type, sanitisedContent = (0, _content).sanitiseContent(content), innerHTML = sanitisedContent, token = _construct(Class, [
              type,
              content,
              innerHTML,
              significant
            ].concat(_toConsumableArray(remainingArguments)));
            return token;
          }
        },
        {
          key: "fromContentAndType",
          value: function fromContentAndType(Class, content, type, significant) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
              remainingArguments[_key - 4] = arguments[_key];
            }
            var sanitisedContent = (0, _content).sanitiseContent(content), innerHTML = sanitisedContent, token = _construct(Class, [
              type,
              content,
              innerHTML,
              significant
            ].concat(_toConsumableArray(remainingArguments)));
            return token;
          }
        }
      ]);
      return Token2;
    }();
    exports.default = Token;
  });

  // node_modules/occam-lexers/lib/token/significant.js
  var require_significant = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _token = _interopRequireDefault2(require_token());
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var significant = true;
    var SignificantToken = /* @__PURE__ */ function(Token) {
      _inherits(SignificantToken2, Token);
      var _super = _createSuper(SignificantToken2);
      function SignificantToken2() {
        _classCallCheck(this, SignificantToken2);
        return _super.apply(this, arguments);
      }
      _createClass(SignificantToken2, [
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              remainingArguments[_key - 3] = arguments[_key];
            }
            var _instance;
            if (endPosition === void 0) {
              endPosition = startPosition;
              startPosition = Class;
              Class = SignificantToken2;
            }
            var significantToken = (_instance = _get(_getPrototypeOf(SignificantToken2.prototype), "clone", this)).call.apply(_instance, [
              this,
              Class,
              startPosition,
              endPosition,
              significant
            ].concat(_toConsumableArray(remainingArguments)));
            return significantToken;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              remainingArguments[_key - 2] = arguments[_key];
            }
            var _Token;
            if (content === void 0) {
              content = Class;
              Class = SignificantToken2;
            }
            var significantToken = (_Token = _token.default).match.apply(_Token, [
              Class,
              content,
              significant
            ].concat(_toConsumableArray(remainingArguments)));
            return significantToken;
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              remainingArguments[_key - 2] = arguments[_key];
            }
            var _Token;
            if (content === void 0) {
              content = Class;
              Class = SignificantToken2;
            }
            var significantToken = (_Token = _token.default).fromContent.apply(_Token, [
              Class,
              content,
              significant
            ].concat(_toConsumableArray(remainingArguments)));
            return significantToken;
          }
        },
        {
          key: "fromContentAndType",
          value: function fromContentAndType(Class, content, type) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              remainingArguments[_key - 3] = arguments[_key];
            }
            var _Token;
            if (type === void 0) {
              type = content;
              content = Class;
              Class = SignificantToken2;
            }
            var significantToken = (_Token = _token.default).fromContentAndType.apply(_Token, [
              Class,
              content,
              type,
              significant
            ].concat(_toConsumableArray(remainingArguments)));
            return significantToken;
          }
        }
      ]);
      return SignificantToken2;
    }(_token.default);
    exports.default = SignificantToken;
  });

  // node_modules/occam-lexers/lib/constants.js
  var require_constants3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.EMPTY_STRING = exports.U = void 0;
    var U = "u";
    exports.U = U;
    var EMPTY_STRING = "";
    exports.EMPTY_STRING = EMPTY_STRING;
  });

  // node_modules/occam-lexers/lib/rule.js
  var require_rule = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _significant = _interopRequireDefault2(require_significant());
    var _constants = require_constants3();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var first = _necessary.arrayUtilities.first;
    var Rule = /* @__PURE__ */ function() {
      function Rule2(type, regularExpression) {
        _classCallCheck(this, Rule2);
        this.type = type;
        this.regularExpression = regularExpression;
      }
      _createClass(Rule2, [
        {
          key: "getType",
          value: function getType() {
            return this.type;
          }
        },
        {
          key: "getRegularExpression",
          value: function getRegularExpression() {
            return this.regularExpression;
          }
        },
        {
          key: "match",
          value: function match(content) {
            var significantToken = null;
            var matches = content.match(this.regularExpression);
            if (matches !== null) {
              var index = matches.index;
              if (index === 0) {
                var firstMatch = first(matches);
                content = firstMatch;
                var contentLength = content.length;
                if (contentLength > 0) {
                  significantToken = _significant.default.fromContentAndType(content, this.type);
                }
              }
            }
            return significantToken;
          }
        },
        {
          key: "asEntry",
          value: function asEntry() {
            var entry = {}, regularExpressionPattern = "".concat(this.regularExpression);
            entry[this.type] = regularExpressionPattern;
            return entry;
          }
        }
      ], [
        {
          key: "fromToken",
          value: function fromToken(Token) {
            var type = Token.type, regularExpression = Token.regularExpression, rule = new Rule2(type, regularExpression);
            return rule;
          }
        },
        {
          key: "fromEntry",
          value: function fromEntry(entry) {
            var entryKeys = Object.keys(entry), firstEntryKey = first(entryKeys), type = firstEntryKey, regularExpressionPattern = entry[type], rule = Rule2.fromTypeAndRegularExpressionPattern(type, regularExpressionPattern);
            return rule;
          }
        },
        {
          key: "fromTypeAndRegularExpressionPattern",
          value: function fromTypeAndRegularExpressionPattern(type, regularExpressionPattern) {
            var unicode = isUnicode(regularExpressionPattern), flags = unicode ? _constants.U : _constants.EMPTY_STRING, regExp = new RegExp(regularExpressionPattern, flags), regularExpression = regExp, rule = new Rule2(type, regularExpression);
            return rule;
          }
        }
      ]);
      return Rule2;
    }();
    exports.default = Rule;
    function isUnicode(regularExpressionPattern) {
      var unicodeRegularExpression = /u{/, index = regularExpressionPattern.search(unicodeRegularExpression), unicode = index !== -1;
      return unicode;
    }
  });

  // node_modules/occam-lexers/lib/specialSymbols.js
  var require_specialSymbols = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.END_OF_LINE = exports.NO_WHITESPACE = exports.exclamationMark = exports.questionMark = exports.closeBracket = exports.openBracket = exports.verticalBar = exports.terminator = exports.separator = exports.asterisk = exports.wildcard = exports.epsilon = exports.plus = void 0;
    var plus = "+";
    exports.plus = plus;
    var epsilon = "\u03B5";
    exports.epsilon = epsilon;
    var wildcard = ".";
    exports.wildcard = wildcard;
    var asterisk = "*";
    exports.asterisk = asterisk;
    var separator = "::=";
    exports.separator = separator;
    var terminator = ";";
    exports.terminator = terminator;
    var verticalBar = "|";
    exports.verticalBar = verticalBar;
    var openBracket = "(";
    exports.openBracket = openBracket;
    var closeBracket = ")";
    exports.closeBracket = closeBracket;
    var questionMark = "?";
    exports.questionMark = questionMark;
    var exclamationMark = "!";
    exports.exclamationMark = exclamationMark;
    var NO_WHITESPACE = "<NO_WHITESPACE>";
    exports.NO_WHITESPACE = NO_WHITESPACE;
    var END_OF_LINE = "<END_OF_LINE>";
    exports.END_OF_LINE = END_OF_LINE;
    var _default = {
      plus,
      epsilon,
      wildcard,
      asterisk,
      separator,
      terminator,
      verticalBar,
      openBracket,
      closeBracket,
      questionMark,
      exclamationMark,
      NO_WHITESPACE,
      END_OF_LINE
    };
    exports.default = _default;
  });

  // node_modules/occam-lexers/lib/bnf/entries.js
  var require_entries = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        special: "^(?:::=|\\||\\(|\\)|\\?|\\!|\\*|\\+|\\.|\u03B5|;|<NO_WHITESPACE>|<END_OF_LINE>)"
      },
      {
        type: "^\\[[^\\]]+\\]"
      },
      {
        name: "^[\\w~]+"
      },
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-lexers/lib/utilities/token.js
  var require_token2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.inCommentFromTokenAndInComment = inCommentFromTokenAndInComment;
    function inCommentFromTokenAndInComment(token, inComment) {
      var tokenCommentToken = token.isCommentToken();
      if (tokenCommentToken) {
        var commentToken = token, commentTokenInCommentPreserving = commentToken.isInCommentPreserving();
        inComment = commentTokenInCommentPreserving;
      }
      return inComment;
    }
  });

  // node_modules/occam-lexers/lib/common/lexer.js
  var require_lexer = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule());
    var _constants = require_constants3();
    var _token = require_token2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var CommonLexer = /* @__PURE__ */ function() {
      function CommonLexer2(rules, InCommentClasses, NotInCommentClasses) {
        _classCallCheck(this, CommonLexer2);
        this.rules = rules;
        this.InCommentClasses = InCommentClasses;
        this.NotInCommentClasses = NotInCommentClasses;
      }
      _createClass(CommonLexer2, [
        {
          key: "getRules",
          value: function getRules() {
            return this.rules;
          }
        },
        {
          key: "getInCommentClasses",
          value: function getInCommentClasses() {
            return this.InCommentClasses;
          }
        },
        {
          key: "getNotInCommentClasses",
          value: function getNotInCommentClasses() {
            return this.NotInCommentClasses;
          }
        },
        {
          key: "tokenise",
          value: function tokenise(content) {
            var inComment = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
            var tokens = [];
            while (content !== _constants.EMPTY_STRING) {
              var token = null;
              var Classes = inComment ? this.InCommentClasses : this.NotInCommentClasses;
              Classes.some(function(Class) {
                if (Class !== null) {
                  token = Class.match(content);
                  if (token !== null) {
                    return true;
                  }
                }
              });
              if (token === null) {
                var significantToken = null;
                this.rules.some(function(rule) {
                  significantToken = rule.match(content);
                  if (significantToken !== null) {
                    token = significantToken;
                    return true;
                  }
                });
              }
              if (token === null) {
                throw new Error("The content '".concat(content, "' cannot be tokenised."));
              }
              tokens.push(token);
              inComment = (0, _token).inCommentFromTokenAndInComment(token, inComment);
              var tokenContentLength = token.getContentLength(), start = tokenContentLength;
              content = content.substring(start);
            }
            return tokens;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing(Class) {
            var entries = Class.entries, InCommentClasses = InCommentClassesFromClass(Class), NotInCommentClasses = NotInCommentClassesFromClass(Class), rules = entries.map(function(entry) {
              return _rule.default.fromEntry(entry);
            }), lexer = new Class(rules, InCommentClasses, NotInCommentClasses);
            return lexer;
          }
        },
        {
          key: "fromRules",
          value: function fromRules(Class, rules) {
            var InCommentClasses = InCommentClassesFromClass(Class), NotInCommentClasses = NotInCommentClassesFromClass(Class), lexer = new Class(rules, InCommentClasses, NotInCommentClasses);
            return lexer;
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(Class, entries) {
            var rules = entries.map(function(entry) {
              return _rule.default.fromEntry(entry);
            }), InCommentClasses = InCommentClassesFromClass(Class), NotInCommentClasses = NotInCommentClassesFromClass(Class), lexer = new Class(rules, InCommentClasses, NotInCommentClasses);
            return lexer;
          }
        }
      ]);
      return CommonLexer2;
    }();
    exports.default = CommonLexer;
    function InCommentClassesFromClass(Class) {
      var EndOfLineCommentToken = Class.EndOfLineCommentToken, EndOfMultiLineCommentToken = Class.EndOfMultiLineCommentToken, MiddleOfMultiLineCommentToken = Class.MiddleOfMultiLineCommentToken, InCommentClasses = [
        EndOfLineCommentToken,
        EndOfMultiLineCommentToken,
        MiddleOfMultiLineCommentToken
      ];
      return InCommentClasses;
    }
    function NotInCommentClassesFromClass(Class) {
      var EndOfLineToken = Class.EndOfLineToken, WhitespaceToken = Class.WhitespaceToken, SingleLineCommentToken = Class.SingleLineCommentToken, RegularExpressionToken = Class.RegularExpressionToken, StartOfMultiLineCommentToken = Class.StartOfMultiLineCommentToken, SinglyQuotedStringLiteralToken = Class.SinglyQuotedStringLiteralToken, DoublyQuotedStringLiteralToken = Class.DoublyQuotedStringLiteralToken, NotInCommentClasses = [
        EndOfLineToken,
        WhitespaceToken,
        StartOfMultiLineCommentToken,
        SingleLineCommentToken,
        RegularExpressionToken,
        SinglyQuotedStringLiteralToken,
        DoublyQuotedStringLiteralToken
      ];
      return NotInCommentClasses;
    }
  });

  // node_modules/occam-lexers/lib/token/nonSignificant.js
  var require_nonSignificant = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _token = _interopRequireDefault2(require_token());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var significant = false;
    var NonSignificantToken = /* @__PURE__ */ function(Token) {
      _inherits(NonSignificantToken2, Token);
      var _super = _createSuper(NonSignificantToken2);
      function NonSignificantToken2() {
        _classCallCheck(this, NonSignificantToken2);
        return _super.apply(this, arguments);
      }
      _createClass(NonSignificantToken2, [
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition) {
            return _get(_getPrototypeOf(NonSignificantToken2.prototype), "clone", this).call(this, Class, startPosition, endPosition, significant);
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _token.default.match(Class, content, significant);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _token.default.fromContent(Class, content, significant);
          }
        },
        {
          key: "fromContentAndType",
          value: function fromContentAndType(Class, content, type) {
            return _token.default.fromContentAndType(Class, content, type, significant);
          }
        }
      ]);
      return NonSignificantToken2;
    }(_token.default);
    exports.default = NonSignificantToken;
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/whitespace.js
  var require_whitespace = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var WhitespaceToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(WhitespaceToken2, NonSignificantToken);
      var _super = _createSuper(WhitespaceToken2);
      function WhitespaceToken2() {
        _classCallCheck(this, WhitespaceToken2);
        return _super.apply(this, arguments);
      }
      _createClass(WhitespaceToken2, [
        {
          key: "asHTML",
          value: function asHTML() {
            var html = this.innerHTML;
            return html;
          }
        },
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(WhitespaceToken2.prototype), "clone", this).call(this, WhitespaceToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _nonSignificant.default.match(WhitespaceToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _nonSignificant.default.fromContent(WhitespaceToken2, content);
          }
        }
      ]);
      return WhitespaceToken2;
    }(_nonSignificant.default);
    exports.default = WhitespaceToken;
    _defineProperty(WhitespaceToken, "type", _types.whitespaceType);
    _defineProperty(WhitespaceToken, "regularExpression", /^[\t ]+/);
  });

  // node_modules/occam-lexers/lib/token/significant/regularExpression.js
  var require_regularExpression = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _significant = _interopRequireDefault2(require_significant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RegularExpressionToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(RegularExpressionToken2, SignificantToken);
      var _super = _createSuper(RegularExpressionToken2);
      function RegularExpressionToken2() {
        _classCallCheck(this, RegularExpressionToken2);
        return _super.apply(this, arguments);
      }
      _createClass(RegularExpressionToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(RegularExpressionToken2.prototype), "clone", this).call(this, RegularExpressionToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _significant.default.match(RegularExpressionToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _significant.default.fromContent(RegularExpressionToken2, content);
          }
        }
      ]);
      return RegularExpressionToken2;
    }(_significant.default);
    exports.default = RegularExpressionToken;
    _defineProperty(RegularExpressionToken, "type", _types.regularExpressionType);
    _defineProperty(RegularExpressionToken, "regularExpression", /^\/(?:\\[^\s]|[^\/\r\n])*\//);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/endOfLine.js
  var require_endOfLine = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var EndOfLineNonSignificantToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(EndOfLineNonSignificantToken2, NonSignificantToken);
      var _super = _createSuper(EndOfLineNonSignificantToken2);
      function EndOfLineNonSignificantToken2() {
        _classCallCheck(this, EndOfLineNonSignificantToken2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLineNonSignificantToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(EndOfLineNonSignificantToken2.prototype), "clone", this).call(this, EndOfLineNonSignificantToken2, startPosition, endPosition);
          }
        },
        {
          key: "asHTML",
          value: function asHTML() {
            var html = this.innerHTML;
            return html;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _nonSignificant.default.match(EndOfLineNonSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _nonSignificant.default.fromContent(EndOfLineNonSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineNonSignificantToken2;
    }(_nonSignificant.default);
    exports.default = EndOfLineNonSignificantToken;
    _defineProperty(EndOfLineNonSignificantToken, "type", _types.endOfLineType);
    _defineProperty(EndOfLineNonSignificantToken, "regularExpression", /^(?:\r\n|\r|\n)/);
  });

  // node_modules/occam-lexers/lib/token/significant/stringLiteral.js
  var require_stringLiteral = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _significant = _interopRequireDefault2(require_significant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var StringLiteralToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(StringLiteralToken2, SignificantToken);
      var _super = _createSuper(StringLiteralToken2);
      function StringLiteralToken2() {
        _classCallCheck(this, StringLiteralToken2);
        return _super.apply(this, arguments);
      }
      _createClass(StringLiteralToken2, [
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition) {
            return _get(_getPrototypeOf(StringLiteralToken2.prototype), "clone", this).call(this, Class, startPosition, endPosition);
          }
        },
        {
          key: "getString",
          value: function getString() {
            var content = this.getContent(), contentLength = content.length, start = 1, end = contentLength - 1, string = content.substring(start, end);
            return string;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _significant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _significant.default.fromContent(Class, content);
          }
        }
      ]);
      return StringLiteralToken2;
    }(_significant.default);
    exports.default = StringLiteralToken;
    _defineProperty(StringLiteralToken, "type", _types.stringLiteralType);
  });

  // node_modules/occam-lexers/lib/token/significant/stringLiteral/doublyQuoted.js
  var require_doublyQuoted = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _stringLiteral = _interopRequireDefault2(require_stringLiteral());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DoublyQuotedStringLiteralToken = /* @__PURE__ */ function(StringLiteralToken) {
      _inherits(DoublyQuotedStringLiteralToken2, StringLiteralToken);
      var _super = _createSuper(DoublyQuotedStringLiteralToken2);
      function DoublyQuotedStringLiteralToken2() {
        _classCallCheck(this, DoublyQuotedStringLiteralToken2);
        return _super.apply(this, arguments);
      }
      _createClass(DoublyQuotedStringLiteralToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(DoublyQuotedStringLiteralToken2.prototype), "clone", this).call(this, DoublyQuotedStringLiteralToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _stringLiteral.default.match(DoublyQuotedStringLiteralToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _stringLiteral.default.fromContent(DoublyQuotedStringLiteralToken2, content);
          }
        }
      ]);
      return DoublyQuotedStringLiteralToken2;
    }(_stringLiteral.default);
    exports.default = DoublyQuotedStringLiteralToken;
    _defineProperty(DoublyQuotedStringLiteralToken, "regularExpression", /^"(?:\\[^\s]|[^"\\\r\n])*"/);
  });

  // node_modules/occam-lexers/lib/bnf/lexer.js
  var require_lexer2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _entries = _interopRequireDefault2(require_entries());
    var _lexer = _interopRequireDefault2(require_lexer());
    var _whitespace = _interopRequireDefault2(require_whitespace());
    var _regularExpression = _interopRequireDefault2(require_regularExpression());
    var _endOfLine = _interopRequireDefault2(require_endOfLine());
    var _doublyQuoted = _interopRequireDefault2(require_doublyQuoted());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var BNFLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(BNFLexer2, CommonLexer);
      var _super = _createSuper(BNFLexer2);
      function BNFLexer2() {
        _classCallCheck(this, BNFLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(BNFLexer2, [
        {
          key: "tokensFromBNF",
          value: function tokensFromBNF(bnf) {
            var content = bnf, tokens = _get(_getPrototypeOf(BNFLexer2.prototype), "tokenise", this).call(this, content);
            return tokens;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _lexer.default.fromNothing(BNFLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _lexer.default.fromRules(BNFLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _lexer.default.fromEntries(BNFLexer2, entries);
          }
        }
      ]);
      return BNFLexer2;
    }(_lexer.default);
    exports.default = BNFLexer;
    _defineProperty(BNFLexer, "entries", _entries.default);
    _defineProperty(BNFLexer, "EndOfLineToken", _endOfLine.default);
    _defineProperty(BNFLexer, "WhitespaceToken", _whitespace.default);
    _defineProperty(BNFLexer, "EndOfLineCommentToken", null);
    _defineProperty(BNFLexer, "RegularExpressionToken", _regularExpression.default);
    _defineProperty(BNFLexer, "SingleLineCommentToken", null);
    _defineProperty(BNFLexer, "EndOfMultiLineCommentToken", null);
    _defineProperty(BNFLexer, "StartOfMultiLineCommentToken", null);
    _defineProperty(BNFLexer, "MiddleOfMultiLineCommentToken", null);
    _defineProperty(BNFLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(BNFLexer, "DoublyQuotedStringLiteralToken", _doublyQuoted.default);
  });

  // node_modules/occam-lexers/lib/basic/entries.js
  var require_entries2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        digit: "^\\d+"
      },
      {
        bracket: "^(?:\\(|\\))"
      },
      {
        operator: "^(?:\\+|\\-|\\*|\\/)"
      },
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-lexers/lib/token/significant/stringLiteral/singlyQuoted.js
  var require_singlyQuoted = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _stringLiteral = _interopRequireDefault2(require_stringLiteral());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SinglyQuotedStringLiteralToken = /* @__PURE__ */ function(StringLiteralToken) {
      _inherits(SinglyQuotedStringLiteralToken2, StringLiteralToken);
      var _super = _createSuper(SinglyQuotedStringLiteralToken2);
      function SinglyQuotedStringLiteralToken2() {
        _classCallCheck(this, SinglyQuotedStringLiteralToken2);
        return _super.apply(this, arguments);
      }
      _createClass(SinglyQuotedStringLiteralToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(SinglyQuotedStringLiteralToken2.prototype), "clone", this).call(this, SinglyQuotedStringLiteralToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _stringLiteral.default.match(SinglyQuotedStringLiteralToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _stringLiteral.default.fromContent(SinglyQuotedStringLiteralToken2, content);
          }
        }
      ]);
      return SinglyQuotedStringLiteralToken2;
    }(_stringLiteral.default);
    exports.default = SinglyQuotedStringLiteralToken;
    _defineProperty(SinglyQuotedStringLiteralToken, "regularExpression", /^'(?:\\[^\s]|[^'\\\r\n])*'/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/singleLine.js
  var require_singleLine = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SingleLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(SingleLineCommentToken2, NonSignificantToken);
      var _super = _createSuper(SingleLineCommentToken2);
      function SingleLineCommentToken2() {
        _classCallCheck(this, SingleLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(SingleLineCommentToken2, [
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition) {
            return _get(_getPrototypeOf(SingleLineCommentToken2.prototype), "clone", this).call(this, Class, startPosition, endPosition);
          }
        },
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = false;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return SingleLineCommentToken2;
    }(_nonSignificant.default);
    exports.default = SingleLineCommentToken;
    _defineProperty(SingleLineCommentToken, "type", _types.singleLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/singleLine/pythonStyle.js
  var require_pythonStyle = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _singleLine = _interopRequireDefault2(require_singleLine());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PythonStyleSingleLineCommentToken = /* @__PURE__ */ function(SingleLineCommentToken) {
      _inherits(PythonStyleSingleLineCommentToken2, SingleLineCommentToken);
      var _super = _createSuper(PythonStyleSingleLineCommentToken2);
      function PythonStyleSingleLineCommentToken2() {
        _classCallCheck(this, PythonStyleSingleLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(PythonStyleSingleLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(PythonStyleSingleLineCommentToken2.prototype), "clone", this).call(this, PythonStyleSingleLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _singleLine.default.match(PythonStyleSingleLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _singleLine.default.fromContent(PythonStyleSingleLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleSingleLineCommentToken2;
    }(_singleLine.default);
    exports.default = PythonStyleSingleLineCommentToken;
    _defineProperty(PythonStyleSingleLineCommentToken, "regularExpression", /^#[^\r\n]*/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/endOfLine.js
  var require_endOfLine2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var EndOfLineCommentNonSignificantToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(EndOfLineCommentNonSignificantToken2, NonSignificantToken);
      var _super = _createSuper(EndOfLineCommentNonSignificantToken2);
      function EndOfLineCommentNonSignificantToken2() {
        _classCallCheck(this, EndOfLineCommentNonSignificantToken2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLineCommentNonSignificantToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(EndOfLineCommentNonSignificantToken2.prototype), "clone", this).call(this, EndOfLineCommentNonSignificantToken2, startPosition, endPosition);
          }
        },
        {
          key: "asHTML",
          value: function asHTML() {
            var html = this.innerHTML;
            return html;
          }
        },
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _nonSignificant.default.match(EndOfLineCommentNonSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _nonSignificant.default.fromContent(EndOfLineCommentNonSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineCommentNonSignificantToken2;
    }(_nonSignificant.default);
    exports.default = EndOfLineCommentNonSignificantToken;
    _defineProperty(EndOfLineCommentNonSignificantToken, "type", _types.endOfLineCommentType);
    _defineProperty(EndOfLineCommentNonSignificantToken, "regularExpression", /^(?:\r\n|\r|\n)/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/endOf.js
  var require_endOf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var EndOfMultiLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(EndOfMultiLineCommentToken2, NonSignificantToken);
      var _super = _createSuper(EndOfMultiLineCommentToken2);
      function EndOfMultiLineCommentToken2() {
        _classCallCheck(this, EndOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition) {
            return _get(_getPrototypeOf(EndOfMultiLineCommentToken2.prototype), "clone", this).call(this, Class, startPosition, endPosition);
          }
        },
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = false;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return EndOfMultiLineCommentToken2;
    }(_nonSignificant.default);
    exports.default = EndOfMultiLineCommentToken;
    _defineProperty(EndOfMultiLineCommentToken, "type", _types.endOfMultiLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/endOf/pythonStyle.js
  var require_pythonStyle2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _endOf = _interopRequireDefault2(require_endOf());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PythonStyleEndOfMultiLineCommentToken = /* @__PURE__ */ function(EndOfMultiLineCommentToken) {
      _inherits(PythonStyleEndOfMultiLineCommentToken2, EndOfMultiLineCommentToken);
      var _super = _createSuper(PythonStyleEndOfMultiLineCommentToken2);
      function PythonStyleEndOfMultiLineCommentToken2() {
        _classCallCheck(this, PythonStyleEndOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(PythonStyleEndOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(PythonStyleEndOfMultiLineCommentToken2.prototype), "clone", this).call(this, PythonStyleEndOfMultiLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _endOf.default.match(PythonStyleEndOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _endOf.default.fromContent(PythonStyleEndOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleEndOfMultiLineCommentToken2;
    }(_endOf.default);
    exports.default = PythonStyleEndOfMultiLineCommentToken;
    _defineProperty(PythonStyleEndOfMultiLineCommentToken, "regularExpression", /^###/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/startOf.js
  var require_startOf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var StartOfMultiLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(StartOfMultiLineCommentToken2, NonSignificantToken);
      var _super = _createSuper(StartOfMultiLineCommentToken2);
      function StartOfMultiLineCommentToken2() {
        _classCallCheck(this, StartOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(StartOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition) {
            return _get(_getPrototypeOf(StartOfMultiLineCommentToken2.prototype), "clone", this).call(this, Class, startPosition, endPosition);
          }
        },
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return StartOfMultiLineCommentToken2;
    }(_nonSignificant.default);
    exports.default = StartOfMultiLineCommentToken;
    _defineProperty(StartOfMultiLineCommentToken, "type", _types.startOfMultiLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/startOf/pythonStyle.js
  var require_pythonStyle3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _startOf = _interopRequireDefault2(require_startOf());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PythonStyleStartOfMultiLineCommentToken = /* @__PURE__ */ function(StartOfMultiLineCommentToken) {
      _inherits(PythonStyleStartOfMultiLineCommentToken2, StartOfMultiLineCommentToken);
      var _super = _createSuper(PythonStyleStartOfMultiLineCommentToken2);
      function PythonStyleStartOfMultiLineCommentToken2() {
        _classCallCheck(this, PythonStyleStartOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(PythonStyleStartOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(PythonStyleStartOfMultiLineCommentToken2.prototype), "clone", this).call(this, PythonStyleStartOfMultiLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _startOf.default.match(PythonStyleStartOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _startOf.default.fromContent(PythonStyleStartOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleStartOfMultiLineCommentToken2;
    }(_startOf.default);
    exports.default = PythonStyleStartOfMultiLineCommentToken;
    _defineProperty(PythonStyleStartOfMultiLineCommentToken, "regularExpression", /^###/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/middleOf.js
  var require_middleOf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var MiddleOfMultiLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(MiddleOfMultiLineCommentToken2, NonSignificantToken);
      var _super = _createSuper(MiddleOfMultiLineCommentToken2);
      function MiddleOfMultiLineCommentToken2() {
        _classCallCheck(this, MiddleOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(MiddleOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(Class, startPosition, endPosition) {
            return _get(_getPrototypeOf(MiddleOfMultiLineCommentToken2.prototype), "clone", this).call(this, Class, startPosition, endPosition);
          }
        },
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return MiddleOfMultiLineCommentToken2;
    }(_nonSignificant.default);
    exports.default = MiddleOfMultiLineCommentToken;
    _defineProperty(MiddleOfMultiLineCommentToken, "type", _types.middleOfMultiLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/middleOf/pythonStyle.js
  var require_pythonStyle4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _middleOf = _interopRequireDefault2(require_middleOf());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PythonStyleMiddleOfMultiLineCommentToken = /* @__PURE__ */ function(MiddleOfMultiLineCommentToken) {
      _inherits(PythonStyleMiddleOfMultiLineCommentToken2, MiddleOfMultiLineCommentToken);
      var _super = _createSuper(PythonStyleMiddleOfMultiLineCommentToken2);
      function PythonStyleMiddleOfMultiLineCommentToken2() {
        _classCallCheck(this, PythonStyleMiddleOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(PythonStyleMiddleOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(PythonStyleMiddleOfMultiLineCommentToken2.prototype), "clone", this).call(this, PythonStyleMiddleOfMultiLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _middleOf.default.match(PythonStyleMiddleOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _middleOf.default.fromContent(PythonStyleMiddleOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleMiddleOfMultiLineCommentToken2;
    }(_middleOf.default);
    exports.default = PythonStyleMiddleOfMultiLineCommentToken;
    _defineProperty(PythonStyleMiddleOfMultiLineCommentToken, "regularExpression", /^(?:[^\r\n]+?(?=###)|[^\r\n]+)/);
  });

  // node_modules/occam-lexers/lib/basic/lexer.js
  var require_lexer3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _entries = _interopRequireDefault2(require_entries2());
    var _lexer = _interopRequireDefault2(require_lexer());
    var _whitespace = _interopRequireDefault2(require_whitespace());
    var _regularExpression = _interopRequireDefault2(require_regularExpression());
    var _endOfLine = _interopRequireDefault2(require_endOfLine());
    var _singlyQuoted = _interopRequireDefault2(require_singlyQuoted());
    var _doublyQuoted = _interopRequireDefault2(require_doublyQuoted());
    var _pythonStyle = _interopRequireDefault2(require_pythonStyle());
    var _endOfLine1 = _interopRequireDefault2(require_endOfLine2());
    var _pythonStyle1 = _interopRequireDefault2(require_pythonStyle2());
    var _pythonStyle2 = _interopRequireDefault2(require_pythonStyle3());
    var _pythonStyle3 = _interopRequireDefault2(require_pythonStyle4());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var BasicLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(BasicLexer2, CommonLexer);
      var _super = _createSuper(BasicLexer2);
      function BasicLexer2() {
        _classCallCheck(this, BasicLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(BasicLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _lexer.default.fromNothing(BasicLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _lexer.default.fromRules(BasicLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _lexer.default.fromEntries(BasicLexer2, entries);
          }
        }
      ]);
      return BasicLexer2;
    }(_lexer.default);
    exports.default = BasicLexer;
    _defineProperty(BasicLexer, "entries", _entries.default);
    _defineProperty(BasicLexer, "EndOfLineToken", _endOfLine.default);
    _defineProperty(BasicLexer, "WhitespaceToken", _whitespace.default);
    _defineProperty(BasicLexer, "EndOfLineCommentToken", _endOfLine1.default);
    _defineProperty(BasicLexer, "RegularExpressionToken", _regularExpression.default);
    _defineProperty(BasicLexer, "SingleLineCommentToken", _pythonStyle.default);
    _defineProperty(BasicLexer, "EndOfMultiLineCommentToken", _pythonStyle1.default);
    _defineProperty(BasicLexer, "StartOfMultiLineCommentToken", _pythonStyle2.default);
    _defineProperty(BasicLexer, "MiddleOfMultiLineCommentToken", _pythonStyle3.default);
    _defineProperty(BasicLexer, "SinglyQuotedStringLiteralToken", _singlyQuoted.default);
    _defineProperty(BasicLexer, "DoublyQuotedStringLiteralToken", _doublyQuoted.default);
  });

  // node_modules/occam-lexers/lib/token/significant/endOfLine.js
  var require_endOfLine3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _significant = _interopRequireDefault2(require_significant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var EndOfLineSignificantToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(EndOfLineSignificantToken2, SignificantToken);
      var _super = _createSuper(EndOfLineSignificantToken2);
      function EndOfLineSignificantToken2() {
        _classCallCheck(this, EndOfLineSignificantToken2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLineSignificantToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(EndOfLineSignificantToken2.prototype), "clone", this).call(this, EndOfLineSignificantToken2, startPosition, endPosition);
          }
        },
        {
          key: "asHTML",
          value: function asHTML() {
            var html = this.innerHTML;
            return html;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _significant.default.match(EndOfLineSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _significant.default.fromContent(EndOfLineSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineSignificantToken2;
    }(_significant.default);
    exports.default = EndOfLineSignificantToken;
    _defineProperty(EndOfLineSignificantToken, "type", _types.endOfLineType);
    _defineProperty(EndOfLineSignificantToken, "regularExpression", /^(?:\r\n|\r|\n)/);
  });

  // node_modules/occam-lexers/lib/token/significant/comment/endOfLine.js
  var require_endOfLine4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _significant = _interopRequireDefault2(require_significant());
    var _types = require_types();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var EndOfLineCommentSignificantToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(EndOfLineCommentSignificantToken2, SignificantToken);
      var _super = _createSuper(EndOfLineCommentSignificantToken2);
      function EndOfLineCommentSignificantToken2() {
        _classCallCheck(this, EndOfLineCommentSignificantToken2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLineCommentSignificantToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(EndOfLineCommentSignificantToken2.prototype), "clone", this).call(this, EndOfLineCommentSignificantToken2, startPosition, endPosition);
          }
        },
        {
          key: "asHTML",
          value: function asHTML() {
            var html = this.innerHTML;
            return html;
          }
        },
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _significant.default.match(EndOfLineCommentSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _significant.default.fromContent(EndOfLineCommentSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineCommentSignificantToken2;
    }(_significant.default);
    exports.default = EndOfLineCommentSignificantToken;
    _defineProperty(EndOfLineCommentSignificantToken, "type", _types.endOfLineCommentType);
    _defineProperty(EndOfLineCommentSignificantToken, "regularExpression", /^(?:\r\n|\r|\n)/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/singleLine/cStyle.js
  var require_cStyle = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _singleLine = _interopRequireDefault2(require_singleLine());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CStyleSingleLineCommentToken = /* @__PURE__ */ function(SingleLineCommentToken) {
      _inherits(CStyleSingleLineCommentToken2, SingleLineCommentToken);
      var _super = _createSuper(CStyleSingleLineCommentToken2);
      function CStyleSingleLineCommentToken2() {
        _classCallCheck(this, CStyleSingleLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(CStyleSingleLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(CStyleSingleLineCommentToken2.prototype), "clone", this).call(this, CStyleSingleLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _singleLine.default.match(CStyleSingleLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _singleLine.default.fromContent(CStyleSingleLineCommentToken2, content);
          }
        }
      ]);
      return CStyleSingleLineCommentToken2;
    }(_singleLine.default);
    exports.default = CStyleSingleLineCommentToken;
    _defineProperty(CStyleSingleLineCommentToken, "regularExpression", /^\/\/[^\r\n]*/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/endOf/cStyle.js
  var require_cStyle2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _endOf = _interopRequireDefault2(require_endOf());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CStyleEndOfMultiLineCommentToken = /* @__PURE__ */ function(EndOfMultiLineCommentToken) {
      _inherits(CStyleEndOfMultiLineCommentToken2, EndOfMultiLineCommentToken);
      var _super = _createSuper(CStyleEndOfMultiLineCommentToken2);
      function CStyleEndOfMultiLineCommentToken2() {
        _classCallCheck(this, CStyleEndOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(CStyleEndOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(CStyleEndOfMultiLineCommentToken2.prototype), "clone", this).call(this, CStyleEndOfMultiLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _endOf.default.match(CStyleEndOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _endOf.default.fromContent(CStyleEndOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return CStyleEndOfMultiLineCommentToken2;
    }(_endOf.default);
    exports.default = CStyleEndOfMultiLineCommentToken;
    _defineProperty(CStyleEndOfMultiLineCommentToken, "regularExpression", /^\*\//);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/startOf/cStyle.js
  var require_cStyle3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _startOf = _interopRequireDefault2(require_startOf());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CStyleStartOfMultiLineCommentToken = /* @__PURE__ */ function(StartOfMultiLineCommentToken) {
      _inherits(CStyleStartOfMultiLineCommentToken2, StartOfMultiLineCommentToken);
      var _super = _createSuper(CStyleStartOfMultiLineCommentToken2);
      function CStyleStartOfMultiLineCommentToken2() {
        _classCallCheck(this, CStyleStartOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(CStyleStartOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(CStyleStartOfMultiLineCommentToken2.prototype), "clone", this).call(this, CStyleStartOfMultiLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _startOf.default.match(CStyleStartOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _startOf.default.fromContent(CStyleStartOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return CStyleStartOfMultiLineCommentToken2;
    }(_startOf.default);
    exports.default = CStyleStartOfMultiLineCommentToken;
    _defineProperty(CStyleStartOfMultiLineCommentToken, "regularExpression", /^\/\*/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/middleOf/cStyle.js
  var require_cStyle4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _middleOf = _interopRequireDefault2(require_middleOf());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CStyleMiddleOfMultiLineCommentToken = /* @__PURE__ */ function(MiddleOfMultiLineCommentToken) {
      _inherits(CStyleMiddleOfMultiLineCommentToken2, MiddleOfMultiLineCommentToken);
      var _super = _createSuper(CStyleMiddleOfMultiLineCommentToken2);
      function CStyleMiddleOfMultiLineCommentToken2() {
        _classCallCheck(this, CStyleMiddleOfMultiLineCommentToken2);
        return _super.apply(this, arguments);
      }
      _createClass(CStyleMiddleOfMultiLineCommentToken2, [
        {
          key: "clone",
          value: function clone(startPosition, endPosition) {
            return _get(_getPrototypeOf(CStyleMiddleOfMultiLineCommentToken2.prototype), "clone", this).call(this, CStyleMiddleOfMultiLineCommentToken2, startPosition, endPosition);
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _middleOf.default.match(CStyleMiddleOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _middleOf.default.fromContent(CStyleMiddleOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return CStyleMiddleOfMultiLineCommentToken2;
    }(_middleOf.default);
    exports.default = CStyleMiddleOfMultiLineCommentToken;
    _defineProperty(CStyleMiddleOfMultiLineCommentToken, "regularExpression", /^(?:[^\r\n]+?(?=\*\/)|[^\r\n]+)/);
  });

  // node_modules/occam-lexers/lib/index.js
  var require_lib3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "Rule", {
      enumerable: true,
      get: function() {
        return _rule.default;
      }
    });
    Object.defineProperty(exports, "types", {
      enumerable: true,
      get: function() {
        return _types.default;
      }
    });
    Object.defineProperty(exports, "specialSymbols", {
      enumerable: true,
      get: function() {
        return _specialSymbols.default;
      }
    });
    Object.defineProperty(exports, "BNFLexer", {
      enumerable: true,
      get: function() {
        return _lexer.default;
      }
    });
    Object.defineProperty(exports, "BasicLexer", {
      enumerable: true,
      get: function() {
        return _lexer1.default;
      }
    });
    Object.defineProperty(exports, "CommonLexer", {
      enumerable: true,
      get: function() {
        return _lexer2.default;
      }
    });
    Object.defineProperty(exports, "SignificantToken", {
      enumerable: true,
      get: function() {
        return _significant.default;
      }
    });
    Object.defineProperty(exports, "NonSignificantToken", {
      enumerable: true,
      get: function() {
        return _nonSignificant.default;
      }
    });
    Object.defineProperty(exports, "EndOfLineSignificantToken", {
      enumerable: true,
      get: function() {
        return _endOfLine.default;
      }
    });
    Object.defineProperty(exports, "EndOfLineNonSignificantToken", {
      enumerable: true,
      get: function() {
        return _endOfLine1.default;
      }
    });
    Object.defineProperty(exports, "EndOfLineCommentSignificantToken", {
      enumerable: true,
      get: function() {
        return _endOfLine2.default;
      }
    });
    Object.defineProperty(exports, "EndOfLineCommentNonSignificantToken", {
      enumerable: true,
      get: function() {
        return _endOfLine3.default;
      }
    });
    Object.defineProperty(exports, "WhitespaceToken", {
      enumerable: true,
      get: function() {
        return _whitespace.default;
      }
    });
    Object.defineProperty(exports, "StringLiteralToken", {
      enumerable: true,
      get: function() {
        return _stringLiteral.default;
      }
    });
    Object.defineProperty(exports, "RegularExpressionToken", {
      enumerable: true,
      get: function() {
        return _regularExpression.default;
      }
    });
    Object.defineProperty(exports, "SinglyQuotedStringLiteralToken", {
      enumerable: true,
      get: function() {
        return _singlyQuoted.default;
      }
    });
    Object.defineProperty(exports, "DoublyQuotedStringLiteralToken", {
      enumerable: true,
      get: function() {
        return _doublyQuoted.default;
      }
    });
    Object.defineProperty(exports, "SingleLineCommentToken", {
      enumerable: true,
      get: function() {
        return _singleLine.default;
      }
    });
    Object.defineProperty(exports, "EndOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _endOf.default;
      }
    });
    Object.defineProperty(exports, "StartOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _startOf.default;
      }
    });
    Object.defineProperty(exports, "MiddleOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _middleOf.default;
      }
    });
    Object.defineProperty(exports, "CStyleSingleLineCommentToken", {
      enumerable: true,
      get: function() {
        return _cStyle.default;
      }
    });
    Object.defineProperty(exports, "CStyleEndOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _cStyle1.default;
      }
    });
    Object.defineProperty(exports, "CStyleStartOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _cStyle2.default;
      }
    });
    Object.defineProperty(exports, "CStyleMiddleOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _cStyle3.default;
      }
    });
    Object.defineProperty(exports, "PythonStyleSingleLineCommentToken", {
      enumerable: true,
      get: function() {
        return _pythonStyle.default;
      }
    });
    Object.defineProperty(exports, "PythonStyleEndOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _pythonStyle1.default;
      }
    });
    Object.defineProperty(exports, "PythonStyleStartOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _pythonStyle2.default;
      }
    });
    Object.defineProperty(exports, "PythonStyleMiddleOfMultiLineCommentToken", {
      enumerable: true,
      get: function() {
        return _pythonStyle3.default;
      }
    });
    var _rule = _interopRequireDefault2(require_rule());
    var _types = _interopRequireDefault2(require_types());
    var _specialSymbols = _interopRequireDefault2(require_specialSymbols());
    var _lexer = _interopRequireDefault2(require_lexer2());
    var _lexer1 = _interopRequireDefault2(require_lexer3());
    var _lexer2 = _interopRequireDefault2(require_lexer());
    var _significant = _interopRequireDefault2(require_significant());
    var _nonSignificant = _interopRequireDefault2(require_nonSignificant());
    var _endOfLine = _interopRequireDefault2(require_endOfLine3());
    var _endOfLine1 = _interopRequireDefault2(require_endOfLine());
    var _endOfLine2 = _interopRequireDefault2(require_endOfLine4());
    var _endOfLine3 = _interopRequireDefault2(require_endOfLine2());
    var _whitespace = _interopRequireDefault2(require_whitespace());
    var _stringLiteral = _interopRequireDefault2(require_stringLiteral());
    var _regularExpression = _interopRequireDefault2(require_regularExpression());
    var _singlyQuoted = _interopRequireDefault2(require_singlyQuoted());
    var _doublyQuoted = _interopRequireDefault2(require_doublyQuoted());
    var _singleLine = _interopRequireDefault2(require_singleLine());
    var _endOf = _interopRequireDefault2(require_endOf());
    var _startOf = _interopRequireDefault2(require_startOf());
    var _middleOf = _interopRequireDefault2(require_middleOf());
    var _cStyle = _interopRequireDefault2(require_cStyle());
    var _cStyle1 = _interopRequireDefault2(require_cStyle2());
    var _cStyle2 = _interopRequireDefault2(require_cStyle3());
    var _cStyle3 = _interopRequireDefault2(require_cStyle4());
    var _pythonStyle = _interopRequireDefault2(require_pythonStyle());
    var _pythonStyle1 = _interopRequireDefault2(require_pythonStyle2());
    var _pythonStyle2 = _interopRequireDefault2(require_pythonStyle3());
    var _pythonStyle3 = _interopRequireDefault2(require_pythonStyle4());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/with-style/lib/css/entries.js
  var require_entries3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        colour: "^#(?:[0-9a-fA-F]{6}|[0-9a-fA-F]{3})"
      },
      {
        keyword: "^(?:!important|@media)"
      },
      {
        percentage: "^(?:[0-9]+|[0-9]*\\.[0-9]+)\\%"
      },
      {
        frequency: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:hz|khz)"
      },
      {
        fraction: "^[1-9][0-9]*?fr"
      },
      {
        length: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:px|cm|mm|in|pt|pc)"
      },
      {
        angle: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:deg|rad|grad)"
      },
      {
        time: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:s|ms)"
      },
      {
        rems: "^(?:[0-9]+|[0-9]*\\.[0-9]+)rem"
      },
      {
        ems: "^(?:[0-9]+|[0-9]*\\.[0-9]+)em"
      },
      {
        number: "^[0-9]+|[0-9]*\\.[0-9]+"
      },
      {
        special: "^;|::|:|\\.|,|/|\\|=|~=|=|>|\\{|\\}|\\(|\\)|\\[|\\]"
      },
      {
        operator: "^^(?:and|not|only)$"
      },
      {
        identifier: "^[_a-zA-Z0-9-]+"
      },
      {
        "unary-operator": "^\\+|\\-"
      },
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/with-style/lib/css/lexer.js
  var require_lexer4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _entries = _interopRequireDefault2(require_entries3());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CSSLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(CSSLexer2, CommonLexer);
      var _super = _createSuper(CSSLexer2);
      function CSSLexer2() {
        _classCallCheck(this, CSSLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(CSSLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamLexers.CommonLexer.fromNothing(CSSLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamLexers.CommonLexer.fromRules(CSSLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamLexers.CommonLexer.fromEntries(CSSLexer2, entries);
          }
        }
      ]);
      return CSSLexer2;
    }(_occamLexers.CommonLexer);
    _defineProperty(CSSLexer, "entries", _entries.default);
    _defineProperty(CSSLexer, "EndOfLineToken", _occamLexers.EndOfLineNonSignificantToken);
    _defineProperty(CSSLexer, "WhitespaceToken", _occamLexers.WhitespaceToken);
    _defineProperty(CSSLexer, "EndOfLineCommentToken", null);
    _defineProperty(CSSLexer, "RegularExpressionToken", null);
    _defineProperty(CSSLexer, "SingleLineCommentToken", null);
    _defineProperty(CSSLexer, "EndOfMultiLineCommentToken", null);
    _defineProperty(CSSLexer, "StartOfMultiLineCommentToken", null);
    _defineProperty(CSSLexer, "MiddleOfMultiLineCommentToken", null);
    _defineProperty(CSSLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(CSSLexer, "DoublyQuotedStringLiteralToken", _occamLexers.DoublyQuotedStringLiteralToken);
    exports.default = CSSLexer;
  });

  // node_modules/occam-parsers/lib/bnf/bnf.js
  var require_bnf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = '\n\n      document              ::=  ( rule | error )+ ;\n\n      rule                  ::=  name "::=" definitions ";" ;\n\n      name                  ::=  [name] ;\n\n      definitions           ::=  definition ( "|" definition )* ;\n\n      definition            ::=  part+ ;\n\n      part                  ::=  nonTerminalPart quantifier*\n\n                              |  terminalPart quantifier*\n                              \n                              |  noWhitespacePart\n\n                              ;\n\n      nonTerminalPart       ::=  choiceOfParts\n\n                              |  sequenceOfParts\n\n                              |  ruleName lookAheadModifier?\n\n                              ;\n\n      terminalPart          ::=  significantTokenType\n \n                              |  regularExpression\n\n                              |  terminalSymbol\n \n                              |  endOfLine\n \n                              |  wildcard\n \n                              ;\n                              \n      noWhitespacePart      ::=  "<NO_WHITESPACE>" ;                              \n\n      choiceOfParts         ::=  "(" part ( "|" part )+ ")" ;\n\n      sequenceOfParts       ::=  "(" part part+ ")" ;\n\n      ruleName              ::=  [name] ;\n\n      significantTokenType  ::=  [type] ;\n\n      regularExpression     ::=  [regular-expression] ;\n\n      terminalSymbol        ::=  [string-literal] ;\n\n      endOfLine             ::=  "<END_OF_LINE>" ;\n\n      wildcard              ::=  "." ;\n\n      quantifier            ::=  optionalQuantifier\n\n                              |  oneOrMoreQuantifier\n \n                              |  zeroOrMoreQuantifier\n \n                              ;\n\n      lookAheadModifier     ::=  <NO_WHITESPACE>"!" ;\n\n      optionalQuantifier    ::=  <NO_WHITESPACE>"?" ;\n\n      oneOrMoreQuantifier   ::=  <NO_WHITESPACE>"+" ;\n\n      zeroOrMoreQuantifier  ::=  <NO_WHITESPACE>"*" ;\n\n      error                 ::=  . ;\n\n';
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-parsers/lib/constants.js
  var require_constants4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.EMPTY_STRING = void 0;
    var EMPTY_STRING = "";
    exports.EMPTY_STRING = EMPTY_STRING;
  });

  // node_modules/occam-parsers/lib/utilities/string.js
  var require_string = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.paddingFromPaddingLength = paddingFromPaddingLength;
    var _necessary = require_browser();
    var _constants = require_constants4();
    var SPACE_CHARACTER = _necessary.characters.SPACE_CHARACTER;
    function paddingFromPaddingLength(paddingLength) {
      var padding = _constants.EMPTY_STRING;
      for (var position = 0; position < paddingLength; position++) {
        padding += SPACE_CHARACTER;
      }
      return padding;
    }
  });

  // node_modules/occam-parsers/lib/rule.js
  var require_rule2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _constants = require_constants4();
    var _string = require_string();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Rule = /* @__PURE__ */ function() {
      function Rule2(name, definitions, NonTerminalNode) {
        _classCallCheck(this, Rule2);
        this.name = name;
        this.definitions = definitions;
        this.NonTerminalNode = NonTerminalNode;
      }
      _createClass(Rule2, [
        {
          key: "getName",
          value: function getName() {
            return this.name;
          }
        },
        {
          key: "getDefinitions",
          value: function getDefinitions() {
            return this.definitions;
          }
        },
        {
          key: "getNonTerminalNode",
          value: function getNonTerminalNode() {
            return this.NonTerminalNode;
          }
        },
        {
          key: "setName",
          value: function setName(name) {
            this.name = name;
          }
        },
        {
          key: "setDefinitions",
          value: function setDefinitions(definitions) {
            this.definitions = definitions;
          }
        },
        {
          key: "setNonTerminalNode",
          value: function setNonTerminalNode(NonTerminalNode) {
            this.NonTerminalNode = NonTerminalNode;
          }
        },
        {
          key: "addDefinition",
          value: function addDefinition(definition, position) {
            var definitionsIncludesDefinition = this.definitions.includes(definition);
            if (!definitionsIncludesDefinition) {
              if (position === void 0) {
                var definitionsLength = this.definitions.length;
                position = definitionsLength;
              }
              var start = position, deleteCount = 0;
              this.definitions.splice(start, deleteCount, definition);
            }
          }
        },
        {
          key: "removeDefinition",
          value: function removeDefinition(definition) {
            var definitionsIncludesDefinition = this.definitions.includes(definition);
            if (definitionsIncludesDefinition) {
              var definitionIndex = this.definitions.indexOf(definition), start = definitionIndex, deleteCount = 1;
              this.definitions.splice(start, deleteCount);
            }
          }
        },
        {
          key: "replaceDefinition",
          value: function replaceDefinition(oldDefinition, newDefinition) {
            var oldDefinitionIndex = this.definitions.indexOf(oldDefinition);
            if (oldDefinitionIndex > -1) {
              var start = oldDefinitionIndex, deleteCount = 1;
              this.definitions.splice(start, deleteCount, newDefinition);
            }
          }
        },
        {
          key: "parse",
          value: function parse(state, callback) {
            var _this = this;
            var ruleNode = null;
            state.increaseDepth();
            var tooDeep = state.isTooDeep();
            if (tooDeep) {
              throw new Error('The parse tree is too deep at rule "'.concat(this.name, '".'));
            }
            var parsed, definitionNodes;
            this.definitions.some(function(definition) {
              definitionNodes = [];
              parsed = _this.parseDefinition(definition, definitionNodes, state, callback);
              if (parsed) {
                return true;
              }
            });
            if (parsed) {
              var ruleName = this.name, childNodes = definitionNodes, nonTerminalNode = this.NonTerminalNode.fromRuleNameAndChildNodes(ruleName, childNodes);
              ruleNode = nonTerminalNode;
            }
            state.decreaseDepth();
            return ruleNode;
          }
        },
        {
          key: "parseDefinition",
          value: function parseDefinition(definition, nodes, state, callback) {
            var parsed;
            var savedIndex = state.getSavedIndex();
            parsed = definition.parse(nodes, state, callback);
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString(maximumRuleNameLength) {
            var multiLine = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
            var definitionsLength = this.definitions.length;
            multiLine = multiLine && definitionsLength > 1;
            var maximumPadding = (0, _string).paddingFromPaddingLength(maximumRuleNameLength), definitionsString1 = this.definitions.reduce(function(definitionsString, definition) {
              var definitionString = definition.asString();
              if (definitionsString === _constants.EMPTY_STRING) {
                definitionsString = definitionString;
              } else {
                definitionsString = multiLine ? "".concat(definitionsString, "\n\n").concat(maximumPadding, "   | ").concat(definitionString) : "".concat(definitionsString, " | ").concat(definitionString);
              }
              return definitionsString;
            }, _constants.EMPTY_STRING), ruleName = this.name, ruleNameLength = ruleName.length, paddingLength = maximumRuleNameLength - ruleNameLength, padding = (0, _string).paddingFromPaddingLength(paddingLength);
            var semicolonString = multiLine ? "\n\n".concat(maximumPadding, "   ;") : " ;", string = "\n\n".concat(this.name).concat(padding, " ::= ").concat(definitionsString1).concat(semicolonString);
            return string;
          }
        }
      ], [
        {
          key: "fromRule",
          value: function fromRule(Class, rule) {
            if (rule === void 0) {
              rule = Class;
              Class = Rule2;
            }
            var name = rule.getName(), definitions = rule.getDefinitions(), NonTerminalNode = rule.getNonTerminalNode();
            rule = new Class(name, definitions, NonTerminalNode);
            return rule;
          }
        }
      ]);
      return Rule2;
    }();
    exports.default = Rule;
  });

  // node_modules/occam-parsers/lib/defaults.js
  var require_defaults = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DEFAULT_MAXIMUM_DEPTH = void 0;
    var DEFAULT_MAXIMUM_DEPTH = 99;
    exports.DEFAULT_MAXIMUM_DEPTH = DEFAULT_MAXIMUM_DEPTH;
  });

  // node_modules/occam-parsers/lib/state.js
  var require_state2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _defaults = require_defaults();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var State = /* @__PURE__ */ function() {
      function State2(ruleMap, tokens, index, depth, maximumDepth) {
        _classCallCheck(this, State2);
        this.ruleMap = ruleMap;
        this.tokens = tokens;
        this.index = index;
        this.depth = depth;
        this.maximumDepth = maximumDepth;
      }
      _createClass(State2, [
        {
          key: "getRuleMap",
          value: function getRuleMap() {
            return this.ruleMap;
          }
        },
        {
          key: "getTokens",
          value: function getTokens() {
            return this.tokens;
          }
        },
        {
          key: "getIndex",
          value: function getIndex() {
            return this.index;
          }
        },
        {
          key: "getDepth",
          value: function getDepth() {
            return this.depth;
          }
        },
        {
          key: "getMaximumDepth",
          value: function getMaximumDepth() {
            return this.maximumDepth;
          }
        },
        {
          key: "getSavedIndex",
          value: function getSavedIndex() {
            var savedIndex = this.index;
            return savedIndex;
          }
        },
        {
          key: "getNextToken",
          value: function getNextToken() {
            var nextToken = null;
            var tokensLength = this.tokens.length;
            if (this.index < tokensLength) {
              nextToken = this.tokens[this.index++];
            }
            return nextToken;
          }
        },
        {
          key: "getNextSignificantToken",
          value: function getNextSignificantToken() {
            var nextSignificantToken = null;
            var tokensLength = this.tokens.length;
            while (this.index < tokensLength) {
              var token = this.tokens[this.index++], tokenSignificant = token.isSignificant();
              if (tokenSignificant) {
                var significantToken = token;
                nextSignificantToken = significantToken;
                break;
              }
            }
            return nextSignificantToken;
          }
        },
        {
          key: "isNextTokenWhitespaceToken",
          value: function isNextTokenWhitespaceToken() {
            var nextTokenWhitespaceToken = false;
            var tokensLength = this.tokens.length;
            if (this.index < tokensLength) {
              var nextToken = this.tokens[this.index];
              nextTokenWhitespaceToken = nextToken.isWhitespaceToken();
            }
            return nextTokenWhitespaceToken;
          }
        },
        {
          key: "isTooDeep",
          value: function isTooDeep() {
            var tooDeep = this.depth > this.maximumDepth;
            return tooDeep;
          }
        },
        {
          key: "backtrack",
          value: function backtrack(savedIndex) {
            this.index = savedIndex;
          }
        },
        {
          key: "setIndex",
          value: function setIndex(index) {
            this.index = index;
          }
        },
        {
          key: "increaseDepth",
          value: function increaseDepth() {
            this.depth++;
          }
        },
        {
          key: "decreaseDepth",
          value: function decreaseDepth() {
            this.depth--;
          }
        }
      ], [
        {
          key: "fromTokensAndRuleMap",
          value: function fromTokensAndRuleMap(tokens, ruleMap) {
            var index = 0, depth = 0, maximumDepth = _defaults.DEFAULT_MAXIMUM_DEPTH, state = new State2(ruleMap, tokens, index, depth, maximumDepth);
            return state;
          }
        }
      ]);
      return State2;
    }();
    exports.default = State;
  });

  // node_modules/occam-parsers/lib/utilities/array.js
  var require_array3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.even = even;
    exports.allButFirst = allButFirst;
    exports.allButFirstAndLast = allButFirstAndLast;
    exports.backwardsSome = exports.forwardsSome = exports.filter = exports.push = exports.last = exports.third = exports.second = exports.first = void 0;
    var _necessary = require_browser();
    var first = _necessary.arrayUtilities.first;
    var second = _necessary.arrayUtilities.second;
    var third = _necessary.arrayUtilities.third;
    var last = _necessary.arrayUtilities.last;
    var push = _necessary.arrayUtilities.push;
    var filter = _necessary.arrayUtilities.filter;
    var forwardsSome = _necessary.arrayUtilities.forwardsSome;
    var backwardsSome = _necessary.arrayUtilities.backwardsSome;
    exports.first = first;
    exports.second = second;
    exports.third = third;
    exports.last = last;
    exports.push = push;
    exports.filter = filter;
    exports.forwardsSome = forwardsSome;
    exports.backwardsSome = backwardsSome;
    function even(array) {
      return array.filter(function(entry, index) {
        return isEven(index);
      });
    }
    function allButFirst(array) {
      array = array.slice();
      array.shift();
      return array;
    }
    function allButFirstAndLast(array) {
      array = array.slice();
      array.shift();
      array.pop();
      return array;
    }
    function isEven(index) {
      var even1 = Math.floor(index / 2) === index / 2;
      return even1;
    }
  });

  // node_modules/occam-parsers/lib/parseTree.js
  var require_parseTree = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _array = require_array3();
    var _constants = require_constants4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var NEW_LINE_CHARACTER = _necessary.characters.NEW_LINE_CHARACTER;
    var SPACE_CHARACTER = _necessary.characters.SPACE_CHARACTER;
    var ParseTree = /* @__PURE__ */ function() {
      function ParseTree2(lines) {
        _classCallCheck(this, ParseTree2);
        this.lines = lines;
      }
      _createClass(ParseTree2, [
        {
          key: "clone",
          value: function clone() {
            var lines = this.lines.slice(), parseTree = new ParseTree2(lines);
            return parseTree;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            var width;
            var linesLength = this.lines.length;
            if (linesLength === 0) {
              width = 0;
            } else {
              var lastLine = (0, _array).last(this.lines), lastLineLength = lastLine.length;
              width = lastLineLength;
            }
            return width;
          }
        },
        {
          key: "getDepth",
          value: function getDepth() {
            var linesLength = this.lines.length, depth = linesLength;
            return depth;
          }
        },
        {
          key: "forEachLine",
          value: function forEachLine(callback) {
            this.lines.forEach(callback);
          }
        },
        {
          key: "appendToTop",
          value: function appendToTop(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line) {
              _this.lines.unshift(line);
            });
          }
        },
        {
          key: "appendToLeft",
          value: function appendToLeft(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line, index) {
              _this.lines[index] = line + _this.lines[index];
            });
          }
        },
        {
          key: "appendToRight",
          value: function appendToRight(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line, index) {
              _this.lines[index] = _this.lines[index] + line;
            });
          }
        },
        {
          key: "appendToBottom",
          value: function appendToBottom(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line) {
              _this.lines.push(line);
            });
          }
        },
        {
          key: "addTopMargin",
          value: function addTopMargin(topMarginDepth) {
            var width = this.getWidth(), topMarginWidth = width, topMarginString = marginStringFromMarginWidth(topMarginWidth);
            for (var index = 0; index < topMarginDepth; index++) {
              this.lines.unshift(topMarginString);
            }
          }
        },
        {
          key: "addLeftMargin",
          value: function addLeftMargin(leftMarginWidth) {
            var leftMarginString = marginStringFromMarginWidth(leftMarginWidth), linesLength = this.lines.length;
            for (var index = 0; index < linesLength; index++) {
              this.lines[index] = leftMarginString + this.lines[index];
            }
          }
        },
        {
          key: "addRightMargin",
          value: function addRightMargin(rightMarginWidth) {
            var rightMarginString = marginStringFromMarginWidth(rightMarginWidth), linesLength = this.lines.length;
            for (var index = 0; index < linesLength; index++) {
              this.lines[index] = this.lines[index] + rightMarginString;
            }
          }
        },
        {
          key: "addBottomMargin",
          value: function addBottomMargin(bottomMarginDepth) {
            var width = this.getWidth(), bottomMarginWidth = width, bottomMarginString = marginStringFromMarginWidth(bottomMarginWidth);
            for (var index = 0; index < bottomMarginDepth; index++) {
              this.lines.push(bottomMarginString);
            }
          }
        },
        {
          key: "popLine",
          value: function popLine() {
            return this.lines.pop();
          }
        },
        {
          key: "shiftLine",
          value: function shiftLine() {
            return this.lines.shift();
          }
        },
        {
          key: "pushLine",
          value: function pushLine(line) {
            this.lines.push(line);
          }
        },
        {
          key: "unshiftLine",
          value: function unshiftLine(line) {
            this.lines.unshift(line);
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string1 = this.lines.reduce(function(string, line) {
              string += line + NEW_LINE_CHARACTER;
              return string;
            }, _constants.EMPTY_STRING);
            return string1;
          }
        }
      ]);
      return ParseTree2;
    }();
    exports.default = ParseTree;
    function marginStringFromMarginWidth(marginWidth, spaceCharacter) {
      spaceCharacter = spaceCharacter || SPACE_CHARACTER;
      var marginString = _constants.EMPTY_STRING;
      for (var index = 0; index < marginWidth; index++) {
        marginString += spaceCharacter;
      }
      return marginString;
    }
  });

  // node_modules/occam-parsers/lib/parseTree/verticalBranch.js
  var require_verticalBranch = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _parseTree = _interopRequireDefault2(require_parseTree());
    var _constants = require_constants4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var BAR_CHARACTER = _necessary.characters.BAR_CHARACTER;
    var VerticalBranchParseTree = /* @__PURE__ */ function(ParseTree) {
      _inherits(VerticalBranchParseTree2, ParseTree);
      var _super = _createSuper(VerticalBranchParseTree2);
      function VerticalBranchParseTree2(lines, verticalBranchPosition) {
        _classCallCheck(this, VerticalBranchParseTree2);
        var _this;
        _this = _super.call(this, lines);
        _this.verticalBranchPosition = verticalBranchPosition;
        return _this;
      }
      _createClass(VerticalBranchParseTree2, [
        {
          key: "getVerticalBranchPosition",
          value: function getVerticalBranchPosition() {
            return this.verticalBranchPosition;
          }
        },
        {
          key: "addLeftMargin",
          value: function addLeftMargin(leftMarginWidth) {
            _get(_getPrototypeOf(VerticalBranchParseTree2.prototype), "addLeftMargin", this).call(this, leftMarginWidth);
            this.verticalBranchPosition += leftMarginWidth;
          }
        }
      ], [
        {
          key: "fromWidth",
          value: function fromWidth(width) {
            var string = BAR_CHARACTER, verticalBranchPosition = 0, verticalBranchParseTree = VerticalBranchParseTree2.fromStringAndVerticalBranchPosition(VerticalBranchParseTree2, string, verticalBranchPosition), leftMarginWidth = Math.floor(width / 2), rightMarginWidth = width - leftMarginWidth - 1;
            verticalBranchParseTree.addLeftMargin(leftMarginWidth);
            verticalBranchParseTree.addRightMargin(rightMarginWidth);
            return verticalBranchParseTree;
          }
        },
        {
          key: "fromDepthAndVerticalBranchPosition",
          value: function fromDepthAndVerticalBranchPosition(Class, depth, verticalBranchPosition) {
            var lines = linesFromDepth(depth), args = [
              null,
              lines,
              verticalBranchPosition
            ], verticalBranchParseTree = new (Function.prototype.bind.apply(Class, args))();
            return verticalBranchParseTree;
          }
        },
        {
          key: "fromStringAndVerticalBranchPosition",
          value: function fromStringAndVerticalBranchPosition(Class, string, verticalBranchPosition) {
            if (verticalBranchPosition === void 0) {
              verticalBranchPosition = string;
              string = Class;
              Class = _parseTree.default;
            }
            var line = string, lines = [
              line
            ], args = [
              null,
              lines,
              verticalBranchPosition
            ], verticalBranchParseTree = new (Function.prototype.bind.apply(Class, args))();
            return verticalBranchParseTree;
          }
        }
      ]);
      return VerticalBranchParseTree2;
    }(_parseTree.default);
    exports.default = VerticalBranchParseTree;
    function linesFromDepth(depth) {
      var lines = [];
      var index = 0;
      while (index < depth) {
        lines[index++] = _constants.EMPTY_STRING;
      }
      return lines;
    }
  });

  // node_modules/occam-parsers/lib/parseTree/ruleName.js
  var require_ruleName = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _verticalBranch = _interopRequireDefault2(require_verticalBranch());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleNameParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(RuleNameParseTree2, VerticalBranchParseTree);
      var _super = _createSuper(RuleNameParseTree2);
      function RuleNameParseTree2() {
        _classCallCheck(this, RuleNameParseTree2);
        return _super.apply(this, arguments);
      }
      _createClass(RuleNameParseTree2, null, [
        {
          key: "fromNonTerminalNodeAndTokens",
          value: function fromNonTerminalNodeAndTokens(nonTerminalNode, tokens) {
            var ruleName = nonTerminalNode.getRuleName(), tokenIndexes = tokenIndexesFromNonTerminalNodeAndTokens(nonTerminalNode, tokens), string = "".concat(ruleName).concat(tokenIndexes), stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), ruleNameParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(RuleNameParseTree2, string, verticalBranchPosition);
            ruleNameParseTree.appendToTop(verticalBranchParseTree);
            return ruleNameParseTree;
          }
        }
      ]);
      return RuleNameParseTree2;
    }(_verticalBranch.default);
    exports.default = RuleNameParseTree;
    function tokenIndexesFromNonTerminalNodeAndTokens(nonTerminalNode, tokens) {
      var firstSignificantToken = nonTerminalNode.getFirstSignificantToken(), lastSignificantToken = nonTerminalNode.getLastSignificantToken(), firstSignificantTokenIndex = tokens.indexOf(firstSignificantToken), lastSignificantTokenIndex = tokens.indexOf(lastSignificantToken), tokenIndexes = firstSignificantTokenIndex !== lastSignificantTokenIndex ? "(".concat(firstSignificantTokenIndex, "-").concat(lastSignificantTokenIndex, ")") : "(".concat(firstSignificantTokenIndex, ")");
      return tokenIndexes;
    }
  });

  // node_modules/occam-parsers/lib/parseTree/horizontalBranch.js
  var require_horizontalBranch = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _parseTree = _interopRequireDefault2(require_parseTree());
    var _constants = require_constants4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DASH_CHARACTER = _necessary.characters.DASH_CHARACTER;
    var HorizontalBranchParseTree = /* @__PURE__ */ function(ParseTree) {
      _inherits(HorizontalBranchParseTree2, ParseTree);
      var _super = _createSuper(HorizontalBranchParseTree2);
      function HorizontalBranchParseTree2() {
        _classCallCheck(this, HorizontalBranchParseTree2);
        return _super.apply(this, arguments);
      }
      _createClass(HorizontalBranchParseTree2, null, [
        {
          key: "fromWidth",
          value: function fromWidth(width) {
            var string = stringFromCharactersWidth(width, DASH_CHARACTER), line = string, lines = [
              line
            ], horizontalBranchParseTree = new HorizontalBranchParseTree2(lines);
            return horizontalBranchParseTree;
          }
        }
      ]);
      return HorizontalBranchParseTree2;
    }(_parseTree.default);
    exports.default = HorizontalBranchParseTree;
    function stringFromCharactersWidth(charactersWidth, character) {
      var string = _constants.EMPTY_STRING;
      for (var index = 0; index < charactersWidth; index++) {
        string += character;
      }
      return string;
    }
  });

  // node_modules/occam-parsers/lib/parseTree/childNodes.js
  var require_childNodes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _verticalBranch = _interopRequireDefault2(require_verticalBranch());
    var _horizontalBranch = _interopRequireDefault2(require_horizontalBranch());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ChildNodesParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(ChildNodesParseTree2, VerticalBranchParseTree);
      var _super = _createSuper(ChildNodesParseTree2);
      function ChildNodesParseTree2() {
        _classCallCheck(this, ChildNodesParseTree2);
        return _super.apply(this, arguments);
      }
      _createClass(ChildNodesParseTree2, null, [
        {
          key: "fromChildNodesAndTokens",
          value: function fromChildNodesAndTokens(childNodes, tokens) {
            var childNodesParseTree;
            var childNodeParseTrees1 = childNodes.reduce(function(childNodeParseTrees, childNode) {
              var childNodeParseTree = childNode.asParseTree(tokens);
              childNodeParseTrees.push(childNodeParseTree);
              return childNodeParseTrees;
            }, []), childNodeParseTreesLength = childNodeParseTrees1.length;
            if (childNodeParseTreesLength === 1) {
              var firstChildNodeParseTree = (0, _array).first(childNodeParseTrees1);
              childNodesParseTree = firstChildNodeParseTree;
            } else {
              var firstVerticalBranchPosition = void 0, lastVerticalBranchPosition = 0, childNodeParseTreesWidth = 0, childNodeParseTreesDepth = 0;
              childNodeParseTrees1.forEach(function(childNodeParseTree, index) {
                var childNodeParseTreeWidth = childNodeParseTree.getWidth(), childNodeParseTreeDepth = childNodeParseTree.getDepth();
                if (index === 0) {
                  var firstChildNodeParseTree2 = childNodeParseTree, firstChildNodeParseTreeVerticalBranchPosition = firstChildNodeParseTree2.getVerticalBranchPosition();
                  firstVerticalBranchPosition = firstChildNodeParseTreeVerticalBranchPosition;
                }
                if (index === childNodeParseTreesLength - 1) {
                  var lastChildNodeParseTree = childNodeParseTree, lastChildNodeParseTreeVerticalBranchPosition = lastChildNodeParseTree.getVerticalBranchPosition();
                  lastVerticalBranchPosition += lastChildNodeParseTreeVerticalBranchPosition;
                }
                if (index < childNodeParseTreesLength - 1) {
                  lastVerticalBranchPosition += childNodeParseTreeWidth;
                  lastVerticalBranchPosition += 1;
                  childNodeParseTreesWidth += 1;
                }
                childNodeParseTreesWidth += childNodeParseTreeWidth;
                childNodeParseTreesDepth = Math.max(childNodeParseTreesDepth, childNodeParseTreeDepth);
              });
              var width = lastVerticalBranchPosition - firstVerticalBranchPosition + 1, verticalBranchParseTree = _verticalBranch.default.fromWidth(width), horizontalBranchParseTree = _horizontalBranch.default.fromWidth(width), leftMarginWidth = firstVerticalBranchPosition, rightMarginWidth1 = childNodeParseTreesWidth - width - leftMarginWidth;
              verticalBranchParseTree.addLeftMargin(leftMarginWidth);
              verticalBranchParseTree.addRightMargin(rightMarginWidth1);
              horizontalBranchParseTree.addLeftMargin(leftMarginWidth);
              horizontalBranchParseTree.addRightMargin(rightMarginWidth1);
              var verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition();
              childNodesParseTree = _verticalBranch.default.fromDepthAndVerticalBranchPosition(ChildNodesParseTree2, childNodeParseTreesDepth, verticalBranchPosition);
              childNodeParseTrees1.forEach(function(childNodeParseTree, index) {
                var childNodeParseTreeDepth = childNodeParseTree.getDepth(), clonedChildNodeParseTree = childNodeParseTree.clone();
                if (index < childNodeParseTreesLength - 1) {
                  var rightMarginWidth = 1;
                  clonedChildNodeParseTree.addRightMargin(rightMarginWidth);
                }
                if (childNodeParseTreeDepth < childNodeParseTreesDepth) {
                  var bottomMarginDepth = childNodeParseTreesDepth - childNodeParseTreeDepth;
                  clonedChildNodeParseTree.addBottomMargin(bottomMarginDepth);
                }
                childNodesParseTree.appendToRight(clonedChildNodeParseTree);
              });
              childNodesParseTree.appendToTop(horizontalBranchParseTree);
              childNodesParseTree.appendToTop(verticalBranchParseTree);
            }
            return childNodesParseTree;
          }
        }
      ]);
      return ChildNodesParseTree2;
    }(_verticalBranch.default);
    exports.default = ChildNodesParseTree;
  });

  // node_modules/occam-parsers/lib/parseTree/nonTerminalNode.js
  var require_nonTerminalNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _ruleName = _interopRequireDefault2(require_ruleName());
    var _childNodes = _interopRequireDefault2(require_childNodes());
    var _verticalBranch = _interopRequireDefault2(require_verticalBranch());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NonTerminalNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(NonTerminalNodeParseTree2, VerticalBranchParseTree);
      var _super = _createSuper(NonTerminalNodeParseTree2);
      function NonTerminalNodeParseTree2() {
        _classCallCheck(this, NonTerminalNodeParseTree2);
        return _super.apply(this, arguments);
      }
      _createClass(NonTerminalNodeParseTree2, null, [
        {
          key: "fromNonTerminalNodeAndTokens",
          value: function fromNonTerminalNodeAndTokens(nonTerminalNode, tokens) {
            var childNodes = nonTerminalNode.getChildNodes(), ruleNameParseTree = _ruleName.default.fromNonTerminalNodeAndTokens(nonTerminalNode, tokens), childNodesParseTree = _childNodes.default.fromChildNodesAndTokens(childNodes, tokens);
            var ruleNameParseTreeVerticalBranchPosition = ruleNameParseTree.getVerticalBranchPosition();
            var childNodesParseTreeVerticalBranchPosition = childNodesParseTree.getVerticalBranchPosition(), verticalBranchPositionsDifference = ruleNameParseTreeVerticalBranchPosition - childNodesParseTreeVerticalBranchPosition;
            var leftMarginWidth = void 0;
            if (false) {
            } else if (verticalBranchPositionsDifference < 0) {
              leftMarginWidth = -verticalBranchPositionsDifference;
              ruleNameParseTree.addLeftMargin(leftMarginWidth);
            } else if (verticalBranchPositionsDifference > 0) {
              leftMarginWidth = +verticalBranchPositionsDifference;
              childNodesParseTree.addLeftMargin(leftMarginWidth);
            }
            var ruleNameParseTreeWidth = ruleNameParseTree.getWidth(), childNodesParseTreeWidth = childNodesParseTree.getWidth(), widthsDifference = ruleNameParseTreeWidth - childNodesParseTreeWidth;
            var rightMarginWidth = void 0;
            if (false) {
            } else if (widthsDifference < 0) {
              rightMarginWidth = -widthsDifference;
              ruleNameParseTree.addRightMargin(rightMarginWidth);
            } else if (widthsDifference > 0) {
              rightMarginWidth = +widthsDifference;
              childNodesParseTree.addRightMargin(rightMarginWidth);
            }
            ruleNameParseTreeVerticalBranchPosition = ruleNameParseTree.getVerticalBranchPosition();
            var ruleNameParseTreeDepth = ruleNameParseTree.getDepth(), nonTerminalNodeParseTreeDepth = ruleNameParseTreeDepth, verticalBranchPosition = ruleNameParseTreeVerticalBranchPosition, nonTerminalNodeParseTree = _verticalBranch.default.fromDepthAndVerticalBranchPosition(NonTerminalNodeParseTree2, nonTerminalNodeParseTreeDepth, verticalBranchPosition);
            nonTerminalNodeParseTree.appendToRight(ruleNameParseTree);
            nonTerminalNodeParseTree.appendToBottom(childNodesParseTree);
            return nonTerminalNodeParseTree;
          }
        }
      ]);
      return NonTerminalNodeParseTree2;
    }(_verticalBranch.default);
    exports.default = NonTerminalNodeParseTree;
  });

  // node_modules/occam-parsers/lib/node/nonTerminal.js
  var require_nonTerminal = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminalNode = _interopRequireDefault2(require_nonTerminalNode());
    var _array = require_array3();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var NonTerminalNode = /* @__PURE__ */ function() {
      function NonTerminalNode2(ruleName, childNodes) {
        _classCallCheck(this, NonTerminalNode2);
        this.ruleName = ruleName;
        this.childNodes = childNodes;
      }
      _createClass(NonTerminalNode2, [
        {
          key: "isTerminalNode",
          value: function isTerminalNode() {
            var terminalNode = false;
            return terminalNode;
          }
        },
        {
          key: "isNonTerminalNode",
          value: function isNonTerminalNode() {
            var nonTerminalNode = true;
            return nonTerminalNode;
          }
        },
        {
          key: "getRuleName",
          value: function getRuleName() {
            return this.ruleName;
          }
        },
        {
          key: "getChildNodes",
          value: function getChildNodes() {
            return this.childNodes;
          }
        },
        {
          key: "getFirstSignificantToken",
          value: function getFirstSignificantToken() {
            var firstSignificantToken = null;
            (0, _array).forwardsSome(this.childNodes, function(childNode) {
              firstSignificantToken = childNode.getFirstSignificantToken();
              if (firstSignificantToken !== null) {
                return true;
              }
            });
            return firstSignificantToken;
          }
        },
        {
          key: "getLastSignificantToken",
          value: function getLastSignificantToken() {
            var lastSignificantToken = null;
            (0, _array).backwardsSome(this.childNodes, function(childNode) {
              lastSignificantToken = childNode.getLastSignificantToken();
              if (lastSignificantToken !== null) {
                return true;
              }
            });
            return lastSignificantToken;
          }
        },
        {
          key: "setRuleName",
          value: function setRuleName(ruleName) {
            this.ruleName = ruleName;
          }
        },
        {
          key: "setChildNodes",
          value: function setChildNodes(childNodes) {
            this.childNodes = childNodes;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var nonTerminalNode = this, nonTerminalNodeParseTree = _nonTerminalNode.default.fromNonTerminalNodeAndTokens(nonTerminalNode, tokens), parseTree = nonTerminalNodeParseTree;
            return parseTree;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(Class, ruleName, childNodes) {
            if (childNodes === void 0) {
              childNodes = ruleName;
              ruleName = Class;
              Class = NonTerminalNode2;
            }
            var childNodesLength = childNodes.length;
            if (childNodesLength === 0) {
              throw new Error("There are no child nodes at rule '".concat(ruleName, "'."));
            }
            var nonTerminalNode = new Class(ruleName, childNodes);
            return nonTerminalNode;
          }
        }
      ]);
      return NonTerminalNode2;
    }();
    exports.default = NonTerminalNode;
  });

  // node_modules/occam-parsers/lib/node/bnf/name.js
  var require_name2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NameBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(NameBNFNode2, NonTerminalNode);
      var _super = _createSuper(NameBNFNode2);
      function NameBNFNode2() {
        _classCallCheck(this, NameBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(NameBNFNode2, [
        {
          key: "getName",
          value: function getName() {
            var childNodes = this.getChildNodes(), firstChildNode = (0, _array).first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), name = terminalNodeContent;
            return name;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(NameBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return NameBNFNode2;
    }(_nonTerminal.default);
    exports.default = NameBNFNode;
  });

  // node_modules/occam-parsers/lib/utilities/part.js
  var require_part = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isPartRuleNamePartWithLookAhead = isPartRuleNamePartWithLookAhead;
    function isPartRuleNamePartWithLookAhead(part) {
      var partRuleNamePartWithLookAhead = false;
      var partRuleNamePart = isPartRuleNamePart(part);
      if (partRuleNamePart) {
        var ruleNamePart = part, lookAhead = ruleNamePart.isLookAhead();
        if (lookAhead) {
          partRuleNamePartWithLookAhead = true;
        }
      }
      return partRuleNamePartWithLookAhead;
    }
    function isPartRuleNamePart(part) {
      var partRuleNamePart = false;
      var partTerminalPart = part.isTerminalPart(), partNonTerminalPart = !partTerminalPart;
      if (partNonTerminalPart) {
        var nonTerminalPart = part, nonTerminalPartRuleNamePart = nonTerminalPart.isRuleNamePart();
        partRuleNamePart = nonTerminalPartRuleNamePart;
      }
      return partRuleNamePart;
    }
  });

  // node_modules/occam-parsers/lib/utilities/lookAhead.js
  var require_lookAhead = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.parseParts = parseParts;
    var _array = require_array3();
    var _part = require_part();
    function parseParts(parts, nodes, index, state, callback) {
      var parsed;
      var partsLength = parts.length;
      if (index === partsLength) {
        parsed = callback !== null ? callback() : true;
      } else {
        var part = parts[index];
        parsed = parsePartOfParts(part, parts, nodes, index, state, callback);
      }
      return parsed;
    }
    function parsePartOfParts(part, parts, nodes, index, state, callback) {
      var parsed;
      if (callback !== null) {
        var partsNodes = [];
        index++;
        parsed = part.parse(nodes, state, function() {
          return parseParts(parts, partsNodes, index, state, callback);
        });
        if (parsed) {
          (0, _array).push(nodes, partsNodes);
        }
      } else {
        var partRuleNamePartWithLookAhead = (0, _part).isPartRuleNamePartWithLookAhead(part);
        if (partRuleNamePartWithLookAhead) {
          var ruleNamePart = part, partsNodes1 = [];
          index++;
          parsed = ruleNamePart.parse(nodes, state, function() {
            return parseParts(parts, partsNodes1, index, state, callback);
          });
          if (parsed) {
            (0, _array).push(nodes, partsNodes1);
          }
        } else {
          parsed = part.parse(nodes, state, callback);
          if (parsed) {
            index++;
            parsed = parseParts(parts, nodes, index, state, callback);
          }
        }
      }
      return parsed;
    }
  });

  // node_modules/occam-parsers/lib/definition.js
  var require_definition = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _lookAhead = require_lookAhead();
    var _constants = require_constants4();
    var _array = require_array3();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Definition = /* @__PURE__ */ function() {
      function Definition2(parts) {
        _classCallCheck(this, Definition2);
        this.parts = parts;
      }
      _createClass(Definition2, [
        {
          key: "getParts",
          value: function getParts() {
            return this.parts;
          }
        },
        {
          key: "getFirstPart",
          value: function getFirstPart() {
            var firstPart = (0, _array).first(this.parts);
            return firstPart;
          }
        },
        {
          key: "getPartsLength",
          value: function getPartsLength() {
            var partsLength = this.parts.length;
            return partsLength;
          }
        },
        {
          key: "getAllButFirstParts",
          value: function getAllButFirstParts() {
            var allButFirstParts = (0, _array).allButFirst(this.parts);
            return allButFirstParts;
          }
        },
        {
          key: "addPart",
          value: function addPart(part) {
            this.parts.push(part);
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var index = 0;
            parsed = (0, _lookAhead).parseParts(this.parts, nodes, index, state, callback);
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partsString1 = this.parts.reduce(function(partsString, part) {
              var partString = part.asString();
              if (partsString === _constants.EMPTY_STRING) {
                partsString = partString;
              } else {
                partsString = "".concat(partsString, " ").concat(partString);
              }
              return partsString;
            }, _constants.EMPTY_STRING), string = partsString1;
            return string;
          }
        }
      ]);
      return Definition2;
    }();
    exports.default = Definition;
  });

  // node_modules/occam-parsers/lib/part/terminal.js
  var require_terminal = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    var TerminalPart = /* @__PURE__ */ function() {
      function TerminalPart2() {
        _classCallCheck(this, TerminalPart2);
      }
      _createClass(TerminalPart2, [
        {
          key: "isNonTerminalPart",
          value: function isNonTerminalPart() {
            var nonTerminalPart = false;
            return nonTerminalPart;
          }
        },
        {
          key: "isTerminalPart",
          value: function isTerminalPart() {
            var terminalPart = true;
            return terminalPart;
          }
        },
        {
          key: "isNoWhitespacePart",
          value: function isNoWhitespacePart() {
            var noWhitespacePart = false;
            return noWhitespacePart;
          }
        },
        {
          key: "clone",
          value: function clone(Part) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              remainingArguments[_key - 1] = arguments[_key];
            }
            return _construct(Part, _toConsumableArray(remainingArguments));
          }
        }
      ]);
      return TerminalPart2;
    }();
    exports.default = TerminalPart;
  });

  // node_modules/occam-parsers/lib/parseTree/terminalNode.js
  var require_terminalNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _verticalBranch = _interopRequireDefault2(require_verticalBranch());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TerminalNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(TerminalNodeParseTree2, VerticalBranchParseTree);
      var _super = _createSuper(TerminalNodeParseTree2);
      function TerminalNodeParseTree2() {
        _classCallCheck(this, TerminalNodeParseTree2);
        return _super.apply(this, arguments);
      }
      _createClass(TerminalNodeParseTree2, null, [
        {
          key: "fromTerminalNodeAndTokens",
          value: function fromTerminalNodeAndTokens(terminalNode, tokens) {
            var significantToken = terminalNode.getSignificantToken(), content = terminalNode.getContent(), type = significantToken.getType(), tokenIndex = tokens.indexOf(significantToken), string = "".concat(content, "[").concat(type, "](").concat(tokenIndex, ")"), stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(TerminalNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            return terminalNodeParseTree;
          }
        }
      ]);
      return TerminalNodeParseTree2;
    }(_verticalBranch.default);
    exports.default = TerminalNodeParseTree;
  });

  // node_modules/occam-parsers/lib/node/terminal.js
  var require_terminal2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _terminalNode = _interopRequireDefault2(require_terminalNode());
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var TerminalNode = /* @__PURE__ */ function() {
      function TerminalNode2(significantToken) {
        _classCallCheck(this, TerminalNode2);
        this.significantToken = significantToken;
      }
      _createClass(TerminalNode2, [
        {
          key: "getSignificantToken",
          value: function getSignificantToken() {
            return this.significantToken;
          }
        },
        {
          key: "getFirstSignificantToken",
          value: function getFirstSignificantToken() {
            var firstSignificantToken = this.significantToken;
            return firstSignificantToken;
          }
        },
        {
          key: "getLastSignificantToken",
          value: function getLastSignificantToken() {
            var lastSignificantToken = this.significantToken;
            return lastSignificantToken;
          }
        },
        {
          key: "isNoWhitespaceNode",
          value: function isNoWhitespaceNode() {
            var noWhitespaceNode = false;
            return noWhitespaceNode;
          }
        },
        {
          key: "isTerminalNode",
          value: function isTerminalNode() {
            var terminalNode = true;
            return terminalNode;
          }
        },
        {
          key: "isNonTerminalNode",
          value: function isNonTerminalNode() {
            var nonTerminalNode = false;
            return nonTerminalNode;
          }
        },
        {
          key: "getType",
          value: function getType() {
            return this.significantToken.getType();
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            return this.significantToken.getContent();
          }
        },
        {
          key: "setSignificantToken",
          value: function setSignificantToken(significantToken) {
            this.significantToken = significantToken;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var terminalNode = this, terminalNodeParseTree = _terminalNode.default.fromTerminalNodeAndTokens(terminalNode, tokens), parseTree = terminalNodeParseTree;
            return parseTree;
          }
        }
      ], [
        {
          key: "fromSignificantToken",
          value: function fromSignificantToken(Class, significantToken) {
            if (significantToken === void 0) {
              significantToken = Class;
              Class = TerminalNode2;
            }
            var terminalNode = new Class(significantToken);
            return terminalNode;
          }
        }
      ]);
      return TerminalNode2;
    }();
    exports.default = TerminalNode;
  });

  // node_modules/occam-parsers/lib/part/terminal/significantTokenType.js
  var require_significantTokenType = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _terminal = _interopRequireDefault2(require_terminal());
    var _terminal1 = _interopRequireDefault2(require_terminal2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SignificantTokenTypePart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(SignificantTokenTypePart2, TerminalPart);
      var _super = _createSuper(SignificantTokenTypePart2);
      function SignificantTokenTypePart2(significantTokenType) {
        _classCallCheck(this, SignificantTokenTypePart2);
        var _this;
        _this = _super.call(this);
        _this.significantTokenType = significantTokenType;
        return _this;
      }
      _createClass(SignificantTokenTypePart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var significantTokenType = significantToken.getType();
              if (significantTokenType === this.significantTokenType) {
                terminalNode = _terminal1.default.fromSignificantToken(significantToken);
              }
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (callback !== null) {
                parsed = callback();
                if (!parsed) {
                  nodes.pop();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = "[".concat(this.significantTokenType, "]");
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(SignificantTokenTypePart2.prototype), "clone", this).call(this, SignificantTokenTypePart2, this.significantTokenType);
          }
        }
      ]);
      return SignificantTokenTypePart2;
    }(_terminal.default);
    exports.default = SignificantTokenTypePart;
  });

  // node_modules/occam-parsers/lib/definition/name.js
  var require_name3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _definition = _interopRequireDefault2(require_definition());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var nameType = _occamLexers.types.nameType;
    var NameDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(NameDefinition2, Definition);
      var _super = _createSuper(NameDefinition2);
      function NameDefinition2() {
        _classCallCheck(this, NameDefinition2);
        var nameSignificantTokenType = nameType, nameSignificantTokenTypePart = new _significantTokenType.default(nameSignificantTokenType), parts = [
          nameSignificantTokenTypePart
        ];
        return _super.call(this, parts);
      }
      return NameDefinition2;
    }(_definition.default);
    exports.default = NameDefinition;
  });

  // node_modules/occam-parsers/lib/ruleNames.js
  var require_ruleNames = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SignificantTokenTypeRuleName = exports.ZeroOrMoreQuantifierRuleName = exports.OneOrMoreQuantifierRuleName = exports.OptionalQuantifierRuleName = exports.RegularExpressionRuleName = exports.LookAheadModifierRuleName = exports.NoWhitespacePartRuleName = exports.SequenceOfPartsRuleName = exports.NonTerminalPartRuleName = exports.TerminalSymbolRuleName = exports.ChoiceOfPartsRuleName = exports.TerminalPartRuleName = exports.DefinitionsRuleName = exports.QuantifierRuleName = exports.DefinitionRuleName = exports.EndOfLineRuleName = exports.WildcardRuleName = exports.DocumentRuleName = exports.RuleNameRuleName = exports.ErrorRuleName = exports.RuleRuleName = exports.PartRuleName = exports.NameRuleName = void 0;
    var NameRuleName = "name";
    exports.NameRuleName = NameRuleName;
    var PartRuleName = "part";
    exports.PartRuleName = PartRuleName;
    var RuleRuleName = "rule";
    exports.RuleRuleName = RuleRuleName;
    var ErrorRuleName = "error";
    exports.ErrorRuleName = ErrorRuleName;
    var RuleNameRuleName = "ruleName";
    exports.RuleNameRuleName = RuleNameRuleName;
    var DocumentRuleName = "document";
    exports.DocumentRuleName = DocumentRuleName;
    var WildcardRuleName = "wildcard";
    exports.WildcardRuleName = WildcardRuleName;
    var EndOfLineRuleName = "endOfLine";
    exports.EndOfLineRuleName = EndOfLineRuleName;
    var DefinitionRuleName = "definition";
    exports.DefinitionRuleName = DefinitionRuleName;
    var QuantifierRuleName = "quantifier";
    exports.QuantifierRuleName = QuantifierRuleName;
    var DefinitionsRuleName = "definitions";
    exports.DefinitionsRuleName = DefinitionsRuleName;
    var TerminalPartRuleName = "terminalPart";
    exports.TerminalPartRuleName = TerminalPartRuleName;
    var ChoiceOfPartsRuleName = "choiceOfParts";
    exports.ChoiceOfPartsRuleName = ChoiceOfPartsRuleName;
    var TerminalSymbolRuleName = "terminalSymbol";
    exports.TerminalSymbolRuleName = TerminalSymbolRuleName;
    var NonTerminalPartRuleName = "nonTerminalPart";
    exports.NonTerminalPartRuleName = NonTerminalPartRuleName;
    var SequenceOfPartsRuleName = "sequenceOfParts";
    exports.SequenceOfPartsRuleName = SequenceOfPartsRuleName;
    var NoWhitespacePartRuleName = "noWhitespacePart";
    exports.NoWhitespacePartRuleName = NoWhitespacePartRuleName;
    var LookAheadModifierRuleName = "lookAheadModifier";
    exports.LookAheadModifierRuleName = LookAheadModifierRuleName;
    var RegularExpressionRuleName = "regularExpression";
    exports.RegularExpressionRuleName = RegularExpressionRuleName;
    var OptionalQuantifierRuleName = "optionalQuantifier";
    exports.OptionalQuantifierRuleName = OptionalQuantifierRuleName;
    var OneOrMoreQuantifierRuleName = "oneOrMoreQuantifier";
    exports.OneOrMoreQuantifierRuleName = OneOrMoreQuantifierRuleName;
    var ZeroOrMoreQuantifierRuleName = "zeroOrMoreQuantifier";
    exports.ZeroOrMoreQuantifierRuleName = ZeroOrMoreQuantifierRuleName;
    var SignificantTokenTypeRuleName = "significantTokenType";
    exports.SignificantTokenTypeRuleName = SignificantTokenTypeRuleName;
  });

  // node_modules/occam-parsers/lib/rule/name.js
  var require_name4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _name = _interopRequireDefault2(require_name2());
    var _name1 = _interopRequireDefault2(require_name3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NameRule = /* @__PURE__ */ function(Rule) {
      _inherits(NameRule2, Rule);
      var _super = _createSuper(NameRule2);
      function NameRule2() {
        _classCallCheck(this, NameRule2);
        var nameDefinition = new _name1.default(), name = _ruleNames.NameRuleName, definitions = [
          nameDefinition
        ], Node2 = _name.default;
        return _super.call(this, name, definitions, Node2);
      }
      return NameRule2;
    }(_rule.default);
    exports.default = NameRule;
  });

  // node_modules/occam-parsers/lib/part/nonTerminal.js
  var require_nonTerminal2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    var NonTerminalPart = /* @__PURE__ */ function() {
      function NonTerminalPart2(type) {
        _classCallCheck(this, NonTerminalPart2);
        this.type = type;
      }
      _createClass(NonTerminalPart2, [
        {
          key: "getType",
          value: function getType() {
            return this.type;
          }
        },
        {
          key: "isNonTerminalPart",
          value: function isNonTerminalPart() {
            var nonTerminalPart = true;
            return nonTerminalPart;
          }
        },
        {
          key: "isTerminalPart",
          value: function isTerminalPart() {
            var terminalPart = false;
            return terminalPart;
          }
        },
        {
          key: "isRuleNamePart",
          value: function isRuleNamePart() {
            var ruleNamePart = false;
            return ruleNamePart;
          }
        },
        {
          key: "clone",
          value: function clone(Part) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              remainingArguments[_key - 1] = arguments[_key];
            }
            return _construct(Part, _toConsumableArray(remainingArguments));
          }
        }
      ]);
      return NonTerminalPart2;
    }();
    exports.default = NonTerminalPart;
  });

  // node_modules/occam-parsers/lib/partTypes.js
  var require_partTypes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.SequenceOfPartsPartType = exports.ZeroOrMorePartsPartType = exports.OneOrMorePartsPartType = exports.ChoiceOfPartsPartType = exports.OptionalPartPartType = exports.RuleNamePartType = void 0;
    var RuleNamePartType = "ruleNamePart";
    exports.RuleNamePartType = RuleNamePartType;
    var OptionalPartPartType = "optionalPart";
    exports.OptionalPartPartType = OptionalPartPartType;
    var ChoiceOfPartsPartType = "choiceOfParts";
    exports.ChoiceOfPartsPartType = ChoiceOfPartsPartType;
    var OneOrMorePartsPartType = "oneOrMoreParts";
    exports.OneOrMorePartsPartType = OneOrMorePartsPartType;
    var ZeroOrMorePartsPartType = "zeroOrMoreParts";
    exports.ZeroOrMorePartsPartType = ZeroOrMorePartsPartType;
    var SequenceOfPartsPartType = "sequenceOfParts";
    exports.SequenceOfPartsPartType = SequenceOfPartsPartType;
    var _default = {
      RuleNamePartType,
      OptionalPartPartType,
      ChoiceOfPartsPartType,
      OneOrMorePartsPartType,
      ZeroOrMorePartsPartType,
      SequenceOfPartsPartType
    };
    exports.default = _default;
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/optionalPart.js
  var require_optionalPart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal2());
    var _array = require_array3();
    var _partTypes = require_partTypes();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var questionMark = _occamLexers.specialSymbols.questionMark;
    var OptionalPartPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(OptionalPartPart2, NonTerminalPart);
      var _super = _createSuper(OptionalPartPart2);
      function OptionalPartPart2(part) {
        _classCallCheck(this, OptionalPartPart2);
        var _this;
        var type = _partTypes.OptionalPartPartType;
        _this = _super.call(this, type);
        _this.part = part;
        return _this;
      }
      _createClass(OptionalPartPart2, [
        {
          key: "getPart",
          value: function getPart() {
            return this.part;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var part = this.getPart(), partNodes = [], savedIndex = state.getSavedIndex();
            parsed = parsePart(part, partNodes, state, callback);
            if (parsed) {
              (0, _array).push(nodes, partNodes);
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var operatorString = questionMark, partString = this.part.asString(), string = "".concat(partString).concat(operatorString);
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(OptionalPartPart2.prototype), "clone", this).call(this, OptionalPartPart2, this.part);
          }
        }
      ]);
      return OptionalPartPart2;
    }(_nonTerminal.default);
    exports.default = OptionalPartPart;
    function parsePart(part, nodes, state, callback) {
      var parsed;
      if (callback !== null) {
        parsed = callback();
        if (!parsed) {
          parsed = part.parse(nodes, state, callback);
        }
      } else {
        part.parse(nodes, state, callback);
        parsed = true;
      }
      return parsed;
    }
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/collectionOfParts.js
  var require_collectionOfParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CollectionOfPartsPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(CollectionOfPartsPart2, NonTerminalPart);
      var _super = _createSuper(CollectionOfPartsPart2);
      function CollectionOfPartsPart2(type, part) {
        _classCallCheck(this, CollectionOfPartsPart2);
        var _this;
        _this = _super.call(this, type);
        _this.part = part;
        return _this;
      }
      _createClass(CollectionOfPartsPart2, [
        {
          key: "getPart",
          value: function getPart() {
            return this.part;
          }
        },
        {
          key: "asString",
          value: function asString(operatorString) {
            var partString = this.part.asString(), string = "".concat(partString).concat(operatorString);
            return string;
          }
        },
        {
          key: "clone",
          value: function clone(Part) {
            return _get(_getPrototypeOf(CollectionOfPartsPart2.prototype), "clone", this).call(this, Part, this.part);
          }
        }
      ]);
      return CollectionOfPartsPart2;
    }(_nonTerminal.default);
    exports.default = CollectionOfPartsPart;
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/oneOrMoreParts.js
  var require_oneOrMoreParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _collectionOfParts = _interopRequireDefault2(require_collectionOfParts());
    var _array = require_array3();
    var _partTypes = require_partTypes();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var plus = _occamLexers.specialSymbols.plus;
    var OneOrMorePartsPart = /* @__PURE__ */ function(CollectionOfPartsPart) {
      _inherits(OneOrMorePartsPart2, CollectionOfPartsPart);
      var _super = _createSuper(OneOrMorePartsPart2);
      function OneOrMorePartsPart2(part) {
        _classCallCheck(this, OneOrMorePartsPart2);
        var type = _partTypes.OneOrMorePartsPartType;
        return _super.call(this, type, part);
      }
      _createClass(OneOrMorePartsPart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var part = this.getPart(), partNodes = [], savedIndex = state.getSavedIndex();
            parsed = parsePart(part, partNodes, state, callback);
            if (parsed) {
              (0, _array).push(nodes, partNodes);
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var operatorString = plus, string = _get(_getPrototypeOf(OneOrMorePartsPart2.prototype), "asString", this).call(this, operatorString);
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(OneOrMorePartsPart2.prototype), "clone", this).call(this, OneOrMorePartsPart2);
          }
        }
      ]);
      return OneOrMorePartsPart2;
    }(_collectionOfParts.default);
    exports.default = OneOrMorePartsPart;
    function parsePart(part, nodes, state, callback) {
      var parsed1;
      if (callback !== null) {
        parsed1 = part.parse(nodes, state, function() {
          var parsed = callback();
          if (!parsed) {
            parsed = parsePart(part, nodes, state, callback);
          }
          return parsed;
        });
      } else {
        parsed1 = part.parse(nodes, state, callback);
        if (parsed1) {
          parsePart(part, nodes, state, callback);
        }
      }
      return parsed1;
    }
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/zeroOrMoreParts.js
  var require_zeroOrMoreParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _collectionOfParts = _interopRequireDefault2(require_collectionOfParts());
    var _array = require_array3();
    var _partTypes = require_partTypes();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var asterisk = _occamLexers.specialSymbols.asterisk;
    var ZeroOrMorePartsPart = /* @__PURE__ */ function(CollectionOfPartsPart) {
      _inherits(ZeroOrMorePartsPart2, CollectionOfPartsPart);
      var _super = _createSuper(ZeroOrMorePartsPart2);
      function ZeroOrMorePartsPart2(part) {
        _classCallCheck(this, ZeroOrMorePartsPart2);
        var type = _partTypes.ZeroOrMorePartsPartType;
        return _super.call(this, type, part);
      }
      _createClass(ZeroOrMorePartsPart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var part = this.getPart(), partNodes = [], savedIndex = state.getSavedIndex();
            parsed = parsePart(part, partNodes, state, callback);
            if (parsed) {
              (0, _array).push(nodes, partNodes);
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var operatorString = asterisk, string = _get(_getPrototypeOf(ZeroOrMorePartsPart2.prototype), "asString", this).call(this, operatorString);
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(ZeroOrMorePartsPart2.prototype), "clone", this).call(this, ZeroOrMorePartsPart2);
          }
        }
      ]);
      return ZeroOrMorePartsPart2;
    }(_collectionOfParts.default);
    exports.default = ZeroOrMorePartsPart;
    function parsePart(part, nodes, state, callback) {
      var parsed;
      if (callback !== null) {
        parsed = callback();
        if (!parsed) {
          parsed = part.parse(nodes, state, function() {
            return parsePart(part, nodes, state, callback);
          });
        }
      } else {
        parsed = part.parse(nodes, state, callback);
        if (parsed) {
          parsePart(part, nodes, state, callback);
        }
        parsed = true;
      }
      return parsed;
    }
  });

  // node_modules/occam-parsers/lib/utilities/bnf.js
  var require_bnf2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isNodeChoiceNode = isNodeChoiceNode;
    exports.isNodeRuleNameNode = isNodeRuleNameNode;
    exports.isNodeQuantifierNode = isNodeQuantifierNode;
    exports.isNodeLookAheadModifierNode = isNodeLookAheadModifierNode;
    exports.ruleNameFromQuantifierNode = ruleNameFromQuantifierNode;
    var _array = require_array3();
    var _ruleNames = require_ruleNames();
    function isNodeChoiceNode(node) {
      var nodeNoChoiceNode = false;
      var nodeTerminalNode = node.isTerminalNode();
      if (nodeTerminalNode) {
        var terminalNode = node, terminalNodeContent = terminalNode.getContent();
        nodeNoChoiceNode = terminalNodeContent === "|";
      }
      return nodeNoChoiceNode;
    }
    function isNodeRuleNameNode(node) {
      var nodeRuleNameNode = false;
      var nodeTerminalNode = node.isTerminalNode(), nodeNonTerminalNode = !nodeTerminalNode;
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node, nonTerminalNodeRuleName = nonTerminalNode.getRuleName();
        nodeRuleNameNode = nonTerminalNodeRuleName === _ruleNames.RuleNameRuleName;
      }
      return nodeRuleNameNode;
    }
    function isNodeQuantifierNode(node) {
      var nodeQuantifierNode = false;
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node, ruleName = nonTerminalNode.getRuleName(), ruleNameQuantifierRuleName = ruleName === _ruleNames.QuantifierRuleName;
        nodeQuantifierNode = ruleNameQuantifierRuleName;
      }
      return nodeQuantifierNode;
    }
    function isNodeLookAheadModifierNode(node) {
      var nodeLookAheadModifierNode = false;
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node, ruleName = nonTerminalNode.getRuleName(), ruleNameLookAheadModifierRuleName = ruleName === _ruleNames.LookAheadModifierRuleName;
        nodeLookAheadModifierNode = ruleNameLookAheadModifierRuleName;
      }
      return nodeLookAheadModifierNode;
    }
    function ruleNameFromQuantifierNode(quantifierNode) {
      var nonTerminalNode;
      nonTerminalNode = quantifierNode;
      var childNodes = nonTerminalNode.getChildNodes(), firstChildNode = (0, _array).first(childNodes);
      nonTerminalNode = firstChildNode;
      var ruleName = nonTerminalNode.getRuleName();
      return ruleName;
    }
  });

  // node_modules/occam-parsers/lib/node/bnf/part.js
  var require_part2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _optionalPart = _interopRequireDefault2(require_optionalPart());
    var _oneOrMoreParts = _interopRequireDefault2(require_oneOrMoreParts());
    var _zeroOrMoreParts = _interopRequireDefault2(require_zeroOrMoreParts());
    var _array = require_array3();
    var _bnf = require_bnf2();
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(PartBNFNode2, NonTerminalNode);
      var _super = _createSuper(PartBNFNode2);
      function PartBNFNode2() {
        _classCallCheck(this, PartBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(PartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var childNodes = this.getChildNodes(), nodes = childNodes.slice(), part = partFromNodes(nodes);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(PartBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return PartBNFNode2;
    }(_nonTerminal.default);
    exports.default = PartBNFNode;
    function partFromNodes(nodes) {
      var part = null;
      var nodesLength = nodes.length;
      if (nodesLength === 1) {
        var node = nodes.pop(), lookAhead = false;
        part = node.generatePart(lookAhead);
      } else {
        var lastNodeQuantifierNode = isLastNodeQuantifierNode(nodes);
        if (lastNodeQuantifierNode) {
          var node1 = nodes.pop(), quantifierNode = node1;
          part = partFromNodes(nodes);
          var ruleName = (0, _bnf).ruleNameFromQuantifierNode(quantifierNode), collectionOfPartsPart = collectionOfPartsPartFromPartAndRuleName(part, ruleName);
          part = collectionOfPartsPart;
        } else {
          nodes.shift();
          part = partFromNodes(nodes);
        }
      }
      return part;
    }
    function isLastNodeQuantifierNode(nodes) {
      var lastNode = (0, _array).last(nodes), lastNodeQuantifierNode = (0, _bnf).isNodeQuantifierNode(lastNode);
      return lastNodeQuantifierNode;
    }
    function collectionOfPartsPartFromPartAndRuleName(part, ruleName) {
      var collectionOfPartsPart;
      switch (ruleName) {
        case _ruleNames.OptionalQuantifierRuleName:
          var optionalPartPart = new _optionalPart.default(part);
          collectionOfPartsPart = optionalPartPart;
          break;
        case _ruleNames.OneOrMoreQuantifierRuleName:
          var oneOrMorePartsPart = new _oneOrMoreParts.default(part);
          collectionOfPartsPart = oneOrMorePartsPart;
          break;
        case _ruleNames.ZeroOrMoreQuantifierRuleName:
          var zeroOrMorePartsPart = new _zeroOrMoreParts.default(part);
          collectionOfPartsPart = zeroOrMorePartsPart;
          break;
      }
      return collectionOfPartsPart;
    }
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/ruleName.js
  var require_ruleName2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal2());
    var _constants = require_constants4();
    var _partTypes = require_partTypes();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var exclamationMark = _occamLexers.specialSymbols.exclamationMark;
    var RuleNamePart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(RuleNamePart2, NonTerminalPart);
      var _super = _createSuper(RuleNamePart2);
      function RuleNamePart2(ruleName) {
        var lookAhead = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        _classCallCheck(this, RuleNamePart2);
        var _this;
        var type = _partTypes.RuleNamePartType;
        _this = _super.call(this, type);
        _this.ruleName = ruleName;
        _this.lookAhead = lookAhead;
        return _this;
      }
      _createClass(RuleNamePart2, [
        {
          key: "getRuleName",
          value: function getRuleName() {
            return this.ruleName;
          }
        },
        {
          key: "isLookAhead",
          value: function isLookAhead() {
            return this.lookAhead;
          }
        },
        {
          key: "isRuleNamePart",
          value: function isRuleNamePart() {
            var ruleNamePart = true;
            return ruleNamePart;
          }
        },
        {
          key: "setLookAhead",
          value: function setLookAhead(lookAhead) {
            this.lookAhead = lookAhead;
          }
        },
        {
          key: "findRule",
          value: function findRule(state) {
            var ruleMap = state.getRuleMap(), rule = ruleMap[this.ruleName] || null;
            return rule;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var rule = this.findRule(state);
            if (rule === null) {
              parsed = false;
            } else {
              var ruleNode = rule.parse(state, callback);
              parsed = ruleNode !== null;
              if (parsed) {
                nodes.push(ruleNode);
              }
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var lookAheadString = this.lookAhead ? exclamationMark : _constants.EMPTY_STRING, string = "".concat(this.ruleName).concat(lookAheadString);
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(RuleNamePart2.prototype), "clone", this).call(this, RuleNamePart2, this.ruleName, this.lookAhead);
          }
        }
      ]);
      return RuleNamePart2;
    }(_nonTerminal.default);
    exports.default = RuleNamePart;
  });

  // node_modules/occam-parsers/lib/definition/ruleName.js
  var require_ruleName3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleNameDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RuleNameDefinition2, Definition);
      var _super = _createSuper(RuleNameDefinition2);
      function RuleNameDefinition2(ruleName) {
        _classCallCheck(this, RuleNameDefinition2);
        var ruleNameRuleNamePart = new _ruleName.default(ruleName), parts = [
          ruleNameRuleNamePart
        ];
        return _super.call(this, parts);
      }
      return RuleNameDefinition2;
    }(_definition.default);
    exports.default = RuleNameDefinition;
  });

  // node_modules/occam-parsers/lib/definition/partRule/terminal.js
  var require_terminal3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _zeroOrMoreParts = _interopRequireDefault2(require_zeroOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TerminalPartRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(TerminalPartRuleDefinition2, Definition);
      var _super = _createSuper(TerminalPartRuleDefinition2);
      function TerminalPartRuleDefinition2() {
        _classCallCheck(this, TerminalPartRuleDefinition2);
        var quantifierRuleName = _ruleNames.QuantifierRuleName, terminalPartRuleName = _ruleNames.TerminalPartRuleName, quantifierRuleNamePart = new _ruleName.default(quantifierRuleName), terminalPartRuleNamePart = new _ruleName.default(terminalPartRuleName), zeroOrMoreQuantifierRuleNamePartsPart = new _zeroOrMoreParts.default(quantifierRuleNamePart), parts = [
          terminalPartRuleNamePart,
          zeroOrMoreQuantifierRuleNamePartsPart
        ];
        return _super.call(this, parts);
      }
      return TerminalPartRuleDefinition2;
    }(_definition.default);
    exports.default = TerminalPartRuleDefinition;
  });

  // node_modules/occam-parsers/lib/definition/partRule/nonTerminal.js
  var require_nonTerminal3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _zeroOrMoreParts = _interopRequireDefault2(require_zeroOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NonTerminalPartRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(NonTerminalPartRuleDefinition2, Definition);
      var _super = _createSuper(NonTerminalPartRuleDefinition2);
      function NonTerminalPartRuleDefinition2() {
        _classCallCheck(this, NonTerminalPartRuleDefinition2);
        var quantifierRuleName = _ruleNames.QuantifierRuleName, nonTerminalPartRuleName = _ruleNames.NonTerminalPartRuleName, quantifierRuleNamePart = new _ruleName.default(quantifierRuleName), nonTerminalPartRuleNamePart = new _ruleName.default(nonTerminalPartRuleName), zeroOrMoreQuantifierRuleNamePartsPart = new _zeroOrMoreParts.default(quantifierRuleNamePart), parts = [
          nonTerminalPartRuleNamePart,
          zeroOrMoreQuantifierRuleNamePartsPart
        ];
        return _super.call(this, parts);
      }
      return NonTerminalPartRuleDefinition2;
    }(_definition.default);
    exports.default = NonTerminalPartRuleDefinition;
  });

  // node_modules/occam-parsers/lib/rule/part.js
  var require_part3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _part = _interopRequireDefault2(require_part2());
    var _ruleName = _interopRequireDefault2(require_ruleName3());
    var _terminal = _interopRequireDefault2(require_terminal3());
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PartRule = /* @__PURE__ */ function(Rule) {
      _inherits(PartRule2, Rule);
      var _super = _createSuper(PartRule2);
      function PartRule2() {
        _classCallCheck(this, PartRule2);
        var name = _ruleNames.PartRuleName, terminalPartRuleDefinition = new _terminal.default(), nonTerminalPartRuleDefinition = new _nonTerminal.default(), noWhitespacePartRuleNameDefinition = new _ruleName.default(_ruleNames.NoWhitespacePartRuleName), definitions = [
          nonTerminalPartRuleDefinition,
          terminalPartRuleDefinition,
          noWhitespacePartRuleNameDefinition
        ], Node2 = _part.default;
        return _super.call(this, name, definitions, Node2);
      }
      return PartRule2;
    }(_rule.default);
    exports.default = PartRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/rule.js
  var require_rule3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(RuleBNFNode2, NonTerminalNode);
      var _super = _createSuper(RuleBNFNode2);
      function RuleBNFNode2() {
        _classCallCheck(this, RuleBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(RuleBNFNode2, [
        {
          key: "generateRule",
          value: function generateRule(Rule) {
            var name = this.getName(), definitions = this.generateDefinitions(), Node2 = _nonTerminal.default, rule = new Rule(name, definitions, Node2);
            return rule;
          }
        },
        {
          key: "getName",
          value: function getName() {
            var childNodes = this.getChildNodes(), firstChildNode = (0, _array).first(childNodes), nameBNFNode = firstChildNode, name = nameBNFNode.getName();
            return name;
          }
        },
        {
          key: "generateDefinitions",
          value: function generateDefinitions() {
            var childNodes = this.getChildNodes(), thirdChildNode = (0, _array).third(childNodes), definitionsNode = thirdChildNode, definitions = definitionsNode.generateDefinitions();
            return definitions;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(RuleBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return RuleBNFNode2;
    }(_nonTerminal.default);
    exports.default = RuleBNFNode;
  });

  // node_modules/occam-parsers/lib/part/terminal/terminalSymbol.js
  var require_terminalSymbol = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _terminal = _interopRequireDefault2(require_terminal());
    var _terminal1 = _interopRequireDefault2(require_terminal2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TerminalSymbolPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(TerminalSymbolPart2, TerminalPart);
      var _super = _createSuper(TerminalSymbolPart2);
      function TerminalSymbolPart2(content) {
        _classCallCheck(this, TerminalSymbolPart2);
        var _this;
        _this = _super.call(this);
        _this.content = content;
        return _this;
      }
      _createClass(TerminalSymbolPart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var content = significantToken.getContent();
              if (content === this.content) {
                terminalNode = _terminal1.default.fromSignificantToken(significantToken);
              }
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (callback !== null) {
                parsed = callback();
                if (!parsed) {
                  nodes.pop();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var content = this.content.replace(/\\/, "\\\\"), string = '"'.concat(content, '"');
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(TerminalSymbolPart2.prototype), "clone", this).call(this, TerminalSymbolPart2, this.content);
          }
        }
      ]);
      return TerminalSymbolPart2;
    }(_terminal.default);
    exports.default = TerminalSymbolPart;
  });

  // node_modules/occam-parsers/lib/definition/rule.js
  var require_rule4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var separator = _occamLexers.specialSymbols.separator;
    var terminator = _occamLexers.specialSymbols.terminator;
    var RuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RuleDefinition2, Definition);
      var _super = _createSuper(RuleDefinition2);
      function RuleDefinition2() {
        _classCallCheck(this, RuleDefinition2);
        var separatorTerminalSymbolContent = separator, terminatorTerminalSymbolContent = terminator, nameRuleName = _ruleNames.NameRuleName, definitionsRuleName = _ruleNames.DefinitionsRuleName, nameRuleNamePart = new _ruleName.default(nameRuleName), separatorTerminalSymbolPart = new _terminalSymbol.default(separatorTerminalSymbolContent), definitionsRuleNamePart = new _ruleName.default(definitionsRuleName), terminatorTerminalSymbolPart = new _terminalSymbol.default(terminatorTerminalSymbolContent), parts = [
          nameRuleNamePart,
          separatorTerminalSymbolPart,
          definitionsRuleNamePart,
          terminatorTerminalSymbolPart
        ];
        return _super.call(this, parts);
      }
      return RuleDefinition2;
    }(_definition.default);
    exports.default = RuleDefinition;
  });

  // node_modules/occam-parsers/lib/rule/rule.js
  var require_rule5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _rule1 = _interopRequireDefault2(require_rule3());
    var _rule2 = _interopRequireDefault2(require_rule4());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleRule = /* @__PURE__ */ function(Rule) {
      _inherits(RuleRule2, Rule);
      var _super = _createSuper(RuleRule2);
      function RuleRule2() {
        _classCallCheck(this, RuleRule2);
        var ruleDefinition = new _rule2.default(), name = _ruleNames.RuleRuleName, definitions = [
          ruleDefinition
        ], Node2 = _rule1.default;
        return _super.call(this, name, definitions, Node2);
      }
      return RuleRule2;
    }(_rule.default);
    exports.default = RuleRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/error.js
  var require_error = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ErrorBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(ErrorBNFNode2, NonTerminalNode);
      var _super = _createSuper(ErrorBNFNode2);
      function ErrorBNFNode2() {
        _classCallCheck(this, ErrorBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(ErrorBNFNode2, null, [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(ErrorBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return ErrorBNFNode2;
    }(_nonTerminal.default);
    exports.default = ErrorBNFNode;
  });

  // node_modules/occam-parsers/lib/part/terminal/wildcard.js
  var require_wildcard = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _terminal = _interopRequireDefault2(require_terminal());
    var _terminal1 = _interopRequireDefault2(require_terminal2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var wildcard = _occamLexers.specialSymbols.wildcard;
    var WildcardPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(WildcardPart2, TerminalPart);
      var _super = _createSuper(WildcardPart2);
      function WildcardPart2() {
        _classCallCheck(this, WildcardPart2);
        return _super.apply(this, arguments);
      }
      _createClass(WildcardPart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              terminalNode = _terminal1.default.fromSignificantToken(significantToken);
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (callback !== null) {
                parsed = callback();
                if (!parsed) {
                  nodes.pop();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = wildcard;
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(WildcardPart2.prototype), "clone", this).call(this, WildcardPart2);
          }
        }
      ]);
      return WildcardPart2;
    }(_terminal.default);
    exports.default = WildcardPart;
  });

  // node_modules/occam-parsers/lib/definition/error.js
  var require_error2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _wildcard = _interopRequireDefault2(require_wildcard());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ErrorDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(ErrorDefinition2, Definition);
      var _super = _createSuper(ErrorDefinition2);
      function ErrorDefinition2() {
        _classCallCheck(this, ErrorDefinition2);
        var wildcardPart = new _wildcard.default(), parts = [
          wildcardPart
        ];
        return _super.call(this, parts);
      }
      return ErrorDefinition2;
    }(_definition.default);
    exports.default = ErrorDefinition;
  });

  // node_modules/occam-parsers/lib/rule/error.js
  var require_error3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _error = _interopRequireDefault2(require_error());
    var _error1 = _interopRequireDefault2(require_error2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ErrorRule = /* @__PURE__ */ function(Rule) {
      _inherits(ErrorRule2, Rule);
      var _super = _createSuper(ErrorRule2);
      function ErrorRule2() {
        _classCallCheck(this, ErrorRule2);
        var errorDefinition = new _error1.default(), name = _ruleNames.ErrorRuleName, definitions = [
          errorDefinition
        ], Node2 = _error.default;
        return _super.call(this, name, definitions, Node2);
      }
      return ErrorRule2;
    }(_rule.default);
    exports.default = ErrorRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/document.js
  var require_document2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DocumentBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(DocumentBNFNode2, NonTerminalNode);
      var _super = _createSuper(DocumentBNFNode2);
      function DocumentBNFNode2() {
        _classCallCheck(this, DocumentBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(DocumentBNFNode2, [
        {
          key: "generateRules",
          value: function generateRules(Rule) {
            var childNodes = this.getChildNodes(), ruleNodes1 = childNodes.reduce(function(ruleNodes, childNode) {
              var childNodeNonTerminalNode = childNode.isNonTerminalNode();
              if (childNodeNonTerminalNode) {
                var nonTerminalNode = childNode, ruleName = childNode.getRuleName(), ruleNameRuleRuleName = ruleName === _ruleNames.RuleRuleName, nonTerminalNodeRuleNode = ruleNameRuleRuleName;
                if (nonTerminalNodeRuleNode) {
                  var ruleNode = nonTerminalNode;
                  ruleNodes.push(ruleNode);
                }
              }
              return ruleNodes;
            }, []), rules = ruleNodes1.map(function(ruleNode) {
              var rule = ruleNode.generateRule(Rule);
              return rule;
            });
            return rules;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(DocumentBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return DocumentBNFNode2;
    }(_nonTerminal.default);
    exports.default = DocumentBNFNode;
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/choiceOfParts.js
  var require_choiceOfParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal2());
    var _partTypes = require_partTypes();
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ChoiceOfPartsPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(ChoiceOfPartsPart2, NonTerminalPart);
      var _super = _createSuper(ChoiceOfPartsPart2);
      function ChoiceOfPartsPart2(parts) {
        _classCallCheck(this, ChoiceOfPartsPart2);
        var _this;
        var type = _partTypes.ChoiceOfPartsPartType;
        _this = _super.call(this, type);
        _this.parts = parts;
        return _this;
      }
      _createClass(ChoiceOfPartsPart2, [
        {
          key: "getParts",
          value: function getParts() {
            return this.parts;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            this.parts.some(function(part) {
              parsed = part.parse(nodes, state, callback);
              if (parsed) {
                return true;
              }
            });
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partsString1 = this.parts.reduce(function(partsString, part) {
              var partString = part.asString();
              if (partsString === null) {
                partsString = partString;
              } else {
                partsString = "".concat(partsString, " | ").concat(partString);
              }
              return partsString;
            }, null), string = "( ".concat(partsString1, " )");
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(ChoiceOfPartsPart2.prototype), "clone", this).call(this, ChoiceOfPartsPart2, this.parts);
          }
        }
      ], [
        {
          key: "fromNodes",
          value: function fromNodes(nodes) {
            var allButFirstAndLastNodes = (0, _array).allButFirstAndLast(nodes);
            nodes = allButFirstAndLastNodes;
            var evenNodes = (0, _array).even(nodes);
            nodes = evenNodes;
            var lookAhead = false, parts = nodes.map(function(node) {
              var part = node.generatePart(lookAhead);
              return part;
            }), choiceOfPartsPart = new ChoiceOfPartsPart2(parts);
            return choiceOfPartsPart;
          }
        }
      ]);
      return ChoiceOfPartsPart2;
    }(_nonTerminal.default);
    exports.default = ChoiceOfPartsPart;
  });

  // node_modules/occam-parsers/lib/definition/document.js
  var require_document3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _choiceOfParts = _interopRequireDefault2(require_choiceOfParts());
    var _oneOrMoreParts = _interopRequireDefault2(require_oneOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DocumentDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(DocumentDefinition2, Definition);
      var _super = _createSuper(DocumentDefinition2);
      function DocumentDefinition2() {
        _classCallCheck(this, DocumentDefinition2);
        var ruleRuleName = _ruleNames.RuleRuleName, errorRuleName = _ruleNames.ErrorRuleName, ruleRuleNamePart = new _ruleName.default(ruleRuleName), errorRuleNamePart = new _ruleName.default(errorRuleName), ruleRuleNameAndErrorRuleNameParts = [
          ruleRuleNamePart,
          errorRuleNamePart
        ], choiceOfRuleRuleNameAndErrorRuleNamePartsPart = new _choiceOfParts.default(ruleRuleNameAndErrorRuleNameParts), oneOrMoreChoiceOfRuleRuleNameAndErrorRuleNamePartsPartsPart = new _oneOrMoreParts.default(choiceOfRuleRuleNameAndErrorRuleNamePartsPart), parts = [
          oneOrMoreChoiceOfRuleRuleNameAndErrorRuleNamePartsPartsPart
        ];
        return _super.call(this, parts);
      }
      return DocumentDefinition2;
    }(_definition.default);
    exports.default = DocumentDefinition;
  });

  // node_modules/occam-parsers/lib/rule/document.js
  var require_document4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _document = _interopRequireDefault2(require_document2());
    var _document1 = _interopRequireDefault2(require_document3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DocumentRule = /* @__PURE__ */ function(Rule) {
      _inherits(DocumentRule2, Rule);
      var _super = _createSuper(DocumentRule2);
      function DocumentRule2() {
        _classCallCheck(this, DocumentRule2);
        var documentDefinition = new _document1.default(), name = _ruleNames.DocumentRuleName, definitions = [
          documentDefinition
        ], Node2 = _document.default;
        return _super.call(this, name, definitions, Node2);
      }
      return DocumentRule2;
    }(_rule.default);
    exports.default = DocumentRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/ruleName.js
  var require_ruleName4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleNameBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(RuleNameBNFNode2, NonTerminalNode);
      var _super = _createSuper(RuleNameBNFNode2);
      function RuleNameBNFNode2() {
        _classCallCheck(this, RuleNameBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(RuleNameBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var ruleName = this.getRuleName(), ruleNamePart = new _ruleName.default(ruleName, lookAhead);
            return ruleNamePart;
          }
        },
        {
          key: "getRuleName",
          value: function getRuleName() {
            var childNodes = this.getChildNodes(), firstChildNode = (0, _array).first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), ruleName = terminalNodeContent;
            return ruleName;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(RuleNameBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return RuleNameBNFNode2;
    }(_nonTerminal.default);
    exports.default = RuleNameBNFNode;
  });

  // node_modules/occam-parsers/lib/rule/ruleName.js
  var require_ruleName5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _name = _interopRequireDefault2(require_name3());
    var _ruleName = _interopRequireDefault2(require_ruleName4());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleNameRule = /* @__PURE__ */ function(Rule) {
      _inherits(RuleNameRule2, Rule);
      var _super = _createSuper(RuleNameRule2);
      function RuleNameRule2() {
        _classCallCheck(this, RuleNameRule2);
        var nameDefinition = new _name.default(), name = _ruleNames.RuleNameRuleName, definitions = [
          nameDefinition
        ], Node2 = _ruleName.default;
        return _super.call(this, name, definitions, Node2);
      }
      return RuleNameRule2;
    }(_rule.default);
    exports.default = RuleNameRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/wildcard.js
  var require_wildcard2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _wildcard = _interopRequireDefault2(require_wildcard());
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var WildcardBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(WildcardBNFNode2, NonTerminalNode);
      var _super = _createSuper(WildcardBNFNode2);
      function WildcardBNFNode2() {
        _classCallCheck(this, WildcardBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(WildcardBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var wildcardPart = new _wildcard.default();
            return wildcardPart;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(WildcardBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return WildcardBNFNode2;
    }(_nonTerminal.default);
    exports.default = WildcardBNFNode;
  });

  // node_modules/occam-parsers/lib/definition/terminalSymbol.js
  var require_terminalSymbol2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TerminalSymbolDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(TerminalSymbolDefinition2, Definition);
      var _super = _createSuper(TerminalSymbolDefinition2);
      function TerminalSymbolDefinition2(content) {
        _classCallCheck(this, TerminalSymbolDefinition2);
        var terminalSymbolPart = new _terminalSymbol.default(content), parts = [
          terminalSymbolPart
        ];
        return _super.call(this, parts);
      }
      return TerminalSymbolDefinition2;
    }(_definition.default);
    exports.default = TerminalSymbolDefinition;
  });

  // node_modules/occam-parsers/lib/rule/wildcard.js
  var require_wildcard3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _wildcard = _interopRequireDefault2(require_wildcard2());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var wildcard = _occamLexers.specialSymbols.wildcard;
    var WildcardRule = /* @__PURE__ */ function(Rule) {
      _inherits(WildcardRule2, Rule);
      var _super = _createSuper(WildcardRule2);
      function WildcardRule2() {
        _classCallCheck(this, WildcardRule2);
        var wildcardTerminalSymbolContent = wildcard, wildcardTerminalSymbolDefinition = new _terminalSymbol.default(wildcardTerminalSymbolContent), name = _ruleNames.WildcardRuleName, definitions = [
          wildcardTerminalSymbolDefinition
        ], Node2 = _wildcard.default;
        return _super.call(this, name, definitions, Node2);
      }
      return WildcardRule2;
    }(_rule.default);
    exports.default = WildcardRule;
  });

  // node_modules/occam-parsers/lib/parseTree/endOfLineNode.js
  var require_endOfLineNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _verticalBranch = _interopRequireDefault2(require_verticalBranch());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var END_OF_LINE = _occamLexers.specialSymbols.END_OF_LINE;
    var EndOfLineBNFNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(EndOfLineBNFNodeParseTree2, VerticalBranchParseTree);
      var _super = _createSuper(EndOfLineBNFNodeParseTree2);
      function EndOfLineBNFNodeParseTree2() {
        _classCallCheck(this, EndOfLineBNFNodeParseTree2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLineBNFNodeParseTree2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var string = END_OF_LINE, stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(EndOfLineBNFNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            var endOfLineBNFNodeParseTree = terminalNodeParseTree;
            return endOfLineBNFNodeParseTree;
          }
        }
      ]);
      return EndOfLineBNFNodeParseTree2;
    }(_verticalBranch.default);
    exports.default = EndOfLineBNFNodeParseTree;
  });

  // node_modules/occam-parsers/lib/node/terminal/endOfLine.js
  var require_endOfLine5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _terminal = _interopRequireDefault2(require_terminal2());
    var _endOfLineNode = _interopRequireDefault2(require_endOfLineNode());
    var _constants = require_constants4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var EndOfLineBNFNode = /* @__PURE__ */ function(TerminalNode) {
      _inherits(EndOfLineBNFNode2, TerminalNode);
      var _super = _createSuper(EndOfLineBNFNode2);
      function EndOfLineBNFNode2() {
        _classCallCheck(this, EndOfLineBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLineBNFNode2, [
        {
          key: "getContent",
          value: function getContent() {
            var content = _constants.EMPTY_STRING;
            return content;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var endOfLineBNFNodeParseTree = _endOfLineNode.default.fromNothing(), parseTree = endOfLineBNFNodeParseTree;
            return parseTree;
          }
        }
      ], [
        {
          key: "fromSignificantToken",
          value: function fromSignificantToken(significantToken) {
            return _terminal.default.fromSignificantToken(EndOfLineBNFNode2, significantToken);
          }
        }
      ]);
      return EndOfLineBNFNode2;
    }(_terminal.default);
    exports.default = EndOfLineBNFNode;
  });

  // node_modules/occam-parsers/lib/part/terminal/endOfLine.js
  var require_endOfLine6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _terminal = _interopRequireDefault2(require_terminal());
    var _endOfLine = _interopRequireDefault2(require_endOfLine5());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var END_OF_LINE = _occamLexers.specialSymbols.END_OF_LINE;
    var EndOfLinePart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(EndOfLinePart2, TerminalPart);
      var _super = _createSuper(EndOfLinePart2);
      function EndOfLinePart2() {
        _classCallCheck(this, EndOfLinePart2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLinePart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var endOfLineBNFNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var significantTokenEndOfLineToken = significantToken.isEndOfLineToken();
              if (significantTokenEndOfLineToken) {
                endOfLineBNFNode = _endOfLine.default.fromSignificantToken(significantToken);
              }
            }
            parsed = endOfLineBNFNode !== null;
            if (parsed) {
              nodes.push(endOfLineBNFNode);
              if (callback !== null) {
                parsed = callback();
                if (!parsed) {
                  nodes.pop();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = END_OF_LINE;
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(EndOfLinePart2.prototype), "clone", this).call(this, EndOfLinePart2);
          }
        }
      ]);
      return EndOfLinePart2;
    }(_terminal.default);
    exports.default = EndOfLinePart;
  });

  // node_modules/occam-parsers/lib/node/bnf/endOfLine.js
  var require_endOfLine7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _endOfLine = _interopRequireDefault2(require_endOfLine6());
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var EndOfLineBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(EndOfLineBNFNode2, NonTerminalNode);
      var _super = _createSuper(EndOfLineBNFNode2);
      function EndOfLineBNFNode2() {
        _classCallCheck(this, EndOfLineBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(EndOfLineBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var endOfLinePart = new _endOfLine.default();
            return endOfLinePart;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(EndOfLineBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return EndOfLineBNFNode2;
    }(_nonTerminal.default);
    exports.default = EndOfLineBNFNode;
  });

  // node_modules/occam-parsers/lib/rule/endOfLine.js
  var require_endOfLine8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _endOfLine = _interopRequireDefault2(require_endOfLine7());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var END_OF_LINE = _occamLexers.specialSymbols.END_OF_LINE;
    var EndOfLineRule = /* @__PURE__ */ function(Rule) {
      _inherits(EndOfLineRule2, Rule);
      var _super = _createSuper(EndOfLineRule2);
      function EndOfLineRule2() {
        _classCallCheck(this, EndOfLineRule2);
        var endOfLineTerminalSymbolContent = END_OF_LINE, endOfLineTerminalSymbolDefinition = new _terminalSymbol.default(endOfLineTerminalSymbolContent), name = _ruleNames.EndOfLineRuleName, definitions = [
          endOfLineTerminalSymbolDefinition
        ], Node2 = _endOfLine.default;
        return _super.call(this, name, definitions, Node2);
      }
      return EndOfLineRule2;
    }(_rule.default);
    exports.default = EndOfLineRule;
  });

  // node_modules/occam-parsers/lib/rule/quantifier.js
  var require_quantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _part = _interopRequireDefault2(require_part2());
    var _ruleName = _interopRequireDefault2(require_ruleName3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var QuantifierRule = /* @__PURE__ */ function(Rule) {
      _inherits(QuantifierRule2, Rule);
      var _super = _createSuper(QuantifierRule2);
      function QuantifierRule2() {
        _classCallCheck(this, QuantifierRule2);
        var name = _ruleNames.QuantifierRuleName, optionalQuantifierRuleName = _ruleNames.OptionalQuantifierRuleName, oneOrMoreQuantifierRuleName = _ruleNames.OneOrMoreQuantifierRuleName, zeroOrMoreQuantifierRuleName = _ruleNames.ZeroOrMoreQuantifierRuleName, optionalQuantifierRuleNameDefinition = new _ruleName.default(optionalQuantifierRuleName), oneOrMoreQuantifierRuleNameDefinition = new _ruleName.default(oneOrMoreQuantifierRuleName), zeroOrMoreQuantifierRuleNameDefinition = new _ruleName.default(zeroOrMoreQuantifierRuleName), definitions = [
          optionalQuantifierRuleNameDefinition,
          oneOrMoreQuantifierRuleNameDefinition,
          zeroOrMoreQuantifierRuleNameDefinition
        ], Node2 = _part.default;
        return _super.call(this, name, definitions, Node2);
      }
      return QuantifierRule2;
    }(_rule.default);
    exports.default = QuantifierRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/definition.js
  var require_definition2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DefinitionBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(DefinitionBNFNode2, NonTerminalNode);
      var _super = _createSuper(DefinitionBNFNode2);
      function DefinitionBNFNode2() {
        _classCallCheck(this, DefinitionBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(DefinitionBNFNode2, [
        {
          key: "generateDefinition",
          value: function generateDefinition() {
            var childNodes = this.getChildNodes(), partNodes = childNodes, lookAhead = false, parts = partNodes.map(function(partNode) {
              var part = partNode.generatePart(lookAhead);
              return part;
            }), definition = new _definition.default(parts);
            return definition;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(DefinitionBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return DefinitionBNFNode2;
    }(_nonTerminal.default);
    exports.default = DefinitionBNFNode;
  });

  // node_modules/occam-parsers/lib/definition/definition.js
  var require_definition3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _oneOrMoreParts = _interopRequireDefault2(require_oneOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DefinitionDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(DefinitionDefinition2, Definition);
      var _super = _createSuper(DefinitionDefinition2);
      function DefinitionDefinition2() {
        _classCallCheck(this, DefinitionDefinition2);
        var partRuleName = _ruleNames.PartRuleName, partRuleNamePart = new _ruleName.default(partRuleName), oneOrMoreRuleNamePartsPart = new _oneOrMoreParts.default(partRuleNamePart), parts = [
          oneOrMoreRuleNamePartsPart
        ];
        return _super.call(this, parts);
      }
      return DefinitionDefinition2;
    }(_definition.default);
    exports.default = DefinitionDefinition;
  });

  // node_modules/occam-parsers/lib/rule/definition.js
  var require_definition4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _definition = _interopRequireDefault2(require_definition2());
    var _definition1 = _interopRequireDefault2(require_definition3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DefinitionRule = /* @__PURE__ */ function(Rule) {
      _inherits(DefinitionRule2, Rule);
      var _super = _createSuper(DefinitionRule2);
      function DefinitionRule2() {
        _classCallCheck(this, DefinitionRule2);
        var name = _ruleNames.DefinitionRuleName, definitionDefinition = new _definition1.default(), definitions = [
          definitionDefinition
        ], Node2 = _definition.default;
        return _super.call(this, name, definitions, Node2);
      }
      return DefinitionRule2;
    }(_rule.default);
    exports.default = DefinitionRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/definitions.js
  var require_definitions = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DefinitionsBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(DefinitionsBNFNode2, NonTerminalNode);
      var _super = _createSuper(DefinitionsBNFNode2);
      function DefinitionsBNFNode2() {
        _classCallCheck(this, DefinitionsBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(DefinitionsBNFNode2, [
        {
          key: "generateDefinitions",
          value: function generateDefinitions() {
            var childNodes = this.getChildNodes(), evenChildNodes = (0, _array).even(childNodes), definitionNodes = evenChildNodes, definitions = definitionNodes.map(function(definitionNode) {
              var definition = definitionNode.generateDefinition();
              return definition;
            });
            return definitions;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(DefinitionsBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return DefinitionsBNFNode2;
    }(_nonTerminal.default);
    exports.default = DefinitionsBNFNode;
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/sequenceOfParts.js
  var require_sequenceOfParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal2());
    var _array = require_array3();
    var _lookAhead = require_lookAhead();
    var _partTypes = require_partTypes();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SequenceOfPartsPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(SequenceOfPartsPart2, NonTerminalPart);
      var _super = _createSuper(SequenceOfPartsPart2);
      function SequenceOfPartsPart2(parts) {
        _classCallCheck(this, SequenceOfPartsPart2);
        var _this;
        var type = _partTypes.SequenceOfPartsPartType;
        _this = _super.call(this, type);
        _this.parts = parts;
        return _this;
      }
      _createClass(SequenceOfPartsPart2, [
        {
          key: "getParts",
          value: function getParts() {
            return this.parts;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var savedIndex = state.getSavedIndex(), partsNodes = [], index = 0;
            parsed = (0, _lookAhead).parseParts(this.parts, partsNodes, index, state, callback);
            if (parsed) {
              (0, _array).push(nodes, partsNodes);
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partsString1 = this.parts.reduce(function(partsString, part) {
              var partString = part.asString();
              if (partsString === null) {
                partsString = partString;
              } else {
                partsString = "".concat(partsString, " ").concat(partString);
              }
              return partsString;
            }, null), string = "( ".concat(partsString1, " )");
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(SequenceOfPartsPart2.prototype), "clone", this).call(this, SequenceOfPartsPart2, this.parts);
          }
        }
      ], [
        {
          key: "fromNodes",
          value: function fromNodes(nodes) {
            var allButFirstAndLastNodes = (0, _array).allButFirstAndLast(nodes);
            nodes = allButFirstAndLastNodes;
            var lookAhead = false, parts = nodes.map(function(node) {
              var part = node.generatePart(lookAhead);
              return part;
            }), sequenceOfPartsPart = new SequenceOfPartsPart2(parts);
            return sequenceOfPartsPart;
          }
        }
      ]);
      return SequenceOfPartsPart2;
    }(_nonTerminal.default);
    exports.default = SequenceOfPartsPart;
  });

  // node_modules/occam-parsers/lib/definition/definitions.js
  var require_definitions2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    var _zeroOrMoreParts = _interopRequireDefault2(require_zeroOrMoreParts());
    var _sequenceOfParts = _interopRequireDefault2(require_sequenceOfParts());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var verticalBar = _occamLexers.specialSymbols.verticalBar;
    var DefinitionsDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(DefinitionsDefinition2, Definition);
      var _super = _createSuper(DefinitionsDefinition2);
      function DefinitionsDefinition2() {
        _classCallCheck(this, DefinitionsDefinition2);
        var definitionRuleName = _ruleNames.DefinitionRuleName, verticalBarTerminalSymbolContent = verticalBar, definitionRuleNamePart = new _ruleName.default(definitionRuleName), verticalBarTerminalSymbolPart = new _terminalSymbol.default(verticalBarTerminalSymbolContent), verticalBarTerminalSymbolThenDefinitionRuleNameParts = [
          verticalBarTerminalSymbolPart,
          definitionRuleNamePart
        ], sequenceOfPartsPart = new _sequenceOfParts.default(verticalBarTerminalSymbolThenDefinitionRuleNameParts), zeroOrMoreSequenceOfPartsPart = new _zeroOrMoreParts.default(sequenceOfPartsPart), parts = [
          definitionRuleNamePart,
          zeroOrMoreSequenceOfPartsPart
        ];
        return _super.call(this, parts);
      }
      return DefinitionsDefinition2;
    }(_definition.default);
    exports.default = DefinitionsDefinition;
  });

  // node_modules/occam-parsers/lib/rule/definitions.js
  var require_definitions3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _definitions = _interopRequireDefault2(require_definitions());
    var _definitions1 = _interopRequireDefault2(require_definitions2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DefinitionsRule = /* @__PURE__ */ function(Rule) {
      _inherits(DefinitionsRule2, Rule);
      var _super = _createSuper(DefinitionsRule2);
      function DefinitionsRule2() {
        _classCallCheck(this, DefinitionsRule2);
        var definitionsDefinition = new _definitions1.default(), name = _ruleNames.DefinitionsRuleName, definitions = [
          definitionsDefinition
        ], Node2 = _definitions.default;
        return _super.call(this, name, definitions, Node2);
      }
      return DefinitionsRule2;
    }(_rule.default);
    exports.default = DefinitionsRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/part/terminal.js
  var require_terminal4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TerminalPartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(TerminalPartBNFNode2, NonTerminalNode);
      var _super = _createSuper(TerminalPartBNFNode2);
      function TerminalPartBNFNode2() {
        _classCallCheck(this, TerminalPartBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(TerminalPartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var childNodes = this.getChildNodes(), firstChildNode = (0, _array).first(childNodes), node = firstChildNode, part = node.generatePart(lookAhead);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(TerminalPartBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return TerminalPartBNFNode2;
    }(_nonTerminal.default);
    exports.default = TerminalPartBNFNode;
  });

  // node_modules/occam-parsers/lib/rule/terminalPart.js
  var require_terminalPart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _terminal = _interopRequireDefault2(require_terminal4());
    var _ruleName = _interopRequireDefault2(require_ruleName3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TerminalPartRule = /* @__PURE__ */ function(Rule) {
      _inherits(TerminalPartRule2, Rule);
      var _super = _createSuper(TerminalPartRule2);
      function TerminalPartRule2() {
        _classCallCheck(this, TerminalPartRule2);
        var name = _ruleNames.TerminalPartRuleName, wildcardRuleName = _ruleNames.WildcardRuleName, endOfLineRuleName = _ruleNames.EndOfLineRuleName, terminalSymbolRuleName = _ruleNames.TerminalSymbolRuleName, regularExpressionRuleName = _ruleNames.RegularExpressionRuleName, significantTokenTypeRuleName = _ruleNames.SignificantTokenTypeRuleName, wildcardRuleNameDefinition = new _ruleName.default(wildcardRuleName), endOfLineRuleNameDefinition = new _ruleName.default(endOfLineRuleName), terminalSymbolRuleNameDefinition = new _ruleName.default(terminalSymbolRuleName), regularExpressionRuleNameDefinition = new _ruleName.default(regularExpressionRuleName), significantTokenTypeRuleNameDefinition = new _ruleName.default(significantTokenTypeRuleName), definitions = [
          significantTokenTypeRuleNameDefinition,
          regularExpressionRuleNameDefinition,
          terminalSymbolRuleNameDefinition,
          endOfLineRuleNameDefinition,
          wildcardRuleNameDefinition
        ], Node2 = _terminal.default;
        return _super.call(this, name, definitions, Node2);
      }
      return TerminalPartRule2;
    }(_rule.default);
    exports.default = TerminalPartRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/choiceOfParts.js
  var require_choiceOfParts2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _choiceOfParts = _interopRequireDefault2(require_choiceOfParts());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ChoiceOfPartsBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(ChoiceOfPartsBNFNode2, NonTerminalNode);
      var _super = _createSuper(ChoiceOfPartsBNFNode2);
      function ChoiceOfPartsBNFNode2() {
        _classCallCheck(this, ChoiceOfPartsBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(ChoiceOfPartsBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var childNodes = this.getChildNodes(), nodes = childNodes.slice(), part = _choiceOfParts.default.fromNodes(nodes);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(ChoiceOfPartsBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return ChoiceOfPartsBNFNode2;
    }(_nonTerminal.default);
    exports.default = ChoiceOfPartsBNFNode;
  });

  // node_modules/occam-parsers/lib/definition/choiceOfParts.js
  var require_choiceOfParts3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _oneOrMoreParts = _interopRequireDefault2(require_oneOrMoreParts());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    var _sequenceOfParts = _interopRequireDefault2(require_sequenceOfParts());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var verticalBar = _occamLexers.specialSymbols.verticalBar;
    var openBracket = _occamLexers.specialSymbols.openBracket;
    var closeBracket = _occamLexers.specialSymbols.closeBracket;
    var ChoiceOfPartsDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(ChoiceOfPartsDefinition2, Definition);
      var _super = _createSuper(ChoiceOfPartsDefinition2);
      function ChoiceOfPartsDefinition2() {
        _classCallCheck(this, ChoiceOfPartsDefinition2);
        var partRuleName = _ruleNames.PartRuleName, verticalBarTerminalSymbolContent = verticalBar, openBracketTerminalSymbolContent = openBracket, closeBracketTerminalSymbolContent = closeBracket, partRuleNamePart = new _ruleName.default(partRuleName), verticalBarTerminalSymbolPart = new _terminalSymbol.default(verticalBarTerminalSymbolContent), openBracketTerminalSymbolPart = new _terminalSymbol.default(openBracketTerminalSymbolContent), closeBracketTerminalSymbolPart = new _terminalSymbol.default(closeBracketTerminalSymbolContent), verticalBarTerminalSymbolThenPartRuleNameParts = [
          verticalBarTerminalSymbolPart,
          partRuleNamePart
        ], sequenceOfPartsPart = new _sequenceOfParts.default(verticalBarTerminalSymbolThenPartRuleNameParts), oneOrMoreSequenceOfPartsPart = new _oneOrMoreParts.default(sequenceOfPartsPart), parts = [
          openBracketTerminalSymbolPart,
          partRuleNamePart,
          oneOrMoreSequenceOfPartsPart,
          closeBracketTerminalSymbolPart
        ];
        return _super.call(this, parts);
      }
      return ChoiceOfPartsDefinition2;
    }(_definition.default);
    exports.default = ChoiceOfPartsDefinition;
  });

  // node_modules/occam-parsers/lib/rule/choiceOfParts.js
  var require_choiceOfParts4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _choiceOfParts = _interopRequireDefault2(require_choiceOfParts2());
    var _choiceOfParts1 = _interopRequireDefault2(require_choiceOfParts3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ChoiceOfPartsRule = /* @__PURE__ */ function(Rule) {
      _inherits(ChoiceOfPartsRule2, Rule);
      var _super = _createSuper(ChoiceOfPartsRule2);
      function ChoiceOfPartsRule2() {
        _classCallCheck(this, ChoiceOfPartsRule2);
        var name = _ruleNames.ChoiceOfPartsRuleName, choiceOfPartsDefinition = new _choiceOfParts1.default(), definitions = [
          choiceOfPartsDefinition
        ], Node2 = _choiceOfParts.default;
        return _super.call(this, name, definitions, Node2);
      }
      return ChoiceOfPartsRule2;
    }(_rule.default);
    exports.default = ChoiceOfPartsRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/terminalSymbol.js
  var require_terminalSymbol3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TerminalSymbolBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(TerminalSymbolBNFNode2, NonTerminalNode);
      var _super = _createSuper(TerminalSymbolBNFNode2);
      function TerminalSymbolBNFNode2() {
        _classCallCheck(this, TerminalSymbolBNFNode2);
        var _this;
        _this = _super.apply(this, arguments);
        _defineProperty(_assertThisInitialized(_this), "regularExpression", /^"((?:\\.|[^"\\])*)"$/);
        return _this;
      }
      _createClass(TerminalSymbolBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var content = this.getContent(), terminalSymbolPart = new _terminalSymbol.default(content);
            return terminalSymbolPart;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            var childNodes = this.getChildNodes(), firstChildNode = (0, _array).first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), matches = terminalNodeContent.match(this.regularExpression), secondMatch = (0, _array).second(matches), content = secondMatch.replace(/\\\\/g, "\\").replace(/\\"/g, '"');
            return content;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(TerminalSymbolBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return TerminalSymbolBNFNode2;
    }(_nonTerminal.default);
    exports.default = TerminalSymbolBNFNode;
  });

  // node_modules/occam-parsers/lib/definition/significantTokenType.js
  var require_significantTokenType2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SignificantTokenTypeDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(SignificantTokenTypeDefinition2, Definition);
      var _super = _createSuper(SignificantTokenTypeDefinition2);
      function SignificantTokenTypeDefinition2(significantTokenType) {
        _classCallCheck(this, SignificantTokenTypeDefinition2);
        var significantTokenTypePart = new _significantTokenType.default(significantTokenType), parts = [
          significantTokenTypePart
        ];
        return _super.call(this, parts);
      }
      return SignificantTokenTypeDefinition2;
    }(_definition.default);
    exports.default = SignificantTokenTypeDefinition;
  });

  // node_modules/occam-parsers/lib/rule/terminalSymbol.js
  var require_terminalSymbol4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol3());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var stringLiteralType = _occamLexers.types.stringLiteralType;
    var TerminalSymbolRule = /* @__PURE__ */ function(Rule) {
      _inherits(TerminalSymbolRule2, Rule);
      var _super = _createSuper(TerminalSymbolRule2);
      function TerminalSymbolRule2() {
        _classCallCheck(this, TerminalSymbolRule2);
        var stringLiteralSignificantTokenType = stringLiteralType, stringLiteralSignificantTokenTypeDefinition = new _significantTokenType.default(stringLiteralSignificantTokenType), name = _ruleNames.TerminalSymbolRuleName, definitions = [
          stringLiteralSignificantTokenTypeDefinition
        ], Node2 = _terminalSymbol.default;
        return _super.call(this, name, definitions, Node2);
      }
      return TerminalSymbolRule2;
    }(_rule.default);
    exports.default = TerminalSymbolRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/part/nonTerminal.js
  var require_nonTerminal4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NonTerminalPartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(NonTerminalPartBNFNode2, NonTerminalNode);
      var _super = _createSuper(NonTerminalPartBNFNode2);
      function NonTerminalPartBNFNode2() {
        _classCallCheck(this, NonTerminalPartBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(NonTerminalPartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var childNodes = this.getChildNodes(), nodes = childNodes.slice(), part = partFromNodes(nodes, lookAhead);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(NonTerminalPartBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return NonTerminalPartBNFNode2;
    }(_nonTerminal.default);
    exports.default = NonTerminalPartBNFNode;
    function partFromNodes(nodes, lookAhead) {
      var part = null;
      var nodesLength = nodes.length;
      if (nodesLength === 1) {
        var node = nodes.pop();
        part = node.generatePart(lookAhead);
      } else {
        nodes.pop();
        lookAhead = true;
        part = partFromNodes(nodes, lookAhead);
      }
      return part;
    }
  });

  // node_modules/occam-parsers/lib/definition/partRule/nonTerminal/ruleName.js
  var require_ruleName6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _optionalPart = _interopRequireDefault2(require_optionalPart());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleNameNonTerminalPartRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RuleNameNonTerminalPartRuleDefinition2, Definition);
      var _super = _createSuper(RuleNameNonTerminalPartRuleDefinition2);
      function RuleNameNonTerminalPartRuleDefinition2() {
        _classCallCheck(this, RuleNameNonTerminalPartRuleDefinition2);
        var ruleNameRuleName = _ruleNames.RuleNameRuleName, lookAheadModifierRuleName = _ruleNames.LookAheadModifierRuleName, ruleNameRuleNamePart = new _ruleName.default(ruleNameRuleName), lookAheadModifierRuleNamePart = new _ruleName.default(lookAheadModifierRuleName), optionalLookAheadRuleNamePartPart = new _optionalPart.default(lookAheadModifierRuleNamePart), parts = [
          ruleNameRuleNamePart,
          optionalLookAheadRuleNamePartPart
        ];
        return _super.call(this, parts);
      }
      return RuleNameNonTerminalPartRuleDefinition2;
    }(_definition.default);
    exports.default = RuleNameNonTerminalPartRuleDefinition;
  });

  // node_modules/occam-parsers/lib/rule/nonTerminalPart.js
  var require_nonTerminalPart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _ruleName = _interopRequireDefault2(require_ruleName3());
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal4());
    var _ruleName1 = _interopRequireDefault2(require_ruleName6());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NonTerminalPartRule = /* @__PURE__ */ function(Rule) {
      _inherits(NonTerminalPartRule2, Rule);
      var _super = _createSuper(NonTerminalPartRule2);
      function NonTerminalPartRule2() {
        _classCallCheck(this, NonTerminalPartRule2);
        var name = _ruleNames.NonTerminalPartRuleName, choiceOfPartsRuleName = _ruleNames.ChoiceOfPartsRuleName, sequenceOfPartsRuleName = _ruleNames.SequenceOfPartsRuleName, choiceOfPartsRuleNameDefinition = new _ruleName.default(choiceOfPartsRuleName), sequenceOfPartsRuleNameDefinition = new _ruleName.default(sequenceOfPartsRuleName), ruleNameNonTerminalPartRuleDefinition = new _ruleName1.default(), definitions = [
          choiceOfPartsRuleNameDefinition,
          sequenceOfPartsRuleNameDefinition,
          ruleNameNonTerminalPartRuleDefinition
        ], Node2 = _nonTerminal.default;
        return _super.call(this, name, definitions, Node2);
      }
      return NonTerminalPartRule2;
    }(_rule.default);
    exports.default = NonTerminalPartRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/sequenceOfParts.js
  var require_sequenceOfParts2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _sequenceOfParts = _interopRequireDefault2(require_sequenceOfParts());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SequenceOfPartsBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(SequenceOfPartsBNFNode2, NonTerminalNode);
      var _super = _createSuper(SequenceOfPartsBNFNode2);
      function SequenceOfPartsBNFNode2() {
        _classCallCheck(this, SequenceOfPartsBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(SequenceOfPartsBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var childNodes = this.getChildNodes(), nodes = childNodes.slice(), part = _sequenceOfParts.default.fromNodes(nodes);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(SequenceOfPartsBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return SequenceOfPartsBNFNode2;
    }(_nonTerminal.default);
    exports.default = SequenceOfPartsBNFNode;
  });

  // node_modules/occam-parsers/lib/definition/sequenceOfParts.js
  var require_sequenceOfParts3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _definition = _interopRequireDefault2(require_definition());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    var _oneOrMoreParts = _interopRequireDefault2(require_oneOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var openBracket = _occamLexers.specialSymbols.openBracket;
    var closeBracket = _occamLexers.specialSymbols.closeBracket;
    var SequenceOfPartsDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(SequenceOfPartsDefinition2, Definition);
      var _super = _createSuper(SequenceOfPartsDefinition2);
      function SequenceOfPartsDefinition2() {
        _classCallCheck(this, SequenceOfPartsDefinition2);
        var partRuleName = _ruleNames.PartRuleName, openBracketTerminalSymbolContent = openBracket, closeBracketTerminalSymbolContent = closeBracket, partRuleNamePart = new _ruleName.default(partRuleName), openBracketTerminalSymbolPart = new _terminalSymbol.default(openBracketTerminalSymbolContent), closeBracketTerminalSymbolPart = new _terminalSymbol.default(closeBracketTerminalSymbolContent), oneOrMorePartRuleNamePartsPart = new _oneOrMoreParts.default(partRuleNamePart), parts = [
          openBracketTerminalSymbolPart,
          partRuleNamePart,
          oneOrMorePartRuleNamePartsPart,
          closeBracketTerminalSymbolPart
        ];
        return _super.call(this, parts);
      }
      return SequenceOfPartsDefinition2;
    }(_definition.default);
    exports.default = SequenceOfPartsDefinition;
  });

  // node_modules/occam-parsers/lib/rule/sequenceOfParts.js
  var require_sequenceOfParts4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _sequenceOfParts = _interopRequireDefault2(require_sequenceOfParts2());
    var _sequenceOfParts1 = _interopRequireDefault2(require_sequenceOfParts3());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SequenceOfPartsRule = /* @__PURE__ */ function(Rule) {
      _inherits(SequenceOfPartsRule2, Rule);
      var _super = _createSuper(SequenceOfPartsRule2);
      function SequenceOfPartsRule2() {
        _classCallCheck(this, SequenceOfPartsRule2);
        var name = _ruleNames.SequenceOfPartsRuleName, sequenceOfPartsDefinition = new _sequenceOfParts1.default(), definitions = [
          sequenceOfPartsDefinition
        ], Node2 = _sequenceOfParts.default;
        return _super.call(this, name, definitions, Node2);
      }
      return SequenceOfPartsRule2;
    }(_rule.default);
    exports.default = SequenceOfPartsRule;
  });

  // node_modules/occam-parsers/lib/parseTree/noWhitespaceNode.js
  var require_noWhitespaceNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _verticalBranch = _interopRequireDefault2(require_verticalBranch());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NO_WHITESPACE = _occamLexers.specialSymbols.NO_WHITESPACE;
    var NoWhitespaceNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(NoWhitespaceNodeParseTree2, VerticalBranchParseTree);
      var _super = _createSuper(NoWhitespaceNodeParseTree2);
      function NoWhitespaceNodeParseTree2() {
        _classCallCheck(this, NoWhitespaceNodeParseTree2);
        return _super.apply(this, arguments);
      }
      _createClass(NoWhitespaceNodeParseTree2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var string = NO_WHITESPACE, stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(NoWhitespaceNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            var noWhitespaceNodeParseTree = terminalNodeParseTree;
            return noWhitespaceNodeParseTree;
          }
        }
      ]);
      return NoWhitespaceNodeParseTree2;
    }(_verticalBranch.default);
    exports.default = NoWhitespaceNodeParseTree;
  });

  // node_modules/occam-parsers/lib/node/terminal/noWhitespace.js
  var require_noWhitespace = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _terminal = _interopRequireDefault2(require_terminal2());
    var _noWhitespaceNode = _interopRequireDefault2(require_noWhitespaceNode());
    var _constants = require_constants4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NoWhitespaceNode = /* @__PURE__ */ function(TerminalNode) {
      _inherits(NoWhitespaceNode2, TerminalNode);
      var _super = _createSuper(NoWhitespaceNode2);
      function NoWhitespaceNode2() {
        _classCallCheck(this, NoWhitespaceNode2);
        return _super.apply(this, arguments);
      }
      _createClass(NoWhitespaceNode2, [
        {
          key: "getType",
          value: function getType() {
            var type = null;
            return type;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            var content = _constants.EMPTY_STRING;
            return content;
          }
        },
        {
          key: "isNoWhitespaceNode",
          value: function isNoWhitespaceNode() {
            var noWhitespaceNode = true;
            return noWhitespaceNode;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var noWhitespaceNodeParseTree = _noWhitespaceNode.default.fromNothing(), parseTree = noWhitespaceNodeParseTree;
            return parseTree;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var significantToken = null, noWhitespaceNode = _terminal.default.fromSignificantToken(NoWhitespaceNode2, significantToken);
            return noWhitespaceNode;
          }
        }
      ]);
      return NoWhitespaceNode2;
    }(_terminal.default);
    exports.default = NoWhitespaceNode;
  });

  // node_modules/occam-parsers/lib/part/terminal/noWhitespace.js
  var require_noWhitespace2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _terminal = _interopRequireDefault2(require_terminal());
    var _noWhitespace = _interopRequireDefault2(require_noWhitespace());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NO_WHITESPACE = _occamLexers.specialSymbols.NO_WHITESPACE;
    var NoWhitespacePart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(NoWhitespacePart2, TerminalPart);
      var _super = _createSuper(NoWhitespacePart2);
      function NoWhitespacePart2() {
        _classCallCheck(this, NoWhitespacePart2);
        return _super.apply(this, arguments);
      }
      _createClass(NoWhitespacePart2, [
        {
          key: "isNoWhitespacePart",
          value: function isNoWhitespacePart() {
            var noWhitespacePart = true;
            return noWhitespacePart;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var noWhitespaceNode = null;
            var savedIndex = state.getSavedIndex(), nextTokenWhitespaceToken = state.isNextTokenWhitespaceToken();
            if (!nextTokenWhitespaceToken) {
              noWhitespaceNode = _noWhitespace.default.fromNothing();
            }
            parsed = noWhitespaceNode !== null;
            if (parsed) {
              nodes.push(noWhitespaceNode);
              if (callback !== null) {
                parsed = callback();
                if (!parsed) {
                  nodes.pop();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = NO_WHITESPACE;
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(NoWhitespacePart2.prototype), "clone", this).call(this, NoWhitespacePart2);
          }
        }
      ]);
      return NoWhitespacePart2;
    }(_terminal.default);
    exports.default = NoWhitespacePart;
  });

  // node_modules/occam-parsers/lib/node/bnf/noWhitespacePart.js
  var require_noWhitespacePart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _noWhitespace = _interopRequireDefault2(require_noWhitespace2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NoWhitespacePartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(NoWhitespacePartBNFNode2, NonTerminalNode);
      var _super = _createSuper(NoWhitespacePartBNFNode2);
      function NoWhitespacePartBNFNode2() {
        _classCallCheck(this, NoWhitespacePartBNFNode2);
        return _super.apply(this, arguments);
      }
      _createClass(NoWhitespacePartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var noWhitespacePart = new _noWhitespace.default();
            return noWhitespacePart;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(NoWhitespacePartBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return NoWhitespacePartBNFNode2;
    }(_nonTerminal.default);
    exports.default = NoWhitespacePartBNFNode;
  });

  // node_modules/occam-parsers/lib/definition/noWhitespacePart.js
  var require_noWhitespacePart2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _definition = _interopRequireDefault2(require_definition());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NO_WHITESPACE = _occamLexers.specialSymbols.NO_WHITESPACE;
    var NoWhitespacePartDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(NoWhitespacePartDefinition2, Definition);
      var _super = _createSuper(NoWhitespacePartDefinition2);
      function NoWhitespacePartDefinition2() {
        _classCallCheck(this, NoWhitespacePartDefinition2);
        var content = NO_WHITESPACE, terminalSymbolPart = new _terminalSymbol.default(content), parts = [
          terminalSymbolPart
        ];
        return _super.call(this, parts);
      }
      return NoWhitespacePartDefinition2;
    }(_definition.default);
    exports.default = NoWhitespacePartDefinition;
  });

  // node_modules/occam-parsers/lib/rule/noWhitespacePart.js
  var require_noWhitespacePart3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _noWhitespacePart = _interopRequireDefault2(require_noWhitespacePart());
    var _noWhitespacePart1 = _interopRequireDefault2(require_noWhitespacePart2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NoWhitespacePartRule = /* @__PURE__ */ function(Rule) {
      _inherits(NoWhitespacePartRule2, Rule);
      var _super = _createSuper(NoWhitespacePartRule2);
      function NoWhitespacePartRule2() {
        _classCallCheck(this, NoWhitespacePartRule2);
        var noWhitespacePartDefinition = new _noWhitespacePart1.default(), name = _ruleNames.NoWhitespacePartRuleName, definitions = [
          noWhitespacePartDefinition
        ], Node2 = _noWhitespacePart.default;
        return _super.call(this, name, definitions, Node2);
      }
      return NoWhitespacePartRule2;
    }(_rule.default);
    exports.default = NoWhitespacePartRule;
  });

  // node_modules/occam-parsers/lib/definition/lookAheadModifierRule.js
  var require_lookAheadModifierRule = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _definition = _interopRequireDefault2(require_definition());
    var _noWhitespace = _interopRequireDefault2(require_noWhitespace2());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var exclamationMark = _occamLexers.specialSymbols.exclamationMark;
    var LookAheadModifierRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(LookAheadModifierRuleDefinition2, Definition);
      var _super = _createSuper(LookAheadModifierRuleDefinition2);
      function LookAheadModifierRuleDefinition2() {
        _classCallCheck(this, LookAheadModifierRuleDefinition2);
        var content = exclamationMark, noWhitespacePart = new _noWhitespace.default(), terminalSymbolPart = new _terminalSymbol.default(content), parts = [
          noWhitespacePart,
          terminalSymbolPart
        ];
        return _super.call(this, parts);
      }
      return LookAheadModifierRuleDefinition2;
    }(_definition.default);
    exports.default = LookAheadModifierRuleDefinition;
  });

  // node_modules/occam-parsers/lib/rule/lookAheadModifier.js
  var require_lookAheadModifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _rule = _interopRequireDefault2(require_rule2());
    var _definition = _interopRequireDefault2(require_definition2());
    var _lookAheadModifierRule = _interopRequireDefault2(require_lookAheadModifierRule());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var LookAheadModifierRule = /* @__PURE__ */ function(Rule) {
      _inherits(LookAheadModifierRule2, Rule);
      var _super = _createSuper(LookAheadModifierRule2);
      function LookAheadModifierRule2() {
        _classCallCheck(this, LookAheadModifierRule2);
        var name = _ruleNames.LookAheadModifierRuleName, lookAheadModifierRuleDefinition = new _lookAheadModifierRule.default(), definitions = [
          lookAheadModifierRuleDefinition
        ], Node2 = _definition.default;
        return _super.call(this, name, definitions, Node2);
      }
      return LookAheadModifierRule2;
    }(_rule.default);
    exports.default = LookAheadModifierRule;
  });

  // node_modules/occam-parsers/lib/part/terminal/regularExpression.js
  var require_regularExpression2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _terminal = _interopRequireDefault2(require_terminal());
    var _terminal1 = _interopRequireDefault2(require_terminal2());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function _get2(target2, property2, receiver2) {
          var base = _superPropBase(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _superPropBase(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null)
          break;
      }
      return object;
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RegularExpressionPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(RegularExpressionPart2, TerminalPart);
      var _super = _createSuper(RegularExpressionPart2);
      function RegularExpressionPart2(regularExpression) {
        _classCallCheck(this, RegularExpressionPart2);
        var _this;
        _this = _super.call(this);
        _this.regularExpression = regularExpression;
        return _this;
      }
      _createClass(RegularExpressionPart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var content = significantToken.getContent(), matches = content.match(this.regularExpression);
              if (matches !== null) {
                var firstMatch = (0, _array).first(matches);
                if (firstMatch === content) {
                  terminalNode = _terminal1.default.fromSignificantToken(significantToken);
                }
              }
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (callback !== null) {
                parsed = callback();
                if (!parsed) {
                  nodes.pop();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var regularExpressionString = this.regularExpression.toString(), string = regularExpressionString;
            return string;
          }
        },
        {
          key: "clone",
          value: function clone() {
            return _get(_getPrototypeOf(RegularExpressionPart2.prototype), "clone", this).call(this, RegularExpressionPart2, this.regularExpression);
          }
        }
      ]);
      return RegularExpressionPart2;
    }(_terminal.default);
    exports.default = RegularExpressionPart;
  });

  // node_modules/occam-parsers/lib/node/bnf/regularExpression.js
  var require_regularExpression3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _regularExpression = _interopRequireDefault2(require_regularExpression2());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RegularExpressionBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(RegularExpressionBNFNode2, NonTerminalNode);
      var _super = _createSuper(RegularExpressionBNFNode2);
      function RegularExpressionBNFNode2() {
        _classCallCheck(this, RegularExpressionBNFNode2);
        var _this;
        _this = _super.apply(this, arguments);
        _defineProperty(_assertThisInitialized(_this), "regularExpression", /^\/((?:\\.|[^\/])*)\/$/);
        return _this;
      }
      _createClass(RegularExpressionBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var regularExpression = this.getRegularExpression(), regularExpressionPart = new _regularExpression.default(regularExpression);
            return regularExpressionPart;
          }
        },
        {
          key: "getRegularExpression",
          value: function getRegularExpression() {
            var childNodes = this.getChildNodes(), firstChildNode = (0, _array).first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), matches = terminalNodeContent.match(this.regularExpression), secondMatch = (0, _array).second(matches), pattern = secondMatch, regularExpression = new RegExp(pattern);
            return regularExpression;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(RegularExpressionBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return RegularExpressionBNFNode2;
    }(_nonTerminal.default);
    exports.default = RegularExpressionBNFNode;
  });

  // node_modules/occam-parsers/lib/rule/regularExpression.js
  var require_regularExpression4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _regularExpression = _interopRequireDefault2(require_regularExpression3());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var regularExpressionType = _occamLexers.types.regularExpressionType;
    var RegularExpressionRule = /* @__PURE__ */ function(Rule) {
      _inherits(RegularExpressionRule2, Rule);
      var _super = _createSuper(RegularExpressionRule2);
      function RegularExpressionRule2() {
        _classCallCheck(this, RegularExpressionRule2);
        var regularExpressionSignificantTokenType = regularExpressionType, regularExpressionSignificantTokenTypeDefinition = new _significantTokenType.default(regularExpressionSignificantTokenType), name = _ruleNames.RegularExpressionRuleName, definitions = [
          regularExpressionSignificantTokenTypeDefinition
        ], Node2 = _regularExpression.default;
        return _super.call(this, name, definitions, Node2);
      }
      return RegularExpressionRule2;
    }(_rule.default);
    exports.default = RegularExpressionRule;
  });

  // node_modules/occam-parsers/lib/definition/quantifierRule.js
  var require_quantifierRule = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _definition = _interopRequireDefault2(require_definition());
    var _noWhitespace = _interopRequireDefault2(require_noWhitespace2());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var QuantifierRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(QuantifierRuleDefinition2, Definition);
      var _super = _createSuper(QuantifierRuleDefinition2);
      function QuantifierRuleDefinition2(terminalSymbolContent) {
        _classCallCheck(this, QuantifierRuleDefinition2);
        var content = terminalSymbolContent, noWhitespacePart = new _noWhitespace.default(), terminalSymbolPart = new _terminalSymbol.default(content), parts = [
          noWhitespacePart,
          terminalSymbolPart
        ];
        return _super.call(this, parts);
      }
      return QuantifierRuleDefinition2;
    }(_definition.default);
    exports.default = QuantifierRuleDefinition;
  });

  // node_modules/occam-parsers/lib/rule/optionalQuantifier.js
  var require_optionalQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _definition = _interopRequireDefault2(require_definition2());
    var _quantifierRule = _interopRequireDefault2(require_quantifierRule());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var questionMark = _occamLexers.specialSymbols.questionMark;
    var OptionalQuantifierRule = /* @__PURE__ */ function(Rule) {
      _inherits(OptionalQuantifierRule2, Rule);
      var _super = _createSuper(OptionalQuantifierRule2);
      function OptionalQuantifierRule2() {
        _classCallCheck(this, OptionalQuantifierRule2);
        var name = _ruleNames.OptionalQuantifierRuleName, optionalQuantifierTerminalSymbolContent = questionMark, optionalQuantifierRuleDefinition = new _quantifierRule.default(optionalQuantifierTerminalSymbolContent), definitions = [
          optionalQuantifierRuleDefinition
        ], Node2 = _definition.default;
        return _super.call(this, name, definitions, Node2);
      }
      return OptionalQuantifierRule2;
    }(_rule.default);
    exports.default = OptionalQuantifierRule;
  });

  // node_modules/occam-parsers/lib/rule/oneOrMoreQuantifier.js
  var require_oneOrMoreQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _definition = _interopRequireDefault2(require_definition2());
    var _quantifierRule = _interopRequireDefault2(require_quantifierRule());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var plus = _occamLexers.specialSymbols.plus;
    var OneOrMoreQuantifierRule = /* @__PURE__ */ function(Rule) {
      _inherits(OneOrMoreQuantifierRule2, Rule);
      var _super = _createSuper(OneOrMoreQuantifierRule2);
      function OneOrMoreQuantifierRule2() {
        _classCallCheck(this, OneOrMoreQuantifierRule2);
        var name = _ruleNames.OneOrMoreQuantifierRuleName, oneOrMoreQuantifierTerminalSymbolContent = plus, oneOrMoreQuantifierRuleDefinition = new _quantifierRule.default(oneOrMoreQuantifierTerminalSymbolContent), definitions = [
          oneOrMoreQuantifierRuleDefinition
        ], Node2 = _definition.default;
        return _super.call(this, name, definitions, Node2);
      }
      return OneOrMoreQuantifierRule2;
    }(_rule.default);
    exports.default = OneOrMoreQuantifierRule;
  });

  // node_modules/occam-parsers/lib/rule/zeroOrMoreQuantifier.js
  var require_zeroOrMoreQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _definition = _interopRequireDefault2(require_definition2());
    var _quantifierRule = _interopRequireDefault2(require_quantifierRule());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var asterisk = _occamLexers.specialSymbols.asterisk;
    var ZeroOrMoreQuantifierRule = /* @__PURE__ */ function(Rule) {
      _inherits(ZeroOrMoreQuantifierRule2, Rule);
      var _super = _createSuper(ZeroOrMoreQuantifierRule2);
      function ZeroOrMoreQuantifierRule2() {
        _classCallCheck(this, ZeroOrMoreQuantifierRule2);
        var name = _ruleNames.ZeroOrMoreQuantifierRuleName, zeroOrMoreQuantifierTerminalSymbolContent = asterisk, zeroOrMoreQuantifierRuleDefinition = new _quantifierRule.default(zeroOrMoreQuantifierTerminalSymbolContent), definitions = [
          zeroOrMoreQuantifierRuleDefinition
        ], Node2 = _definition.default;
        return _super.call(this, name, definitions, Node2);
      }
      return ZeroOrMoreQuantifierRule2;
    }(_rule.default);
    exports.default = ZeroOrMoreQuantifierRule;
  });

  // node_modules/occam-parsers/lib/node/bnf/significantTokenType.js
  var require_significantTokenType3 = __commonJS((exports, module) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType());
    var _array = require_array3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var SignificantTokenTypeBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(SignificantTokenTypeBNFNode2, NonTerminalNode);
      var _super = _createSuper(SignificantTokenTypeBNFNode2);
      function SignificantTokenTypeBNFNode2() {
        _classCallCheck(this, SignificantTokenTypeBNFNode2);
        var _this;
        _this = _super.apply(this, arguments);
        _defineProperty(_assertThisInitialized(_this), "regularExpression", /^\[([^\]]+)]$/);
        return _this;
      }
      _createClass(SignificantTokenTypeBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(lookAhead) {
            var significantTokenType = this.getSignificantTokenType(), significantTokenTypePart = new _significantTokenType.default(significantTokenType);
            return significantTokenTypePart;
          }
        },
        {
          key: "getSignificantTokenType",
          value: function getSignificantTokenType() {
            var childNodes = this.getChildNodes(), firstChildNode = (0, _array).first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), matches = terminalNodeContent.match(this.regularExpression), secondMatch = (0, _array).second(matches), significantTokenType = secondMatch;
            return significantTokenType;
          }
        }
      ], [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _nonTerminal.default.fromRuleNameAndChildNodes(SignificantTokenTypeBNFNode2, ruleName, childNodes);
          }
        }
      ]);
      return SignificantTokenTypeBNFNode2;
    }(_nonTerminal.default);
    exports.default = SignificantTokenTypeBNFNode;
    module.exports = SignificantTokenTypeBNFNode;
  });

  // node_modules/occam-parsers/lib/rule/significantTokenType.js
  var require_significantTokenType4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _rule = _interopRequireDefault2(require_rule2());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType3());
    var _significantTokenType1 = _interopRequireDefault2(require_significantTokenType2());
    var _ruleNames = require_ruleNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var typeType = _occamLexers.types.typeType;
    var SignificantTokenTypeRule = /* @__PURE__ */ function(Rule) {
      _inherits(SignificantTokenTypeRule2, Rule);
      var _super = _createSuper(SignificantTokenTypeRule2);
      function SignificantTokenTypeRule2() {
        _classCallCheck(this, SignificantTokenTypeRule2);
        var typeSignificantTokenType = typeType, typeSignificantTokenTypeDefinition = new _significantTokenType1.default(typeSignificantTokenType), name = _ruleNames.SignificantTokenTypeRuleName, definitions = [
          typeSignificantTokenTypeDefinition
        ], Node2 = _significantTokenType.default;
        return _super.call(this, name, definitions, Node2);
      }
      return SignificantTokenTypeRule2;
    }(_rule.default);
    exports.default = SignificantTokenTypeRule;
  });

  // node_modules/occam-parsers/lib/utilities/rules.js
  var require_rules = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ruleMapFromRules = ruleMapFromRules;
    exports.startRuleFromRules = startRuleFromRules;
    var _array = require_array3();
    function ruleMapFromRules(rules) {
      var ruleMap = {};
      rules.forEach(function(rule) {
        var ruleName = rule.getName();
        ruleMap[ruleName] = rule;
      });
      return ruleMap;
    }
    function startRuleFromRules(rules) {
      var firstRule = (0, _array).first(rules), startRule = firstRule;
      return startRule;
    }
  });

  // node_modules/occam-parsers/lib/bnf/parser.js
  var require_parser = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _bnf = _interopRequireDefault2(require_bnf());
    var _rule = _interopRequireDefault2(require_rule2());
    var _state = _interopRequireDefault2(require_state2());
    var _name = _interopRequireDefault2(require_name4());
    var _part = _interopRequireDefault2(require_part3());
    var _rule1 = _interopRequireDefault2(require_rule5());
    var _error = _interopRequireDefault2(require_error3());
    var _document = _interopRequireDefault2(require_document4());
    var _ruleName = _interopRequireDefault2(require_ruleName5());
    var _wildcard = _interopRequireDefault2(require_wildcard3());
    var _endOfLine = _interopRequireDefault2(require_endOfLine8());
    var _quantifier = _interopRequireDefault2(require_quantifier());
    var _definition = _interopRequireDefault2(require_definition4());
    var _definitions = _interopRequireDefault2(require_definitions3());
    var _terminalPart = _interopRequireDefault2(require_terminalPart());
    var _choiceOfParts = _interopRequireDefault2(require_choiceOfParts4());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol4());
    var _nonTerminalPart = _interopRequireDefault2(require_nonTerminalPart());
    var _sequenceOfParts = _interopRequireDefault2(require_sequenceOfParts4());
    var _noWhitespacePart = _interopRequireDefault2(require_noWhitespacePart3());
    var _lookAheadModifier = _interopRequireDefault2(require_lookAheadModifier());
    var _regularExpression = _interopRequireDefault2(require_regularExpression4());
    var _optionalQuantifier = _interopRequireDefault2(require_optionalQuantifier());
    var _oneOrMoreQuantifier = _interopRequireDefault2(require_oneOrMoreQuantifier());
    var _zeroOrMoreQuantifier = _interopRequireDefault2(require_zeroOrMoreQuantifier());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType4());
    var _rules = require_rules();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var BNFParser = /* @__PURE__ */ function() {
      function BNFParser2(startRule, ruleMap) {
        _classCallCheck(this, BNFParser2);
        this.startRule = startRule;
        this.ruleMap = ruleMap;
      }
      _createClass(BNFParser2, [
        {
          key: "getStartRule",
          value: function getStartRule() {
            return this.startRule;
          }
        },
        {
          key: "getRuleMap",
          value: function getRuleMap() {
            return this.ruleMap;
          }
        },
        {
          key: "parse",
          value: function parse(tokens) {
            var rule = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.startRule;
            var state = _state.default.fromTokensAndRuleMap(tokens, this.ruleMap), callback = null, ruleNode = rule.parse(state, callback), node = ruleNode;
            return node;
          }
        },
        {
          key: "rulesFromTokens",
          value: function rulesFromTokens(tokens) {
            var rules;
            var node = this.parse(tokens);
            if (node === null) {
              throw new Error("There is no node.");
            }
            rules = node.generateRules(_rule.default);
            var rulesLength = rules.length;
            if (rulesLength === 0) {
              throw new Error("There are no rules.");
            }
            return rules;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var nameRule = new _name.default(), partRule = new _part.default(), ruleRule = new _rule1.default(), errorRule = new _error.default(), documentRule = new _document.default(), ruleNameRule = new _ruleName.default(), wildcardRule = new _wildcard.default(), endOfLineRule = new _endOfLine.default(), quantifierRule = new _quantifier.default(), definitionRule = new _definition.default(), definitionsRule = new _definitions.default(), terminalPartRule = new _terminalPart.default(), choiceOfPartsRule = new _choiceOfParts.default(), terminalSymbolRule = new _terminalSymbol.default(), nonTerminalPartRule = new _nonTerminalPart.default(), sequenceOfPartsRule = new _sequenceOfParts.default(), noWhitespacePartRule = new _noWhitespacePart.default(), regularExpressionRule = new _regularExpression.default(), lookAheadModifierRule = new _lookAheadModifier.default(), optionalQuantifierRule = new _optionalQuantifier.default(), oneOrMoreQuantifierRule = new _oneOrMoreQuantifier.default(), zeroOrMoreQuantifierRule = new _zeroOrMoreQuantifier.default(), significantTokenTypeRule = new _significantTokenType.default();
            var rules = [
              documentRule,
              ruleRule,
              nameRule,
              definitionsRule,
              definitionRule,
              partRule,
              nonTerminalPartRule,
              terminalPartRule,
              noWhitespacePartRule,
              sequenceOfPartsRule,
              choiceOfPartsRule,
              ruleNameRule,
              significantTokenTypeRule,
              regularExpressionRule,
              terminalSymbolRule,
              endOfLineRule,
              wildcardRule,
              quantifierRule,
              lookAheadModifierRule,
              optionalQuantifierRule,
              oneOrMoreQuantifierRule,
              zeroOrMoreQuantifierRule,
              errorRule
            ];
            var startRule = (0, _rules).startRuleFromRules(rules), ruleMap = (0, _rules).ruleMapFromRules(rules), bnfParser = new BNFParser2(startRule, ruleMap);
            return bnfParser;
          }
        }
      ]);
      return BNFParser2;
    }();
    exports.default = BNFParser;
    _defineProperty(BNFParser, "bnf", _bnf.default);
  });

  // node_modules/occam-parsers/lib/basic/bnf.js
  var require_bnf3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = '\n\n  expression  ::= expression_ operator expression expression~*\n\n                | expression_\n\n                ;\n\n  operator    ::= "+"\n\n                | "-"\n\n                | "/"\n\n                | "*"\n\n                ;\n\n  term        ::= /\\d+/ ;\n\n  expression_ ::= "(" expression ")"\n\n                | term\n\n                ;\n\n  expression~ ::= operator expression ;\n  \n';
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-parsers/lib/utilities/parser.js
  var require_parser2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.rulesFromBNF = rulesFromBNF;
    exports.parserFromRules = parserFromRules;
    var _occamLexers = require_lib3();
    var _parser = _interopRequireDefault2(require_parser());
    var _rules = require_rules();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var bnfLexer = _occamLexers.BNFLexer.fromNothing();
    var bnfParser = _parser.default.fromNothing();
    function rulesFromBNF(bnf) {
      var tokens = bnfLexer.tokensFromBNF(bnf), rules = bnfParser.rulesFromTokens(tokens);
      return rules;
    }
    function parserFromRules(Class, rules) {
      var startRule = (0, _rules).startRuleFromRules(rules), ruleMap = (0, _rules).ruleMapFromRules(rules), parser = new Class(startRule, ruleMap);
      return parser;
    }
  });

  // node_modules/occam-parsers/lib/common/parser.js
  var require_parser3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _state = _interopRequireDefault2(require_state2());
    var _parser = require_parser2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var CommonParser = /* @__PURE__ */ function() {
      function CommonParser2(startRule, ruleMap) {
        _classCallCheck(this, CommonParser2);
        this.startRule = startRule;
        this.ruleMap = ruleMap;
      }
      _createClass(CommonParser2, [
        {
          key: "getStartRule",
          value: function getStartRule() {
            return this.startRule;
          }
        },
        {
          key: "getRuleMap",
          value: function getRuleMap() {
            return this.ruleMap;
          }
        },
        {
          key: "parse",
          value: function parse(tokens) {
            var rule = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.startRule;
            var state = _state.default.fromTokensAndRuleMap(tokens, this.ruleMap), callback = null, ruleNode = rule.parse(state, callback), node = ruleNode;
            return node;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing(Class) {
            var bnf = Class.bnf, rules = (0, _parser).rulesFromBNF(bnf), parser = (0, _parser).parserFromRules(Class, rules);
            return parser;
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(Class, bnf) {
            var rules = (0, _parser).rulesFromBNF(bnf), parser = (0, _parser).parserFromRules(Class, rules);
            return parser;
          }
        },
        {
          key: "fromRules",
          value: function fromRules(Class, rules) {
            var parser = (0, _parser).parserFromRules(Class, rules);
            return parser;
          }
        }
      ]);
      return CommonParser2;
    }();
    exports.default = CommonParser;
  });

  // node_modules/occam-parsers/lib/basic/parser.js
  var require_parser4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _bnf = _interopRequireDefault2(require_bnf3());
    var _parser = _interopRequireDefault2(require_parser3());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var BasicParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(BasicParser2, CommonParser);
      var _super = _createSuper(BasicParser2);
      function BasicParser2() {
        _classCallCheck(this, BasicParser2);
        return _super.apply(this, arguments);
      }
      _createClass(BasicParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _parser.default.fromNothing(BasicParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _parser.default.fromBNF(BasicParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _parser.default.fromRules(BasicParser2, rules);
          }
        }
      ]);
      return BasicParser2;
    }(_parser.default);
    exports.default = BasicParser;
    _defineProperty(BasicParser, "bnf", _bnf.default);
  });

  // node_modules/occam-parsers/lib/parts.js
  var require_parts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _wildcard = _interopRequireDefault2(require_wildcard());
    var _endOfLine = _interopRequireDefault2(require_endOfLine6());
    var _terminalSymbol = _interopRequireDefault2(require_terminalSymbol());
    var _regularExpression = _interopRequireDefault2(require_regularExpression2());
    var _significantTokenType = _interopRequireDefault2(require_significantTokenType());
    var _ruleName = _interopRequireDefault2(require_ruleName2());
    var _optionalPart = _interopRequireDefault2(require_optionalPart());
    var _zeroOrMoreParts = _interopRequireDefault2(require_zeroOrMoreParts());
    var _oneOrMoreParts = _interopRequireDefault2(require_oneOrMoreParts());
    var _sequenceOfParts = _interopRequireDefault2(require_sequenceOfParts());
    var _choiceOfParts = _interopRequireDefault2(require_choiceOfParts());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _default = {
      WildcardPart: _wildcard.default,
      EndOfLinePart: _endOfLine.default,
      TerminalSymbolPart: _terminalSymbol.default,
      RegularExpressionPart: _regularExpression.default,
      SignificantTokenTypePart: _significantTokenType.default,
      RuleNamePart: _ruleName.default,
      OptionalPartPart: _optionalPart.default,
      ZeroOrMorePartsPart: _zeroOrMoreParts.default,
      OneOrMorePartsPart: _oneOrMoreParts.default,
      SequenceOfPartsPart: _sequenceOfParts.default,
      ChoiceOfPartsPart: _choiceOfParts.default
    };
    exports.default = _default;
  });

  // node_modules/occam-parsers/lib/index.js
  var require_lib4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "BNFParser", {
      enumerable: true,
      get: function() {
        return _parser.default;
      }
    });
    Object.defineProperty(exports, "BasicParser", {
      enumerable: true,
      get: function() {
        return _parser1.default;
      }
    });
    Object.defineProperty(exports, "CommonParser", {
      enumerable: true,
      get: function() {
        return _parser2.default;
      }
    });
    Object.defineProperty(exports, "Rule", {
      enumerable: true,
      get: function() {
        return _rule.default;
      }
    });
    Object.defineProperty(exports, "Parts", {
      enumerable: true,
      get: function() {
        return _parts.default;
      }
    });
    Object.defineProperty(exports, "partTypes", {
      enumerable: true,
      get: function() {
        return _partTypes.default;
      }
    });
    Object.defineProperty(exports, "Definition", {
      enumerable: true,
      get: function() {
        return _definition.default;
      }
    });
    Object.defineProperty(exports, "TerminalNode", {
      enumerable: true,
      get: function() {
        return _terminal.default;
      }
    });
    Object.defineProperty(exports, "NonTerminalNode", {
      enumerable: true,
      get: function() {
        return _nonTerminal.default;
      }
    });
    var _parser = _interopRequireDefault2(require_parser());
    var _parser1 = _interopRequireDefault2(require_parser4());
    var _parser2 = _interopRequireDefault2(require_parser3());
    var _rule = _interopRequireDefault2(require_rule2());
    var _parts = _interopRequireDefault2(require_parts());
    var _partTypes = _interopRequireDefault2(require_partTypes());
    var _definition = _interopRequireDefault2(require_definition());
    var _terminal = _interopRequireDefault2(require_terminal2());
    var _nonTerminal = _interopRequireDefault2(require_nonTerminal());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/with-style/lib/css/bnf.js
  var require_bnf4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = '\n\n\n\n    stylesheet                 ::= ( media | ruleSet | declaration | error )+ ;\n\n\n\n\n\n    media                      ::= "@media" mediaQueries "{" ( ruleSet | declaration )* "}" ;\n                                                              \n                                                              \n    mediaQueries               ::=  mediaQuery ( "," mediaQuery )* ;\n                                                              \n                                                              \n    mediaQuery                 ::=  "not"? ( "only"? mediaType "and" )? mediaExpression ( "and" mediaExpression )* ;\n\n\n    mediaType                  ::=  "all" | "print" | "screen" | "speech" ;\n                                                              \n                                                              \n    mediaExpression            ::=  "(" [identifier] ( ":" expression )? ")" ;\n\n\n\n\n\n    ruleSet                    ::=  selectors "{" declaration* "}" ;\n    \n    \n    selectors                  ::=  selector ( "," selector )* ;\n\n\n    selector                   ::=  ( class | pseudoClass | pseudoElement | attribute )+ ;\n\n\n\n\n\n    declaration                ::=  property ":" expression ( "," expression )* priority? ";" ;\n\n\n    class                      ::=  "."<NO_WHITESPACE>[identifier] parenthesisedSelector? ;\n\n\n    pseudoClass                ::=  ":"<NO_WHITESPACE>[identifier] parenthesisedSelector? ;\n\n\n    pseudoElement              ::=  "::"<NO_WHITESPACE>[identifier] parenthesisedSelector? ;\n\n\n    parenthesisedSelector      ::=  <NO_WHITESPACE>"(" selector <NO_WHITESPACE>")" ;\n\n\n    attribute                  ::=  "["\n\n                                       [identifier]\n\n                                       (\n\n                                         ( "=" | "~=" | "|=" )\n\n                                         ( [identifier] | [string-literal] )\n\n                                       )?\n\n                                    "]"\n\n                                 ;\n\n\n    property                   ::=  [identifier] ;\n\n\n    expression                 ::=  term ( ","? term )* ;\n\n\n    priority                   ::=  "!important" ;\n\n\n\n\n\n    term                       ::=  [unary-operator]?\n                                                       \n                                      (\n                                                       \n                                        ( [percentage] | [frequency] | [fraction] | [length] | [angle] | [rems] | [ems] | [time] | [number] )\n                                                       \n                                        |\n                                                       \n                                        uri\n                                                       \n                                        |\n                                                       \n                                        function\n                                                       \n                                        |\n                                                       \n                                        [string-literal]+\n                                                       \n                                        |\n                                                       \n                                        [identifier]\n                                                       \n                                        |\n                                                       \n                                        [colour]\n                                                       \n                                      )\n                                                       \n                                   ;\n\n\n    uri                        ::=  "url"<NO_WHITESPACE>"(" [string-literal] ")" ;\n\n\n    function                   ::=  [identifier]<NO_WHITESPACE>"(" expression ")" ;\n\n\n\n\n\n    error                      ::=  . ;\n\n\n\n';
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/with-style/lib/css/parser.js
  var require_parser5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _bnf = _interopRequireDefault2(require_bnf4());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CSSParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(CSSParser2, CommonParser);
      var _super = _createSuper(CSSParser2);
      function CSSParser2() {
        _classCallCheck(this, CSSParser2);
        return _super.apply(this, arguments);
      }
      _createClass(CSSParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamParsers.CommonParser.fromNothing(CSSParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamParsers.CommonParser.fromBNF(CSSParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamParsers.CommonParser.fromRules(CSSParser2, rules);
          }
        }
      ]);
      return CSSParser2;
    }(_occamParsers.CommonParser);
    _defineProperty(CSSParser, "bnf", _bnf.default);
    exports.default = CSSParser;
  });

  // node_modules/occam-dom/lib/utilities/array.js
  var require_array4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.trim = trim;
    exports.includes = includes;
    exports.fifth = exports.fourth = exports.third = exports.second = exports.push = exports.clear = void 0;
    var _necessary = require_browser();
    var clear = _necessary.arrayUtilities.clear;
    var push = _necessary.arrayUtilities.push;
    var second = _necessary.arrayUtilities.second;
    var third = _necessary.arrayUtilities.third;
    var fourth = _necessary.arrayUtilities.fourth;
    var fifth = _necessary.arrayUtilities.fifth;
    exports.clear = clear;
    exports.push = push;
    exports.second = second;
    exports.third = third;
    exports.fourth = fourth;
    exports.fifth = fifth;
    function trim(array, startIndex, endIndex) {
      var start, deleteCount;
      if (endIndex !== Infinity) {
        start = endIndex + 1;
        array.splice(start);
      }
      start = 0;
      deleteCount = startIndex;
      array.splice(start, deleteCount);
    }
    function includes(array) {
      for (var _len = arguments.length, elements = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        elements[_key - 1] = arguments[_key];
      }
      return elements.some(function(element) {
        return array.includes(element);
      });
    }
  });

  // node_modules/occam-dom/lib/spread.js
  var require_spread = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _array = require_array4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EXCLAMATION_MARK_CHARACTER = _necessary.characters.EXCLAMATION_MARK_CHARACTER;
    var Spread = /* @__PURE__ */ function() {
      function Spread2(startIndex, endIndex, unique) {
        _classCallCheck(this, Spread2);
        this.startIndex = startIndex;
        this.endIndex = endIndex;
        this.unique = unique;
      }
      _createClass(Spread2, [
        {
          key: "adjustNodes",
          value: function adjustNodes(nodes) {
            if (this.unique) {
              var nodesLength = nodes.length;
              if (nodesLength > 1) {
                (0, _array).clear(nodes);
              }
            } else {
              (0, _array).trim(nodes, this.startIndex, this.endIndex);
            }
          }
        }
      ], [
        {
          key: "fromSpreadExpression",
          value: function fromSpreadExpression(spreadExpression) {
            var startIndex = 0, endIndex = Infinity, unique = false;
            if (spreadExpression !== null) {
              if (spreadExpression === EXCLAMATION_MARK_CHARACTER) {
                unique = true;
              } else {
                var regExp = /\[(\d+)?(\.\.\.)?(\d+)?]/, matches = spreadExpression.match(regExp), secondMatch = (0, _array).second(matches), thirdMatch = (0, _array).third(matches), fourthMatch = (0, _array).fourth(matches);
                if (secondMatch !== void 0) {
                  startIndex = parseInt(secondMatch);
                  if (thirdMatch === void 0) {
                    endIndex = startIndex;
                  }
                }
                if (fourthMatch !== void 0) {
                  endIndex = parseInt(fourthMatch);
                  if (thirdMatch === void 0) {
                    startIndex = endIndex;
                  }
                }
              }
            }
            var spread = new Spread2(startIndex, endIndex, unique);
            return spread;
          }
        }
      ]);
      return Spread2;
    }();
    exports.default = Spread;
  });

  // node_modules/occam-dom/lib/query.js
  var require_query = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _spread = _interopRequireDefault2(require_spread());
    var _array = require_array4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var WILDCARD_CHARACTER = _necessary.characters.WILDCARD_CHARACTER;
    var Query = /* @__PURE__ */ function() {
      function Query2(ruleNames, types, spread, subQuery, maximumDepth, infiniteDescent, intermediateNodes) {
        _classCallCheck(this, Query2);
        this.ruleNames = ruleNames;
        this.types = types;
        this.spread = spread;
        this.subQuery = subQuery;
        this.maximumDepth = maximumDepth;
        this.infiniteDescent = infiniteDescent;
        this.intermediateNodes = intermediateNodes;
      }
      _createClass(Query2, [
        {
          key: "execute",
          value: function execute(node) {
            var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, maximumDepth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.maximumDepth;
            var nodes = [];
            this.clear();
            this.find(node, depth, maximumDepth);
            this.apply(nodes, depth, maximumDepth);
            return nodes;
          }
        },
        {
          key: "clear",
          value: function clear() {
            (0, _array).clear(this.intermediateNodes);
          }
        },
        {
          key: "find",
          value: function find(node, depth, maximumDepth) {
            if (depth > maximumDepth) {
              return;
            }
            var nodeTerminalNode = node.isTerminalNode(), nodeNonTerminalNode = !nodeTerminalNode;
            var found;
            if (nodeTerminalNode) {
              var terminalNode = node, type = terminalNode.getType();
              found = (0, _array).includes(this.types, type, WILDCARD_CHARACTER);
            }
            if (nodeNonTerminalNode) {
              var nonTerminalNode = node, ruleName = nonTerminalNode.getRuleName();
              found = (0, _array).includes(this.ruleNames, ruleName, WILDCARD_CHARACTER);
            }
            if (found) {
              var intermediateNode = node;
              this.intermediateNodes.push(intermediateNode);
            }
            if (this.infiniteDescent) {
              if (nodeNonTerminalNode) {
                var _this = this;
                depth++;
                var nonTerminalNode1 = node, childNodes = nonTerminalNode1.getChildNodes();
                childNodes.forEach(function(childNode) {
                  return _this.find(childNode, depth, maximumDepth);
                });
              }
            }
          }
        },
        {
          key: "apply",
          value: function apply(nodes, depth, maximumDepth) {
            this.spread.adjustNodes(this.intermediateNodes);
            if (this.subQuery === null) {
              (0, _array).push(nodes, this.intermediateNodes);
            } else {
              var _this = this;
              this.intermediateNodes.forEach(function(intermediateNode) {
                var intermediateNodeNonTerminalNode = intermediateNode.isNonTerminalNode();
                if (intermediateNodeNonTerminalNode) {
                  var _this1 = _this;
                  depth++;
                  var nonTerminalNode = intermediateNode, childNodes = nonTerminalNode.getChildNodes();
                  _this.subQuery.clear();
                  childNodes.forEach(function(childNode) {
                    return _this1.subQuery.find(childNode, depth, maximumDepth);
                  });
                  _this.subQuery.apply(nodes, depth, maximumDepth);
                }
              });
            }
          }
        }
      ], [
        {
          key: "fromSubExpressionAndTypes",
          value: function fromSubExpressionAndTypes(subExpresion, types) {
            var query = null;
            if (subExpresion !== null) {
              var typesLength = types.length;
              if (typesLength === 0) {
                var expression = subExpresion;
                query = Query2.fromExpression(expression);
              }
            }
            return query;
          }
        },
        {
          key: "fromExpression",
          value: function fromExpression(expression) {
            var maximumDepth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
            var regExp = /^\/(\/)?([^/\[!]+)(\[[^\]]+]|!)?(\/.*)?$/, matches = expression.match(regExp), secondMatch = (0, _array).second(matches), thirdMatch = (0, _array).third(matches), fourthMatch = (0, _array).fourth(matches), fifthMatch = (0, _array).fifth(matches), selectors = thirdMatch.split("|"), subExpression = fifthMatch || null, spreadExpression = fourthMatch || null, types = typesFromSelectors(selectors), ruleNames = ruleNamesFromSelectorsAndTypes(selectors, types), spread = _spread.default.fromSpreadExpression(spreadExpression), subQuery = Query2.fromSubExpressionAndTypes(subExpression, types), infiniteDescent = secondMatch === "/", intermediateNodes = [], query = new Query2(ruleNames, types, spread, subQuery, maximumDepth, infiniteDescent, intermediateNodes);
            return query;
          }
        }
      ]);
      return Query2;
    }();
    exports.default = Query;
    function typesFromSelectors(selectors) {
      var types = [];
      selectors.forEach(function(selector) {
        var selectorTypeSelector = isSelectorTypeSelector(selector);
        if (selectorTypeSelector) {
          var type = selector.substring(1);
          types.push(type);
        }
      });
      return types;
    }
    function isSelectorTypeSelector(selector) {
      return /^@/.test(selector);
    }
    function ruleNamesFromSelectors(selectors) {
      return selectors.filter(isSelectorRuleNameSelector);
    }
    function isSelectorRuleNameSelector(selector) {
      return /^[^@]/.test(selector);
    }
    function ruleNamesFromSelectorsAndTypes(selectors, types) {
      var ruleNames = [];
      var typesLength = types.length;
      if (typesLength === 0) {
        ruleNames = ruleNamesFromSelectors(selectors);
      }
      return ruleNames;
    }
  });

  // node_modules/occam-dom/lib/utilities/query.js
  var require_query2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.queryByClass = queryByClass;
    exports.queryByClasses = queryByClasses;
    exports.queryByExpression = queryByExpression;
    exports.default = void 0;
    var _query = _interopRequireDefault2(require_query());
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function queryByClass(node, Class) {
      var nodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      if (_instanceof(node, Class)) {
        nodes.push(node);
      }
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var childNodes = node.getChildNodes();
        childNodes.forEach(function(childNode) {
          return queryByClass(childNode, Class, nodes);
        });
      }
      return nodes;
    }
    function queryByClasses(node, Classes) {
      var nodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      Classes.some(function(Class) {
        if (_instanceof(node, Class)) {
          nodes.push(node);
          return true;
        }
      });
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var childNodes = node.getChildNodes();
        childNodes.forEach(function(childNode) {
          return queryByClasses(childNode, Classes, nodes);
        });
      }
      return nodes;
    }
    function queryByExpression(node, expression, maximumDepth) {
      var query = _query.default.fromExpression(expression, maximumDepth), nodes = query.execute(node);
      return nodes;
    }
    var _default = {
      queryByClass,
      queryByClasses,
      queryByExpression
    };
    exports.default = _default;
  });

  // node_modules/occam-dom/lib/index.js
  var require_lib5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "Query", {
      enumerable: true,
      get: function() {
        return _query.default;
      }
    });
    Object.defineProperty(exports, "queryUtilities", {
      enumerable: true,
      get: function() {
        return _query1.default;
      }
    });
    var _query = _interopRequireDefault2(require_query());
    var _query1 = _interopRequireDefault2(require_query2());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/with-style/lib/constants.js
  var require_constants5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CLASS_NAME_LENGTH = exports.EMPTY_STRING = exports.FOUR_SPACES = exports.TWO_SPACES = exports.CHARACTERS = exports.STYLE = exports.HEAD = void 0;
    var HEAD = "head";
    exports.HEAD = HEAD;
    var STYLE = "style";
    exports.STYLE = STYLE;
    var CHARACTERS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    exports.CHARACTERS = CHARACTERS;
    var TWO_SPACES = "  ";
    exports.TWO_SPACES = TWO_SPACES;
    var FOUR_SPACES = "    ";
    exports.FOUR_SPACES = FOUR_SPACES;
    var EMPTY_STRING = "";
    exports.EMPTY_STRING = EMPTY_STRING;
    var CLASS_NAME_LENGTH = 6;
    exports.CLASS_NAME_LENGTH = CLASS_NAME_LENGTH;
  });

  // node_modules/with-style/lib/utilities/content.js
  var require_content2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.contentFromQueryNodeAndTokens = contentFromQueryNodeAndTokens;
    var _necessary = require_browser();
    var _constants = require_constants5();
    var first = _necessary.arrayUtilities.first;
    function contentFromQueryNodeAndTokens(query, node, tokens) {
      var nodes = query.execute(node), firstNode = first(nodes);
      node = firstNode;
      var content = contentFromNodeAndTokens(node, tokens);
      return content;
    }
    function contentFromNodeAndTokens(node, tokens) {
      var firstSignificantToken = node.getFirstSignificantToken(), lastSignificantToken = node.getLastSignificantToken(), firstToken = firstSignificantToken, lastToken = lastSignificantToken, firstTokenIndex = tokens.indexOf(firstToken), lastTokenIndex = tokens.indexOf(lastToken);
      var content = _constants.EMPTY_STRING;
      for (var index = firstTokenIndex; index <= lastTokenIndex; index++) {
        var token = tokens[index], tokenContent = token.getContent();
        content += tokenContent;
      }
      return content;
    }
  });

  // node_modules/with-style/lib/style/declaration.js
  var require_declaration = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamDom = require_lib5();
    var _content = require_content2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var propertyQuery = _occamDom.Query.fromExpression("/*/property");
    var expressionQuery = _occamDom.Query.fromExpression("/*/expression");
    var Declaration = /* @__PURE__ */ function() {
      function Declaration2(property, expression) {
        _classCallCheck(this, Declaration2);
        this.property = property;
        this.expression = expression;
      }
      _createClass(Declaration2, [
        {
          key: "getProperty",
          value: function getProperty() {
            return this.property;
          }
        },
        {
          key: "getExpression",
          value: function getExpression() {
            return this.expression;
          }
        },
        {
          key: "checkMatches",
          value: function checkMatches(declarations) {
            var _this = this;
            var matches = declarations.some(function(declaration) {
              var property = declaration.getProperty(), propertiesMatch = property === _this.property;
              if (propertiesMatch) {
                return true;
              }
            });
            return matches;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(indent, last) {
            var css = last ? "".concat(indent).concat(this.property, ": ").concat(this.expression, ";") : "".concat(indent).concat(this.property, ": ").concat(this.expression, ";\n");
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var propertyContent = (0, _content).contentFromQueryNodeAndTokens(propertyQuery, node, tokens), expressionContent = (0, _content).contentFromQueryNodeAndTokens(expressionQuery, node, tokens), property = propertyContent, expression = expressionContent, declaration = new Declaration2(property, expression);
            return declaration;
          }
        }
      ]);
      return Declaration2;
    }();
    exports.default = Declaration;
  });

  // node_modules/with-style/lib/style/declarations.js
  var require_declarations = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamDom = require_lib5();
    var _declaration = _interopRequireDefault2(require_declaration());
    var _constants = require_constants5();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var declarationQuery = _occamDom.Query.fromExpression("/*/declaration");
    var Declarations = /* @__PURE__ */ function() {
      function Declarations2(array) {
        _classCallCheck(this, Declarations2);
        this.array = array;
      }
      _createClass(Declarations2, [
        {
          key: "forwardsForEach",
          value: function forwardsForEach(callback) {
            var length = this.array.length, firstIndex = 0, lastIndex = length - 1;
            for (var index = firstIndex; index <= lastIndex; index++) {
              var declaration = this.array[index];
              callback(declaration, index);
            }
          }
        },
        {
          key: "backwardsForEach",
          value: function backwardsForEach(callback) {
            var length = this.array.length, firstIndex = 0, lastIndex = length - 1;
            for (var index = lastIndex; index >= firstIndex; index--) {
              var declaration = this.array[index];
              callback(declaration, index);
            }
          }
        },
        {
          key: "unshift",
          value: function unshift(declarations) {
            var _this = this;
            declarations.backwardsForEach(function(declaration) {
              var matches = declaration.checkMatches(_this.array);
              if (!matches) {
                _this.array.unshift(declaration);
              }
            });
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            if (indent === void 0) {
              indent = className;
              className = null;
            }
            var css = _constants.EMPTY_STRING;
            var length = this.array.length;
            if (length > 0) {
              var lastIndex = length - 1, declarationsCSS1 = this.array.reduce(function(declarationsCSS, declaration, index) {
                var last = index === lastIndex, declarationCSS = declaration.asCSS(indent, last);
                declarationsCSS += declarationCSS;
                return declarationsCSS;
              }, _constants.EMPTY_STRING);
              if (className === null) {
                css = declarationsCSS1;
              } else {
                css = ".".concat(className, " {\n").concat(declarationsCSS1, "\n}\n\n");
              }
            }
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node1, tokens) {
            var declarationNodes = declarationQuery.execute(node1), array = declarationNodes.map(function(declarationNode) {
              var node = declarationNode, declaration = _declaration.default.fromNodeAndTokens(node, tokens);
              return declaration;
            }), declarations = new Declarations2(array);
            return declarations;
          }
        }
      ]);
      return Declarations2;
    }();
    exports.default = Declarations;
  });

  // node_modules/with-style/lib/style/ruleSet.js
  var require_ruleSet = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamDom = require_lib5();
    var _declarations = _interopRequireDefault2(require_declarations());
    var _constants = require_constants5();
    var _content = require_content2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var selectorsQuery = _occamDom.Query.fromExpression("//selectors");
    var RuleSet = /* @__PURE__ */ function() {
      function RuleSet2(selectors, declarations) {
        _classCallCheck(this, RuleSet2);
        this.selectors = selectors;
        this.declarations = declarations;
      }
      _createClass(RuleSet2, [
        {
          key: "getSelectors",
          value: function getSelectors() {
            return this.selectors;
          }
        },
        {
          key: "getDeclarations",
          value: function getDeclarations() {
            return this.declarations;
          }
        },
        {
          key: "unshift",
          value: function unshift(ruleSet) {
            var declarations = ruleSet.getDeclarations();
            this.declarations.unshift(declarations);
          }
        },
        {
          key: "findMatchingRuleSet",
          value: function findMatchingRuleSet(ruleSets) {
            var _this = this;
            var matchingRuleSet = ruleSets.find(function(ruleSet) {
              var selectors = ruleSet.getSelectors(), selectorsMatch = selectors === _this.selectors, ruleSetsMatch = selectorsMatch;
              if (ruleSetsMatch) {
                return true;
              }
            }) || null;
            return matchingRuleSet;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            var css = _constants.EMPTY_STRING;
            var declarationsCSS = this.declarations.asCSS("  ".concat(indent));
            if (declarationsCSS !== _constants.EMPTY_STRING) {
              css = "".concat(indent, ".").concat(className).concat(this.selectors, " {\n").concat(declarationsCSS, "\n").concat(indent, "}\n\n");
            }
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var selectors = selectorsFromNodeAndTokens(node, tokens), declarations = _declarations.default.fromNodeAndTokens(node, tokens), media = new RuleSet2(selectors, declarations);
            return media;
          }
        }
      ]);
      return RuleSet2;
    }();
    exports.default = RuleSet;
    function selectorsFromNodeAndTokens(node, tokens) {
      var selectorsNodeContent = (0, _content).contentFromQueryNodeAndTokens(selectorsQuery, node, tokens), selectors = "".concat(selectorsNodeContent);
      return selectors;
    }
  });

  // node_modules/with-style/lib/style/ruleSets.js
  var require_ruleSets = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamDom = require_lib5();
    var _ruleSet = _interopRequireDefault2(require_ruleSet());
    var _constants = require_constants5();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var ruleSetQuery = _occamDom.Query.fromExpression("/*/ruleSet");
    var RuleSets = /* @__PURE__ */ function() {
      function RuleSets2(array) {
        _classCallCheck(this, RuleSets2);
        this.array = array;
      }
      _createClass(RuleSets2, [
        {
          key: "unshift",
          value: function unshift(ruleSets) {
            var _this = this;
            ruleSets.forEach(function(ruleSet) {
              var matchingRuleSet = ruleSet.findMatchingRuleSet(_this.array);
              matchingRuleSet === null ? _this.array.unshift(ruleSet) : matchingRuleSet.unshift(ruleSet);
            });
          }
        },
        {
          key: "forEach",
          value: function forEach(callback) {
            this.array.forEach(callback);
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            var css1 = this.array.reduce(function(css, ruleSet) {
              var ruleSetCSS = ruleSet.asCSS(className, indent);
              css += ruleSetCSS;
              return css;
            }, _constants.EMPTY_STRING);
            return css1;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node1, tokens) {
            var ruleSetNodes = ruleSetQuery.execute(node1), array = ruleSetNodes.map(function(ruleSetNode) {
              var node = ruleSetNode, ruleSet = _ruleSet.default.fromNodeAndTokens(node, tokens);
              return ruleSet;
            }), ruleSets = new RuleSets2(array);
            return ruleSets;
          }
        }
      ]);
      return RuleSets2;
    }();
    exports.default = RuleSets;
  });

  // node_modules/with-style/lib/style/media.js
  var require_media = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamDom = require_lib5();
    var _ruleSets = _interopRequireDefault2(require_ruleSets());
    var _declarations = _interopRequireDefault2(require_declarations());
    var _constants = require_constants5();
    var _content = require_content2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var mediaQueriesQuery = _occamDom.Query.fromExpression("/media/mediaQueries");
    var Media = /* @__PURE__ */ function() {
      function Media2(mediaQueries, declarations, ruleSets) {
        _classCallCheck(this, Media2);
        this.mediaQueries = mediaQueries;
        this.declarations = declarations;
        this.ruleSets = ruleSets;
      }
      _createClass(Media2, [
        {
          key: "getMediaQueries",
          value: function getMediaQueries() {
            return this.mediaQueries;
          }
        },
        {
          key: "getDeclarations",
          value: function getDeclarations() {
            return this.declarations;
          }
        },
        {
          key: "getRuleSets",
          value: function getRuleSets() {
            return this.ruleSets;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className) {
            var css = "";
            var ruleSetsCSS = this.ruleSets.asCSS(className, _constants.TWO_SPACES), declarationsCSS = this.declarations.asCSS(className, _constants.FOUR_SPACES);
            if (ruleSetsCSS !== null || declarationsCSS !== null) {
              css = "@media ".concat(this.mediaQueries, " {\n").concat(declarationsCSS).concat(ruleSetsCSS, "\n}\n\n");
            }
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var mediaQueries = mediaQueriesFromNodeAndTokens(node, tokens), declarations = _declarations.default.fromNodeAndTokens(node, tokens), ruleSets = _ruleSets.default.fromNodeAndTokens(node, tokens), media = new Media2(mediaQueries, declarations, ruleSets);
            return media;
          }
        }
      ]);
      return Media2;
    }();
    exports.default = Media;
    function mediaQueriesFromNodeAndTokens(node, tokens) {
      var mediaQueriesNodeContent = (0, _content).contentFromQueryNodeAndTokens(mediaQueriesQuery, node, tokens), mediaQueries = "".concat(mediaQueriesNodeContent);
      return mediaQueries;
    }
  });

  // node_modules/with-style/lib/style/medias.js
  var require_medias = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamDom = require_lib5();
    var _media = _interopRequireDefault2(require_media());
    var _constants = require_constants5();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var mediaQuery = _occamDom.Query.fromExpression("/stylesheet/media");
    var Medias = /* @__PURE__ */ function() {
      function Medias2(array) {
        _classCallCheck(this, Medias2);
        this.array = array;
      }
      _createClass(Medias2, [
        {
          key: "unshift",
          value: function unshift(medias) {
            var _this = this;
            medias.forEach(function(media) {
              _this.array.unshift(media);
            });
          }
        },
        {
          key: "forEach",
          value: function forEach(callback) {
            this.array.forEach(callback);
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className) {
            var css1 = this.array.reduce(function(css, media) {
              var mediaCSS = media.asCSS(className);
              css += mediaCSS;
              return css;
            }, _constants.EMPTY_STRING);
            return css1;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node1, tokens) {
            var mediaNodes = mediaQuery.execute(node1), array = mediaNodes.map(function(mediaNode) {
              var node = mediaNode, media = _media.default.fromNodeAndTokens(node, tokens);
              return media;
            }), medias = new Medias2(array);
            return medias;
          }
        }
      ]);
      return Medias2;
    }();
    exports.default = Medias;
  });

  // node_modules/with-style/lib/style.js
  var require_style = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _medias = _interopRequireDefault2(require_medias());
    var _ruleSets = _interopRequireDefault2(require_ruleSets());
    var _declarations = _interopRequireDefault2(require_declarations());
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var Style = /* @__PURE__ */ function() {
      function Style2(declarations, ruleSets, medias) {
        _classCallCheck(this, Style2);
        this.declarations = declarations;
        this.ruleSets = ruleSets;
        this.medias = medias;
      }
      _createClass(Style2, [
        {
          key: "getDeclarations",
          value: function getDeclarations() {
            return this.declarations;
          }
        },
        {
          key: "getRuleSets",
          value: function getRuleSets() {
            return this.ruleSets;
          }
        },
        {
          key: "getMedias",
          value: function getMedias() {
            return this.medias;
          }
        },
        {
          key: "extends",
          value: function _extends(superStyle) {
            var declarations = superStyle.getDeclarations(), ruleSets = superStyle.getRuleSets(), medias = superStyle.getMedias();
            this.unshift(declarations, ruleSets, medias);
          }
        },
        {
          key: "unshift",
          value: function unshift(declarations, ruleSets, medias) {
            this.declarations.unshift(declarations);
            this.ruleSets.unshift(ruleSets);
            this.medias.unshift(medias);
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className) {
            var declarationsCSS = this.declarations.asCSS(className, "  "), ruleSetsCSS = this.ruleSets.asCSS(className, ""), mediasCSS = this.medias.asCSS(className), css = "".concat(declarationsCSS).concat(ruleSetsCSS).concat(mediasCSS);
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var declarations = _declarations.default.fromNodeAndTokens(node, tokens), ruleSets = _ruleSets.default.fromNodeAndTokens(node, tokens), medias = _medias.default.fromNodeAndTokens(node, tokens), style = new Style2(declarations, ruleSets, medias);
            return style;
          }
        }
      ]);
      return Style2;
    }();
    exports.default = Style;
  });

  // node_modules/with-style/lib/utilities/styles.js
  var require_styles = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _style = _interopRequireDefault2(require_style());
    var _lexer = _interopRequireDefault2(require_lexer4());
    var _parser = _interopRequireDefault2(require_parser5());
    var _constants = require_constants5();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var cssLexer = _lexer.default.fromNothing();
    var cssParser = _parser.default.fromNothing();
    if (!globalThis.styleMap) {
      globalThis.styleMap = {};
    }
    var styleMap = globalThis.styleMap;
    function renderStyle(style) {
      var headDOMElement = document.querySelector(_constants.HEAD), styleDOMElement = document.createElement(_constants.STYLE), innerHTML = "\n        \n".concat(style);
      Object.assign(styleDOMElement, {
        innerHTML
      });
      headDOMElement.appendChild(styleDOMElement);
    }
    function renderStyles2() {
      var stylesCSS = retrieveStylesCSS(), style = stylesCSS;
      renderStyle(style);
    }
    function generateStyle(args, className) {
      var superStyle = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      var strings = args.shift(), content1 = strings.reduce(function(content, string, index) {
        var arg = args[index];
        content = arg !== void 0 ? "".concat(content).concat(string).concat(arg) : "".concat(content).concat(string);
        return content;
      }, _constants.EMPTY_STRING), tokens = cssLexer.tokenise(content1), node = cssParser.parse(tokens), style = _style.default.fromNodeAndTokens(node, tokens);
      if (superStyle !== null) {
        style.extends(superStyle);
      }
      styleMap[className] = style;
    }
    function retrieveStyle(className) {
      var style = styleMap[className] || null;
      return style;
    }
    var _default = {
      renderStyle,
      renderStyles: renderStyles2,
      generateStyle,
      retrieveStyle
    };
    exports.default = _default;
    function retrieveStylesCSS() {
      var classNames = Object.keys(styleMap), stylesCSS1 = classNames.reduce(function(stylesCSS, className) {
        var style = retrieveStyle(className), styleCSS = style.asCSS(className);
        stylesCSS += styleCSS;
        return stylesCSS;
      }, _constants.EMPTY_STRING);
      return stylesCSS1;
    }
  });

  // node_modules/with-style/lib/utilities/className.js
  var require_className = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.generateClassName = generateClassName;
    exports.retrieveClassName = retrieveClassName;
    exports.default = void 0;
    var _constants = require_constants5();
    var length = _constants.CLASS_NAME_LENGTH;
    var characters = _constants.CHARACTERS;
    var charactersLength = characters.length;
    var classNames = [];
    function generateClassName() {
      var className = _constants.EMPTY_STRING;
      for (var count = 0; count < length; count++) {
        var index = Math.floor(Math.random() * charactersLength), character = characters[index];
        className += character;
      }
      var classNamesIncludesClassName = classNames.includes(className);
      if (!classNamesIncludesClassName) {
        classNames.push(className);
      } else {
        className = generateClassName();
      }
      return className;
    }
    function retrieveClassName(element) {
      var className = (element.reactFunction || element.reactComponent.constructor).className;
      return className;
    }
    var _default = {
      generateClassName,
      retrieveClassName
    };
    exports.default = _default;
  });

  // node_modules/with-style/lib/index.js
  var require_lib6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "tagNames", {
      enumerable: true,
      get: function() {
        return _tagNames.default;
      }
    });
    Object.defineProperty(exports, "CSSLexer", {
      enumerable: true,
      get: function() {
        return _lexer.default;
      }
    });
    Object.defineProperty(exports, "CSSParser", {
      enumerable: true,
      get: function() {
        return _parser.default;
      }
    });
    Object.defineProperty(exports, "stylesUtilities", {
      enumerable: true,
      get: function() {
        return _styles.default;
      }
    });
    Object.defineProperty(exports, "classNameUtilities", {
      enumerable: true,
      get: function() {
        return _className.default;
      }
    });
    var _tagNames = _interopRequireDefault2(require_tagNames());
    var _lexer = _interopRequireDefault2(require_lexer4());
    var _parser = _interopRequireDefault2(require_parser5());
    var _styles = _interopRequireDefault2(require_styles());
    var _className = _interopRequireDefault2(require_className());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/easy-with-style/lib/utilities/class.js
  var require_class = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isClass = isClass;
    var _easy2 = require_lib();
    function isClass(argument) {
      return isSubclassOf(argument, _easy2.Element);
    }
    function isSubclassOf(argument, Class) {
      var subclass = false;
      if (argument.name === Class.name) {
        subclass = true;
      } else {
        argument = Object.getPrototypeOf(argument);
        if (argument !== null) {
          subclass = isSubclassOf(argument, Class);
        }
      }
      return subclass;
    }
  });

  // node_modules/easy-with-style/lib/constants.js
  var require_constants6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CLASS_NAME = void 0;
    var CLASS_NAME = "className";
    exports.CLASS_NAME = CLASS_NAME;
  });

  // node_modules/easy-with-style/lib/withStyle.js
  var require_withStyle = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easy2 = require_lib();
    var _withStyle = require_lib6();
    var _class = require_class();
    var _constants = require_constants6();
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys.forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var generateClassName = _withStyle.classNameUtilities.generateClassName;
    var renderStyle = _withStyle.stylesUtilities.renderStyle;
    var renderStyles2 = _withStyle.stylesUtilities.renderStyles;
    var generateStyle = _withStyle.stylesUtilities.generateStyle;
    var retrieveStyle = _withStyle.stylesUtilities.retrieveStyle;
    function withStyle(ClassOrFunction) {
      return function() {
        var args = Array.prototype.slice.call(arguments);
        var _className = ClassOrFunction.className, className = _className === void 0 ? null : _className;
        var superStyle = retrieveStyle(className);
        className = generateClassName();
        generateStyle(args, className, superStyle);
        var ClassOrFunctionClass = (0, _class).isClass(ClassOrFunction);
        if (ClassOrFunctionClass) {
          var Class1 = ClassOrFunction;
          ClassOrFunction = /* @__PURE__ */ function(Class) {
            _inherits(_class1, Class);
            var _super = _createSuper(_class1);
            function _class1() {
              _classCallCheck(this, _class1);
              return _super.apply(this, arguments);
            }
            _createClass(_class1, null, [
              {
                key: "fromClass",
                value: function fromClass(_Class, properties) {
                  for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                    remainingArguments[_key - 2] = arguments[_key];
                  }
                  var _$_Class;
                  properties = appendClassNameToProperties(className, properties);
                  return (_$_Class = Class1).fromClass.apply(_$_Class, [
                    _Class,
                    properties
                  ].concat(_toConsumableArray(remainingArguments)));
                }
              }
            ]);
            return _class1;
          }(Class1);
        } else {
          var Function2 = ClassOrFunction;
          ClassOrFunction = function(properties) {
            properties = appendClassNameToProperties(className, properties);
            return Function2(properties);
          };
        }
        Object.assign(ClassOrFunction, {
          className
        });
        return ClassOrFunction;
      };
    }
    Object.assign(withStyle, {
      renderStyle,
      renderStyles: renderStyles2
    });
    var _default = withStyle;
    exports.default = _default;
    _withStyle.tagNames.forEach(function(tagName) {
      Object.defineProperty(withStyle, tagName, {
        get: function() {
          return function() {
            var args = Array.prototype.slice.call(arguments), className = generateClassName();
            generateStyle(args, className);
            var Function2 = function(properties) {
              properties = appendClassNameToProperties(className, properties);
              return _easy2.React.createElement(tagName, properties);
            };
            Object.assign(Function2, {
              className
            });
            return Function2;
          };
        }
      });
    });
    function appendClassNameToProperties(className, properties) {
      properties = properties.hasOwnProperty(_constants.CLASS_NAME) ? properties : _objectSpread({}, properties, {
        className
      });
      return properties;
    }
  });

  // node_modules/easy-with-style/lib/index.js
  var require_lib7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _withStyle = _interopRequireDefault2(require_withStyle());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _default = _withStyle.default;
    exports.default = _default;
  });

  // node_modules/occam-grammar-utilities/lib/utilities/class.js
  var require_class2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isInstanceOf = isInstanceOf;
    function isInstanceOf(instance, Class) {
      var constructor = instance.constructor;
      if (constructor) {
        if (constructor.name === Class.name) {
          return true;
        } else {
          var prototype = Object.getPrototypeOf(constructor);
          return isPrototypeInstanceOf(prototype, Class);
        }
      }
      return false;
    }
    function isPrototypeInstanceOf(prototype, Class) {
      if (prototype) {
        if (prototype.name === Class.name) {
          return true;
        } else {
          prototype = Object.getPrototypeOf(prototype);
          return isPrototypeInstanceOf(prototype, Class);
        }
      }
      return false;
    }
  });

  // node_modules/occam-grammar-utilities/lib/utilities/ruleName.js
  var require_ruleName7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.reducedRuleNameFromRuleName = reducedRuleNameFromRuleName;
    exports.repeatedRuleNameFromRuleName = repeatedRuleNameFromRuleName;
    exports.ruleNameFromReducedRuleName = ruleNameFromReducedRuleName;
    exports.checkReducedRuleNameMatchesRuleName = checkReducedRuleNameMatchesRuleName;
    function reducedRuleNameFromRuleName(ruleName) {
      var reducedRuleName = "".concat(ruleName, "_");
      return reducedRuleName;
    }
    function repeatedRuleNameFromRuleName(ruleName) {
      var repeatedRuleName = "".concat(ruleName, "~");
      return repeatedRuleName;
    }
    function ruleNameFromReducedRuleName(reducedRuleName) {
      var ruleName = reducedRuleName.replace(/_$/, "");
      return ruleName;
    }
    function checkReducedRuleNameMatchesRuleName(reducedRuleName, ruleName) {
      var ruleNameA = ruleName;
      ruleName = ruleNameFromReducedRuleName(reducedRuleName);
      var ruleNameB = ruleName;
      var reducedRuleNameMatchesRuleName = ruleNameA === ruleNameB;
      return reducedRuleNameMatchesRuleName;
    }
  });

  // node_modules/occam-grammar-utilities/lib/utilities/rule.js
  var require_rule6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.reducedRuleFromRule = reducedRuleFromRule;
    exports.repeatedRuleFromRule = repeatedRuleFromRule;
    exports.rewrittenRuleFromRule = rewrittenRuleFromRule;
    var _class = require_class2();
    var _ruleName = require_ruleName7();
    function reducedRuleFromRule(rule, ruleMap, ReducedRule) {
      var ruleName = rule.getName(), reducedRuleName = (0, _ruleName).reducedRuleNameFromRuleName(ruleName);
      var reducedRule = ruleMap[reducedRuleName] || null;
      if (reducedRule === null) {
        reducedRule = ReducedRule.fromRule(rule);
        ruleMap[reducedRuleName] = reducedRule;
      }
      return reducedRule;
    }
    function repeatedRuleFromRule(rule, ruleMap, RepeatedRule) {
      var ruleName = rule.getName(), repeatedRuleName = (0, _ruleName).repeatedRuleNameFromRuleName(ruleName);
      var repeatedRule = ruleMap[repeatedRuleName] || null;
      if (repeatedRule === null) {
        repeatedRule = RepeatedRule.fromRule(rule);
        ruleMap[repeatedRuleName] = repeatedRule;
      }
      return repeatedRule;
    }
    function rewrittenRuleFromRule(rule, ruleMap, RewrittenRule) {
      var rewrittenRule;
      var ruleRewrittenRule = (0, _class).isInstanceOf(rule, RewrittenRule);
      if (ruleRewrittenRule) {
        rewrittenRule = rule;
      } else {
        rewrittenRule = RewrittenRule.fromRule(rule);
        var replacedRule = rule, replacementRule = rewrittenRule;
        replaceRule(replacedRule, replacementRule, ruleMap);
      }
      return rewrittenRule;
    }
    function replaceRule(replacedRule, replacementRule, ruleMap) {
      var replacedRuleName = replacedRule.getName(), replacementRuleName = replacementRule.getName();
      delete ruleMap[replacedRuleName];
      ruleMap[replacementRuleName] = replacementRule;
    }
  });

  // node_modules/occam-grammar-utilities/lib/types.js
  var require_types2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.IMPLICITLY_LEFT_RECURSIVE_TYPE = exports.INDIRECTLY_LEFT_RECURSIVE_TYPE = exports.DIRECTLY_LEFT_RECURSIVE_TYPE = exports.LEFT_RECURSIVE_TYPE = exports.RECURSIVE_TYPE = void 0;
    var RECURSIVE_TYPE = "RECURSIVE_TYPE";
    exports.RECURSIVE_TYPE = RECURSIVE_TYPE;
    var LEFT_RECURSIVE_TYPE = "LEFT_RECURSIVE_TYPE";
    exports.LEFT_RECURSIVE_TYPE = LEFT_RECURSIVE_TYPE;
    var DIRECTLY_LEFT_RECURSIVE_TYPE = "DIRECTLY_LEFT_RECURSIVE_TYPE";
    exports.DIRECTLY_LEFT_RECURSIVE_TYPE = DIRECTLY_LEFT_RECURSIVE_TYPE;
    var INDIRECTLY_LEFT_RECURSIVE_TYPE = "INDIRECTLY_LEFT_RECURSIVE_TYPE";
    exports.INDIRECTLY_LEFT_RECURSIVE_TYPE = INDIRECTLY_LEFT_RECURSIVE_TYPE;
    var IMPLICITLY_LEFT_RECURSIVE_TYPE = "IMPLICITLY_LEFT_RECURSIVE_TYPE";
    exports.IMPLICITLY_LEFT_RECURSIVE_TYPE = IMPLICITLY_LEFT_RECURSIVE_TYPE;
  });

  // node_modules/occam-grammar-utilities/lib/utilities/recursivePart.js
  var require_recursivePart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.recursiveRuleNamesFromPart = recursiveRuleNamesFromPart;
    exports.leftRecursiveRuleNamesFromPart = leftRecursiveRuleNamesFromPart;
    var _occamParsers = require_lib4();
    var _necessary = require_browser();
    var first = _necessary.arrayUtilities.first;
    var RuleNamePartType = _occamParsers.partTypes.RuleNamePartType;
    var OptionalPartPartType = _occamParsers.partTypes.OptionalPartPartType;
    var SequenceOfPartsPartType = _occamParsers.partTypes.SequenceOfPartsPartType;
    var ChoiceOfPartsPartType = _occamParsers.partTypes.ChoiceOfPartsPartType;
    var OneOrMorePartsPartType = _occamParsers.partTypes.OneOrMorePartsPartType;
    var ZeroOrMorePartsPartType = _occamParsers.partTypes.ZeroOrMorePartsPartType;
    function recursiveRuleNamesFromPart(part1, recursiveRuleNames) {
      var partNonTerminalPart = part1.isNonTerminalPart();
      if (partNonTerminalPart) {
        var type = part1.getType();
        switch (type) {
          case RuleNamePartType:
            {
              var ruleNamePart = part1, ruleName = ruleNamePart.getRuleName(), recursiveRuleNamesIncludesRuleName = recursiveRuleNames.includes(ruleName);
              if (!recursiveRuleNamesIncludesRuleName) {
                var recursiveRuleName = ruleName;
                recursiveRuleNames.push(recursiveRuleName);
              }
            }
            break;
          case OptionalPartPartType:
            {
              var optionalPartPart = part1;
              part1 = optionalPartPart.getPart();
              recursiveRuleNamesFromPart(part1, recursiveRuleNames);
            }
            break;
          case OneOrMorePartsPartType:
            {
              var oneOrMorePartsPart = part1;
              part1 = oneOrMorePartsPart.getPart();
              recursiveRuleNamesFromPart(part1, recursiveRuleNames);
            }
            break;
          case ZeroOrMorePartsPartType:
            {
              var zeroOrMorePartsPart = part1;
              part1 = zeroOrMorePartsPart.getPart();
              recursiveRuleNamesFromPart(part1, recursiveRuleNames);
            }
            break;
          case SequenceOfPartsPartType:
            {
              var sequenceOfPartsPart = part1, parts = sequenceOfPartsPart.getParts();
              parts.forEach(function(part) {
                return recursiveRuleNamesFromPart(part, recursiveRuleNames);
              });
            }
            break;
          case ChoiceOfPartsPartType:
            {
              var choiceOfPartsPart = part1, parts1 = choiceOfPartsPart.getParts();
              parts1.forEach(function(part) {
                return recursiveRuleNamesFromPart(part, recursiveRuleNames);
              });
            }
            break;
        }
      }
    }
    function leftRecursiveRuleNamesFromPart(part2, leftRecursiveRuleNames) {
      var partNonTerminalPart = part2.isNonTerminalPart();
      if (partNonTerminalPart) {
        var type = part2.getType();
        switch (type) {
          case RuleNamePartType:
            {
              var ruleNamePart = part2, ruleName = ruleNamePart.getRuleName(), leftRecursiveRuleNamesIncludesRuleName = leftRecursiveRuleNames.includes(ruleName);
              if (!leftRecursiveRuleNamesIncludesRuleName) {
                var leftRecursiveRuleName = ruleName;
                leftRecursiveRuleNames.push(leftRecursiveRuleName);
              }
            }
            break;
          case OptionalPartPartType:
            {
              var optionalPartPart = part2;
              part2 = optionalPartPart.getPart();
              leftRecursiveRuleNamesFromPart(part2, leftRecursiveRuleNames);
            }
            break;
          case OneOrMorePartsPartType:
            {
              var oneOrMorePartsPart = part2;
              part2 = oneOrMorePartsPart.getPart();
              leftRecursiveRuleNamesFromPart(part2, leftRecursiveRuleNames);
            }
            break;
          case ZeroOrMorePartsPartType:
            {
              var zeroOrMorePartsPart = part2;
              part2 = zeroOrMorePartsPart.getPart();
              leftRecursiveRuleNamesFromPart(part2, leftRecursiveRuleNames);
            }
            break;
          case SequenceOfPartsPartType:
            {
              var sequenceOfPartsPart = part2, parts = sequenceOfPartsPart.getParts(), firstPart = first(parts);
              part2 = firstPart;
              leftRecursiveRuleNamesFromPart(part2, leftRecursiveRuleNames);
            }
            break;
          case ChoiceOfPartsPartType:
            {
              var choiceOfPartsPart = part2, parts2 = choiceOfPartsPart.getParts();
              parts2.forEach(function(part) {
                return leftRecursiveRuleNamesFromPart(part, leftRecursiveRuleNames);
              });
            }
            break;
        }
      }
    }
  });

  // node_modules/occam-grammar-utilities/lib/utilities/definition.js
  var require_definition5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isDefinitionUnary = isDefinitionUnary;
    exports.isDefinitionComplex = isDefinitionComplex;
    exports.isDefinitionLookAhead = isDefinitionLookAhead;
    exports.recursiveRuleNamesFromDefinition = recursiveRuleNamesFromDefinition;
    exports.leftRecursiveRuleNamesFromDefinition = leftRecursiveRuleNamesFromDefinition;
    var _occamParsers = require_lib4();
    var _necessary = require_browser();
    var _recursivePart = require_recursivePart();
    var first = _necessary.arrayUtilities.first;
    var RuleNamePartType = _occamParsers.partTypes.RuleNamePartType;
    function isDefinitionUnary(definition) {
      var parts = definition.getParts(), partsLength = parts.length, definitionUnary = partsLength === 1;
      return definitionUnary;
    }
    function isDefinitionComplex(definition) {
      var parts = definition.getParts(), firstPart = first(parts), firstPartType = firstPart.getType(), firstPartTypeRuleNamePartType = firstPartType === RuleNamePartType, firstPartRuleNamePart = firstPartTypeRuleNamePartType, definitionComplex = !firstPartRuleNamePart;
      return definitionComplex;
    }
    function isDefinitionLookAhead(definition) {
      var lookAhead = false;
      var parts = definition.getParts(), firstPart = first(parts), firstPartType = firstPart.getType(), firstPartTypeRuleNamePartType = firstPartType === RuleNamePartType, firstPartRuleNamePart = firstPartTypeRuleNamePartType;
      if (firstPartRuleNamePart) {
        var ruleNamePart = firstPart;
        lookAhead = ruleNamePart.isLookAhead();
      }
      return lookAhead;
    }
    function recursiveRuleNamesFromDefinition(definition) {
      var recursiveRuleNames = [], parts = definition.getParts();
      parts.forEach(function(part) {
        (0, _recursivePart).recursiveRuleNamesFromPart(part, recursiveRuleNames);
      });
      return recursiveRuleNames;
    }
    function leftRecursiveRuleNamesFromDefinition(definition) {
      var leftRecursiveRuleNames = [], parts = definition.getParts(), firstPart = first(parts), part = firstPart;
      (0, _recursivePart).leftRecursiveRuleNamesFromPart(part, leftRecursiveRuleNames);
      return leftRecursiveRuleNames;
    }
  });

  // node_modules/occam-grammar-utilities/lib/definition/recursive.js
  var require_recursive = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _rule = require_rule6();
    var _types = require_types2();
    var _definition = require_definition5();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RecursiveDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RecursiveDefinition2, Definition);
      var _super = _createSuper(RecursiveDefinition2);
      function RecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames) {
        _classCallCheck(this, RecursiveDefinition2);
        var _this;
        _this = _super.call(this, parts);
        _this.type = type;
        _this.ruleName = ruleName;
        _this.definition = definition;
        _this.recursiveRuleNames = recursiveRuleNames;
        return _this;
      }
      _createClass(RecursiveDefinition2, [
        {
          key: "getType",
          value: function getType() {
            return this.type;
          }
        },
        {
          key: "getRuleName",
          value: function getRuleName() {
            return this.ruleName;
          }
        },
        {
          key: "getDefinition",
          value: function getDefinition() {
            return this.definition;
          }
        },
        {
          key: "getRecursiveRuleNames",
          value: function getRecursiveRuleNames() {
            return this.recursiveRuleNames;
          }
        },
        {
          key: "replace",
          value: function replace(ruleMap) {
            var rule = ruleMap[this.ruleName] || null, replacedDefinition = this.definition, replacementDefinition = this;
            rule.replaceDefinition(replacedDefinition, replacementDefinition);
          }
        }
      ], [
        {
          key: "fromRuleNameAndDefinition",
          value: function fromRuleNameAndDefinition(ruleName, definition) {
            var recursiveDefinition = null;
            var type = _types.RECURSIVE_TYPE, parts = definition.getParts(), recursiveRuleNames = (0, _definition).recursiveRuleNamesFromDefinition(definition), recursiveRuleNamesLength = recursiveRuleNames.length, definitionRecursiveDefinition = recursiveRuleNamesLength > 0;
            if (definitionRecursiveDefinition) {
              recursiveDefinition = new RecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames);
            }
            return recursiveDefinition;
          }
        }
      ]);
      return RecursiveDefinition2;
    }(_occamParsers.Definition);
    exports.default = RecursiveDefinition;
  });

  // node_modules/occam-grammar-utilities/lib/definition/leftRecursive.js
  var require_leftRecursive = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _recursive = _interopRequireDefault2(require_recursive());
    var _types = require_types2();
    var _definition = require_definition5();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var LeftRecursiveDefinition = /* @__PURE__ */ function(RecursiveDefinition) {
      _inherits(LeftRecursiveDefinition2, RecursiveDefinition);
      var _super = _createSuper(LeftRecursiveDefinition2);
      function LeftRecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames) {
        _classCallCheck(this, LeftRecursiveDefinition2);
        var _this;
        _this = _super.call(this, type, parts, ruleName, definition, recursiveRuleNames);
        _this.leftRecursiveRuleNames = leftRecursiveRuleNames;
        return _this;
      }
      _createClass(LeftRecursiveDefinition2, [
        {
          key: "getLeftRecursiveRuleNames",
          value: function getLeftRecursiveRuleNames() {
            return this.leftRecursiveRuleNames;
          }
        },
        {
          key: "rewrite",
          value: function rewrite(ruleMap) {
          }
        }
      ], [
        {
          key: "fromRuleNameAndDefinition",
          value: function fromRuleNameAndDefinition(ruleName, definition) {
            var leftRecursiveDefinition2 = null;
            var leftRecursiveRuleNames = (0, _definition).leftRecursiveRuleNamesFromDefinition(definition), leftRecursiveRuleNamesLength = leftRecursiveRuleNames.length, definitionLeftRecursive = leftRecursiveRuleNamesLength > 0;
            if (definitionLeftRecursive) {
              var type = _types.LEFT_RECURSIVE_TYPE, parts = definition.getParts(), recursiveRuleNames = (0, _definition).recursiveRuleNamesFromDefinition(definition);
              leftRecursiveDefinition2 = new LeftRecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames);
            }
            return leftRecursiveDefinition2;
          }
        }
      ]);
      return LeftRecursiveDefinition2;
    }(_recursive.default);
    exports.default = LeftRecursiveDefinition;
  });

  // node_modules/occam-grammar-utilities/lib/node/reduced.js
  var require_reduced = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ReducedNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(ReducedNode2, NonTerminalNode);
      var _super = _createSuper(ReducedNode2);
      function ReducedNode2() {
        _classCallCheck(this, ReducedNode2);
        return _super.apply(this, arguments);
      }
      _createClass(ReducedNode2, null, [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _occamParsers.NonTerminalNode.fromRuleNameAndChildNodes(ReducedNode2, ruleName, childNodes);
          }
        }
      ]);
      return ReducedNode2;
    }(_occamParsers.NonTerminalNode);
    exports.default = ReducedNode;
  });

  // node_modules/occam-grammar-utilities/lib/rule/reduced.js
  var require_reduced2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _reduced = _interopRequireDefault2(require_reduced());
    var _recursive = _interopRequireDefault2(require_recursive());
    var _class = require_class2();
    var _ruleName = require_ruleName7();
    var _types = require_types2();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ReducedRule = /* @__PURE__ */ function(Rule) {
      _inherits(ReducedRule2, Rule);
      var _super = _createSuper(ReducedRule2);
      function ReducedRule2() {
        _classCallCheck(this, ReducedRule2);
        return _super.apply(this, arguments);
      }
      _createClass(ReducedRule2, [
        {
          key: "isEmpty",
          value: function isEmpty() {
            var definitionsLength = this.definitions.length, empty = definitionsLength === 0;
            return empty;
          }
        }
      ], [
        {
          key: "fromRule",
          value: function fromRule(rule) {
            var definitions = rule.getDefinitions();
            var ruleName = rule.getName(), reducedRuleName = (0, _ruleName).reducedRuleNameFromRuleName(ruleName);
            definitions = definitions.filter(function(definition) {
              var keep = true;
              var definitionRecursiveDefinition = (0, _class).isInstanceOf(definition, _recursive.default);
              if (definitionRecursiveDefinition) {
                var recursiveDefinition = definition, type = recursiveDefinition.getType();
                keep = type !== _types.DIRECTLY_LEFT_RECURSIVE_TYPE && type !== _types.INDIRECTLY_LEFT_RECURSIVE_TYPE && type !== _types.IMPLICITLY_LEFT_RECURSIVE_TYPE;
              }
              return keep;
            });
            var name = reducedRuleName, NonTerminalNode = _reduced.default, reducedRule = new ReducedRule2(name, definitions, NonTerminalNode);
            return reducedRule;
          }
        }
      ]);
      return ReducedRule2;
    }(_occamParsers.Rule);
    exports.default = ReducedRule;
  });

  // node_modules/occam-grammar-utilities/lib/node/repeated.js
  var require_repeated = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RepeatedNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(RepeatedNode2, NonTerminalNode);
      var _super = _createSuper(RepeatedNode2);
      function RepeatedNode2() {
        _classCallCheck(this, RepeatedNode2);
        return _super.apply(this, arguments);
      }
      _createClass(RepeatedNode2, null, [
        {
          key: "fromRuleNameAndChildNodes",
          value: function fromRuleNameAndChildNodes(ruleName, childNodes) {
            return _occamParsers.NonTerminalNode.fromRuleNameAndChildNodes(RepeatedNode2, ruleName, childNodes);
          }
        }
      ]);
      return RepeatedNode2;
    }(_occamParsers.NonTerminalNode);
    exports.default = RepeatedNode;
  });

  // node_modules/occam-grammar-utilities/lib/rule/repeated.js
  var require_repeated2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _repeated = _interopRequireDefault2(require_repeated());
    var _ruleName = require_ruleName7();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RepeatedRule = /* @__PURE__ */ function(Rule) {
      _inherits(RepeatedRule2, Rule);
      var _super = _createSuper(RepeatedRule2);
      function RepeatedRule2() {
        _classCallCheck(this, RepeatedRule2);
        return _super.apply(this, arguments);
      }
      _createClass(RepeatedRule2, null, [
        {
          key: "fromRule",
          value: function fromRule(rule) {
            var ruleName = rule.getName(), repeatedRuleName = (0, _ruleName).repeatedRuleNameFromRuleName(ruleName), name = repeatedRuleName, definitions = [], NonTerminalNode = _repeated.default, repeatedRule = new RepeatedRule2(name, definitions, NonTerminalNode);
            return repeatedRule;
          }
        }
      ]);
      return RepeatedRule2;
    }(_occamParsers.Rule);
    exports.default = RepeatedRule;
  });

  // node_modules/occam-grammar-utilities/lib/utilities/part.js
  var require_part4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ruleNamePartFromRuleName = ruleNamePartFromRuleName;
    exports.zeroOrMoreRuleNamePartPartFromRuleName = zeroOrMoreRuleNamePartPartFromRuleName;
    var _occamParsers = require_lib4();
    var RuleNamePart = _occamParsers.Parts.RuleNamePart;
    var ZeroOrMorePartsPart = _occamParsers.Parts.ZeroOrMorePartsPart;
    function ruleNamePartFromRuleName(ruleName) {
      var lookAhead = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var ruleNamePart = new RuleNamePart(ruleName, lookAhead);
      return ruleNamePart;
    }
    function zeroOrMoreRuleNamePartPartFromRuleName(ruleName) {
      var ruleNamePart = ruleNamePartFromRuleName(ruleName), zeroOrMoreRuleNamePartPart = new ZeroOrMorePartsPart(ruleNamePart);
      return zeroOrMoreRuleNamePartPart;
    }
  });

  // node_modules/occam-grammar-utilities/lib/definition/ruleName.js
  var require_ruleName8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _part = require_part4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleNameDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RuleNameDefinition2, Definition);
      var _super = _createSuper(RuleNameDefinition2);
      function RuleNameDefinition2() {
        _classCallCheck(this, RuleNameDefinition2);
        return _super.apply(this, arguments);
      }
      _createClass(RuleNameDefinition2, null, [
        {
          key: "fromRuleName",
          value: function fromRuleName(ruleName) {
            var ruleNamePart = (0, _part).ruleNamePartFromRuleName(ruleName), parts = [
              ruleNamePart
            ], ruleNameDefinition = new RuleNameDefinition2(parts);
            return ruleNameDefinition;
          }
        }
      ]);
      return RuleNameDefinition2;
    }(_occamParsers.Definition);
    exports.default = RuleNameDefinition;
  });

  // node_modules/occam-grammar-utilities/lib/rule/rewritten.js
  var require_rewritten = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _ruleName = _interopRequireDefault2(require_ruleName8());
    var _recursive = _interopRequireDefault2(require_recursive());
    var _class = require_class2();
    var _ruleName1 = require_ruleName7();
    var _types = require_types2();
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RewrittenRule = /* @__PURE__ */ function(Rule) {
      _inherits(RewrittenRule2, Rule);
      var _super = _createSuper(RewrittenRule2);
      function RewrittenRule2() {
        _classCallCheck(this, RewrittenRule2);
        return _super.apply(this, arguments);
      }
      _createClass(RewrittenRule2, null, [
        {
          key: "fromRule",
          value: function fromRule(rule) {
            var definitions = rule.getDefinitions();
            var ruleName = rule.getName(), reducedRuleName = (0, _ruleName1).reducedRuleNameFromRuleName(ruleName), reducedRuleNameDefinition = _ruleName.default.fromRuleName(reducedRuleName);
            definitions = definitions.filter(function(definition) {
              var keep = false;
              var definitionRecursiveDefinition = (0, _class).isInstanceOf(definition, _recursive.default);
              if (definitionRecursiveDefinition) {
                var recursiveDefinition = definition, type = recursiveDefinition.getType();
                keep = type === _types.DIRECTLY_LEFT_RECURSIVE_TYPE || type === _types.INDIRECTLY_LEFT_RECURSIVE_TYPE || type === _types.IMPLICITLY_LEFT_RECURSIVE_TYPE;
              }
              return keep;
            });
            definitions = _toConsumableArray(definitions).concat([
              reducedRuleNameDefinition
            ]);
            var name = ruleName, NonTerminalNode = rule.getNonTerminalNode(), rewrittenRule = new RewrittenRule2(name, definitions, NonTerminalNode);
            return rewrittenRule;
          }
        }
      ]);
      return RewrittenRule2;
    }(_occamParsers.Rule);
    exports.default = RewrittenRule;
  });

  // node_modules/occam-grammar-utilities/lib/utilities/parts.js
  var require_parts2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.cloneParts = cloneParts;
    function cloneParts(parts) {
      parts = parts.map(function(part) {
        return part.clone();
      });
      return parts;
    }
  });

  // node_modules/occam-grammar-utilities/lib/definition/repeated.js
  var require_repeated3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _parts = require_parts2();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RepeatedDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RepeatedDefinition2, Definition);
      var _super = _createSuper(RepeatedDefinition2);
      function RepeatedDefinition2() {
        _classCallCheck(this, RepeatedDefinition2);
        return _super.apply(this, arguments);
      }
      _createClass(RepeatedDefinition2, null, [
        {
          key: "fromDefinition",
          value: function fromDefinition(definition) {
            var parts = definition.getParts();
            parts = (0, _parts).cloneParts(parts);
            parts.shift();
            var repeatedDefinition = new RepeatedDefinition2(parts);
            return repeatedDefinition;
          }
        }
      ]);
      return RepeatedDefinition2;
    }(_occamParsers.Definition);
    exports.default = RepeatedDefinition;
  });

  // node_modules/occam-grammar-utilities/lib/definition/rewritten.js
  var require_rewritten2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _parts = require_parts2();
    var _definition = require_definition5();
    var _ruleName = require_ruleName7();
    var _part = require_part4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RewrittenDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RewrittenDefinition2, Definition);
      var _super = _createSuper(RewrittenDefinition2);
      function RewrittenDefinition2() {
        _classCallCheck(this, RewrittenDefinition2);
        return _super.apply(this, arguments);
      }
      _createClass(RewrittenDefinition2, null, [
        {
          key: "fromDefinitionAndLeftRecursiveRuleName",
          value: function fromDefinitionAndLeftRecursiveRuleName(definition, leftRecursiveRuleName) {
            var parts = definition.getParts();
            parts = (0, _parts).cloneParts(parts);
            parts.shift();
            var definitionLookAhead = (0, _definition).isDefinitionLookAhead(definition), lookAhead = definitionLookAhead, repeatedRuleName = (0, _ruleName).repeatedRuleNameFromRuleName(leftRecursiveRuleName), reducedLeftRecursiveRuleName = (0, _ruleName).reducedRuleNameFromRuleName(leftRecursiveRuleName), zeroOrMoreRepeatedRuleNamePart = (0, _part).zeroOrMoreRuleNamePartPartFromRuleName(repeatedRuleName), reducedLeftRecursiveRuleNamePart = (0, _part).ruleNamePartFromRuleName(reducedLeftRecursiveRuleName, lookAhead), rewrittenDefinition = new RewrittenDefinition2(parts);
            parts.unshift(reducedLeftRecursiveRuleNamePart);
            parts.push(zeroOrMoreRepeatedRuleNamePart);
            return rewrittenDefinition;
          }
        }
      ]);
      return RewrittenDefinition2;
    }(_occamParsers.Definition);
    exports.default = RewrittenDefinition;
  });

  // node_modules/occam-grammar-utilities/lib/definition/leftRecursive/directly.js
  var require_directly = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _reduced = _interopRequireDefault2(require_reduced2());
    var _repeated = _interopRequireDefault2(require_repeated2());
    var _rewritten = _interopRequireDefault2(require_rewritten());
    var _repeated1 = _interopRequireDefault2(require_repeated3());
    var _rewritten1 = _interopRequireDefault2(require_rewritten2());
    var _leftRecursive = _interopRequireDefault2(require_leftRecursive());
    var _types = require_types2();
    var _rule = require_rule6();
    var _definition = require_definition5();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var DirectlyLeftRecursiveDefinition = /* @__PURE__ */ function(LeftRecursiveDefinition) {
      _inherits(DirectlyLeftRecursiveDefinition2, LeftRecursiveDefinition);
      var _super = _createSuper(DirectlyLeftRecursiveDefinition2);
      function DirectlyLeftRecursiveDefinition2() {
        _classCallCheck(this, DirectlyLeftRecursiveDefinition2);
        return _super.apply(this, arguments);
      }
      _createClass(DirectlyLeftRecursiveDefinition2, [
        {
          key: "rewrite",
          value: function rewrite(ruleMap) {
            var definition = this.getDefinition(), ruleName = this.getRuleName(), rule = ruleMap[ruleName] || null;
            var reducedRule = (0, _rule).reducedRuleFromRule(rule, ruleMap, _reduced.default), reducedRuleEmpty = reducedRule.isEmpty();
            if (reducedRuleEmpty) {
              var definitionString = definition.asString();
              throw new Error("The '".concat(definitionString, "' directly left recursive definition of the '").concat(ruleName, "' rule has no sibling non-left recursive definitions and therefore cannot be rewritten."));
            }
            var leftRecursiveRuleName = ruleName;
            var repeatedRule = (0, _rule).repeatedRuleFromRule(rule, ruleMap, _repeated.default), repeatedDefinition = _repeated1.default.fromDefinition(definition);
            repeatedRule.addDefinition(repeatedDefinition);
            var rewrittenRule = (0, _rule).rewrittenRuleFromRule(rule, ruleMap, _rewritten.default), rewrittenDefinition = _rewritten1.default.fromDefinitionAndLeftRecursiveRuleName(definition, leftRecursiveRuleName), replacementDefinition = this;
            rewrittenRule.replaceDefinition(replacementDefinition, rewrittenDefinition);
          }
        }
      ], [
        {
          key: "fromRuleNameAndDefinition",
          value: function fromRuleNameAndDefinition(ruleName, definition) {
            var directlyLeftRecursiveDefinition = null;
            var leftRecursiveRuleNames = (0, _definition).leftRecursiveRuleNamesFromDefinition(definition), leftRecursiveRuleNamesLength = leftRecursiveRuleNames.length, definitionLeftRecursive = leftRecursiveRuleNamesLength > 0;
            if (definitionLeftRecursive) {
              leftRecursiveRuleNames.some(function(leftRecursiveRuleName) {
                var ruleNameLeftRecursiveRuleName = ruleName === leftRecursiveRuleName;
                if (ruleNameLeftRecursiveRuleName) {
                  var definitionUnary = (0, _definition).isDefinitionUnary(definition);
                  if (definitionUnary) {
                    var definitionString = definition.asString();
                    throw new Error("The '".concat(definitionString, "' directly left recursive definition of the '").concat(ruleName, "' rule is unary and therefore cannot be rewritten."));
                  }
                  var definitionComplex = (0, _definition).isDefinitionComplex(definition);
                  if (definitionComplex) {
                    var definitionString1 = definition.asString();
                    throw new Error("The '".concat(definitionString1, "' directly left recursive definition of the '").concat(ruleName, "' rule is complex and therefore cannot be rewritten."));
                  }
                  var type = _types.DIRECTLY_LEFT_RECURSIVE_TYPE, parts = [], recursiveRuleNames = (0, _definition).recursiveRuleNamesFromDefinition(definition);
                  directlyLeftRecursiveDefinition = new DirectlyLeftRecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames);
                  return true;
                }
              });
            }
            return directlyLeftRecursiveDefinition;
          }
        }
      ]);
      return DirectlyLeftRecursiveDefinition2;
    }(_leftRecursive.default);
    exports.default = DirectlyLeftRecursiveDefinition;
  });

  // node_modules/occam-grammar-utilities/lib/definition/leftRecursive/implicitly.js
  var require_implicitly = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _leftRecursive = _interopRequireDefault2(require_leftRecursive());
    var _types = require_types2();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var first = _necessary.arrayUtilities.first;
    var ImplicitlyLeftRecursiveDefinition = /* @__PURE__ */ function(LeftRecursiveDefinition) {
      _inherits(ImplicitlyLeftRecursiveDefinition2, LeftRecursiveDefinition);
      var _super = _createSuper(ImplicitlyLeftRecursiveDefinition2);
      function ImplicitlyLeftRecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames, leftRecursiveDefinition2) {
        _classCallCheck(this, ImplicitlyLeftRecursiveDefinition2);
        var _this;
        _this = _super.call(this, type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames);
        _this.leftRecursiveDefinition = leftRecursiveDefinition2;
        return _this;
      }
      _createClass(ImplicitlyLeftRecursiveDefinition2, [
        {
          key: "getLeftRecursiveDefinition",
          value: function getLeftRecursiveDefinition() {
            this.leftRecursiveDefinition = leftRecursiveDefinition;
          }
        },
        {
          key: "replace",
          value: function replace(ruleMap) {
            var rule = ruleMap[this.ruleName] || null, replacedDefinition = this.leftRecursiveDefinition, replacementDefinition = this;
            rule.replaceDefinition(replacedDefinition, replacementDefinition);
          }
        }
      ], [
        {
          key: "fromRuleNameLeftRecursiveRuleNameAndRecursiveDefinitions",
          value: function fromRuleNameLeftRecursiveRuleNameAndRecursiveDefinitions(ruleName, leftRecursiveRuleName, recursiveDefinitions) {
            var implicitlyLeftRecursiveDefinition = null;
            var leftRecursiveDefinition2 = findLeftRecursiveDefinition(ruleName, leftRecursiveRuleName, recursiveDefinitions);
            if (leftRecursiveDefinition2 !== null) {
              var type = _types.IMPLICITLY_LEFT_RECURSIVE_TYPE, parts = leftRecursiveDefinition2.getParts(), _$ruleName = leftRecursiveDefinition2.getRuleName(), definition = null, recursiveRuleNames = leftRecursiveDefinition2.getRecursiveRuleNames(), leftRecursiveRuleNames = leftRecursiveDefinition2.getLeftRecursiveRuleNames();
              implicitlyLeftRecursiveDefinition = new ImplicitlyLeftRecursiveDefinition2(type, parts, _$ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames, leftRecursiveDefinition2);
            }
            return implicitlyLeftRecursiveDefinition;
          }
        }
      ]);
      return ImplicitlyLeftRecursiveDefinition2;
    }(_leftRecursive.default);
    exports.default = ImplicitlyLeftRecursiveDefinition;
    function findLeftRecursiveDefinition(ruleName, leftRecursiveRuleName, recursiveDefinitions) {
      var leftRecursiveDefinition2 = null;
      var leftRecursiveDefinitionsPath = findLeftRecursiveDefinitionsPath(ruleName, leftRecursiveRuleName, recursiveDefinitions);
      if (leftRecursiveDefinitionsPath !== null) {
        var firstLeftRecursiveDefinition = first(leftRecursiveDefinitionsPath);
        leftRecursiveDefinition2 = firstLeftRecursiveDefinition;
      }
      return leftRecursiveDefinition2;
    }
    function findRecursiveDefinitionsPath(ruleName, recursiveRuleName, recursiveDefinitions) {
      var recursiveDefinitionsPath = null;
      recursiveDefinitions.some(function(recursiveDefinition, index) {
        var recursiveDefinitionRuleName = recursiveDefinition.getRuleName(), recursiveDefinitionRuleNameRecursiveRuleName = recursiveDefinitionRuleName === recursiveRuleName;
        if (recursiveDefinitionRuleNameRecursiveRuleName) {
          recursiveDefinitionsPath = recursiveDefinitions.slice(index);
          return true;
        }
      });
      return recursiveDefinitionsPath;
    }
    function findLeftRecursiveDefinitionsPath(ruleName, leftRecursiveRuleName, recursiveDefinitions) {
      var leftRecursiveDefinitionsPath = null;
      var recursiveRuleName = leftRecursiveRuleName, recursiveDefinitionsPath = findRecursiveDefinitionsPath(ruleName, recursiveRuleName, recursiveDefinitions);
      if (recursiveDefinitionsPath !== null) {
        var recursiveDefinitionsPathLeftRecursive = isRecursiveDefinitionsPathLeftRecursive(ruleName, recursiveDefinitionsPath);
        if (recursiveDefinitionsPathLeftRecursive) {
          leftRecursiveDefinitionsPath = recursiveDefinitionsPath;
        }
      }
      return leftRecursiveDefinitionsPath;
    }
    function isRecursiveDefinitionsPathLeftRecursive(ruleName, recursiveDefinitionsPath) {
      var ruleNames = ruleNamesFromRuleNameAndRecursiveDefinitionsPath(ruleName, recursiveDefinitionsPath), recursiveDefinitionsPathLeftRecursive = recursiveDefinitionsPath.every(function(recursiveDefinition, index) {
        var type = recursiveDefinition.getType();
        if (type === _types.LEFT_RECURSIVE_TYPE) {
          var _$ruleName = ruleNames[index], leftRecursiveRuleNames = recursiveDefinition.getLeftRecursiveRuleNames(), leftRecursiveRuleNamesIncludesRuleName = leftRecursiveRuleNames.includes(_$ruleName);
          if (leftRecursiveRuleNamesIncludesRuleName) {
            return true;
          }
        }
      });
      return recursiveDefinitionsPathLeftRecursive;
    }
    function ruleNamesFromRuleNameAndRecursiveDefinitionsPath(ruleName, recursiveDefinitionsPath) {
      var ruleNames = recursiveDefinitionsPath.map(function(recursiveDefinition) {
        return recursiveDefinition.getRuleName();
      });
      ruleNames.push(ruleName);
      var firstRuleName = ruleNames.shift(), lastRuleName = firstRuleName;
      ruleNames.push(lastRuleName);
      return ruleNames;
    }
  });

  // node_modules/occam-grammar-utilities/lib/definition/leftRecursive/indirectly.js
  var require_indirectly = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _reduced = _interopRequireDefault2(require_reduced2());
    var _repeated = _interopRequireDefault2(require_repeated2());
    var _rewritten = _interopRequireDefault2(require_rewritten());
    var _repeated1 = _interopRequireDefault2(require_repeated3());
    var _rewritten1 = _interopRequireDefault2(require_rewritten2());
    var _leftRecursive = _interopRequireDefault2(require_leftRecursive());
    var _implicitly = _interopRequireDefault2(require_implicitly());
    var _types = require_types2();
    var _rule = require_rule6();
    var _definition = require_definition5();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var first = _necessary.arrayUtilities.first;
    var IndirectlyLeftRecursiveDefinition = /* @__PURE__ */ function(LeftRecursiveDefinition) {
      _inherits(IndirectlyLeftRecursiveDefinition2, LeftRecursiveDefinition);
      var _super = _createSuper(IndirectlyLeftRecursiveDefinition2);
      function IndirectlyLeftRecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames, implicitlyLeftRecursiveDefinition) {
        _classCallCheck(this, IndirectlyLeftRecursiveDefinition2);
        var _this;
        _this = _super.call(this, type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames);
        _this.implicitlyLeftRecursiveDefinition = implicitlyLeftRecursiveDefinition;
        return _this;
      }
      _createClass(IndirectlyLeftRecursiveDefinition2, [
        {
          key: "getImplicitlyLeftRecursiveDefinition",
          value: function getImplicitlyLeftRecursiveDefinition() {
            return this.implicitlyLeftRecursiveDefinition;
          }
        },
        {
          key: "rewrite",
          value: function rewrite(ruleMap) {
            var definition = this.getDefinition(), ruleName = this.getRuleName(), rule = ruleMap[ruleName] || null;
            var leftRecursiveRuleNames = this.getLeftRecursiveRuleNames(), firstLeftRecursiveRuleName = first(leftRecursiveRuleNames), leftRecursiveRuleName = firstLeftRecursiveRuleName, leftRecursiveRule = ruleMap[leftRecursiveRuleName] || null;
            var reducedRule = (0, _rule).reducedRuleFromRule(leftRecursiveRule, ruleMap, _reduced.default), reducedRuleEmpty = reducedRule.isEmpty();
            if (reducedRuleEmpty) {
              var definitionString = definition.asString(), implicitlyLeftRecursiveDefinition = this.getImplicitlyLeftRecursiveDefinition(), implicitlyLeftRecursiveDefinitionString = implicitlyLeftRecursiveDefinition.asString();
              throw new Error("The '".concat(implicitlyLeftRecursiveDefinitionString, "' implicitly left recursive definition of the '").concat(leftRecursiveRuleName, "' rule has no sibling non-left recursive definitions and therefore the '").concat(definitionString, "' indirectly left recursive definition of the '").concat(ruleName, "' rule cannot be rewritten."));
            }
            var repeatedRule = (0, _rule).repeatedRuleFromRule(leftRecursiveRule, ruleMap, _repeated.default), repeatedDefinition = _repeated1.default.fromDefinition(definition);
            repeatedRule.addDefinition(repeatedDefinition);
            (0, _rule).rewrittenRuleFromRule(leftRecursiveRule, ruleMap, _rewritten.default);
            var rewrittenDefinition = _rewritten1.default.fromDefinitionAndLeftRecursiveRuleName(definition, leftRecursiveRuleName), replacementDefinition = this;
            rule.replaceDefinition(replacementDefinition, rewrittenDefinition);
          }
        }
      ], [
        {
          key: "fromRuleNameDefinitionAndRecursiveDefinitions",
          value: function fromRuleNameDefinitionAndRecursiveDefinitions(ruleName, definition, recursiveDefinitions) {
            var indirectlyLeftRecursiveDefinition = null;
            var leftRecursiveRuleNames = (0, _definition).leftRecursiveRuleNamesFromDefinition(definition), leftRecursiveRuleNamesLength = leftRecursiveRuleNames.length, definitionLeftRecursive = leftRecursiveRuleNamesLength > 0;
            if (definitionLeftRecursive) {
              leftRecursiveRuleNames.some(function(leftRecursiveRuleName) {
                var ruleNameLeftRecursiveRuleName = ruleName === leftRecursiveRuleName;
                if (!ruleNameLeftRecursiveRuleName) {
                  var implicitlyLeftRecursiveDefinition = _implicitly.default.fromRuleNameLeftRecursiveRuleNameAndRecursiveDefinitions(ruleName, leftRecursiveRuleName, recursiveDefinitions);
                  if (implicitlyLeftRecursiveDefinition !== null) {
                    var definitionUnary = (0, _definition).isDefinitionUnary(definition);
                    if (definitionUnary) {
                      var definitionString = definition.asString();
                      throw new Error("The '".concat(definitionString, "' indirectly left recursive definition of the '").concat(ruleName, "' rule is unary and therefore cannot be rewritten."));
                    }
                    var definitionComplex = (0, _definition).isDefinitionComplex(definition);
                    if (definitionComplex) {
                      var definitionString1 = definition.asString();
                      throw new Error("The '".concat(definitionString1, "' indirectly left recursive definition of the '").concat(ruleName, "' rule is complex and therefore cannot be rewritten."));
                    }
                    var type = _types.INDIRECTLY_LEFT_RECURSIVE_TYPE, parts = [], recursiveRuleNames = (0, _definition).recursiveRuleNamesFromDefinition(definition);
                    indirectlyLeftRecursiveDefinition = new IndirectlyLeftRecursiveDefinition2(type, parts, ruleName, definition, recursiveRuleNames, leftRecursiveRuleNames, implicitlyLeftRecursiveDefinition);
                    return true;
                  }
                }
              });
            }
            return indirectlyLeftRecursiveDefinition;
          }
        }
      ]);
      return IndirectlyLeftRecursiveDefinition2;
    }(_leftRecursive.default);
    exports.default = IndirectlyLeftRecursiveDefinition;
  });

  // node_modules/occam-grammar-utilities/lib/eliminateLeftRecursion.js
  var require_eliminateLeftRecursion = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = eliminateLeftRecursion;
    var _recursive = _interopRequireDefault2(require_recursive());
    var _leftRecursive = _interopRequireDefault2(require_leftRecursive());
    var _directly = _interopRequireDefault2(require_directly());
    var _indirectly = _interopRequireDefault2(require_indirectly());
    var _class = require_class2();
    function eliminateLeftRecursion(startRule, ruleMap) {
      var rule = startRule, recursiveDefinitions = [], leftRecursiveDefinitions = [];
      replaceRecursiveDefinitions(rule, recursiveDefinitions, leftRecursiveDefinitions, ruleMap);
      rewriteLeftRecursiveDefinitions(leftRecursiveDefinitions, ruleMap);
      var startRuleName = startRule.getName();
      startRule = ruleMap[startRuleName];
      return startRule;
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function replaceRecursiveDefinition(ruleName, definition, recursiveDefinitions, leftRecursiveDefinitions, ruleMap) {
      var leftRecursiveDefinition2 = _indirectly.default.fromRuleNameDefinitionAndRecursiveDefinitions(ruleName, definition, recursiveDefinitions) || _directly.default.fromRuleNameAndDefinition(ruleName, definition) || _leftRecursive.default.fromRuleNameAndDefinition(ruleName, definition);
      if (leftRecursiveDefinition2 !== null) {
        var leftRecursiveDefinitionIndirectlyLeftRecursiveDefinition = (0, _class).isInstanceOf(leftRecursiveDefinition2, _indirectly.default);
        if (leftRecursiveDefinitionIndirectlyLeftRecursiveDefinition) {
          var indirectlyLeftRecursiveDefinition = leftRecursiveDefinition2, implicitlyLeftRecursiveDefinition = indirectlyLeftRecursiveDefinition.getImplicitlyLeftRecursiveDefinition();
          implicitlyLeftRecursiveDefinition.replace(ruleMap);
        }
        leftRecursiveDefinitions.push(leftRecursiveDefinition2);
      }
      var recursiveDefinition = leftRecursiveDefinition2 !== null ? leftRecursiveDefinition2 : _recursive.default.fromRuleNameAndDefinition(ruleName, definition);
      if (recursiveDefinition !== null) {
        recursiveDefinition.replace(ruleMap);
      }
      return recursiveDefinition;
    }
    function replaceRecursiveDefinitions(rule, recursiveDefinitions, leftRecursiveDefinitions, ruleMap) {
      var ruleName1 = rule.getName(), definitions = rule.getDefinitions();
      definitions.forEach(function(definition) {
        var definitionRecursiveDefinition = (0, _class).isInstanceOf(definition, _recursive.default), recursiveDefinition = definitionRecursiveDefinition ? definition : replaceRecursiveDefinition(ruleName1, definition, recursiveDefinitions, leftRecursiveDefinitions, ruleMap);
        if (recursiveDefinition !== null) {
          var previousRecursiveDefinitions = _toConsumableArray(recursiveDefinitions).concat([
            recursiveDefinition
          ]), previousRecursiveRuleNames = previousRecursiveDefinitions.map(function(previousRecursiveDefinition) {
            return recursiveRuleNameFromRecursiveDefinition(previousRecursiveDefinition);
          }), recursiveRuleNames = recursiveDefinition.getRecursiveRuleNames();
          recursiveRuleNames.forEach(function(recursiveRuleName) {
            var previousRecursiveRuleNamesIncludesRecursiveRuleName = previousRecursiveRuleNames.includes(recursiveRuleName);
            if (!previousRecursiveRuleNamesIncludesRecursiveRuleName) {
              var ruleName = recursiveRuleName, _$rule = ruleMap[ruleName] || null;
              if (_$rule !== null) {
                var _$recursiveDefinitions = previousRecursiveDefinitions;
                replaceRecursiveDefinitions(_$rule, _$recursiveDefinitions, leftRecursiveDefinitions, ruleMap);
              }
            }
          });
        }
      });
    }
    function rewriteLeftRecursiveDefinitions(leftRecursiveDefinitions, ruleMap) {
      leftRecursiveDefinitions.forEach(function(leftRecursiveDefinition2) {
        return leftRecursiveDefinition2.rewrite(ruleMap);
      });
    }
    function recursiveRuleNameFromRecursiveDefinition(recursiveDefinition) {
      var recursiveDefinitionRuleName = recursiveDefinition.getRuleName(), recursiveRuleName = recursiveDefinitionRuleName;
      return recursiveRuleName;
    }
  });

  // node_modules/occam-grammar-utilities/lib/removeOrRenameIntermediateNodes.js
  var require_removeOrRenameIntermediateNodes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = removeOrRenameIntermediateNodes;
    var _reduced = _interopRequireDefault2(require_reduced());
    var _repeated = _interopRequireDefault2(require_repeated());
    var _class = require_class2();
    var _ruleName = require_ruleName7();
    function removeOrRenameIntermediateNodes(node) {
      removeOrRenameReducedNodes(node);
      removeRepeatedNodes(node);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function removeRepeatedNodes(node) {
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node;
        var childNodes = nonTerminalNode.getChildNodes();
        childNodes = removeRepeatedChildNodes(childNodes);
        nonTerminalNode.setChildNodes(childNodes);
      }
    }
    function removeRepeatedChildNodes(childNodes1) {
      childNodes1 = childNodes1.reduce(function(childNodes, childNode) {
        var childNodeRepeatedNode = (0, _class).isInstanceOf(childNode, _repeated.default);
        if (childNodeRepeatedNode) {
          var childNodeChildNodes = childNode.getChildNodes();
          childNodeChildNodes = removeRepeatedChildNodes(childNodeChildNodes);
          childNodes = childNodes.concat(childNodeChildNodes);
        } else {
          removeRepeatedNodes(childNode);
          childNodes.push(childNode);
        }
        return childNodes;
      }, []);
      return childNodes1;
    }
    function removeOrRenameReducedNodes(node) {
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node, ruleName = nonTerminalNode.getRuleName();
        var childNodes = nonTerminalNode.getChildNodes();
        childNodes = removeOrRenameReducedChildNodes(childNodes, ruleName);
        nonTerminalNode.setChildNodes(childNodes);
      }
    }
    function removeOrRenameReducedChildNodes(childNodes2, ruleName) {
      var childNodesLength = childNodes2.length;
      childNodes2 = childNodes2.reduce(function(childNodes, childNode) {
        var childNodeReducedNode = (0, _class).isInstanceOf(childNode, _reduced.default);
        if (childNodeReducedNode) {
          var reducedNode = childNode, reducedNodeRuleName = reducedNode.getRuleName(), reducedRuleName = reducedNodeRuleName, reducedRuleNameMatchesRuleName = (0, _ruleName).checkReducedRuleNameMatchesRuleName(reducedRuleName, ruleName);
          if (reducedRuleNameMatchesRuleName) {
            if (childNodesLength > 1) {
              var _$ruleName = (0, _ruleName).ruleNameFromReducedRuleName(reducedRuleName);
              childNode.setRuleName(_$ruleName);
              removeOrRenameReducedNodes(childNode);
              childNodes.push(childNode);
            } else {
              var childNodeChildNodes = childNode.getChildNodes();
              childNodeChildNodes = removeOrRenameReducedChildNodes(childNodeChildNodes);
              childNodes = childNodes.concat(childNodeChildNodes);
            }
          } else {
            var _$ruleName1 = (0, _ruleName).ruleNameFromReducedRuleName(reducedRuleName);
            childNode.setRuleName(_$ruleName1);
            removeOrRenameReducedNodes(childNode);
            childNodes.push(childNode);
          }
        } else {
          removeOrRenameReducedNodes(childNode);
          childNodes.push(childNode);
        }
        return childNodes;
      }, []);
      return childNodes2;
    }
  });

  // node_modules/occam-grammar-utilities/lib/index.js
  var require_lib8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "eliminateLeftRecursion", {
      enumerable: true,
      get: function() {
        return _eliminateLeftRecursion.default;
      }
    });
    Object.defineProperty(exports, "removeOrRenameIntermediateNodes", {
      enumerable: true,
      get: function() {
        return _removeOrRenameIntermediateNodes.default;
      }
    });
    var _eliminateLeftRecursion = _interopRequireDefault2(require_eliminateLeftRecursion());
    var _removeOrRenameIntermediateNodes = _interopRequireDefault2(require_removeOrRenameIntermediateNodes());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/easy-layout/lib/options.js
  var require_options = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.ESCAPE_KEY_STOPS_DRAGGING_OPTION = void 0;
    var ESCAPE_KEY_STOPS_DRAGGING_OPTION = "ESCAPE_KEY_STOPS_DRAGGING";
    exports.ESCAPE_KEY_STOPS_DRAGGING_OPTION = ESCAPE_KEY_STOPS_DRAGGING_OPTION;
    var _default = {
      ESCAPE_KEY_STOPS_DRAGGING_OPTION
    };
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/div/row.js
  var require_row = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  display: flex;\n  flex-grow: 1;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var RowDiv = /* @__PURE__ */ function(Element) {
      _inherits(RowDiv2, Element);
      var _super = _createSuper(RowDiv2);
      function RowDiv2() {
        _classCallCheck(this, RowDiv2);
        return _super.apply(this, arguments);
      }
      return RowDiv2;
    }(_wrapNativeSuper(_easy2.Element));
    _defineProperty(RowDiv, "tagName", "div");
    _defineProperty(RowDiv, "defaultProperties", {
      className: "row"
    });
    var _default = (0, _easyWithStyle2).default(RowDiv)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/div/rows.js
  var require_rows = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var RowsDiv = /* @__PURE__ */ function(Element) {
      _inherits(RowsDiv2, Element);
      var _super = _createSuper(RowsDiv2);
      function RowsDiv2() {
        _classCallCheck(this, RowsDiv2);
        return _super.apply(this, arguments);
      }
      return RowsDiv2;
    }(_wrapNativeSuper(_easy2.Element));
    _defineProperty(RowsDiv, "tagName", "div");
    _defineProperty(RowsDiv, "defaultProperties", {
      className: "rows"
    });
    var _default = (0, _easyWithStyle2).default(RowsDiv)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/div/column.js
  var require_column = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  display: flex;\n  flex-grow: 1;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var ColumnDiv = /* @__PURE__ */ function(Element) {
      _inherits(ColumnDiv2, Element);
      var _super = _createSuper(ColumnDiv2);
      function ColumnDiv2() {
        _classCallCheck(this, ColumnDiv2);
        return _super.apply(this, arguments);
      }
      return ColumnDiv2;
    }(_wrapNativeSuper(_easy2.Element));
    _defineProperty(ColumnDiv, "tagName", "div");
    _defineProperty(ColumnDiv, "defaultProperties", {
      className: "column"
    });
    var _default = (0, _easyWithStyle2).default(ColumnDiv)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/div/columns.js
  var require_columns = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  display: flex;\n  flex-grow: 1;\n  flex-direction: row;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var ColumnsDiv = /* @__PURE__ */ function(Element) {
      _inherits(ColumnsDiv2, Element);
      var _super = _createSuper(ColumnsDiv2);
      function ColumnsDiv2() {
        _classCallCheck(this, ColumnsDiv2);
        return _super.apply(this, arguments);
      }
      return ColumnsDiv2;
    }(_wrapNativeSuper(_easy2.Element));
    _defineProperty(ColumnsDiv, "tagName", "div");
    _defineProperty(ColumnsDiv, "defaultProperties", {
      className: "columns"
    });
    var _default = (0, _easyWithStyle2).default(ColumnsDiv)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/div/sizeable.js
  var require_sizeable = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  display: flex;\n  \n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var SizeableDiv = /* @__PURE__ */ function(Element) {
      _inherits(SizeableDiv2, Element);
      var _super = _createSuper(SizeableDiv2);
      function SizeableDiv2() {
        _classCallCheck(this, SizeableDiv2);
        return _super.apply(this, arguments);
      }
      return SizeableDiv2;
    }(_wrapNativeSuper(_easy2.Element));
    _defineProperty(SizeableDiv, "tagName", "div");
    _defineProperty(SizeableDiv, "defaultProperties", {
      className: "sizeable"
    });
    var _default = (0, _easyWithStyle2).default(SizeableDiv)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/constants.js
  var require_constants7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ESCAPE_KEY_CODE = exports.ROW_RESIZE = exports.COL_RESIZE = exports.CURSOR = exports.AUTO = void 0;
    var AUTO = "auto";
    exports.AUTO = AUTO;
    var CURSOR = "cursor";
    exports.CURSOR = CURSOR;
    var COL_RESIZE = "col-resize";
    exports.COL_RESIZE = COL_RESIZE;
    var ROW_RESIZE = "row-resize";
    exports.ROW_RESIZE = ROW_RESIZE;
    var ESCAPE_KEY_CODE = 27;
    exports.ESCAPE_KEY_CODE = ESCAPE_KEY_CODE;
  });

  // node_modules/easy-layout/lib/cursor.js
  var require_cursor = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.columnResizeCursor = columnResizeCursor;
    exports.rowResizeCursor = rowResizeCursor;
    exports.resetCursor = resetCursor;
    var _easy2 = require_lib();
    var _constants = require_constants7();
    var body2 = new _easy2.Body();
    var previousCursor;
    function columnResizeCursor() {
      var currentCursor = getCurrentCursor();
      if (currentCursor !== _constants.COL_RESIZE) {
        previousCursor = currentCursor;
        setCursor(_constants.COL_RESIZE);
      }
    }
    function rowResizeCursor() {
      var currentCursor = getCurrentCursor();
      if (currentCursor !== _constants.ROW_RESIZE) {
        previousCursor = currentCursor;
        setCursor(_constants.ROW_RESIZE);
      }
    }
    function resetCursor() {
      setCursor(previousCursor);
    }
    function setCursor(cursor) {
      var css = {
        cursor
      };
      body2.css(css);
    }
    function getCurrentCursor() {
      var currentCursor = body2.css(_constants.CURSOR) || _constants.AUTO;
      return currentCursor;
    }
  });

  // node_modules/easy-layout/lib/div/splitter.js
  var require_splitter = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    var _sizeable = _interopRequireDefault2(require_sizeable());
    var _cursor = require_cursor();
    var _constants = require_constants7();
    var _options = require_options();
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  flex-shrink: 0;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var BLUR_EVENT_TYPE = _easy2.eventTypes.BLUR_EVENT_TYPE;
    var DRAG_EVENT_TYPE = _easy2.eventTypes.DRAG_EVENT_TYPE;
    var MOUSEUP_EVENT_TYPE = _easy2.eventTypes.MOUSEUP_EVENT_TYPE;
    var STOP_DRAG_EVENT_TYPE = _easy2.eventTypes.STOP_DRAG_EVENT_TYPE;
    var START_DRAG_EVENT_TYPE = _easy2.eventTypes.START_DRAG_EVENT_TYPE;
    var SplitterDiv = /* @__PURE__ */ function(Element) {
      _inherits(SplitterDiv2, Element);
      var _super = _createSuper(SplitterDiv2);
      function SplitterDiv2(selector, options) {
        _classCallCheck(this, SplitterDiv2);
        var _this;
        _this = _super.call(this, selector);
        _this.options = options;
        return _this;
      }
      _createClass(SplitterDiv2, [
        {
          key: "isOptionPresent",
          value: function isOptionPresent(option) {
            var optionPresent = !!this.options[option];
            return optionPresent;
          }
        },
        {
          key: "setOptions",
          value: function setOptions(options) {
            this.options = options;
          }
        },
        {
          key: "setOption",
          value: function setOption(option) {
            this.options[option] = true;
          }
        },
        {
          key: "unsetOption",
          value: function unsetOption(option) {
            delete this.options[option];
          }
        },
        {
          key: "onDrag",
          value: function onDrag(dragHandler, element) {
            var eventType = DRAG_EVENT_TYPE, handler = dragHandler;
            this.addEventListener(eventType, handler, element);
          }
        },
        {
          key: "offDrag",
          value: function offDrag(dragHandler, element) {
            var eventType = DRAG_EVENT_TYPE, handler = dragHandler;
            this.removeEventListener(eventType, handler, element);
          }
        },
        {
          key: "onStopDrag",
          value: function onStopDrag(stopDragHandler, element) {
            var eventType = STOP_DRAG_EVENT_TYPE, handler = stopDragHandler;
            this.addEventListener(eventType, handler, element);
          }
        },
        {
          key: "offStopDrag",
          value: function offStopDrag(stopDragHandler, element) {
            var eventType = STOP_DRAG_EVENT_TYPE, handler = stopDragHandler;
            this.removeEventListener(eventType, handler, element);
          }
        },
        {
          key: "onStartDrag",
          value: function onStartDrag(stopDragHandler, element) {
            var eventType = START_DRAG_EVENT_TYPE, handler = stopDragHandler;
            this.addEventListener(eventType, handler, element);
          }
        },
        {
          key: "offStartDrag",
          value: function offStartDrag(stopDragHandler, element) {
            var eventType = START_DRAG_EVENT_TYPE, handler = stopDragHandler;
            this.removeEventListener(eventType, handler, element);
          }
        },
        {
          key: "callHandlers",
          value: function callHandlers(eventType) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              remainingArguments[_key - 1] = arguments[_key];
            }
            var _this = this;
            var eventListeners = this.findEventListeners(eventType);
            eventListeners.forEach(function(eventListener) {
              var _handler;
              var handler = eventListener.handler, handlerElement = eventListener.element, element = _this;
              (_handler = handler).call.apply(_handler, [
                handlerElement
              ].concat(_toConsumableArray(remainingArguments), [
                element
              ]));
            });
          }
        },
        {
          key: "enable",
          value: function enable() {
            this.removeClass("disabled");
          }
        },
        {
          key: "disable",
          value: function disable() {
            this.addClass("disabled");
          }
        },
        {
          key: "isDisabled",
          value: function isDisabled() {
            var disabled = this.hasClass("disabled");
            return disabled;
          }
        },
        {
          key: "isDragging",
          value: function isDragging() {
            var dragging = this.hasClass("dragging");
            return dragging;
          }
        },
        {
          key: "getDirection",
          value: function getDirection() {
            var direction;
            var nextSiblingElement = this.getNextSiblingElement(), previousSiblingElement = this.getPreviousSiblingElement();
            if (_instanceof(nextSiblingElement, _sizeable.default)) {
              direction = 1;
            }
            if (_instanceof(previousSiblingElement, _sizeable.default)) {
              direction = -1;
            }
            return direction;
          }
        },
        {
          key: "getSizeableDiv",
          value: function getSizeableDiv() {
            var sizeableDiv;
            var nextSiblingElement = this.getNextSiblingElement(), previousSiblingElement = this.getPreviousSiblingElement();
            if (_instanceof(nextSiblingElement, _sizeable.default)) {
              sizeableDiv = nextSiblingElement;
            }
            if (_instanceof(previousSiblingElement, _sizeable.default)) {
              sizeableDiv = previousSiblingElement;
            }
            return sizeableDiv;
          }
        },
        {
          key: "startDrag",
          value: function startDrag() {
            var eventType = START_DRAG_EVENT_TYPE, escapeKeyStopsDraggingOptionPresent = this.isOptionPresent(_options.ESCAPE_KEY_STOPS_DRAGGING_OPTION);
            if (escapeKeyStopsDraggingOptionPresent) {
              _easy2.window.onKeyDown(this.keyDownHandler, this);
            }
            this.addClass("dragging");
            this.callHandlers(eventType);
          }
        },
        {
          key: "stopDrag",
          value: function stopDrag() {
            var eventType = STOP_DRAG_EVENT_TYPE, escapeKeyStopsDraggingOptionPresent = this.isOptionPresent(_options.ESCAPE_KEY_STOPS_DRAGGING_OPTION);
            if (escapeKeyStopsDraggingOptionPresent) {
              _easy2.window.offKeyDown(this.keyDownHandler, this);
            }
            this.removeClass("dragging");
            this.callHandlers(eventType);
          }
        },
        {
          key: "mouseUpHandler",
          value: function mouseUpHandler(event, element) {
            var disabled = this.isDisabled();
            if (!disabled) {
              var dragging = this.isDragging();
              if (dragging) {
                this.stopDrag();
              }
              (0, _cursor).resetCursor();
            }
          }
        },
        {
          key: "mouseOutHandler",
          value: function mouseOutHandler(event, element) {
            var disabled = this.isDisabled();
            if (!disabled) {
              var dragging = this.isDragging();
              if (!dragging) {
                (0, _cursor).resetCursor();
              }
            }
          }
        },
        {
          key: "keyDownHandler",
          value: function keyDownHandler(event, element) {
            var keyCode = event.keyCode;
            if (keyCode === _constants.ESCAPE_KEY_CODE) {
              var dragging = this.isDragging();
              if (dragging) {
                this.stopDrag();
              }
              (0, _cursor).resetCursor();
            }
          }
        },
        {
          key: "didMount",
          value: function didMount() {
            var _properties = this.properties, onDrag = _properties.onDrag, onStopDrag = _properties.onStopDrag, onStartDrag = _properties.onStartDrag, disabled = _properties.disabled, dragHandler = onDrag, stopDragHandler = onStopDrag, startDragHandler = onStartDrag;
            disabled === true ? this.disable() : this.enable();
            dragHandler && this.onDrag(dragHandler);
            stopDragHandler && this.onStopDrag(stopDragHandler);
            startDragHandler && this.onStartDrag(startDragHandler);
            _easy2.window.on("".concat(BLUR_EVENT_TYPE, " ").concat(MOUSEUP_EVENT_TYPE), this.mouseUpHandler, this);
            _easy2.window.onMouseMove(this.mouseMoveHandler, this);
            this.onMouseDown(this.mouseDownHandler, this);
            this.onMouseOver(this.mouseOverHandler, this);
            this.onMouseOut(this.mouseOutHandler, this);
          }
        },
        {
          key: "willUnmount",
          value: function willUnmount() {
            var _properties = this.properties, onDrag = _properties.onDrag, onStopDrag = _properties.onStopDrag, onStartDrag = _properties.onStartDrag, dragHandler = onDrag, stopDragHandler = onStopDrag, startDragHandler = onStartDrag;
            dragHandler && this.offDrag(dragHandler);
            stopDragHandler && this.offStopDrag(stopDragHandler);
            startDragHandler && this.offStartDrag(startDragHandler);
            _easy2.window.off("".concat(BLUR_EVENT_TYPE, " ").concat(MOUSEUP_EVENT_TYPE), this.mouseUpHandler, this);
            _easy2.window.offMouseMove(this.mouseMoveHandler, this);
            this.offMouseDown(this.mouseDownHandler, this);
            this.offMouseOver(this.mouseOverHandler, this);
            this.offMouseOut(this.mouseOutHandler, this);
          }
        },
        {
          key: "initialise",
          value: function initialise() {
            this.setInitialState();
          }
        }
      ], [
        {
          key: "fromClass",
          value: function fromClass(Class, properties) {
            var _options1 = properties.options, options = _options1 === void 0 ? {} : _options1, splitterDiv = _easy2.Element.fromClass(Class, properties, options);
            return splitterDiv;
          }
        }
      ]);
      return SplitterDiv2;
    }(_wrapNativeSuper(_easy2.Element));
    _defineProperty(SplitterDiv, "tagName", "div");
    _defineProperty(SplitterDiv, "defaultProperties", {
      className: "splitter"
    });
    _defineProperty(SplitterDiv, "ignoredProperties", [
      "onDrag",
      "options",
      "disabled",
      "onStopDrag",
      "onStartDrag"
    ]);
    var _default = (0, _easyWithStyle2).default(SplitterDiv)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/div/splitter/vertical.js
  var require_vertical = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    var _splitter = _interopRequireDefault2(require_splitter());
    var _cursor = require_cursor();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  width: 1rem;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var DRAG_EVENT_TYPE = _easy2.eventTypes.DRAG_EVENT_TYPE;
    var VerticalSplitter = /* @__PURE__ */ function(Splitter) {
      _inherits(VerticalSplitter2, Splitter);
      var _super = _createSuper(VerticalSplitter2);
      function VerticalSplitter2() {
        _classCallCheck(this, VerticalSplitter2);
        return _super.apply(this, arguments);
      }
      _createClass(VerticalSplitter2, [
        {
          key: "mouseOverHandler",
          value: function mouseOverHandler(event, element) {
            var disabled = this.isDisabled();
            if (!disabled) {
              (0, _cursor).columnResizeCursor();
            }
          }
        },
        {
          key: "mouseMoveHandler",
          value: function mouseMoveHandler(event, element) {
            var pageX = event.pageX, mouseLeft = pageX, disabled = this.isDisabled();
            if (!disabled) {
              var dragging = this.isDragging();
              if (dragging) {
                var direction = this.getDirection(), sizeableDiv = this.getSizeableDiv();
                var previousMouseLeft = this.getPreviousMouseLeft(), previousSizeableDivWidth = this.getPreviousSizeableDivWidth(), relativeMouseLeft = mouseLeft - previousMouseLeft;
                var sizeableDivWidth = previousSizeableDivWidth - direction * relativeMouseLeft;
                var width = sizeableDivWidth, eventType = DRAG_EVENT_TYPE;
                sizeableDiv.setWidth(width);
                sizeableDivWidth = sizeableDiv.getWidth();
                this.callHandlers(eventType, sizeableDivWidth);
              }
            }
          }
        },
        {
          key: "mouseDownHandler",
          value: function mouseDownHandler(event, element) {
            var pageX = event.pageX, mouseLeft = pageX, disabled = this.isDisabled();
            if (!disabled) {
              var dragging = this.isDragging(), sizeableDiv = this.getSizeableDiv(), previousMouseLeft = mouseLeft, sizeableDivWidth = sizeableDiv.getWidth(), previousSizeableDivWidth = sizeableDivWidth;
              this.setPreviousMouseLeft(previousMouseLeft);
              this.setPreviousSizeableDivWidth(previousSizeableDivWidth);
              (0, _cursor).columnResizeCursor();
              if (!dragging) {
                this.startDrag();
              }
            }
          }
        },
        {
          key: "getPreviousMouseLeft",
          value: function getPreviousMouseLeft() {
            var state = this.getState(), previousMouseLeft = state.previousMouseLeft;
            return previousMouseLeft;
          }
        },
        {
          key: "getPreviousSizeableDivWidth",
          value: function getPreviousSizeableDivWidth() {
            var state = this.getState(), previousSizeableDivWidth = state.previousSizeableDivWidth;
            return previousSizeableDivWidth;
          }
        },
        {
          key: "setPreviousMouseLeft",
          value: function setPreviousMouseLeft(previousMouseLeft) {
            this.updateState({
              previousMouseLeft
            });
          }
        },
        {
          key: "setPreviousSizeableDivWidth",
          value: function setPreviousSizeableDivWidth(previousSizeableDivWidth) {
            this.updateState({
              previousSizeableDivWidth
            });
          }
        },
        {
          key: "setInitialState",
          value: function setInitialState() {
            var previousMouseLeft = null, previousSizeableDivWidth = null;
            this.setState({
              previousMouseLeft,
              previousSizeableDivWidth
            });
          }
        }
      ]);
      return VerticalSplitter2;
    }(_splitter.default);
    _defineProperty(VerticalSplitter, "defaultProperties", {
      className: "vertical"
    });
    var _default = (0, _easyWithStyle2).default(VerticalSplitter)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/div/splitter/horizontal.js
  var require_horizontal = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    var _splitter = _interopRequireDefault2(require_splitter());
    var _cursor = require_cursor();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  height: 1rem;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var DRAG_EVENT_TYPE = _easy2.eventTypes.DRAG_EVENT_TYPE;
    var HorizontalSplitter = /* @__PURE__ */ function(Splitter) {
      _inherits(HorizontalSplitter2, Splitter);
      var _super = _createSuper(HorizontalSplitter2);
      function HorizontalSplitter2() {
        _classCallCheck(this, HorizontalSplitter2);
        return _super.apply(this, arguments);
      }
      _createClass(HorizontalSplitter2, [
        {
          key: "mouseOverHandler",
          value: function mouseOverHandler(event, element) {
            var disabled = this.isDisabled();
            if (!disabled) {
              (0, _cursor).rowResizeCursor();
            }
          }
        },
        {
          key: "mouseMoveHandler",
          value: function mouseMoveHandler(event, element) {
            var pageY = event.pageY, mouseTop = pageY, disabled = this.isDisabled();
            if (!disabled) {
              var dragging = this.isDragging();
              if (dragging) {
                var direction = this.getDirection(), sizeableDiv = this.getSizeableDiv();
                var previousMouseTop = this.getPreviousMouseTop(), previousSizeableDivHeight = this.getPreviousSizeableDivHeight(), relativeMouseTop = mouseTop - previousMouseTop;
                var sizeableDivHeight = previousSizeableDivHeight - direction * relativeMouseTop;
                var height = sizeableDivHeight, eventType = DRAG_EVENT_TYPE;
                sizeableDiv.setHeight(height);
                sizeableDivHeight = sizeableDiv.getHeight();
                this.callHandlers(eventType, sizeableDivHeight);
              }
            }
          }
        },
        {
          key: "mouseDownHandler",
          value: function mouseDownHandler(event, element) {
            var pageY = event.pageY, mouseTop = pageY, disabled = this.isDisabled();
            if (!disabled) {
              var dragging = this.isDragging(), sizeableDiv = this.getSizeableDiv(), previousMouseTop = mouseTop, sizeableDivHeight = sizeableDiv.getHeight(), previousSizeableDivHeight = sizeableDivHeight;
              this.setPreviousMouseTop(previousMouseTop);
              this.setPreviousSizeableDivHeight(previousSizeableDivHeight);
              (0, _cursor).rowResizeCursor();
              if (!dragging) {
                this.startDrag();
              }
            }
          }
        },
        {
          key: "getPreviousMouseTop",
          value: function getPreviousMouseTop() {
            var state = this.getState(), previousMouseTop = state.previousMouseTop;
            return previousMouseTop;
          }
        },
        {
          key: "getPreviousSizeableDivHeight",
          value: function getPreviousSizeableDivHeight() {
            var state = this.getState(), previousSizeableDivHeight = state.previousSizeableDivHeight;
            return previousSizeableDivHeight;
          }
        },
        {
          key: "setPreviousMouseTop",
          value: function setPreviousMouseTop(previousMouseTop) {
            this.updateState({
              previousMouseTop
            });
          }
        },
        {
          key: "setPreviousSizeableDivHeight",
          value: function setPreviousSizeableDivHeight(previousSizeableDivHeight) {
            this.updateState({
              previousSizeableDivHeight
            });
          }
        },
        {
          key: "setInitialState",
          value: function setInitialState() {
            var previousMouseTop = null, previousSizeableDivHeight = null;
            this.setState({
              previousMouseTop,
              previousSizeableDivHeight
            });
          }
        }
      ]);
      return HorizontalSplitter2;
    }(_splitter.default);
    _defineProperty(HorizontalSplitter, "defaultProperties", {
      className: "horizontal"
    });
    var _default = (0, _easyWithStyle2).default(HorizontalSplitter)(_templateObject());
    exports.default = _default;
  });

  // node_modules/easy-layout/lib/index.js
  var require_lib9 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "options", {
      enumerable: true,
      get: function() {
        return _options.default;
      }
    });
    Object.defineProperty(exports, "RowDiv", {
      enumerable: true,
      get: function() {
        return _row.default;
      }
    });
    Object.defineProperty(exports, "RowsDiv", {
      enumerable: true,
      get: function() {
        return _rows.default;
      }
    });
    Object.defineProperty(exports, "ColumnDiv", {
      enumerable: true,
      get: function() {
        return _column.default;
      }
    });
    Object.defineProperty(exports, "ColumnsDiv", {
      enumerable: true,
      get: function() {
        return _columns.default;
      }
    });
    Object.defineProperty(exports, "SplitterDiv", {
      enumerable: true,
      get: function() {
        return _splitter.default;
      }
    });
    Object.defineProperty(exports, "SizeableDiv", {
      enumerable: true,
      get: function() {
        return _sizeable.default;
      }
    });
    Object.defineProperty(exports, "VerticalSplitterDiv", {
      enumerable: true,
      get: function() {
        return _vertical.default;
      }
    });
    Object.defineProperty(exports, "HorizontalSplitterDiv", {
      enumerable: true,
      get: function() {
        return _horizontal.default;
      }
    });
    var _options = _interopRequireDefault2(require_options());
    var _row = _interopRequireDefault2(require_row());
    var _rows = _interopRequireDefault2(require_rows());
    var _column = _interopRequireDefault2(require_column());
    var _columns = _interopRequireDefault2(require_columns());
    var _splitter = _interopRequireDefault2(require_splitter());
    var _sizeable = _interopRequireDefault2(require_sizeable());
    var _vertical = _interopRequireDefault2(require_vertical());
    var _horizontal = _interopRequireDefault2(require_horizontal());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // lib/grammarNames.js
  var require_grammarNames = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.USER_DEFINED_CUSTOM_GRAMMAR_NAME = exports.DEFAULT_CUSTOM_GRAMMAR_NAME = void 0;
    var DEFAULT_CUSTOM_GRAMMAR_NAME = "Default";
    exports.DEFAULT_CUSTOM_GRAMMAR_NAME = DEFAULT_CUSTOM_GRAMMAR_NAME;
    var USER_DEFINED_CUSTOM_GRAMMAR_NAME = "User defined";
    exports.USER_DEFINED_CUSTOM_GRAMMAR_NAME = USER_DEFINED_CUSTOM_GRAMMAR_NAME;
  });

  // lib/constants.js
  var require_constants8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.METASTATEMENT = exports.EMPTY_STRING = exports.EXPRESSION = exports.STATEMENT = exports.TERM = void 0;
    var TERM = "term";
    exports.TERM = TERM;
    var STATEMENT = "statement";
    exports.STATEMENT = STATEMENT;
    var EXPRESSION = "expression";
    exports.EXPRESSION = EXPRESSION;
    var EMPTY_STRING = "";
    exports.EMPTY_STRING = EMPTY_STRING;
    var METASTATEMENT = "metastatement";
    exports.METASTATEMENT = METASTATEMENT;
  });

  // lib/customGrammar.js
  var require_customGrammar = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _constants = require_constants8();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CustomGrammar = /* @__PURE__ */ function() {
      function CustomGrammar2(name, lexicalPattern, termBNF, expressionBNF, statementBNF, metastatementBNF) {
        _classCallCheck(this, CustomGrammar2);
        this.name = name;
        this.lexicalPattern = lexicalPattern;
        this.termBNF = termBNF;
        this.expressionBNF = expressionBNF;
        this.statementBNF = statementBNF;
        this.metastatementBNF = metastatementBNF;
      }
      _createClass(CustomGrammar2, [
        {
          key: "getName",
          value: function getName() {
            return this.name;
          }
        },
        {
          key: "getLexicalPattern",
          value: function getLexicalPattern() {
            return this.lexicalPattern;
          }
        },
        {
          key: "getBNF",
          value: function getBNF(ruleName) {
            var bnf;
            switch (ruleName) {
              case _constants.TERM:
                bnf = this.termBNF;
                break;
              case _constants.EXPRESSION:
                bnf = this.expressionBNF;
                break;
              case _constants.STATEMENT:
                bnf = this.statementBNF;
                break;
              case _constants.METASTATEMENT:
                bnf = this.metastatementBNF;
                break;
            }
            return bnf;
          }
        },
        {
          key: "setName",
          value: function setName(name) {
            this.name = name;
          }
        },
        {
          key: "setLexicalPattern",
          value: function setLexicalPattern(lexicalPattern) {
            this.lexicalPattern = lexicalPattern;
          }
        },
        {
          key: "setBNF",
          value: function setBNF(ruleName, bnf) {
            switch (ruleName) {
              case _constants.TERM:
                this.termBNF = bnf;
                break;
              case _constants.EXPRESSION:
                this.expressionBNF = bnf;
                break;
              case _constants.STATEMENT:
                this.statementBNF = bnf;
                break;
              case _constants.METASTATEMENT:
                this.metastatementBNF = bnf;
                break;
            }
          }
        },
        {
          key: "resetLexicalPattern",
          value: function resetLexicalPattern() {
            var lexicalPattern = null;
            this.setLexicalPattern(lexicalPattern);
          }
        },
        {
          key: "resetBNF",
          value: function resetBNF(ruleName) {
            var bnf = null;
            this.setBNF(ruleName, bnf);
          }
        },
        {
          key: "update",
          value: function update(ruleName, bnf, lexicalPattern) {
            this.setBNF(ruleName, bnf);
            this.setLexicalPattern(lexicalPattern);
          }
        },
        {
          key: "toJSON",
          value: function toJSON() {
            var name = this.name, lexicalPattern = this.lexicalPattern, termBNF = this.termBNF, expressionBNF = this.expressionBNF, statementBNF = this.statementBNF, metastatementBNF = this.metastatementBNF, json = {
              name,
              lexicalPattern,
              termBNF,
              expressionBNF,
              statementBNF,
              metastatementBNF
            };
            return json;
          }
        }
      ], [
        {
          key: "fromJSON",
          value: function fromJSON(json) {
            var name = json.name, lexicalPattern = json.lexicalPattern, termBNF = json.termBNF, expressionBNF = json.expressionBNF, statementBNF = json.statementBNF, metastatementBNF = json.metastatementBNF, customGrammar = new CustomGrammar2(name, lexicalPattern, termBNF, expressionBNF, statementBNF, metastatementBNF);
            return customGrammar;
          }
        },
        {
          key: "fromName",
          value: function fromName(name) {
            var lexicalPattern = null, termBNF = null, expressionBNF = null, statementBNF = null, metastatementBNF = null, customGrammar = new CustomGrammar2(name, lexicalPattern, termBNF, expressionBNF, statementBNF, metastatementBNF);
            return customGrammar;
          }
        }
      ]);
      return CustomGrammar2;
    }();
    exports.default = CustomGrammar;
  });

  // node_modules/occam-grammars/lib/teX/entries.js
  var require_entries4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        special: "^(?:\\$\\$|\\$|\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\])"
      },
      {
        unassigned: "^(?:.+?(?=\\$\\$|\\$|\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\])|.+)"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/teX/lexer.js
  var require_lexer5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _entries = _interopRequireDefault2(require_entries4());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TeXLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(TeXLexer2, CommonLexer);
      var _super = _createSuper(TeXLexer2);
      function TeXLexer2() {
        _classCallCheck(this, TeXLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(TeXLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamLexers.CommonLexer.fromNothing(TeXLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamLexers.CommonLexer.fromRules(TeXLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamLexers.CommonLexer.fromEntries(TeXLexer2, entries);
          }
        }
      ]);
      return TeXLexer2;
    }(_occamLexers.CommonLexer);
    exports.default = TeXLexer;
    _defineProperty(TeXLexer, "entries", _entries.default);
    _defineProperty(TeXLexer, "EndOfLineToken", _occamLexers.EndOfLineSignificantToken);
    _defineProperty(TeXLexer, "WhitespaceToken", _occamLexers.WhitespaceToken);
    _defineProperty(TeXLexer, "EndOfLineCommentToken", null);
    _defineProperty(TeXLexer, "SingleLineCommentToken", null);
    _defineProperty(TeXLexer, "RegularExpressionToken", null);
    _defineProperty(TeXLexer, "EndOfMultiLineCommentToken", null);
    _defineProperty(TeXLexer, "StartOfMultiLineCommentToken", null);
    _defineProperty(TeXLexer, "MiddleOfMultiLineCommentToken", null);
    _defineProperty(TeXLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(TeXLexer, "DoublyQuotedStringLiteralToken", null);
  });

  // node_modules/occam-grammars/lib/teX/bnf.js
  var require_bnf5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = '\n\n\n    document                        ::=   ( delimitedTeX | everythingElse )+ ;\n    \n    \n    \n    delimitedTeX                    ::=   dollarDelimiter inlineTeX dollarDelimiter \n    \n                                      |   doubleDollarDelimiter displayTeX doubleDollarDelimiter \n    \n                                      |   openingBracketDelimiter inlineTeX closingBracketDelimiter \n    \n                                      |   openingSquareBracketDelimiter displayTeX closingSquareBracketDelimiter \n                                      \n                                      ;\n    \n\n    \n    inlineTeX                       ::=   [unassigned]* ;\n\n    displayTeX                      ::=   [unassigned]* ;\n\n\n\n    dollarDelimiter                 ::=   "$" ;\n \n    doubleDollarDelimiter           ::=   "$$" ;\n    \n\n    \n    openingBracketDelimiter         ::=   "\\(" ;\n\n    closingBracketDelimiter         ::=   "\\)" ;\n\n    openingSquareBracketDelimiter   ::=   "\\[" ;\n    \n    closingSquareBracketDelimiter   ::=   "\\]" ;\n    \n    \n    \n    everythingElse                  ::=   . ;\n\n\n';
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/teX/parser.js
  var require_parser6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _bnf = _interopRequireDefault2(require_bnf5());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var TeXParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(TeXParser2, CommonParser);
      var _super = _createSuper(TeXParser2);
      function TeXParser2() {
        _classCallCheck(this, TeXParser2);
        return _super.apply(this, arguments);
      }
      _createClass(TeXParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamParsers.CommonParser.fromNothing(TeXParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamParsers.CommonParser.fromBNF(TeXParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamParsers.CommonParser.fromRules(TeXParser2, rules);
          }
        }
      ]);
      return TeXParser2;
    }(_occamParsers.CommonParser);
    exports.default = TeXParser;
    _defineProperty(TeXParser, "bnf", _bnf.default);
  });

  // node_modules/occam-grammars/lib/plain/entries.js
  var require_entries5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/plain/lexer.js
  var require_lexer6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _entries = _interopRequireDefault2(require_entries5());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PlainLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(PlainLexer2, CommonLexer);
      var _super = _createSuper(PlainLexer2);
      function PlainLexer2() {
        _classCallCheck(this, PlainLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(PlainLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamLexers.CommonLexer.fromNothing(PlainLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamLexers.CommonLexer.fromRules(PlainLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamLexers.CommonLexer.fromEntries(PlainLexer2, entries);
          }
        }
      ]);
      return PlainLexer2;
    }(_occamLexers.CommonLexer);
    exports.default = PlainLexer;
    _defineProperty(PlainLexer, "entries", _entries.default);
    _defineProperty(PlainLexer, "EndOfLineToken", _occamLexers.EndOfLineSignificantToken);
    _defineProperty(PlainLexer, "WhitespaceToken", _occamLexers.WhitespaceToken);
    _defineProperty(PlainLexer, "EndOfLineCommentToken", null);
    _defineProperty(PlainLexer, "SingleLineCommentToken", null);
    _defineProperty(PlainLexer, "RegularExpressionToken", null);
    _defineProperty(PlainLexer, "EndOfMultiLineCommentToken", null);
    _defineProperty(PlainLexer, "StartOfMultiLineCommentToken", null);
    _defineProperty(PlainLexer, "MiddleOfMultiLineCommentToken", null);
    _defineProperty(PlainLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(PlainLexer, "DoublyQuotedStringLiteralToken", null);
  });

  // node_modules/occam-grammars/lib/plain/bnf.js
  var require_bnf6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = "\n\n\n    document       ::=  ( line | verticalSpace )+ ;\n\n\n    line           ::=  [unassigned]+ ;\n\n\n    verticalSpace  ::=  <END_OF_LINE>+ ;\n\n\n";
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/plain/parser.js
  var require_parser7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _bnf = _interopRequireDefault2(require_bnf6());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var PlainParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(PlainParser2, CommonParser);
      var _super = _createSuper(PlainParser2);
      function PlainParser2() {
        _classCallCheck(this, PlainParser2);
        return _super.apply(this, arguments);
      }
      _createClass(PlainParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamParsers.CommonParser.fromNothing(PlainParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamParsers.CommonParser.fromBNF(PlainParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamParsers.CommonParser.fromRules(PlainParser2, rules);
          }
        }
      ]);
      return PlainParser2;
    }(_occamParsers.CommonParser);
    exports.default = PlainParser;
    _defineProperty(PlainParser, "bnf", _bnf.default);
  });

  // node_modules/occam-grammars/lib/readme/entries.js
  var require_entries6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/readme/lexer.js
  var require_lexer7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _entries = _interopRequireDefault2(require_entries6());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ReadmeLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(ReadmeLexer2, CommonLexer);
      var _super = _createSuper(ReadmeLexer2);
      function ReadmeLexer2() {
        _classCallCheck(this, ReadmeLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(ReadmeLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamLexers.CommonLexer.fromNothing(ReadmeLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamLexers.CommonLexer.fromRules(ReadmeLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamLexers.CommonLexer.fromEntries(ReadmeLexer2, entries);
          }
        }
      ]);
      return ReadmeLexer2;
    }(_occamLexers.CommonLexer);
    exports.default = ReadmeLexer;
    _defineProperty(ReadmeLexer, "entries", _entries.default);
    _defineProperty(ReadmeLexer, "EndOfLineToken", _occamLexers.EndOfLineSignificantToken);
    _defineProperty(ReadmeLexer, "WhitespaceToken", _occamLexers.WhitespaceToken);
    _defineProperty(ReadmeLexer, "EndOfLineCommentToken", null);
    _defineProperty(ReadmeLexer, "SingleLineCommentToken", null);
    _defineProperty(ReadmeLexer, "RegularExpressionToken", null);
    _defineProperty(ReadmeLexer, "EndOfMultiLineCommentToken", null);
    _defineProperty(ReadmeLexer, "StartOfMultiLineCommentToken", null);
    _defineProperty(ReadmeLexer, "MiddleOfMultiLineCommentToken", null);
    _defineProperty(ReadmeLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(ReadmeLexer, "DoublyQuotedStringLiteralToken", null);
  });

  // node_modules/occam-grammars/lib/readme/bnf.js
  var require_bnf7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = "\n\n\n    document       ::=  ( line | verticalSpace )+ ;\n\n\n    line           ::=  [unassigned]+ ;\n\n\n    verticalSpace  ::=  <END_OF_LINE>+ ;\n\n\n";
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/readme/parser.js
  var require_parser8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _bnf = _interopRequireDefault2(require_bnf7());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ReadmeParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(ReadmeParser2, CommonParser);
      var _super = _createSuper(ReadmeParser2);
      function ReadmeParser2() {
        _classCallCheck(this, ReadmeParser2);
        return _super.apply(this, arguments);
      }
      _createClass(ReadmeParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamParsers.CommonParser.fromNothing(ReadmeParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamParsers.CommonParser.fromBNF(ReadmeParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamParsers.CommonParser.fromRules(ReadmeParser2, rules);
          }
        }
      ]);
      return ReadmeParser2;
    }(_occamParsers.CommonParser);
    exports.default = ReadmeParser;
    _defineProperty(ReadmeParser, "bnf", _bnf.default);
  });

  // node_modules/occam-grammars/lib/metaJSON/entries.js
  var require_entries7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        special: "^(?:,|:|\\[|\\]|\\{|\\})"
      },
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/metaJSON/lexer.js
  var require_lexer8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _entries = _interopRequireDefault2(require_entries7());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var MetaJSONLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(MetaJSONLexer2, CommonLexer);
      var _super = _createSuper(MetaJSONLexer2);
      function MetaJSONLexer2() {
        _classCallCheck(this, MetaJSONLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(MetaJSONLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamLexers.CommonLexer.fromNothing(MetaJSONLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamLexers.CommonLexer.fromRules(MetaJSONLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamLexers.CommonLexer.fromEntries(MetaJSONLexer2, entries);
          }
        }
      ]);
      return MetaJSONLexer2;
    }(_occamLexers.CommonLexer);
    exports.default = MetaJSONLexer;
    _defineProperty(MetaJSONLexer, "entries", _entries.default);
    _defineProperty(MetaJSONLexer, "EndOfLineToken", _occamLexers.EndOfLineNonSignificantToken);
    _defineProperty(MetaJSONLexer, "WhitespaceToken", _occamLexers.WhitespaceToken);
    _defineProperty(MetaJSONLexer, "EndOfLineCommentToken", null);
    _defineProperty(MetaJSONLexer, "RegularExpressionToken", null);
    _defineProperty(MetaJSONLexer, "SingleLineCommentToken", null);
    _defineProperty(MetaJSONLexer, "EndOfMultiLineCommentToken", null);
    _defineProperty(MetaJSONLexer, "StartOfMultiLineCommentToken", null);
    _defineProperty(MetaJSONLexer, "MiddleOfMultiLineCommentToken", null);
    _defineProperty(MetaJSONLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(MetaJSONLexer, "DoublyQuotedStringLiteralToken", _occamLexers.DoublyQuotedStringLiteralToken);
  });

  // node_modules/occam-grammars/lib/metaJSON/bnf.js
  var require_bnf8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = '\n\n\n    document          ::=  ( metaJSON error* ) | error+ ;\n\n\n    metaJSON          ::=  "{" ( ( repositoryPair ( "," dependenciesPair )? ) | ( dependenciesPair "," repositoryPair ) ) "}" ;\n\n\n    dependenciesPair  ::=  "\\"dependencies\\"" ":" dependencies ;\n    \n    \n    repositoryPair    ::=  "\\"repository\\"" ":" repository ;\n\n\n    dependencies      ::=  "[" (dependency ( "," dependency )*)? "]" ;\n  \n\n    dependency        ::=  [string-literal] ;\n\n\n    repository        ::=  [string-literal] ;\n\n\n    error             ::=  . ;\n\n';
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/metaJSON/parser.js
  var require_parser9 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _bnf = _interopRequireDefault2(require_bnf8());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var MetaJSONParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(MetaJSONParser2, CommonParser);
      var _super = _createSuper(MetaJSONParser2);
      function MetaJSONParser2() {
        _classCallCheck(this, MetaJSONParser2);
        return _super.apply(this, arguments);
      }
      _createClass(MetaJSONParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamParsers.CommonParser.fromNothing(MetaJSONParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamParsers.CommonParser.fromBNF(MetaJSONParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamParsers.CommonParser.fromRules(MetaJSONParser2, rules);
          }
        }
      ]);
      return MetaJSONParser2;
    }(_occamParsers.CommonParser);
    exports.default = MetaJSONParser;
    _defineProperty(MetaJSONParser, "bnf", _bnf.default);
  });

  // node_modules/occam-grammars/lib/florence/entries.js
  var require_entries8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        special: "^(?:,|=|::|:|\\|-|\\(|\\))|\\[|\\]|\\.\\.\\."
      },
      {
        keyword: "^(?:Rule|Axiom|Theorem|Lemma|Conjecture|Metalemma|Metatheorem|Premises|Premise|Conclusion|Proof|Therefore|Suppose|Then|Hence|Types|Type|Variables|Variable|Constructors|Constructor|Combinators|Combinator|DependentTypes|DependentType|DisjointTypes|DisjointType|Metavariables|Metavariable|Abbreviations|Abbreviation|Let|for|from|by)\\b"
      },
      {
        reserved: "^(?:undefined|free|not|in|is)\\b"
      },
      {
        name: "^[A-Za-z\u0391-\u03A9\u03B1-\u03C9_0-9]+"
      },
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/florence/lexer.js
  var require_lexer9 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _entries = _interopRequireDefault2(require_entries8());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var FlorenceLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(FlorenceLexer2, CommonLexer);
      var _super = _createSuper(FlorenceLexer2);
      function FlorenceLexer2() {
        _classCallCheck(this, FlorenceLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(FlorenceLexer2, [
        {
          key: "matchRegularExpression",
          value: function matchRegularExpression(content) {
            return null;
          }
        },
        {
          key: "matchSinglyQuotedStringLiteral",
          value: function matchSinglyQuotedStringLiteral(content) {
            return null;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamLexers.CommonLexer.fromNothing(FlorenceLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamLexers.CommonLexer.fromRules(FlorenceLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamLexers.CommonLexer.fromEntries(FlorenceLexer2, entries);
          }
        }
      ]);
      return FlorenceLexer2;
    }(_occamLexers.CommonLexer);
    exports.default = FlorenceLexer;
    _defineProperty(FlorenceLexer, "entries", _entries.default);
    _defineProperty(FlorenceLexer, "EndOfLineToken", _occamLexers.EndOfLineSignificantToken);
    _defineProperty(FlorenceLexer, "WhitespaceToken", _occamLexers.WhitespaceToken);
    _defineProperty(FlorenceLexer, "RegularExpressionToken", null);
    _defineProperty(FlorenceLexer, "EndOfLineCommentToken", _occamLexers.EndOfLineCommentSignificantToken);
    _defineProperty(FlorenceLexer, "SingleLineCommentToken", _occamLexers.PythonStyleSingleLineCommentToken);
    _defineProperty(FlorenceLexer, "EndOfMultiLineCommentToken", _occamLexers.PythonStyleEndOfMultiLineCommentToken);
    _defineProperty(FlorenceLexer, "StartOfMultiLineCommentToken", _occamLexers.PythonStyleStartOfMultiLineCommentToken);
    _defineProperty(FlorenceLexer, "MiddleOfMultiLineCommentToken", _occamLexers.PythonStyleMiddleOfMultiLineCommentToken);
    _defineProperty(FlorenceLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(FlorenceLexer, "DoublyQuotedStringLiteralToken", _occamLexers.DoublyQuotedStringLiteralToken);
  });

  // node_modules/occam-grammars/lib/florence/bnf.js
  var require_bnf9 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = 'document                             ::=   ( topLevelInstruction | verticalSpace | error )+ ;\n\n\n\ntopLevelInstruction                  ::=   rule \n\n                                       |   axiom \n\n                                       |   lemma \n\n                                       |   theorem \n\n                                       |   conjecture \n\n                                       |   metalemma \n\n                                       |   metatheorem \n\n                                       |   metaconjecture \n\n                                       |   typeDeclaration \n                                           \n                                       |   variableDeclaration \n                                           \n                                       |   combinatorDeclaration \n                                           \n                                       |   constructorDeclaration \n                                           \n                                       |   disjointTypeDeclaration \n                                           \n                                       |   metavariableDeclaration \n                                           \n                                       |   dependentTypeDeclaration \n                                           \n                                       |   abbreviationDeclaration \n                                           \n                                       |   typesDeclaration \n                                           \n                                       |   variablesDeclaration \n                                           \n                                       |   combinatorsDeclaration \n                                           \n                                       |   constructorsDeclaration \n                                           \n                                       |   disjointTypesDeclaration \n                                           \n                                       |   metavariablesDeclaration \n                                           \n                                       |   dependentTypesDeclaration \n                                           \n                                       |   abbreviationsDeclaration\n                                       \n                                       ;\n\n\n\nverticalSpace                        ::=   <END_OF_LINE>+ ;\n\n\n\nerror                                ::=   . ;\n\n\n\nrule                                 ::=   "Rule" "(" labels ")" <END_OF_LINE> ( premise | premises )? conclusion metaproof? ;\n\naxiom                                ::=   "Axiom" "(" labels ")" <END_OF_LINE> ( indicativeConditional | unqualifiedStatement | unqualifiedNonsense ) ; \n\nlemma                                ::=   "Lemma" "(" labels ")"? <END_OF_LINE> ( indicativeConditional | unqualifiedStatement | unqualifiedNonsense ) proof ;\n\ntheorem                              ::=   "Theorem" "(" labels ")" <END_OF_LINE> ( indicativeConditional | unqualifiedStatement | unqualifiedNonsense ) proof ;\n\nconjecture                           ::=   "Conjecture" "(" labels ")" <END_OF_LINE> ( indicativeConditional | unqualifiedStatement | unqualifiedNonsense ) proof? ;\n\nmetalemma                            ::=   "Metalemma" "(" labels ")" <END_OF_LINE> ( metaIndicativeConditional | unqualifiedMetastatement | unqualifiedNonsense ) metaproof ;\n\nmetatheorem                          ::=   "Metatheorem" "(" labels ")" <END_OF_LINE> ( metaIndicativeConditional | unqualifiedMetastatement | unqualifiedNonsense ) metaproof ;\n\nmetaconjecture                       ::=   "Metaconjecture" "(" labels ")" <END_OF_LINE> ( metaIndicativeConditional | unqualifiedMetastatement | unqualifiedNonsense ) ;\n\ntypeDeclaration                      ::=   "Type" typeName ( ":" typeName )? <END_OF_LINE> ;\n \nvariableDeclaration                  ::=   "Variable" variableName ":" typeName <END_OF_LINE> ;\n \ncombinatorDeclaration                ::=   "Combinator" expression ( ":" typeName )? <END_OF_LINE> ;\n \nconstructorDeclaration               ::=   "Constructor" term ( ":" typeName )? <END_OF_LINE> ;\n \ndisjointTypeDeclaration              ::=   "DisjointType" typeName ":" typeNames <END_OF_LINE> ;\n                                       \nmetavariableDeclaration              ::=   "Metavariable" metavariableName typeParameter? ":" ( "Statement" | "Context" ) <END_OF_LINE> ;\n \ndependentTypeDeclaration             ::=   "DependentType" typeName typeParameter ":" typeName <END_OF_LINE> ;\n                                       \nabbreviationDeclaration              ::=   "Abbreviation" abbreviation <END_OF_LINE> ;\n\ntypesDeclaration                     ::=   "Types" typeNames ( ":" typeName )? <END_OF_LINE> ;\n\nvariablesDeclaration                 ::=   "Variables" variableName ( "," variableName )+ ":" typeName <END_OF_LINE> ;\n \ncombinatorsDeclaration               ::=   "Combinators" expression ( "," expression )+ ( ":" typeName )? <END_OF_LINE> ;\n \nconstructorsDeclaration              ::=   "Constructors" term ( "," term )+ ( ":" typeName )? <END_OF_LINE> ;\n \ndisjointTypesDeclaration             ::=   "DisjointTypes" typeNames ":" typeNames <END_OF_LINE> ;\n \nmetavariablesDeclaration             ::=   "Metavariables" metavariableName typeParameter? ( "," metavariableName typeParameter? )+ ":" ( "Statement" | "Context" ) <END_OF_LINE> ;\n \ndependentTypesDeclaration            ::=   "DependentTypes" typeName typeParameter ( "," typeName typeParameter )+ ":" typeName <END_OF_LINE> ;\n \nabbreviationsDeclaration             ::=   "Abbreviations" abbreviation ( "," abbreviation )+ <END_OF_LINE> ;\n \n\n  \npremise                              ::=   "Premise" <END_OF_LINE> ( unqualifiedMetastatement | unqualifiedNonsense ) ;\n\npremises                             ::=   "Premises" <END_OF_LINE> ( unqualifiedMetastatement | unqualifiedNonsense ) ( unqualifiedMetastatement | unqualifiedNonsense )+ ;\n\nconclusion                           ::=   "Conclusion" <END_OF_LINE> ( qualifiedMetastatement | qualifiedNonsense ) ;\n\n\n\nmetaproof                            ::=   "Proof" <END_OF_LINE> \n\n                                           metastatementDefinition*\n\n                                           nonsenseDefinition*\n\n                                           metaProofDerivation? \n                                          \n                                           ( qualifiedMetastatement | qualifiedNonsense ) ;\n                                          \n                                          \n\nmetaProofDerivation                  ::=   ( metaSublemma | qualifiedMetastatement | qualifiedStatement | qualifiedNonsense )+  \n\n                                           "Therefore" <END_OF_LINE> ;                                           \n\nmetaIndicativeConditional            ::=   "Suppose" <END_OF_LINE> ( unqualifiedMetastatement | unqualifiedNonsense )+ \n\n                                           "Hence" <END_OF_LINE> ( qualifiedMetastatement | qualifiedNonsense ) ;\n\nmetaSublemma                         ::=   "Suppose" <END_OF_LINE> \n\n                                           ( metaSublemma | qualifiedMetastatement | qualifiedStatement | qualifiedNonsense )+ \n\n                                           ( \n                                          \n                                             "Then" <END_OF_LINE> \n                                            \n                                             ( metaSublemma | qualifiedMetastatement | qualifiedStatement | qualifiedNonsense )+ \n                                          \n                                           )? \n                                          \n                                           "Hence" <END_OF_LINE> ( qualifiedMetastatement | qualifiedNonsense ) ;\n\n\n\nproof                                ::=   "Proof" <END_OF_LINE> \n\n                                           statementDefinition*\n\n                                           nonsenseDefinition*\n\n                                           proofDerivation? \n                                          \n                                           ( qualifiedStatement | qualifiedNonsense ) ;\n                                                                                         \n                                                                                         \n                                                                                         \nproofDerivation                      ::=   ( sublemma | qualifiedStatement | qualifiedNonsense )+ \n\n                                           "Therefore" <END_OF_LINE> ;\n\nindicativeConditional                ::=   "Suppose" <END_OF_LINE> ( unqualifiedStatement | unqualifiedNonsense )+ \n\n                                           "Hence" <END_OF_LINE> ( qualifiedStatement | qualifiedNonsense ) ;\n\nsublemma                             ::=   "Suppose" <END_OF_LINE> \n\n                                           ( subLemma | qualifiedStatement | qualifiedNonsense )+ \n\n                                           ( \n                                          \n                                             "Then" <END_OF_LINE> \n                                            \n                                             ( subLemma | qualifiedStatement | qualifiedNonsense )+ \n                                          \n                                           )? \n                                          \n                                           "Hence" <END_OF_LINE> ( qualifiedStatement | qualifiedNonsense ) ;\n\n\n\nmetastatementDefinition              ::=   "Let" unqualifiedMetastatement ;                                           \n                                          \nstatementDefinition                  ::=   "Let" unqualifiedStatement ;                                           \n\nnonsenseDefinition                   ::=   "Let" unqualifiedNonsense ;                                           \n\n\n\nunqualifiedMetastatement             ::=   metastatement! <END_OF_LINE> ;\n\nunqualifiedStatement                 ::=   statement! <END_OF_LINE> ;\n\nunqualifiedNonsense                  ::=   nonsense! <END_OF_LINE> ;\n\n\n\nqualifiedMetastatement               ::=   metastatement! qualification? <END_OF_LINE> ;\n\nqualifiedStatement                   ::=   statement! qualification? <END_OF_LINE> ;\n\nqualifiedNonsense                    ::=   nonsense! qualification? <END_OF_LINE> ;\n\n\n\nnonsense                             ::=   ( [name] | [custom] | [special] | [reserved] | [unassigned] )+ ;\n\n\n\nqualification                        ::=   ( "by" | "from" ) reference ;\n\n\n\ntypeParameter                        ::=   ( <NO_WHITESPACE>"(" typeName ")" ) ;\n\n\n\nabbreviation                         ::=   [custom] "for" [custom] | name "for" name ;\n\n\n\nmetavariable                         ::=   metavariableName ( <NO_WHITESPACE>"(" term ")" )? ;\n\nreference                            ::=   referenceName ( <NO_WHITESPACE>"(" term ")" )? ;\n\ncontext                              ::=   contextName ( <NO_WHITESPACE>"(" term ")" )? ;\n\nlabel                                ::=   labelName ( <NO_WHITESPACE>"(" term ")" )? ;\n\n\n\ntypeNames                            ::=   typeName ( "," typeName )* ;\n\nlabels                               ::=   label ( "," label )* ;\n\n\n\nmetavariableName                     ::=   [name] ;\n\nreferenceName                        ::=   [name] ;\n\nvariableName                         ::=   [name] ;\n\ncontextName                          ::=   [name] ;\n\nlabelName                            ::=   [name] ;\n\ntypeName                             ::=   [name] ;\n\nname                                 ::=   [name] ;';
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/florence/defaultCustomGrammar.js
  var require_defaultCustomGrammar = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.metastatementBNF = exports.statementBNF = exports.expressionBNF = exports.termBNF = exports.lexicalPattern = void 0;
    var lexicalPattern = "";
    exports.lexicalPattern = lexicalPattern;
    var termBNF = "term                                 ::=   name \n                                 \n                                       ;\n                                       \n                                       ";
    exports.termBNF = termBNF;
    var expressionBNF = 'expression                           ::=   "(" expression ")"\n\n                                       |   term \n                                       \n                                       ;\n                                       \n                                       ';
    exports.expressionBNF = expressionBNF;
    var statementBNF = 'statement                            ::=   "(" statement ")"\n\n                                       |   expression "=" expression\n                                                  \n                                       |   expression\n\n                                       ;\n\n                                       ';
    exports.statementBNF = statementBNF;
    var metastatementBNF = 'metastatement                        ::=   "(" metastatement ")"\n\n                                       |   contextDefinition \n           \n                                       |   proofAssertion\n       \n                                       |   typeAssertion \n                                                  \n                                       |   metavariable \n\n                                       |   subproof \n                                        \n                                       ;\n\ncontextDefinition                    ::=   context "=" ( judgement | context ) ( "," ( judgement | context ) )* ;\n\nproofAssertion                       ::=   context "|-" judgement ;\n \ntypeAssertion                        ::=   ( type | expression ) ":" typeName \n\njudgement                            ::=   reference "::" metastatement ;\n\nsubproof                             ::=   "[" metastatement "]" "..." metastatement ;\n\n                                       ';
    exports.metastatementBNF = metastatementBNF;
    var _default = {
      lexicalPattern,
      termBNF,
      expressionBNF,
      statementBNF,
      metastatementBNF
    };
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/florence/parser.js
  var require_parser10 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _bnf = _interopRequireDefault2(require_bnf9());
    var _defaultCustomGrammar = require_defaultCustomGrammar();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var FlorenceParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(FlorenceParser2, CommonParser);
      var _super = _createSuper(FlorenceParser2);
      function FlorenceParser2() {
        _classCallCheck(this, FlorenceParser2);
        return _super.apply(this, arguments);
      }
      _createClass(FlorenceParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamParsers.CommonParser.fromNothing(FlorenceParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            bnf = "\n    \n      ".concat(bnf, "\n      \n      ").concat(_defaultCustomGrammar.termBNF, "\n      \n      ").concat(_defaultCustomGrammar.expressionBNF, "\n      \n      ").concat(_defaultCustomGrammar.statementBNF, "\n      \n      ").concat(_defaultCustomGrammar.metastatementBNF, "\n      \n    ");
            return _occamParsers.CommonParser.fromBNF(FlorenceParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamParsers.CommonParser.fromRules(FlorenceParser2, rules);
          }
        }
      ]);
      return FlorenceParser2;
    }(_occamParsers.CommonParser);
    exports.default = FlorenceParser;
    _defineProperty(FlorenceParser, "bnf", _bnf.default);
  });

  // node_modules/occam-grammars/lib/customGrammarBNF/lexer.js
  var require_lexer10 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CustomGrammarBNFLexer = /* @__PURE__ */ function(BNFLexer) {
      _inherits(CustomGrammarBNFLexer2, BNFLexer);
      var _super = _createSuper(CustomGrammarBNFLexer2);
      function CustomGrammarBNFLexer2() {
        _classCallCheck(this, CustomGrammarBNFLexer2);
        return _super.apply(this, arguments);
      }
      return CustomGrammarBNFLexer2;
    }(_occamLexers.BNFLexer);
    exports.default = CustomGrammarBNFLexer;
  });

  // node_modules/occam-grammars/lib/customGrammarBNF/parser.js
  var require_parser11 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CustomGrammarBNFParser = /* @__PURE__ */ function(BNFParser) {
      _inherits(CustomGrammarBNFParser2, BNFParser);
      var _super = _createSuper(CustomGrammarBNFParser2);
      function CustomGrammarBNFParser2() {
        _classCallCheck(this, CustomGrammarBNFParser2);
        return _super.apply(this, arguments);
      }
      return CustomGrammarBNFParser2;
    }(_occamParsers.BNFParser);
    exports.default = CustomGrammarBNFParser;
  });

  // node_modules/occam-grammars/lib/customGrammarLexicalPattern/entries.js
  var require_entries9 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var entries = [
      {
        unassigned: "^."
      }
    ];
    var _default = entries;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/customGrammarLexicalPattern/lexer.js
  var require_lexer11 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _entries = _interopRequireDefault2(require_entries9());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CustomGrammarLexicalPatternLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(CustomGrammarLexicalPatternLexer2, CommonLexer);
      var _super = _createSuper(CustomGrammarLexicalPatternLexer2);
      function CustomGrammarLexicalPatternLexer2() {
        _classCallCheck(this, CustomGrammarLexicalPatternLexer2);
        return _super.apply(this, arguments);
      }
      _createClass(CustomGrammarLexicalPatternLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamLexers.CommonLexer.fromNothing(CustomGrammarLexicalPatternLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamLexers.CommonLexer.fromRules(CustomGrammarLexicalPatternLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamLexers.CommonLexer.fromEntries(CustomGrammarLexicalPatternLexer2, entries);
          }
        }
      ]);
      return CustomGrammarLexicalPatternLexer2;
    }(_occamLexers.CommonLexer);
    exports.default = CustomGrammarLexicalPatternLexer;
    _defineProperty(CustomGrammarLexicalPatternLexer, "entries", _entries.default);
    _defineProperty(CustomGrammarLexicalPatternLexer, "EndOfLineToken", _occamLexers.EndOfLineSignificantToken);
    _defineProperty(CustomGrammarLexicalPatternLexer, "WhitespaceToken", _occamLexers.WhitespaceToken);
    _defineProperty(CustomGrammarLexicalPatternLexer, "EndOfLineCommentToken", null);
    _defineProperty(CustomGrammarLexicalPatternLexer, "SingleLineCommentToken", null);
    _defineProperty(CustomGrammarLexicalPatternLexer, "RegularExpressionToken", null);
    _defineProperty(CustomGrammarLexicalPatternLexer, "EndOfMultiLineCommentToken", null);
    _defineProperty(CustomGrammarLexicalPatternLexer, "StartOfMultiLineCommentToken", null);
    _defineProperty(CustomGrammarLexicalPatternLexer, "MiddleOfMultiLineCommentToken", null);
    _defineProperty(CustomGrammarLexicalPatternLexer, "SinglyQuotedStringLiteralToken", null);
    _defineProperty(CustomGrammarLexicalPatternLexer, "DoublyQuotedStringLiteralToken", null);
  });

  // node_modules/occam-grammars/lib/customGrammarLexicalPattern/bnf.js
  var require_bnf10 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var bnf = "\n\n\n    document       ::=  lexicalPattern ( verticalSpace | error )* | ( verticalSpace | error )+ ;\n\n\n    lexicalPattern ::=  [unassigned]+ ;\n\n\n    verticalSpace  ::=  <END_OF_LINE>+ ;\n\n\n    error          ::=  . ;\n\n\n";
    var _default = bnf;
    exports.default = _default;
  });

  // node_modules/occam-grammars/lib/customGrammarLexicalPattern/parser.js
  var require_parser12 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamParsers = require_lib4();
    var _bnf = _interopRequireDefault2(require_bnf10());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CustomGrammarLexicalPatternParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(CustomGrammarLexicalPatternParser2, CommonParser);
      var _super = _createSuper(CustomGrammarLexicalPatternParser2);
      function CustomGrammarLexicalPatternParser2() {
        _classCallCheck(this, CustomGrammarLexicalPatternParser2);
        return _super.apply(this, arguments);
      }
      _createClass(CustomGrammarLexicalPatternParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamParsers.CommonParser.fromNothing(CustomGrammarLexicalPatternParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamParsers.CommonParser.fromBNF(CustomGrammarLexicalPatternParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamParsers.CommonParser.fromRules(CustomGrammarLexicalPatternParser2, rules);
          }
        }
      ]);
      return CustomGrammarLexicalPatternParser2;
    }(_occamParsers.CommonParser);
    exports.default = CustomGrammarLexicalPatternParser;
    _defineProperty(CustomGrammarLexicalPatternParser, "bnf", _bnf.default);
  });

  // node_modules/occam-grammars/lib/index.js
  var require_lib10 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "TeXLexer", {
      enumerable: true,
      get: function() {
        return _lexer.default;
      }
    });
    Object.defineProperty(exports, "TeXParser", {
      enumerable: true,
      get: function() {
        return _parser.default;
      }
    });
    Object.defineProperty(exports, "PlainLexer", {
      enumerable: true,
      get: function() {
        return _lexer1.default;
      }
    });
    Object.defineProperty(exports, "PlainParser", {
      enumerable: true,
      get: function() {
        return _parser1.default;
      }
    });
    Object.defineProperty(exports, "ReadmeLexer", {
      enumerable: true,
      get: function() {
        return _lexer2.default;
      }
    });
    Object.defineProperty(exports, "ReadmeParser", {
      enumerable: true,
      get: function() {
        return _parser2.default;
      }
    });
    Object.defineProperty(exports, "MetaJSONLexer", {
      enumerable: true,
      get: function() {
        return _lexer3.default;
      }
    });
    Object.defineProperty(exports, "MetaJSONParser", {
      enumerable: true,
      get: function() {
        return _parser3.default;
      }
    });
    Object.defineProperty(exports, "FlorenceLexer", {
      enumerable: true,
      get: function() {
        return _lexer4.default;
      }
    });
    Object.defineProperty(exports, "FlorenceParser", {
      enumerable: true,
      get: function() {
        return _parser4.default;
      }
    });
    Object.defineProperty(exports, "defaultCustomGrammar", {
      enumerable: true,
      get: function() {
        return _defaultCustomGrammar.default;
      }
    });
    Object.defineProperty(exports, "CustomGrammarBNFLexer", {
      enumerable: true,
      get: function() {
        return _lexer5.default;
      }
    });
    Object.defineProperty(exports, "CustomGrammarBNFParser", {
      enumerable: true,
      get: function() {
        return _parser5.default;
      }
    });
    Object.defineProperty(exports, "CustomGrammarLexicalPatternLexer", {
      enumerable: true,
      get: function() {
        return _lexer6.default;
      }
    });
    Object.defineProperty(exports, "CustomGrammarLexicalPatternParser", {
      enumerable: true,
      get: function() {
        return _parser6.default;
      }
    });
    var _lexer = _interopRequireDefault2(require_lexer5());
    var _parser = _interopRequireDefault2(require_parser6());
    var _lexer1 = _interopRequireDefault2(require_lexer6());
    var _parser1 = _interopRequireDefault2(require_parser7());
    var _lexer2 = _interopRequireDefault2(require_lexer7());
    var _parser2 = _interopRequireDefault2(require_parser8());
    var _lexer3 = _interopRequireDefault2(require_lexer8());
    var _parser3 = _interopRequireDefault2(require_parser9());
    var _lexer4 = _interopRequireDefault2(require_lexer9());
    var _parser4 = _interopRequireDefault2(require_parser10());
    var _defaultCustomGrammar = _interopRequireDefault2(require_defaultCustomGrammar());
    var _lexer5 = _interopRequireDefault2(require_lexer10());
    var _parser5 = _interopRequireDefault2(require_parser11());
    var _lexer6 = _interopRequireDefault2(require_lexer11());
    var _parser6 = _interopRequireDefault2(require_parser12());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // lib/utilities/lexers.js
  var require_lexers = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.florenceLexerFromCombinedCustomGrammar = florenceLexerFromCombinedCustomGrammar;
    exports.florenceLexerFromEntriesAndCombinedCustomGrammar = florenceLexerFromEntriesAndCombinedCustomGrammar;
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _occamGrammars = require_lib10();
    function florenceLexerFromCombinedCustomGrammar(combinedCustomGrammar) {
      var entries = _occamGrammars.FlorenceLexer.entries, florenceLexer = florenceLexerFromEntriesAndCombinedCustomGrammar(entries, combinedCustomGrammar);
      return florenceLexer;
    }
    function florenceLexerFromEntriesAndCombinedCustomGrammar(entries, combinedCustomGrammar) {
      var combinedCustomGrammarLexicalPattern = combinedCustomGrammar.getLexicalPattern(), custom = combinedCustomGrammarLexicalPattern, customGrammarEntry = {
        custom
      }, customGrammarRule = _occamLexers.Rule.fromEntry(customGrammarEntry), rules = entries.map(function(entry) {
        return _occamLexers.Rule.fromEntry(entry);
      });
      rules.unshift(customGrammarRule);
      var florenceLexer = _occamGrammars.FlorenceLexer.fromRules(rules);
      return florenceLexer;
    }
    var _default = {
      florenceLexerFromCombinedCustomGrammar,
      florenceLexerFromEntriesAndCombinedCustomGrammar
    };
    exports.default = _default;
  });

  // lib/utilities/parsers.js
  var require_parsers = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.florenceParserFromCombinedCustomGrammar = florenceParserFromCombinedCustomGrammar;
    exports.florenceParserFromBNFAndCombinedCustomGrammar = florenceParserFromBNFAndCombinedCustomGrammar;
    exports.default = void 0;
    var _occamLexers = require_lib3();
    var _occamParsers = require_lib4();
    var _occamGrammars = require_lib10();
    var _necessary = require_browser();
    var push = _necessary.arrayUtilities.push;
    function florenceParserFromCombinedCustomGrammar(combinedCustomGrammar) {
      var bnf = _occamGrammars.FlorenceParser.bnf, florenceParser = florenceParserFromBNFAndCombinedCustomGrammar(bnf, combinedCustomGrammar);
      return florenceParser;
    }
    function florenceParserFromBNFAndCombinedCustomGrammar(bnf, combinedCustomGrammar) {
      var combinedCustomGrammarRuleMap = combinedCustomGrammar.getRuleMap(), bnfLexer = _occamLexers.BNFLexer.fromNothing(), bnfParser = _occamParsers.BNFParser.fromNothing(), tokens = bnfLexer.tokensFromBNF(bnf), rules = bnfParser.rulesFromTokens(tokens), combinedCustomGrammarRules = Object.values(combinedCustomGrammarRuleMap);
      push(rules, combinedCustomGrammarRules);
      var florenceParser = _occamGrammars.FlorenceParser.fromRules(rules);
      return florenceParser;
    }
    var _default = {
      florenceParserFromCombinedCustomGrammar,
      florenceParserFromBNFAndCombinedCustomGrammar
    };
    exports.default = _default;
  });

  // lib/defaultCustomGrammar.js
  var require_defaultCustomGrammar2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _occamGrammars = require_lib10();
    var _customGrammar = _interopRequireDefault2(require_customGrammar());
    var _grammarNames = require_grammarNames();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var lexicalPattern = _occamGrammars.defaultCustomGrammar.lexicalPattern;
    var termBNF = _occamGrammars.defaultCustomGrammar.termBNF;
    var expressionBNF = _occamGrammars.defaultCustomGrammar.expressionBNF;
    var statementBNF = _occamGrammars.defaultCustomGrammar.statementBNF;
    var metastatementBNF = _occamGrammars.defaultCustomGrammar.metastatementBNF;
    var name = _grammarNames.DEFAULT_CUSTOM_GRAMMAR_NAME;
    var json = {
      name,
      lexicalPattern,
      termBNF,
      expressionBNF,
      statementBNF,
      metastatementBNF
    };
    var _default = _customGrammar.default.fromJSON(json);
    exports.default = _default;
  });

  // lib/utilities/ruleName.js
  var require_ruleName9 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.findRuleByRuleName = findRuleByRuleName;
    function findRuleByRuleName(ruleName, rules) {
      var name = ruleName, rule1 = rules.find(function(rule) {
        var _$ruleName = rule.getName();
        if (_$ruleName === name) {
          return true;
        }
      }) || null;
      return rule1;
    }
  });

  // lib/utilities/rules.js
  var require_rules2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.rulesFromBNF = rulesFromBNF;
    exports.rulesAsString = rulesAsString;
    exports.ruleMapFromRules = ruleMapFromRules;
    var _occamLexers = require_lib3();
    var _occamParsers = require_lib4();
    var _constants = require_constants8();
    var bnfLexer = _occamLexers.BNFLexer.fromNothing();
    var bnfParser = _occamParsers.BNFParser.fromNothing();
    function rulesFromBNF(bnf) {
      var rules = [];
      var tokens = bnfLexer.tokensFromBNF(bnf), node = bnfParser.parse(tokens);
      if (node !== null) {
        rules = node.generateRules(_occamParsers.Rule);
      }
      return rules;
    }
    function rulesAsString(rules, multiLine) {
      var maximumRuleNameLength1 = rules.reduce(function(maximumRuleNameLength, rule) {
        var ruleName = rule.getName(), ruleNameLength = ruleName.length;
        maximumRuleNameLength = Math.max(maximumRuleNameLength, ruleNameLength);
        return maximumRuleNameLength;
      }, 0), rulesString1 = rules.reduce(function(rulesString, rule) {
        var ruleString = rule.asString(maximumRuleNameLength1, multiLine);
        rulesString += ruleString;
        return rulesString;
      }, _constants.EMPTY_STRING).replace(/^\n\n/, _constants.EMPTY_STRING);
      return rulesString1;
    }
    function ruleMapFromRules(rules) {
      var ruleMap1 = rules.reduce(function(ruleMap, rule) {
        var ruleName = rule.getName();
        ruleMap[ruleName] = rule;
        return ruleMap;
      }, {});
      return ruleMap1;
    }
  });

  // lib/utilities/customGrammars.js
  var require_customGrammars = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.lexicalPatternsFromCustomGrammars = lexicalPatternsFromCustomGrammars;
    exports.bnfsFromRuleNameAndCustomGrammars = bnfsFromRuleNameAndCustomGrammars;
    function lexicalPatternsFromCustomGrammars(customGrammars) {
      var lexicalPatterns = [];
      customGrammars.forEach(function(customGrammar) {
        var lexicalPattern = customGrammar.getLexicalPattern();
        if (lexicalPattern) {
          lexicalPatterns.push(lexicalPattern);
        }
      });
      return lexicalPatterns;
    }
    function bnfsFromRuleNameAndCustomGrammars(ruleName, customGrammars) {
      var bnfs = [];
      customGrammars.forEach(function(customGrammar) {
        var bnf = customGrammar.getBNF(ruleName);
        if (bnf) {
          bnfs.push(bnf);
        }
      });
      return bnfs;
    }
  });

  // lib/ruleNames.js
  var require_ruleNames2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.METASTATEMENT_RULE_NAME = exports.EXPRESSION_RULE_NAME = exports.STATEMENT_RULE_NAME = exports.START_RULE_NAME = exports.TERM_RULE_NAME = void 0;
    var _constants = require_constants8();
    var TERM_RULE_NAME = _constants.TERM;
    exports.TERM_RULE_NAME = TERM_RULE_NAME;
    var START_RULE_NAME = "start";
    exports.START_RULE_NAME = START_RULE_NAME;
    var STATEMENT_RULE_NAME = _constants.STATEMENT;
    exports.STATEMENT_RULE_NAME = STATEMENT_RULE_NAME;
    var EXPRESSION_RULE_NAME = _constants.EXPRESSION;
    exports.EXPRESSION_RULE_NAME = EXPRESSION_RULE_NAME;
    var METASTATEMENT_RULE_NAME = _constants.METASTATEMENT;
    exports.METASTATEMENT_RULE_NAME = METASTATEMENT_RULE_NAME;
  });

  // lib/combinedCustomGrammar.js
  var require_combinedCustomGrammar = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _necessary = require_browser();
    var _occamGrammarUtilities = require_lib8();
    var _defaultCustomGrammar = _interopRequireDefault2(require_defaultCustomGrammar2());
    var _constants = require_constants8();
    var _ruleName = require_ruleName9();
    var _rules = require_rules2();
    var _customGrammars = require_customGrammars();
    var _ruleNames = require_ruleNames2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var first = _necessary.arrayUtilities.first;
    var filter = _necessary.arrayUtilities.filter;
    var unshift = _necessary.arrayUtilities.unshift;
    var CombinedCustomGrammar = /* @__PURE__ */ function() {
      function CombinedCustomGrammar2(lexicalPattern, ruleMap) {
        _classCallCheck(this, CombinedCustomGrammar2);
        this.lexicalPattern = lexicalPattern;
        this.ruleMap = ruleMap;
      }
      _createClass(CombinedCustomGrammar2, [
        {
          key: "getLexicalPattern",
          value: function getLexicalPattern() {
            return this.lexicalPattern;
          }
        },
        {
          key: "getRuleMap",
          value: function getRuleMap() {
            return this.ruleMap;
          }
        }
      ], [
        {
          key: "fromCustomGrammars",
          value: function fromCustomGrammars(customGrammars) {
            var metastatementRules = metastatementRulesFromCustomGrammarsAndDefaultBNF(customGrammars), statementRules = statementRulesFromCustomGrammarsAndDefaultBNF(customGrammars), expressionRules = expressionRulesFromCustomGrammarsAndDefaultBNF(customGrammars), termRules = termRulesFromCustomGrammarsAndDefaultBNF(customGrammars), rules = [].concat(metastatementRules).concat(statementRules).concat(expressionRules).concat(termRules), startRule = startRuleFromNothing(), lexicalPattern = lexicalPatternFromCustomGrammars(customGrammars), ruleMap = (0, _rules).ruleMapFromRules(rules);
            ruleMap[_ruleNames.START_RULE_NAME] = startRule;
            (0, _occamGrammarUtilities).eliminateLeftRecursion(startRule, ruleMap);
            delete ruleMap[_ruleNames.START_RULE_NAME];
            var combinedCustomGrammar = new CombinedCustomGrammar2(lexicalPattern, ruleMap);
            return combinedCustomGrammar;
          }
        }
      ]);
      return CombinedCustomGrammar2;
    }();
    exports.default = CombinedCustomGrammar;
    function metastatementRulesFromCustomGrammarsAndDefaultBNF(customGrammars) {
      var metastatementRuleName = _ruleNames.METASTATEMENT_RULE_NAME, metastatementRules = rulesFromRuleNameCustomGrammarsAndDefaultBNF(metastatementRuleName, customGrammars);
      return metastatementRules;
    }
    function statementRulesFromCustomGrammarsAndDefaultBNF(customGrammars) {
      var statementRuleName = _ruleNames.STATEMENT_RULE_NAME, statementRules = rulesFromRuleNameCustomGrammarsAndDefaultBNF(statementRuleName, customGrammars);
      return statementRules;
    }
    function expressionRulesFromCustomGrammarsAndDefaultBNF(customGrammars) {
      var expressionRuleName = _ruleNames.EXPRESSION_RULE_NAME, expressionRules = rulesFromRuleNameCustomGrammarsAndDefaultBNF(expressionRuleName, customGrammars);
      return expressionRules;
    }
    function termRulesFromCustomGrammarsAndDefaultBNF(customGrammars) {
      var termRuleName = _ruleNames.TERM_RULE_NAME, termRules = rulesFromRuleNameCustomGrammarsAndDefaultBNF(termRuleName, customGrammars);
      return termRules;
    }
    function lexicalPatternFromCustomGrammars(customGrammars) {
      var lexicalPatterns = (0, _customGrammars).lexicalPatternsFromCustomGrammars(customGrammars), defaultCustomGrammarLexicalPattern = _defaultCustomGrammar.default.getLexicalPattern(), defaultLexicalPattern = defaultCustomGrammarLexicalPattern;
      lexicalPatterns.reverse();
      lexicalPatterns.push(defaultLexicalPattern);
      filter(lexicalPatterns, function(lexicalPattern) {
        if (lexicalPattern !== _constants.EMPTY_STRING) {
          return true;
        }
      });
      var lexicalPatternsString = lexicalPatterns.join("|"), lexicalPattern1 = "^(?:".concat(lexicalPatternsString, ")");
      return lexicalPattern1;
    }
    function startRuleFromNothing() {
      var startRulesBNF = " ".concat(_ruleNames.START_RULE_NAME, " ::= ").concat(_ruleNames.METASTATEMENT_RULE_NAME, " | ").concat(_ruleNames.STATEMENT_RULE_NAME, " | ").concat(_ruleNames.EXPRESSION_RULE_NAME, " | ").concat(_ruleNames.TERM_RULE_NAME, " ; "), startRules = (0, _rules).rulesFromBNF(startRulesBNF), firstStartRule = first(startRules), startRule = firstStartRule;
      return startRule;
    }
    function remainingRulesFromRulesAndMainRule(rules, mainRule) {
      var remainingRules = rules.filter(function(rule) {
        if (rule !== mainRule) {
          return true;
        }
      });
      return remainingRules;
    }
    function mainRuleFromRuleNameDefaultBNFAndBNFs(ruleName, bnfs) {
      var defaultCustomGrammarBNF = _defaultCustomGrammar.default.getBNF(ruleName), defaultBNF = defaultCustomGrammarBNF, defaultRules = (0, _rules).rulesFromBNF(defaultBNF), defaultMainRule = (0, _ruleName).findRuleByRuleName(ruleName, defaultRules), defaultMainRuleDefinitions = defaultMainRule.getDefinitions();
      bnfs.forEach(function(bnf) {
        var rules = (0, _rules).rulesFromBNF(bnf), mainRule = (0, _ruleName).findRuleByRuleName(ruleName, rules), mainRuleDefinitions = mainRule !== null ? mainRule.getDefinitions() : [];
        unshift(defaultMainRuleDefinitions, mainRuleDefinitions);
      });
      var mainRule1 = defaultMainRule;
      return mainRule1;
    }
    function remainingRulesFromRuleNameDefaultBNFAndBNFs(ruleName, bnfs) {
      var defaultCustomGrammarBNF = _defaultCustomGrammar.default.getBNF(ruleName), defaultBNF = defaultCustomGrammarBNF, defaultRules = (0, _rules).rulesFromBNF(defaultBNF), defaultMainRule = (0, _ruleName).findRuleByRuleName(ruleName, defaultRules), defaultRemainingRules = remainingRulesFromRulesAndMainRule(defaultRules, defaultMainRule);
      bnfs.forEach(function(bnf) {
        var rules = (0, _rules).rulesFromBNF(bnf), mainRule = (0, _ruleName).findRuleByRuleName(ruleName, rules), remainingRules = remainingRulesFromRulesAndMainRule(rules, mainRule);
        unshift(defaultRemainingRules, remainingRules);
      });
      var remainingRules1 = defaultRemainingRules;
      return remainingRules1;
    }
    function rulesFromRuleNameCustomGrammarsAndDefaultBNF(ruleName, customGrammars) {
      var bnfs = (0, _customGrammars).bnfsFromRuleNameAndCustomGrammars(ruleName, customGrammars), mainRule = mainRuleFromRuleNameDefaultBNFAndBNFs(ruleName, bnfs), remainingRules = remainingRulesFromRuleNameDefaultBNFAndBNFs(ruleName, bnfs), rules = [].concat(mainRule).concat(remainingRules);
      return rules;
    }
  });

  // lib/index.js
  var require_lib11 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "DEFAULT_CUSTOM_GRAMMAR_NAME", {
      enumerable: true,
      get: function() {
        return _grammarNames.DEFAULT_CUSTOM_GRAMMAR_NAME;
      }
    });
    Object.defineProperty(exports, "CustomGrammar", {
      enumerable: true,
      get: function() {
        return _customGrammar.default;
      }
    });
    Object.defineProperty(exports, "lexersUtilities", {
      enumerable: true,
      get: function() {
        return _lexers.default;
      }
    });
    Object.defineProperty(exports, "parsersUtilities", {
      enumerable: true,
      get: function() {
        return _parsers.default;
      }
    });
    Object.defineProperty(exports, "defaultCustomGrammar", {
      enumerable: true,
      get: function() {
        return _defaultCustomGrammar.default;
      }
    });
    Object.defineProperty(exports, "CombinedCustomGrammar", {
      enumerable: true,
      get: function() {
        return _combinedCustomGrammar.default;
      }
    });
    var _grammarNames = require_grammarNames();
    var _customGrammar = _interopRequireDefault2(require_customGrammar());
    var _lexers = _interopRequireDefault2(require_lexers());
    var _parsers = _interopRequireDefault2(require_parsers());
    var _defaultCustomGrammar = _interopRequireDefault2(require_defaultCustomGrammar2());
    var _combinedCustomGrammar = _interopRequireDefault2(require_combinedCustomGrammar());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // lib/example/paragraph.js
  var require_paragraph = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  margin: 2rem 0 0 0;\n  font-size: 1.7rem;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var Paragraph = _easyWithStyle2.default.p(_templateObject());
    var _default = Paragraph;
    exports.default = _default;
  });

  // lib/example/subHeading.js
  var require_subHeading = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  margin: 1rem 0 0.5rem 0;\n  font-size: 2rem;\n  \n  :first-of-type {\n    margin-top: 0;\n  }\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var SubHeading = _easyWithStyle2.default.h2(_templateObject());
    var _default = SubHeading;
    exports.default = _default;
  });

  // lib/example/select.js
  var require_select2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  border: 1px solid darkgrey;\n  padding: 0.25rem;\n  font-size: 1.2rem;\n  font-family: monospace;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var _default = (0, _easyWithStyle2).default(_easy2.Select)(_templateObject());
    exports.default = _default;
  });

  // lib/example/select/name.js
  var require_name5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _select = _interopRequireDefault2(require_select2());
    var _grammarNames = require_grammarNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var NameSelect = /* @__PURE__ */ function(Select) {
      _inherits(NameSelect2, Select);
      var _super = _createSuper(NameSelect2);
      function NameSelect2() {
        _classCallCheck(this, NameSelect2);
        return _super.apply(this, arguments);
      }
      _createClass(NameSelect2, [
        {
          key: "getName",
          value: function getName() {
            var value = this.getValue(), name = value;
            return name;
          }
        },
        {
          key: "childElements",
          value: function childElements() {
            var defaultName = _grammarNames.DEFAULT_CUSTOM_GRAMMAR_NAME, defaultValue = defaultName, userDefinedName = _grammarNames.USER_DEFINED_CUSTOM_GRAMMAR_NAME, userDefinedValue = userDefinedName;
            return [
              /* @__PURE__ */ React.createElement("option", {
                value: defaultValue,
                selected: true
              }, defaultName),
              /* @__PURE__ */ React.createElement("option", {
                value: userDefinedValue
              }, userDefinedName)
            ];
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var getName = this.getName.bind(this);
            return {
              getName
            };
          }
        }
      ]);
      return NameSelect2;
    }(_select.default);
    exports.default = NameSelect;
    _defineProperty(NameSelect, "defaultProperties", {
      className: "name",
      spellCheck: "false"
    });
  });

  // lib/example/div/sizeable.js
  var require_sizeable2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easyLayout = require_lib9();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  width: 48rem;\n  min-width: 24rem;\n  \n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var _default = (0, _easyWithStyle2).default(_easyLayout.SizeableDiv)(_templateObject());
    exports.default = _default;
  });

  // lib/example/textarea.js
  var require_textarea2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  border: 1px solid darkgrey;\n  height: 24rem;\n  resize: vertical;\n  padding: 0.25rem;\n  font-size: 1.2rem;\n  white-space: pre;\n  font-family: monospace;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var _default = (0, _easyWithStyle2).default(_easy2.Textarea)(_templateObject());
    exports.default = _default;
  });

  // lib/example/textarea/bnf.js
  var require_bnf11 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _textarea = _interopRequireDefault2(require_textarea2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var BNFTextarea = /* @__PURE__ */ function(Textarea) {
      _inherits(BNFTextarea2, Textarea);
      var _super = _createSuper(BNFTextarea2);
      function BNFTextarea2() {
        _classCallCheck(this, BNFTextarea2);
        return _super.apply(this, arguments);
      }
      _createClass(BNFTextarea2, [
        {
          key: "getBNF",
          value: function getBNF() {
            var value = this.getValue(), bnf = value;
            return bnf;
          }
        },
        {
          key: "setBNF",
          value: function setBNF(bnf) {
            var value = bnf;
            this.setValue(value);
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var getBNF = this.getBNF.bind(this), setBNF = this.setBNF.bind(this), setBNFReadOnly = this.setReadOnly.bind(this);
            return {
              getBNF,
              setBNF,
              setBNFReadOnly
            };
          }
        }
      ]);
      return BNFTextarea2;
    }(_textarea.default);
    exports.default = BNFTextarea;
    _defineProperty(BNFTextarea, "defaultProperties", {
      className: "bnf",
      spellCheck: "false"
    });
  });

  // lib/example/select/ruleName.js
  var require_ruleName10 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _select = _interopRequireDefault2(require_select2());
    var _ruleNames = require_ruleNames2();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var RuleNameSelect = /* @__PURE__ */ function(Select) {
      _inherits(RuleNameSelect2, Select);
      var _super = _createSuper(RuleNameSelect2);
      function RuleNameSelect2() {
        _classCallCheck(this, RuleNameSelect2);
        return _super.apply(this, arguments);
      }
      _createClass(RuleNameSelect2, [
        {
          key: "getRuleName",
          value: function getRuleName() {
            var value = this.getValue(), ruleName = value;
            return ruleName;
          }
        },
        {
          key: "childElements",
          value: function childElements() {
            var termName = _ruleNames.TERM_RULE_NAME, termValue = termName, expressionName = _ruleNames.EXPRESSION_RULE_NAME, expressionValue = expressionName, statementName = _ruleNames.STATEMENT_RULE_NAME, statementValue = statementName, metastatementName = _ruleNames.METASTATEMENT_RULE_NAME, metastatementValue = metastatementName;
            return [
              /* @__PURE__ */ React.createElement("option", {
                value: termValue,
                selected: true
              }, termName),
              /* @__PURE__ */ React.createElement("option", {
                value: expressionValue,
                selected: true
              }, expressionName),
              /* @__PURE__ */ React.createElement("option", {
                value: statementValue,
                selected: true
              }, statementName),
              /* @__PURE__ */ React.createElement("option", {
                value: metastatementValue,
                selected: true
              }, metastatementName)
            ];
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var getRuleName = this.getRuleName.bind(this);
            return {
              getRuleName
            };
          }
        }
      ]);
      return RuleNameSelect2;
    }(_select.default);
    exports.default = RuleNameSelect;
    _defineProperty(RuleNameSelect, "defaultProperties", {
      className: "rule-name",
      spellCheck: "false"
    });
  });

  // lib/example/textarea/content.js
  var require_content3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _textarea = _interopRequireDefault2(require_textarea2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ContentTextarea = /* @__PURE__ */ function(Textarea) {
      _inherits(ContentTextarea2, Textarea);
      var _super = _createSuper(ContentTextarea2);
      function ContentTextarea2() {
        _classCallCheck(this, ContentTextarea2);
        return _super.apply(this, arguments);
      }
      _createClass(ContentTextarea2, [
        {
          key: "getContent",
          value: function getContent() {
            var value = this.getValue(), content = value;
            return content;
          }
        },
        {
          key: "setContent",
          value: function setContent(content) {
            var value = content;
            this.setValue(value);
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var getContent = this.getContent.bind(this), setContent = this.setContent.bind(this);
            return {
              getContent,
              setContent
            };
          }
        }
      ]);
      return ContentTextarea2;
    }(_textarea.default);
    exports.default = ContentTextarea;
    _defineProperty(ContentTextarea, "defaultProperties", {
      className: "content",
      spellCheck: "false"
    });
  });

  // lib/example/textarea/parseTree.js
  var require_parseTree2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _textarea = _interopRequireDefault2(require_textarea2());
    var _constants = require_constants8();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var ParseTreeTextarea = /* @__PURE__ */ function(Textarea) {
      _inherits(ParseTreeTextarea2, Textarea);
      var _super = _createSuper(ParseTreeTextarea2);
      function ParseTreeTextarea2() {
        _classCallCheck(this, ParseTreeTextarea2);
        return _super.apply(this, arguments);
      }
      _createClass(ParseTreeTextarea2, [
        {
          key: "setParseTree",
          value: function setParseTree(parseTree) {
            if (parseTree !== null) {
              parseTree.shiftLine();
              var parseTreeString = parseTree.asString(), value = parseTreeString;
              this.setValue(value);
            } else {
              this.clearParseTree();
            }
          }
        },
        {
          key: "clearParseTree",
          value: function clearParseTree() {
            var value = _constants.EMPTY_STRING;
            this.setValue(value);
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var setParseTree = this.setParseTree.bind(this), clearParseTree = this.clearParseTree.bind(this);
            return {
              setParseTree,
              clearParseTree
            };
          }
        }
      ]);
      return ParseTreeTextarea2;
    }(_textarea.default);
    exports.default = ParseTreeTextarea;
    _defineProperty(ParseTreeTextarea, "defaultProperties", {
      className: "tokens",
      spellCheck: "false",
      readOnly: true
    });
  });

  // lib/example/input.js
  var require_input2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  border: 1px solid darkgrey;\n  padding: 0.25rem;\n  font-size: 1.2rem;\n  font-family: monospace;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var _default = (0, _easyWithStyle2).default(_easy2.Input)(_templateObject());
    exports.default = _default;
  });

  // lib/example/input/startRuleName.js
  var require_startRuleName = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _input = _interopRequireDefault2(require_input2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var StartRuleNameInput = /* @__PURE__ */ function(Input) {
      _inherits(StartRuleNameInput2, Input);
      var _super = _createSuper(StartRuleNameInput2);
      function StartRuleNameInput2() {
        _classCallCheck(this, StartRuleNameInput2);
        return _super.apply(this, arguments);
      }
      _createClass(StartRuleNameInput2, [
        {
          key: "getStartRuleName",
          value: function getStartRuleName() {
            var value = this.getValue(), startRuleName = value;
            return startRuleName;
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var getStartRuleName = this.getStartRuleName.bind(this);
            return {
              getStartRuleName
            };
          }
        }
      ]);
      return StartRuleNameInput2;
    }(_input.default);
    exports.default = StartRuleNameInput;
    _defineProperty(StartRuleNameInput, "defaultProperties", {
      className: "start-rule-name",
      spellCheck: "false"
    });
  });

  // lib/example/input/lexicalPattern.js
  var require_lexicalPattern = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _input = _interopRequireDefault2(require_input2());
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var LexicalPatternInput = /* @__PURE__ */ function(Input) {
      _inherits(LexicalPatternInput2, Input);
      var _super = _createSuper(LexicalPatternInput2);
      function LexicalPatternInput2() {
        _classCallCheck(this, LexicalPatternInput2);
        return _super.apply(this, arguments);
      }
      _createClass(LexicalPatternInput2, [
        {
          key: "getLexicalPattern",
          value: function getLexicalPattern() {
            var value = this.getValue(), lexicalPattern = value;
            return lexicalPattern;
          }
        },
        {
          key: "setLexicalPattern",
          value: function setLexicalPattern(lexicalPattern) {
            var value = lexicalPattern;
            this.setValue(value);
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var getLexicalPattern = this.getLexicalPattern.bind(this), setLexicalPattern = this.setLexicalPattern.bind(this), setLexicalPatternReadOnly = this.setReadOnly.bind(this);
            return {
              getLexicalPattern,
              setLexicalPattern,
              setLexicalPatternReadOnly
            };
          }
        }
      ]);
      return LexicalPatternInput2;
    }(_input.default);
    exports.default = LexicalPatternInput;
    _defineProperty(LexicalPatternInput, "defaultProperties", {
      className: "lexical-pattern",
      spellCheck: "false"
    });
  });

  // lib/example/textarea/combinedBNF.js
  var require_combinedBNF = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _textarea = _interopRequireDefault2(require_textarea2());
    var _constants = require_constants8();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    var CombinedBNFTextarea = /* @__PURE__ */ function(Textarea) {
      _inherits(CombinedBNFTextarea2, Textarea);
      var _super = _createSuper(CombinedBNFTextarea2);
      function CombinedBNFTextarea2() {
        _classCallCheck(this, CombinedBNFTextarea2);
        return _super.apply(this, arguments);
      }
      _createClass(CombinedBNFTextarea2, [
        {
          key: "getCombinedBNF",
          value: function getCombinedBNF() {
            var value = this.getValue(), combinedBNF = value;
            return combinedBNF;
          }
        },
        {
          key: "setCombinedBNF",
          value: function setCombinedBNF(combinedBNF) {
            var value = combinedBNF;
            this.setValue(value);
          }
        },
        {
          key: "clearCombinedBNF",
          value: function clearCombinedBNF() {
            var value = _constants.EMPTY_STRING;
            this.setValue(value);
          }
        },
        {
          key: "parentContext",
          value: function parentContext() {
            var getCombinedBNF = this.getCombinedBNF.bind(this), setCombinedBNF = this.setCombinedBNF.bind(this), clearCombinedBNF = this.clearCombinedBNF.bind(this);
            return {
              getCombinedBNF,
              setCombinedBNF,
              clearCombinedBNF
            };
          }
        }
      ]);
      return CombinedBNFTextarea2;
    }(_textarea.default);
    exports.default = CombinedBNFTextarea;
    _defineProperty(CombinedBNFTextarea, "defaultProperties", {
      className: "combined-bnf",
      spellCheck: "false"
    });
  });

  // lib/example/userDefinedCustomGrammar.js
  var require_userDefinedCustomGrammar = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _index = require_lib11();
    var _grammarNames = require_grammarNames();
    var name = _grammarNames.USER_DEFINED_CUSTOM_GRAMMAR_NAME;
    var lexicalPattern = "<=|\\+|\\-|\\||insert|delete|empty";
    var termBNF = '                term  ::=  operation\n\n                        |  operator\n                       \n                        |  substring\n\n                        |  stringLength\n\n                        ;\n\n\n           operation  ::=  operator<NO_WHITESPACE>"(" term ")" ;\n\n\n            operator  ::=  "insert"<NO_WHITESPACE>"(" term "," term ")"\n\n                        |  "delete"<NO_WHITESPACE>"(" term "," term ")" \n\n                        |  "empty"<NO_WHITESPACE>"("<NO_WHITESPACE>")"\n\n                        ;\n\n\n           substring  ::=  name<NO_WHITESPACE>"[" "..." expression "]" \n\n                        |  name<NO_WHITESPACE>"[" expression "..." expression "]" \n\n                        |  name<NO_WHITESPACE>"[" expression "..."  "]" \n\n                        ;\n\n\n      stringLength  ::=  "|" term "|" ;';
    var expressionBNF = "          expression  ::";
    var statementBNF = '           statement  ::=  lessThanOrEqualTo\n\n                        ;\n\n\n   lessThanOrEqualTo  ::=  expression "<=" expression ;';
    var metastatementBNF = "";
    var json = {
      name,
      lexicalPattern,
      termBNF,
      expressionBNF,
      statementBNF,
      metastatementBNF
    };
    var userDefinedCustomGrammar = _index.CustomGrammar.fromJSON(json);
    var _default = userDefinedCustomGrammar;
    exports.default = _default;
  });

  // lib/example/checkbox/removeOrRenameIntermediateNodes.js
  var require_removeOrRenameIntermediateNodes2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  zoom: 1.5;\n  margin-right: 0.5rem;\n  vertical-align: bottom;\n  \n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var RemoveOrRenameIntermediateNodesCheckbox = /* @__PURE__ */ function(Checkbox) {
      _inherits(RemoveOrRenameIntermediateNodesCheckbox2, Checkbox);
      var _super = _createSuper(RemoveOrRenameIntermediateNodesCheckbox2);
      function RemoveOrRenameIntermediateNodesCheckbox2() {
        _classCallCheck(this, RemoveOrRenameIntermediateNodesCheckbox2);
        return _super.apply(this, arguments);
      }
      _createClass(RemoveOrRenameIntermediateNodesCheckbox2, [
        {
          key: "parentContext",
          value: function parentContext() {
            var isRemoveOrRenameIntermediateNodesCheckboxChecked = this.isChecked.bind(this);
            return {
              isRemoveOrRenameIntermediateNodesCheckboxChecked
            };
          }
        }
      ]);
      return RemoveOrRenameIntermediateNodesCheckbox2;
    }(_easy2.Checkbox);
    _defineProperty(RemoveOrRenameIntermediateNodesCheckbox, "defaultProperties", {
      className: "remove-or-rename-intermediate-nodes",
      spellCheck: "false"
    });
    var _default = (0, _easyWithStyle2).default(RemoveOrRenameIntermediateNodesCheckbox)(_templateObject());
    exports.default = _default;
  });

  // lib/example/view.js
  var require_view = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _easyWithStyle2 = _interopRequireDefault2(require_lib7());
    var _easy2 = require_lib();
    var _occamGrammarUtilities = require_lib8();
    var _easyLayout = require_lib9();
    var _index = require_lib11();
    var _paragraph = _interopRequireDefault2(require_paragraph());
    var _subHeading = _interopRequireDefault2(require_subHeading());
    var _name = _interopRequireDefault2(require_name5());
    var _sizeable = _interopRequireDefault2(require_sizeable2());
    var _bnf = _interopRequireDefault2(require_bnf11());
    var _ruleName = _interopRequireDefault2(require_ruleName10());
    var _content = _interopRequireDefault2(require_content3());
    var _parseTree = _interopRequireDefault2(require_parseTree2());
    var _startRuleName = _interopRequireDefault2(require_startRuleName());
    var _lexicalPattern = _interopRequireDefault2(require_lexicalPattern());
    var _combinedBNF = _interopRequireDefault2(require_combinedBNF());
    var _userDefinedCustomGrammar = _interopRequireDefault2(require_userDefinedCustomGrammar());
    var _removeOrRenameIntermediateNodes = _interopRequireDefault2(require_removeOrRenameIntermediateNodes2());
    var _constants = require_constants8();
    var _rules = require_rules2();
    var _grammarNames = require_grammarNames();
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function _construct2(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _setPrototypeOf(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _taggedTemplateLiteral(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    var _typeof = function(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !_isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _setPrototypeOf(Wrapper, Class2);
      };
      return _wrapNativeSuper(Class);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _templateObject() {
      var data = _taggedTemplateLiteral([
        "\n\n  padding: 1rem;\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var florenceLexerFromCombinedCustomGrammar = _index.lexersUtilities.florenceLexerFromCombinedCustomGrammar;
    var florenceParserFromCombinedCustomGrammar = _index.parsersUtilities.florenceParserFromCombinedCustomGrammar;
    var View = /* @__PURE__ */ function(Element) {
      _inherits(View2, Element);
      var _super = _createSuper(View2);
      function View2() {
        _classCallCheck(this, View2);
        var _this;
        _this = _super.apply(this, arguments);
        _defineProperty(_assertThisInitialized(_this), "initialContent", _constants.EMPTY_STRING);
        return _this;
      }
      _createClass(View2, [
        {
          key: "keyUpHandler",
          value: function keyUpHandler() {
            try {
              var name = this.getName();
              if (name === _grammarNames.USER_DEFINED_CUSTOM_GRAMMAR_NAME) {
                var bnf = this.getBNF(), ruleName = this.getRuleName(), lexicalPattern = this.getLexicalPattern();
                _userDefinedCustomGrammar.default.setBNF(ruleName, bnf);
                _userDefinedCustomGrammar.default.setLexicalPattern(lexicalPattern);
              }
              var customGrammars = [
                _userDefinedCustomGrammar.default
              ], combinedCustomGrammar = _index.CombinedCustomGrammar.fromCustomGrammars(customGrammars), combinedCustomGrammarRuleMap = combinedCustomGrammar.getRuleMap(), combinedCustomGrammarRules = Object.values(combinedCustomGrammarRuleMap), multiLine = true, combinedCustomGrammarRulesString = (0, _rules).rulesAsString(combinedCustomGrammarRules, multiLine), combinedBNF = combinedCustomGrammarRulesString, florenceLexer = florenceLexerFromCombinedCustomGrammar(combinedCustomGrammar), florenceParser = florenceParserFromCombinedCustomGrammar(combinedCustomGrammar), ruleMap = florenceParser.getRuleMap(), startRuleName = this.getStartRuleName(), startRule = ruleMap[startRuleName], content = this.getContent(), tokens = florenceLexer.tokenise(content), node = florenceParser.parse(tokens, startRule);
              var parseTree = null;
              if (node !== null) {
                var removeOrRenameIntermediateNodesCheckboxChecked = this.isRemoveOrRenameIntermediateNodesCheckboxChecked();
                if (removeOrRenameIntermediateNodesCheckboxChecked) {
                  (0, _occamGrammarUtilities).removeOrRenameIntermediateNodes(node);
                }
                parseTree = node.asParseTree(tokens);
              }
              this.setParseTree(parseTree);
              this.setCombinedBNF(combinedBNF);
            } catch (error) {
              console.log(error);
              this.clearParseTree();
              this.clearCombinedBNF();
            }
          }
        },
        {
          key: "changeHandler",
          value: function changeHandler() {
            var name = this.getName(), ruleName = this.getRuleName(), readOnly = name === _grammarNames.DEFAULT_CUSTOM_GRAMMAR_NAME, customGrammar = readOnly ? _index.defaultCustomGrammar : _userDefinedCustomGrammar.default, bnf = customGrammar.getBNF(ruleName), lexicalPattern = customGrammar.getLexicalPattern();
            this.setBNF(bnf);
            this.setBNFReadOnly(readOnly);
            this.setLexicalPattern(lexicalPattern);
            this.setLexicalPatternReadOnly(readOnly);
          }
        },
        {
          key: "childElements",
          value: function childElements() {
            var keyUpHandler = this.keyUpHandler.bind(this), changeHandler = this.changeHandler.bind(this);
            return [
              /* @__PURE__ */ React.createElement(_easyLayout.ColumnsDiv, null, /* @__PURE__ */ React.createElement(_sizeable.default, null, /* @__PURE__ */ React.createElement(_easyLayout.RowsDiv, null, /* @__PURE__ */ React.createElement(_subHeading.default, null, "Name"), /* @__PURE__ */ React.createElement(_name.default, {
                onChange: changeHandler
              }), /* @__PURE__ */ React.createElement(_subHeading.default, null, "Rule name"), /* @__PURE__ */ React.createElement(_ruleName.default, {
                onChange: changeHandler
              }), /* @__PURE__ */ React.createElement(_subHeading.default, null, "Lexical pattern"), /* @__PURE__ */ React.createElement(_lexicalPattern.default, {
                onKeyUp: keyUpHandler
              }), /* @__PURE__ */ React.createElement(_subHeading.default, null, "BNF"), /* @__PURE__ */ React.createElement(_bnf.default, {
                onKeyUp: keyUpHandler
              }), /* @__PURE__ */ React.createElement(_subHeading.default, null, "Start rule name"), /* @__PURE__ */ React.createElement(_startRuleName.default, {
                onKeyUp: keyUpHandler
              }))), /* @__PURE__ */ React.createElement(_easyLayout.VerticalSplitterDiv, null), /* @__PURE__ */ React.createElement(_easyLayout.ColumnDiv, null, /* @__PURE__ */ React.createElement(_easyLayout.RowsDiv, null, /* @__PURE__ */ React.createElement(_subHeading.default, null, "Content"), /* @__PURE__ */ React.createElement(_content.default, {
                onKeyUp: keyUpHandler
              }), /* @__PURE__ */ React.createElement(_subHeading.default, null, "Parse tree"), /* @__PURE__ */ React.createElement(_parseTree.default, null), /* @__PURE__ */ React.createElement(_subHeading.default, null, "Combined BNF"), /* @__PURE__ */ React.createElement(_combinedBNF.default, null), /* @__PURE__ */ React.createElement(_paragraph.default, null, /* @__PURE__ */ React.createElement(_removeOrRenameIntermediateNodes.default, {
                onChange: keyUpHandler,
                checked: true
              }), "Remove or rename intermediate nodes"))))
            ];
          }
        },
        {
          key: "initialise",
          value: function initialise() {
            this.assignContext();
            var content = this.initialContent;
            this.setContent(content);
            this.changeHandler();
            this.keyUpHandler();
          }
        }
      ]);
      return View2;
    }(_wrapNativeSuper(_easy2.Element));
    _defineProperty(View, "tagName", "div");
    _defineProperty(View, "defaultProperties", {
      className: "view"
    });
    var _default = (0, _easyWithStyle2).default(View)(_templateObject());
    exports.default = _default;
  });

  // lib/example.js
  "use strict";
  require_lib2();
  var _easyWithStyle = _interopRequireDefault(require_lib7());
  var _easy = require_lib();
  var _view = _interopRequireDefault(require_view());
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  var renderStyles = _easyWithStyle.default.renderStyles;
  var body = new _easy.Body();
  renderStyles();
  body.mount(/* @__PURE__ */ React.createElement(_view.default, null));
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL29mZnNldC5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvYm91bmRzLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9jb25zdGFudHMuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL3V0aWxpdGllcy9vYmplY3QuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL3V0aWxpdGllcy9hcnJheS5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvdXRpbGl0aWVzL25hbWUuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL3V0aWxpdGllcy9kb20uanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL21peGlucy9lbGVtZW50LmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy90ZXh0RWxlbWVudC5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvdXRpbGl0aWVzL2VsZW1lbnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9taXhpbnMvanN4LmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9ldmVudFR5cGVzLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9taXhpbnMva2V5LmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9taXhpbnMvY2xpY2suanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL21peGlucy9zdGF0ZS5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvY29udGVudFR5cGVzLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9taXhpbnMvcmVzaXplLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9taXhpbnMvZXZlbnQuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL21peGlucy9tb3VzZS5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvbWl4aW5zL3Njcm9sbC5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvZWxlbWVudC5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvcmVhY3QuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL2VsZW1lbnQvYm9keS5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvZWxlbWVudC9saW5rLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9taXhpbnMvY2hhbmdlLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9pbnB1dEVsZW1lbnQuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL2lucHV0RWxlbWVudC9pbnB1dC5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvZWxlbWVudC9idXR0b24uanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL2VsZW1lbnQvc2VsZWN0LmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9lbGVtZW50L2NoZWNrYm94LmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5L3NyYy9pbnB1dEVsZW1lbnQvdGV4dGFyZWEuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL21peGlucy93aW5kb3cuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL3dpbmRvdy5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvYnV0dG9ucy5qcyIsICJub2RlX21vZHVsZXMvZWFzeS9zcmMvZG9jdW1lbnQuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3kvc3JjL2luZGV4LmpzIiwgIm5vZGVfbW9kdWxlcy9qdXh0YXBvc2Uvc3JjL2p1eHRhcG9zZS5qcyIsICJub2RlX21vZHVsZXMvanV4dGFwb3NlL3NyYy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvd2l0aC1zdHlsZS9zcmMvdGFnTmFtZXMuanMiLCAibm9kZV9tb2R1bGVzL25lY2Vzc2FyeS9zcmMvbGV2ZWxzLmpzIiwgIm5vZGVfbW9kdWxlcy9uZWNlc3Nhcnkvc3JjL21ldGhvZHMuanMiLCAibm9kZV9tb2R1bGVzL25lY2Vzc2FyeS9zcmMvaGVhZGVycy5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy9rZXlDb2Rlcy5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy9lbmNvZGluZ3MuanMiLCAibm9kZV9tb2R1bGVzL25lY2Vzc2FyeS9zcmMvY2hhcmFjdGVycy5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy9zdGF0dXNDb2Rlcy5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy9jb250ZW50VHlwZXMuanMiLCAibm9kZV9tb2R1bGVzL25lY2Vzc2FyeS9zcmMvc3RhdHVzTWVzc2FnZXMuanMiLCAibm9kZV9tb2R1bGVzL25lY2Vzc2FyeS9zcmMvdXRpbGl0aWVzL2FycmF5LmpzIiwgIm5vZGVfbW9kdWxlcy9uZWNlc3Nhcnkvc3JjL2NvbnN0YW50cy5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy91dGlsaXRpZXMvaHR0cC5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy91dGlsaXRpZXMvYWpheC5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy91dGlsaXRpZXMvcGF0aC5qcyIsICJub2RlX21vZHVsZXMvbmVjZXNzYXJ5L3NyYy91dGlsaXRpZXMvYXN5bmNocm9ub3VzLmpzIiwgIm5vZGVfbW9kdWxlcy9uZWNlc3Nhcnkvc3JjL2Jyb3dzZXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvdXRpbGl0aWVzL2NvbnRlbnQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvdHlwZXMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9saWIvdG9rZW4uanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9saWIvdG9rZW4vc2lnbmlmaWNhbnQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvY29uc3RhbnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3J1bGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvc3BlY2lhbFN5bWJvbHMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvYm5mL2VudHJpZXMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvdXRpbGl0aWVzL3Rva2VuLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL2NvbW1vbi9sZXhlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9ub25TaWduaWZpY2FudC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9ub25TaWduaWZpY2FudC93aGl0ZXNwYWNlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL3NpZ25pZmljYW50L3JlZ3VsYXJFeHByZXNzaW9uLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL25vblNpZ25pZmljYW50L2VuZE9mTGluZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9zaWduaWZpY2FudC9zdHJpbmdMaXRlcmFsLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWwvZG91Ymx5UXVvdGVkLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL2JuZi9sZXhlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy9iYXNpYy9lbnRyaWVzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWwvc2luZ2x5UXVvdGVkLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvc2luZ2xlTGluZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L3NpbmdsZUxpbmUvcHl0aG9uU3R5bGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9lbmRPZkxpbmUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvZW5kT2YuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvZW5kT2YvcHl0aG9uU3R5bGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvc3RhcnRPZi5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9zdGFydE9mL3B5dGhvblN0eWxlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvbXVsdGlMaW5lL21pZGRsZU9mLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvbXVsdGlMaW5lL21pZGRsZU9mL3B5dGhvblN0eWxlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL2Jhc2ljL2xleGVyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL3NpZ25pZmljYW50L2VuZE9mTGluZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9zaWduaWZpY2FudC9jb21tZW50L2VuZE9mTGluZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L3NpbmdsZUxpbmUvY1N0eWxlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1sZXhlcnMvc3JjL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvbXVsdGlMaW5lL2VuZE9mL2NTdHlsZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9zdGFydE9mL2NTdHlsZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tbGV4ZXJzL3NyYy90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9taWRkbGVPZi9jU3R5bGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWxleGVycy9zcmMvaW5kZXguanMiLCAibm9kZV9tb2R1bGVzL3dpdGgtc3R5bGUvc3JjL2Nzcy9lbnRyaWVzLmpzIiwgIm5vZGVfbW9kdWxlcy93aXRoLXN0eWxlL3NyYy9jc3MvbGV4ZXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2JuZi9ibmYuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2NvbnN0YW50cy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvdXRpbGl0aWVzL3N0cmluZy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvZGVmYXVsdHMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3N0YXRlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy91dGlsaXRpZXMvYXJyYXkuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnNlVHJlZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9saWIvcGFyc2VUcmVlL3ZlcnRpY2FsQnJhbmNoLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9wYXJzZVRyZWUvcnVsZU5hbWUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnNlVHJlZS9ob3Jpem9udGFsQnJhbmNoLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9wYXJzZVRyZWUvY2hpbGROb2Rlcy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcGFyc2VUcmVlL25vblRlcm1pbmFsTm9kZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvbm9kZS9ub25UZXJtaW5hbC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvbm9kZS9ibmYvbmFtZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvdXRpbGl0aWVzL3BhcnQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3V0aWxpdGllcy9sb29rQWhlYWQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24uanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvbGliL3BhcnQvdGVybWluYWwuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnNlVHJlZS90ZXJtaW5hbE5vZGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL25vZGUvdGVybWluYWwuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvbGliL3BhcnQvdGVybWluYWwvc2lnbmlmaWNhbnRUb2tlblR5cGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vbmFtZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZU5hbWVzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ydWxlL25hbWUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvbGliL3BhcnQvbm9uVGVybWluYWwuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnRUeXBlcy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9saWIvcGFydC9ub25UZXJtaW5hbC9vcHRpb25hbFBhcnQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvbGliL3BhcnQvbm9uVGVybWluYWwvY29sbGVjdGlvbk9mUGFydHMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnQvbm9uVGVybWluYWwvb25lT3JNb3JlUGFydHMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnQvbm9uVGVybWluYWwvemVyb09yTW9yZVBhcnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy91dGlsaXRpZXMvYm5mLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ub2RlL2JuZi9wYXJ0LmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL2xpYi9wYXJ0L25vblRlcm1pbmFsL3J1bGVOYW1lLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9kZWZpbml0aW9uL3J1bGVOYW1lLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9kZWZpbml0aW9uL3BhcnRSdWxlL3Rlcm1pbmFsLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9kZWZpbml0aW9uL3BhcnRSdWxlL25vblRlcm1pbmFsLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ydWxlL3BhcnQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL25vZGUvYm5mL3J1bGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvbGliL3BhcnQvdGVybWluYWwvdGVybWluYWxTeW1ib2wuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vcnVsZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS9ydWxlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ub2RlL2JuZi9lcnJvci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcGFydC90ZXJtaW5hbC93aWxkY2FyZC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvZGVmaW5pdGlvbi9lcnJvci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS9lcnJvci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvbm9kZS9ibmYvZG9jdW1lbnQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvbGliL3BhcnQvbm9uVGVybWluYWwvY2hvaWNlT2ZQYXJ0cy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvZGVmaW5pdGlvbi9kb2N1bWVudC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS9kb2N1bWVudC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvbm9kZS9ibmYvcnVsZU5hbWUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvcnVsZU5hbWUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL25vZGUvYm5mL3dpbGRjYXJkLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9kZWZpbml0aW9uL3Rlcm1pbmFsU3ltYm9sLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ydWxlL3dpbGRjYXJkLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9wYXJzZVRyZWUvZW5kT2ZMaW5lTm9kZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvbm9kZS90ZXJtaW5hbC9lbmRPZkxpbmUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnQvdGVybWluYWwvZW5kT2ZMaW5lLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ub2RlL2JuZi9lbmRPZkxpbmUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvZW5kT2ZMaW5lLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ydWxlL3F1YW50aWZpZXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL25vZGUvYm5mL2RlZmluaXRpb24uanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vZGVmaW5pdGlvbi5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS9kZWZpbml0aW9uLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ub2RlL2JuZi9kZWZpbml0aW9ucy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9saWIvcGFydC9ub25UZXJtaW5hbC9zZXF1ZW5jZU9mUGFydHMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vZGVmaW5pdGlvbnMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvZGVmaW5pdGlvbnMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL25vZGUvYm5mL3BhcnQvdGVybWluYWwuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvdGVybWluYWxQYXJ0LmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ub2RlL2JuZi9jaG9pY2VPZlBhcnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9kZWZpbml0aW9uL2Nob2ljZU9mUGFydHMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvY2hvaWNlT2ZQYXJ0cy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9saWIvbm9kZS9ibmYvdGVybWluYWxTeW1ib2wuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vc2lnbmlmaWNhbnRUb2tlblR5cGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvdGVybWluYWxTeW1ib2wuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL25vZGUvYm5mL3BhcnQvbm9uVGVybWluYWwuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vcGFydFJ1bGUvbm9uVGVybWluYWwvcnVsZU5hbWUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvbm9uVGVybWluYWxQYXJ0LmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ub2RlL2JuZi9zZXF1ZW5jZU9mUGFydHMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vc2VxdWVuY2VPZlBhcnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ydWxlL3NlcXVlbmNlT2ZQYXJ0cy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcGFyc2VUcmVlL25vV2hpdGVzcGFjZU5vZGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL25vZGUvdGVybWluYWwvbm9XaGl0ZXNwYWNlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9wYXJ0L3Rlcm1pbmFsL25vV2hpdGVzcGFjZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvbm9kZS9ibmYvbm9XaGl0ZXNwYWNlUGFydC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvZGVmaW5pdGlvbi9ub1doaXRlc3BhY2VQYXJ0LmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ydWxlL25vV2hpdGVzcGFjZVBhcnQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL2RlZmluaXRpb24vbG9va0FoZWFkTW9kaWZpZXJSdWxlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9ydWxlL2xvb2tBaGVhZE1vZGlmaWVyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL2xpYi9wYXJ0L3Rlcm1pbmFsL3JlZ3VsYXJFeHByZXNzaW9uLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL2xpYi9ub2RlL2JuZi9yZWd1bGFyRXhwcmVzc2lvbi5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS9yZWd1bGFyRXhwcmVzc2lvbi5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvZGVmaW5pdGlvbi9xdWFudGlmaWVyUnVsZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS9vcHRpb25hbFF1YW50aWZpZXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvb25lT3JNb3JlUXVhbnRpZmllci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvcnVsZS96ZXJvT3JNb3JlUXVhbnRpZmllci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9saWIvbm9kZS9ibmYvc2lnbmlmaWNhbnRUb2tlblR5cGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3J1bGUvc2lnbmlmaWNhbnRUb2tlblR5cGUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3V0aWxpdGllcy9ydWxlcy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvYm5mL3BhcnNlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tcGFyc2Vycy9zcmMvYmFzaWMvYm5mLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy91dGlsaXRpZXMvcGFyc2VyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9jb21tb24vcGFyc2VyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9iYXNpYy9wYXJzZXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLXBhcnNlcnMvc3JjL3BhcnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1wYXJzZXJzL3NyYy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvd2l0aC1zdHlsZS9zcmMvY3NzL2JuZi5qcyIsICJub2RlX21vZHVsZXMvd2l0aC1zdHlsZS9zcmMvY3NzL3BhcnNlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZG9tL2xpYi91dGlsaXRpZXMvYXJyYXkuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWRvbS9zcmMvc3ByZWFkLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1kb20vc3JjL3F1ZXJ5LmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1kb20vc3JjL3V0aWxpdGllcy9xdWVyeS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZG9tL3NyYy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvd2l0aC1zdHlsZS9zcmMvY29uc3RhbnRzLmpzIiwgIm5vZGVfbW9kdWxlcy93aXRoLXN0eWxlL3NyYy91dGlsaXRpZXMvY29udGVudC5qcyIsICJub2RlX21vZHVsZXMvd2l0aC1zdHlsZS9zcmMvc3R5bGUvZGVjbGFyYXRpb24uanMiLCAibm9kZV9tb2R1bGVzL3dpdGgtc3R5bGUvc3JjL3N0eWxlL2RlY2xhcmF0aW9ucy5qcyIsICJub2RlX21vZHVsZXMvd2l0aC1zdHlsZS9zcmMvc3R5bGUvcnVsZVNldC5qcyIsICJub2RlX21vZHVsZXMvd2l0aC1zdHlsZS9zcmMvc3R5bGUvcnVsZVNldHMuanMiLCAibm9kZV9tb2R1bGVzL3dpdGgtc3R5bGUvc3JjL3N0eWxlL21lZGlhLmpzIiwgIm5vZGVfbW9kdWxlcy93aXRoLXN0eWxlL3NyYy9zdHlsZS9tZWRpYXMuanMiLCAibm9kZV9tb2R1bGVzL3dpdGgtc3R5bGUvc3JjL3N0eWxlLmpzIiwgIm5vZGVfbW9kdWxlcy93aXRoLXN0eWxlL3NyYy91dGlsaXRpZXMvc3R5bGVzLmpzIiwgIm5vZGVfbW9kdWxlcy93aXRoLXN0eWxlL3NyYy91dGlsaXRpZXMvY2xhc3NOYW1lLmpzIiwgIm5vZGVfbW9kdWxlcy93aXRoLXN0eWxlL3NyYy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvZWFzeS13aXRoLXN0eWxlL3NyYy91dGlsaXRpZXMvY2xhc3MuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3ktd2l0aC1zdHlsZS9zcmMvY29uc3RhbnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LXdpdGgtc3R5bGUvbGliL3dpdGhTdHlsZS5qcyIsICJub2RlX21vZHVsZXMvZWFzeS13aXRoLXN0eWxlL3NyYy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL3V0aWxpdGllcy9jbGFzcy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL3V0aWxpdGllcy9ydWxlTmFtZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL3V0aWxpdGllcy9ydWxlLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9zcmMvdHlwZXMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXItdXRpbGl0aWVzL3NyYy91dGlsaXRpZXMvcmVjdXJzaXZlUGFydC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL3V0aWxpdGllcy9kZWZpbml0aW9uLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9saWIvZGVmaW5pdGlvbi9yZWN1cnNpdmUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXItdXRpbGl0aWVzL2xpYi9kZWZpbml0aW9uL2xlZnRSZWN1cnNpdmUuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXItdXRpbGl0aWVzL3NyYy9ub2RlL3JlZHVjZWQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXItdXRpbGl0aWVzL3NyYy9ydWxlL3JlZHVjZWQuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXItdXRpbGl0aWVzL3NyYy9ub2RlL3JlcGVhdGVkLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9zcmMvcnVsZS9yZXBlYXRlZC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL3V0aWxpdGllcy9wYXJ0LmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9zcmMvZGVmaW5pdGlvbi9ydWxlTmFtZS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL3J1bGUvcmV3cml0dGVuLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9zcmMvdXRpbGl0aWVzL3BhcnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9zcmMvZGVmaW5pdGlvbi9yZXBlYXRlZC5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL2RlZmluaXRpb24vcmV3cml0dGVuLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9zcmMvZGVmaW5pdGlvbi9sZWZ0UmVjdXJzaXZlL2RpcmVjdGx5LmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9saWIvZGVmaW5pdGlvbi9sZWZ0UmVjdXJzaXZlL2ltcGxpY2l0bHkuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXItdXRpbGl0aWVzL2xpYi9kZWZpbml0aW9uL2xlZnRSZWN1cnNpdmUvaW5kaXJlY3RseS5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hci11dGlsaXRpZXMvc3JjL2VsaW1pbmF0ZUxlZnRSZWN1cnNpb24uanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXItdXRpbGl0aWVzL3NyYy9yZW1vdmVPclJlbmFtZUludGVybWVkaWF0ZU5vZGVzLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFyLXV0aWxpdGllcy9zcmMvaW5kZXguanMiLCAibm9kZV9tb2R1bGVzL2Vhc3ktbGF5b3V0L3NyYy9vcHRpb25zLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9zcmMvZGl2L3Jvdy5qcyIsICJub2RlX21vZHVsZXMvZWFzeS1sYXlvdXQvc3JjL2Rpdi9yb3dzLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9zcmMvZGl2L2NvbHVtbi5qcyIsICJub2RlX21vZHVsZXMvZWFzeS1sYXlvdXQvc3JjL2Rpdi9jb2x1bW5zLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9zcmMvZGl2L3NpemVhYmxlLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9zcmMvY29uc3RhbnRzLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9zcmMvY3Vyc29yLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9saWIvZGl2L3NwbGl0dGVyLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9zcmMvZGl2L3NwbGl0dGVyL3ZlcnRpY2FsLmpzIiwgIm5vZGVfbW9kdWxlcy9lYXN5LWxheW91dC9zcmMvZGl2L3NwbGl0dGVyL2hvcml6b250YWwuanMiLCAibm9kZV9tb2R1bGVzL2Vhc3ktbGF5b3V0L3NyYy9pbmRleC5qcyIsICJzcmMvZ3JhbW1hck5hbWVzLmpzIiwgInNyYy9jb25zdGFudHMuanMiLCAic3JjL2N1c3RvbUdyYW1tYXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy90ZVgvZW50cmllcy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL3RlWC9sZXhlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL3RlWC9ibmYuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy90ZVgvcGFyc2VyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvcGxhaW4vZW50cmllcy5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL3BsYWluL2xleGVyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvcGxhaW4vYm5mLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvcGxhaW4vcGFyc2VyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvcmVhZG1lL2VudHJpZXMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy9yZWFkbWUvbGV4ZXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy9yZWFkbWUvYm5mLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvcmVhZG1lL3BhcnNlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL21ldGFKU09OL2VudHJpZXMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy9tZXRhSlNPTi9sZXhlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL21ldGFKU09OL2JuZi5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL21ldGFKU09OL3BhcnNlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL2Zsb3JlbmNlL2VudHJpZXMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy9mbG9yZW5jZS9sZXhlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL2Zsb3JlbmNlL2JuZi5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL2Zsb3JlbmNlL2RlZmF1bHRDdXN0b21HcmFtbWFyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvZmxvcmVuY2UvcGFyc2VyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvY3VzdG9tR3JhbW1hckJORi9sZXhlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL2N1c3RvbUdyYW1tYXJCTkYvcGFyc2VyLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuL2VudHJpZXMuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy9jdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm4vbGV4ZXIuanMiLCAibm9kZV9tb2R1bGVzL29jY2FtLWdyYW1tYXJzL3NyYy9jdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm4vYm5mLmpzIiwgIm5vZGVfbW9kdWxlcy9vY2NhbS1ncmFtbWFycy9zcmMvY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuL3BhcnNlci5qcyIsICJub2RlX21vZHVsZXMvb2NjYW0tZ3JhbW1hcnMvc3JjL2luZGV4LmpzIiwgInNyYy91dGlsaXRpZXMvbGV4ZXJzLmpzIiwgInNyYy91dGlsaXRpZXMvcGFyc2Vycy5qcyIsICJzcmMvZGVmYXVsdEN1c3RvbUdyYW1tYXIuanMiLCAic3JjL3V0aWxpdGllcy9ydWxlTmFtZS5qcyIsICJzcmMvdXRpbGl0aWVzL3J1bGVzLmpzIiwgInNyYy91dGlsaXRpZXMvY3VzdG9tR3JhbW1hcnMuanMiLCAic3JjL3J1bGVOYW1lcy5qcyIsICJzcmMvY29tYmluZWRDdXN0b21HcmFtbWFyLmpzIiwgInNyYy9pbmRleC5qcyIsICJzcmMvZXhhbXBsZS9wYXJhZ3JhcGguanMiLCAic3JjL2V4YW1wbGUvc3ViSGVhZGluZy5qcyIsICJzcmMvZXhhbXBsZS9zZWxlY3QuanMiLCAic3JjL2V4YW1wbGUvc2VsZWN0L25hbWUuanMiLCAic3JjL2V4YW1wbGUvZGl2L3NpemVhYmxlLmpzIiwgInNyYy9leGFtcGxlL3RleHRhcmVhLmpzIiwgInNyYy9leGFtcGxlL3RleHRhcmVhL2JuZi5qcyIsICJzcmMvZXhhbXBsZS9zZWxlY3QvcnVsZU5hbWUuanMiLCAic3JjL2V4YW1wbGUvdGV4dGFyZWEvY29udGVudC5qcyIsICJzcmMvZXhhbXBsZS90ZXh0YXJlYS9wYXJzZVRyZWUuanMiLCAic3JjL2V4YW1wbGUvaW5wdXQuanMiLCAic3JjL2V4YW1wbGUvaW5wdXQvc3RhcnRSdWxlTmFtZS5qcyIsICJzcmMvZXhhbXBsZS9pbnB1dC9sZXhpY2FsUGF0dGVybi5qcyIsICJzcmMvZXhhbXBsZS90ZXh0YXJlYS9jb21iaW5lZEJORi5qcyIsICJzcmMvZXhhbXBsZS91c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIuanMiLCAic3JjL2V4YW1wbGUvY2hlY2tib3gvcmVtb3ZlT3JSZW5hbWVJbnRlcm1lZGlhdGVOb2Rlcy5qcyIsICJsaWIvZXhhbXBsZS92aWV3LmpzIiwgInNyYy9leGFtcGxlLmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT2Zmc2V0IHtcbiAgY29uc3RydWN0b3IodG9wLCBsZWZ0KSB7XG4gICAgdGhpcy50b3AgPSB0b3A7XG4gICAgdGhpcy5sZWZ0ID0gbGVmdDtcbiAgfVxuXG4gIGdldFRvcCgpIHtcbiAgICByZXR1cm4gdGhpcy50b3A7XG4gIH1cblxuICBnZXRMZWZ0KCkge1xuICAgIHJldHVybiB0aGlzLmxlZnQ7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm91bmRzIHtcbiAgY29uc3RydWN0b3IodG9wLCBsZWZ0LCByaWdodCwgYm90dG9tKSB7XG4gICAgdGhpcy50b3AgPSB0b3A7XG4gICAgdGhpcy5sZWZ0ID0gbGVmdDtcbiAgICB0aGlzLnJpZ2h0ID0gcmlnaHQ7XG4gICAgdGhpcy5ib3R0b20gPSBib3R0b207XG4gIH1cblxuICBnZXRUb3AoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9wO1xuICB9XG5cbiAgZ2V0TGVmdCgpIHtcbiAgICByZXR1cm4gdGhpcy5sZWZ0O1xuICB9XG5cbiAgZ2V0UmlnaHQoKSB7XG4gICAgcmV0dXJuIHRoaXMucmlnaHQ7XG4gIH1cblxuICBnZXRCb3R0b20oKSB7XG4gICAgcmV0dXJuIHRoaXMuYm90dG9tO1xuICB9XG5cbiAgZ2V0V2lkdGgoKSB7XG4gICAgY29uc3Qgd2lkdGggPSAodGhpcy5yaWdodCAtIHRoaXMubGVmdCk7XG5cbiAgICByZXR1cm4gd2lkdGg7XG4gIH1cblxuICBnZXRIZWlnaHQoKSB7XG4gICAgY29uc3QgaGVpZ2h0ID0gKHRoaXMuYm90dG9tIC0gdGhpcy50b3ApO1xuXG4gICAgcmV0dXJuIGhlaWdodDtcbiAgfVxuICBcbiAgc2V0VG9wKHRvcCkge1xuICAgIHRoaXMudG9wID0gdG9wO1xuICB9XG5cbiAgc2V0TGVmdChsZWZ0KSB7XG4gICAgdGhpcy5sZWZ0ID0gbGVmdDtcbiAgfVxuXG4gIHNldFJpZ2h0KHJpZ2h0KSB7XG4gICAgdGhpcy5yaWdodCA9IHJpZ2h0O1xuICB9XG5cbiAgc2V0Qm90dG9tKGJvdHRvbSkge1xuICAgIHRoaXMuYm90dG9tID0gYm90dG9tO1xuICB9XG5cbiAgc2hpZnQoaG9yaXpvbnRhbE9mZnNldCwgdmVydGljYWxPZmZzZXQpIHtcbiAgICB0aGlzLnRvcCArPSB2ZXJ0aWNhbE9mZnNldDtcbiAgICB0aGlzLmxlZnQgKz0gaG9yaXpvbnRhbE9mZnNldDtcbiAgICB0aGlzLnJpZ2h0ICs9IGhvcml6b250YWxPZmZzZXQ7XG4gICAgdGhpcy5ib3R0b20gKz0gdmVydGljYWxPZmZzZXQ7XG4gIH1cblxuICBpc092ZXJsYXBwaW5nTW91c2UobW91c2VUb3AsIG1vdXNlTGVmdCkge1xuICAgIHJldHVybiAoICAodGhpcy50b3AgPD0gbW91c2VUb3ApXG4gICAgICAgICAgICYmICh0aGlzLmxlZnQgPD0gbW91c2VMZWZ0KVxuICAgICAgICAgICAmJiAodGhpcy5yaWdodCA+IG1vdXNlTGVmdClcbiAgICAgICAgICAgJiYgKHRoaXMuYm90dG9tID4gbW91c2VUb3ApICApO1xuICB9XG5cbiAgYXJlT3ZlcmxhcHBpbmcoYm91bmRzKSB7XG4gICAgcmV0dXJuICggICh0aGlzLnRvcCA8IGJvdW5kcy5ib3R0b20pXG4gICAgICAgICAgICYmICh0aGlzLmxlZnQgPCBib3VuZHMucmlnaHQpXG4gICAgICAgICAgICYmICh0aGlzLnJpZ2h0ID4gYm91bmRzLmxlZnQpXG4gICAgICAgICAgICYmICh0aGlzLmJvdHRvbSA+IGJvdW5kcy50b3ApICApO1xuICB9XG5cbiAgc3RhdGljIGZyb21Cb3VuZGluZ0NsaWVudFJlY3QoYm91bmRpbmdDbGllbnRSZWN0KSB7XG4gICAgY29uc3Qgd2luZG93U2Nyb2xsVG9wID0gd2luZG93LnBhZ2VZT2Zmc2V0LCAvLy9cbiAgICAgICAgICB3aW5kb3dTY3JvbGxMZWZ0ID0gd2luZG93LnBhZ2VYT2Zmc2V0LCAgLy8vXG4gICAgICAgICAgdG9wID0gYm91bmRpbmdDbGllbnRSZWN0LnRvcCArIHdpbmRvd1Njcm9sbFRvcCxcbiAgICAgICAgICBsZWZ0ID0gYm91bmRpbmdDbGllbnRSZWN0LmxlZnQgKyB3aW5kb3dTY3JvbGxMZWZ0LFxuICAgICAgICAgIHJpZ2h0ID0gYm91bmRpbmdDbGllbnRSZWN0LnJpZ2h0ICsgd2luZG93U2Nyb2xsTGVmdCxcbiAgICAgICAgICBib3R0b20gPSBib3VuZGluZ0NsaWVudFJlY3QuYm90dG9tICsgd2luZG93U2Nyb2xsVG9wLFxuICAgICAgICAgIGJvdW5kcyA9IG5ldyBCb3VuZHModG9wLCBsZWZ0LCByaWdodCwgYm90dG9tKTtcblxuICAgIHJldHVybiBib3VuZHM7XG4gIH1cblxuICBzdGF0aWMgZnJvbVRvcExlZnRXaWR0aEFuZEhlaWdodCh0b3AsIGxlZnQsIHdpZHRoLCBoZWlnaHQpIHtcbiAgICBjb25zdCBib3R0b20gPSB0b3AgKyBoZWlnaHQsXG4gICAgICAgICAgcmlnaHQgPSBsZWZ0ICsgd2lkdGgsXG4gICAgICAgICAgYm91bmRzID0gbmV3IEJvdW5kcyh0b3AsIGxlZnQsIHJpZ2h0LCBib3R0b20pO1xuXG4gICAgcmV0dXJuIGJvdW5kcztcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgRk9SID0gXCJmb3JcIjtcbmV4cG9ydCBjb25zdCBCT0RZID0gXCJib2R5XCI7XG5leHBvcnQgY29uc3QgTk9ORSA9IFwibm9uZVwiO1xuZXhwb3J0IGNvbnN0IFNQQUNFID0gXCIgXCI7XG5leHBvcnQgY29uc3QgQ0xBU1MgPSBcImNsYXNzXCI7XG5leHBvcnQgY29uc3QgV0lEVEggPSBcIndpZHRoXCI7XG5leHBvcnQgY29uc3QgQkxPQ0sgPSBcImJsb2NrXCI7XG5leHBvcnQgY29uc3QgSEVJR0hUID0gXCJoZWlnaHRcIjtcbmV4cG9ydCBjb25zdCBPQkpFQ1QgPSBcIm9iamVjdFwiO1xuZXhwb3J0IGNvbnN0IFNUUklORyA9IFwic3RyaW5nXCI7XG5leHBvcnQgY29uc3QgRElTUExBWSA9IFwiZGlzcGxheVwiO1xuZXhwb3J0IGNvbnN0IEJPT0xFQU4gPSBcImJvb2xlYW5cIjtcbmV4cG9ydCBjb25zdCBESVNBQkxFRCA9IFwiZGlzYWJsZWRcIjtcbmV4cG9ydCBjb25zdCBGVU5DVElPTiA9IFwiZnVuY3Rpb25cIjtcbmV4cG9ydCBjb25zdCBXSUxEQ0FSRCA9IFwiKlwiO1xuZXhwb3J0IGNvbnN0IEhUTUxfRk9SID0gXCJodG1sRm9yXCI7XG5leHBvcnQgY29uc3QgVU5ERUZJTkVEID0gJ3VuZGVmaW5lZCc7XG5leHBvcnQgY29uc3QgQ0xBU1NfTkFNRSA9IFwiY2xhc3NOYW1lXCI7XG5leHBvcnQgY29uc3QgQUJPVVRfQkxBTksgPSBcImFib3V0OmJsYW5rXCI7XG5leHBvcnQgY29uc3QgRU1QVFlfU1RSSU5HID0gXCJcIjtcbmV4cG9ydCBjb25zdCBTVkdfTkFNRVNQQUNFX1VSSSA9IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1BST1BFUlRJRVMgPSBcImRlZmF1bHRQcm9wZXJ0aWVzXCI7XG5leHBvcnQgY29uc3QgSUdOT1JFRF9QUk9QRVJUSUVTID0gXCJpZ25vcmVkUHJvcGVydGllc1wiO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBCT09MRUFOIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29tYmluZSh0YXJnZXQsIHNvdXJjZSA9IHt9KSB7XG4gIHRhcmdldCA9IHsgLi4udGFyZ2V0IH07ICAvLy9cblxuICBjb25zdCBuYW1lcyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7ICAvLy9cblxuICBuYW1lcy5mb3JFYWNoKChuYW1lKSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0VmFsdWUgPSB0YXJnZXRbbmFtZV0sXG4gICAgICAgICAgc291cmNlVmFsdWUgPSBzb3VyY2VbbmFtZV0sXG4gICAgICAgICAgdGFyZ2V0SGFzT3duUHJvcGVydHkgPSB0YXJnZXQuaGFzT3duUHJvcGVydHkobmFtZSk7XG5cbiAgICB0YXJnZXRbbmFtZV0gPSB0YXJnZXRIYXNPd25Qcm9wZXJ0eSA/XG4gICAgICAgICAgICAgICAgICAgICBjb21iaW5lVmFsdWVzKHRhcmdldFZhbHVlLCBzb3VyY2VWYWx1ZSkgOlxuICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2VWYWx1ZTsgLy8vXG4gIH0pO1xuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcnVuZSh0YXJnZXQsIG5hbWVzID0gW10pIHtcbiAgdGFyZ2V0ID0geyAuLi50YXJnZXQgfTsgIC8vL1xuXG4gIG5hbWVzLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICBjb25zdCB0YXJnZXRIYXNPd25Qcm9wZXJ0eSA9IHRhcmdldC5oYXNPd25Qcm9wZXJ0eShuYW1lKTtcblxuICAgIGlmICh0YXJnZXRIYXNPd25Qcm9wZXJ0eSkge1xuICAgICAgZGVsZXRlIHRhcmdldFtuYW1lXTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIGNvbWJpbmVWYWx1ZXModGFyZ2V0VmFsdWUsIHNvdXJjZVZhbHVlKSB7XG4gIGNvbnN0IHRhcmdldFZhbHVlQm9vbGVhbiA9IGlzVmFsdWVCb29sZWFuKHRhcmdldFZhbHVlKSxcbiAgICAgICAgc291cmNlVmFsdWVCb29sZWFuID0gaXNWYWx1ZUJvb2xlYW4oc291cmNlVmFsdWUpLFxuICAgICAgICBjb21iaW5lZFZhbHVlID0gKHRhcmdldFZhbHVlQm9vbGVhbiAmJiBzb3VyY2VWYWx1ZUJvb2xlYW4pID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0VmFsdWUgOiAvLy9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgJHt0YXJnZXRWYWx1ZX0gJHtzb3VyY2VWYWx1ZX1gO1xuXG4gIHJldHVybiBjb21iaW5lZFZhbHVlO1xufVxuXG5mdW5jdGlvbiBpc1ZhbHVlQm9vbGVhbih2YWx1ZSkge1xuICBjb25zdCB2YWx1ZUJvb2xlYW4gPSAodHlwZW9mIHZhbHVlID09PSBCT09MRUFOKTtcblxuICByZXR1cm4gdmFsdWVCb29sZWFuO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZmlyc3QoYXJyYXkpIHsgcmV0dXJuIGFycmF5WzBdOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBwdXNoKGFycmF5MSwgYXJyYXkyKSB7IEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGFycmF5MSwgYXJyYXkyKTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gYXVnbWVudChhcnJheTEsIGFycmF5MiwgdGVzdCkge1xuICBhcnJheTEgPSBbIC4uLmFycmF5MSBdOyAvLy9cblxuICBhcnJheTIuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBwYXNzZWQgPSB0ZXN0KGVsZW1lbnQsIGluZGV4KTtcblxuICAgIGlmIChwYXNzZWQpIHtcbiAgICAgIGFycmF5MS5wdXNoKGVsZW1lbnQpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGFycmF5MTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZsYXR0ZW4oYXJyYXkpIHtcbiAgcmV0dXJuIGFycmF5LnJlZHVjZSgoYXJyYXksIGVsZW1lbnQpID0+IHtcbiAgICBhcnJheSA9IGFycmF5LmNvbmNhdChlbGVtZW50KTsgIC8vL1xuXG4gICAgcmV0dXJuIGFycmF5O1xuICB9LCBbXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBndWFyYW50ZWUoYXJyYXlPckVsZW1lbnQpIHtcbiAgYXJyYXlPckVsZW1lbnQgPSBhcnJheU9yRWxlbWVudCB8fCBbXTtcblxuICByZXR1cm4gKGFycmF5T3JFbGVtZW50IGluc3RhbmNlb2YgQXJyYXkpID9cbiAgICAgICAgICAgIGFycmF5T3JFbGVtZW50IDpcbiAgICAgICAgICAgICAgW2FycmF5T3JFbGVtZW50XTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzU1ZHVGFnTmFtZSh0YWdOYW1lKSB7XG4gIHJldHVybiBzdmdUYWdOYW1lcy5pbmNsdWRlcyh0YWdOYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU1ZHQXR0cmlidXRlTmFtZShhdHRyaWJ1dGVOYW1lKSB7XG4gIHJldHVybiBzdmdBdHRyaWJ1dGVOYW1lcy5pbmNsdWRlcyhhdHRyaWJ1dGVOYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzSFRNTEF0dHJpYnV0ZU5hbWUoYXR0cmlidXRlTmFtZSkge1xuICByZXR1cm4gaHRtbEF0dHJpYnV0ZU5hbWVzLmluY2x1ZGVzKGF0dHJpYnV0ZU5hbWUpO1xufVxuXG5jb25zdCBzdmdUYWdOYW1lcyA9IFtcbiAgICAgICAgXCJhbHRHbHlwaFwiLCBcImFuaW1hdGVcIiwgXCJhbmltYXRlQ29sb3JcIiwgXCJhbmltYXRlTW90aW9uXCIsIFwiYW5pbWF0ZVRyYW5zZm9ybVwiLCBcImFuaW1hdGlvblwiLCBcImF1ZGlvXCIsXG4gICAgICAgIFwiY2lyY2xlXCIsIFwiY2xpcFBhdGhcIiwgXCJjb2xvci1wcm9maWxlXCIsIFwiY3Vyc29yXCIsXG4gICAgICAgIFwiZGVmc1wiLCBcImRlc2NcIiwgXCJkaXNjYXJkXCIsXG4gICAgICAgIFwiZWxsaXBzZVwiLFxuICAgICAgICBcImZlQmxlbmRcIiwgXCJmZUNvbG9yTWF0cml4XCIsIFwiZmVDb21wb25lbnRUcmFuc2ZlclwiLCBcImZlQ29tcG9zaXRlXCIsIFwiZmVDb252b2x2ZU1hdHJpeFwiLCBcImZlRGlmZnVzZUxpZ2h0aW5nXCIsIFwiZmVEaXNwbGFjZW1lbnRNYXBcIiwgXCJmZURpc3RhbnRMaWdodFwiLCBcImZlRHJvcFNoYWRvd1wiLCBcImZlRmxvb2RcIiwgXCJmZUZ1bmNBXCIsIFwiZmVGdW5jQlwiLCBcImZlRnVuY0dcIiwgXCJmZUZ1bmNSXCIsIFwiZmVHYXVzc2lhbkJsdXJcIiwgXCJmZUltYWdlXCIsIFwiZmVNZXJnZVwiLCBcImZlTWVyZ2VOb2RlXCIsIFwiZmVNb3JwaG9sb2d5XCIsIFwiZmVPZmZzZXRcIiwgXCJmZVBvaW50TGlnaHRcIiwgXCJmZVNwZWN1bGFyTGlnaHRpbmdcIiwgXCJmZVNwb3RMaWdodFwiLCBcImZlVGlsZVwiLCBcImZlVHVyYnVsZW5jZVwiLCBcImZpbHRlclwiLCBcImZvbnRcIiwgXCJmb250LWZhY2VcIiwgXCJmb250LWZhY2UtZm9ybWF0XCIsIFwiZm9udC1mYWNlLW5hbWVcIiwgXCJmb250LWZhY2UtdXJpXCIsIFwiZm9yZWlnbk9iamVjdFwiLFxuICAgICAgICBcImdcIiwgXCJnbHlwaFwiLCBcImdseXBoUmVmXCIsXG4gICAgICAgIFwiaGFuZGxlclwiLCBcImhhdGNoXCIsIFwiaGF0Y2hwYXRoXCIsIFwiaGtlcm5cIixcbiAgICAgICAgXCJpbWFnZVwiLCBcImxpbmVcIiwgXCJsaW5lYXJHcmFkaWVudFwiLFxuICAgICAgICBcImxpc3RlbmVyXCIsXG4gICAgICAgIFwibWFya2VyXCIsIFwibWFza1wiLCBcIm1lc2hcIiwgXCJtZXNoZ3JhZGllbnRcIiwgXCJtZXNocGF0Y2hcIiwgXCJtZXNocm93XCIsIFwibWV0YWRhdGFcIiwgXCJtaXNzaW5nLWdseXBoXCIsIFwibXBhdGhcIixcbiAgICAgICAgXCJwYXRoXCIsIFwicGF0dGVyblwiLCBcInBvbHlnb25cIiwgXCJwb2x5bGluZVwiLCBcInByZWZldGNoXCIsXG4gICAgICAgIFwicmFkaWFsR3JhZGllbnRcIiwgXCJyZWN0XCIsXG4gICAgICAgIFwic2NyaXB0XCIsIFwic2V0XCIsIFwic29saWRjb2xvclwiLCBcInN0b3BcIiwgXCJzdHlsZVwiLCBcInN2Z1wiLCBcInN3aXRjaFwiLCBcInN5bWJvbFwiLFxuICAgICAgICBcInRicmVha1wiLCBcInRleHRcIiwgXCJ0ZXh0QXJlYVwiLCBcInRleHRQYXRoXCIsIFwidGl0bGVcIiwgXCJ0cmVmXCIsIFwidHNwYW5cIixcbiAgICAgICAgXCJ1bmtub3duXCIsIFwidXNlXCIsXG4gICAgICAgIFwidmlkZW9cIiwgXCJ2aWV3XCIsIFwidmtlcm5cIlxuICAgICAgXSxcbiAgICAgIHN2Z0F0dHJpYnV0ZU5hbWVzID0gW1xuICAgICAgICBcImFjY2VudC1oZWlnaHRcIiwgXCJhY2N1bXVsYXRlXCIsIFwiYWRkaXRpdmVcIiwgXCJhbGlnbm1lbnQtYmFzZWxpbmVcIiwgXCJhbHBoYWJldGljXCIsIFwiYW1wbGl0dWRlXCIsIFwiYXJhYmljLWZvcm1cIiwgXCJhc2NlbnRcIiwgXCJhdHRyaWJ1dGVOYW1lXCIsIFwiYXR0cmlidXRlVHlwZVwiLCBcImF6aW11dGhcIixcbiAgICAgICAgXCJiYW5kd2lkdGhcIiwgXCJiYXNlRnJlcXVlbmN5XCIsIFwiYmFzZVByb2ZpbGVcIiwgXCJiYXNlbGluZS1zaGlmdFwiLCBcImJib3hcIiwgXCJiZWdpblwiLCBcImJpYXNcIiwgXCJieVwiLFxuICAgICAgICBcImNhbGNNb2RlXCIsIFwiY2FwLWhlaWdodFwiLCBcImNsaXBcIiwgXCJjbGFzc05hbWVcIiwgXCJjbGlwLXBhdGhcIiwgXCJjbGlwLXJ1bGVcIiwgXCJjbGlwUGF0aFVuaXRzXCIsIFwiY29sb3JcIiwgXCJjb2xvci1pbnRlcnBvbGF0aW9uXCIsIFwiY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzXCIsIFwiY29sb3ItcHJvZmlsZVwiLCBcImNvbG9yLXJlbmRlcmluZ1wiLCBcImNvbnRlbnRTY3JpcHRUeXBlXCIsIFwiY29udGVudFN0eWxlVHlwZVwiLCBcImNyb3Nzb3JpZ2luXCIsIFwiY3Vyc29yXCIsIFwiY3hcIiwgXCJjeVwiLFxuICAgICAgICBcImRcIiwgXCJkZWZhdWx0QWN0aW9uXCIsIFwiZGVzY2VudFwiLCBcImRpZmZ1c2VDb25zdGFudFwiLCBcImRpcmVjdGlvblwiLCBcImRpc3BsYXlcIiwgXCJkaXZpc29yXCIsIFwiZG9taW5hbnQtYmFzZWxpbmVcIiwgXCJkb3dubG9hZFwiLCBcImR1clwiLCBcImR4XCIsIFwiZHlcIixcbiAgICAgICAgXCJlZGdlTW9kZVwiLCBcImVkaXRhYmxlXCIsIFwiZWxldmF0aW9uXCIsIFwiZW5hYmxlLWJhY2tncm91bmRcIiwgXCJlbmRcIiwgXCJldmVudFwiLCBcImV4cG9uZW50XCIsIFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFxuICAgICAgICBcImZpbGxcIiwgXCJmaWxsLW9wYWNpdHlcIiwgXCJmaWxsLXJ1bGVcIiwgXCJmaWx0ZXJcIiwgXCJmaWx0ZXJSZXNcIiwgXCJmaWx0ZXJVbml0c1wiLCBcImZsb29kLWNvbG9yXCIsIFwiZmxvb2Qtb3BhY2l0eVwiLCBcImZvY3VzSGlnaGxpZ2h0XCIsIFwiZm9jdXNhYmxlXCIsIFwiZm9udC1mYW1pbHlcIiwgXCJmb250LXNpemVcIiwgXCJmb250LXNpemUtYWRqdXN0XCIsIFwiZm9udC1zdHJldGNoXCIsIFwiZm9udC1zdHlsZVwiLCBcImZvbnQtdmFyaWFudFwiLCBcImZvbnQtd2VpZ2h0XCIsIFwiZm9ybWF0XCIsIFwiZnJcIiwgXCJmcm9tXCIsIFwiZnhcIiwgXCJmeVwiLFxuICAgICAgICBcImcxXCIsIFwiZzJcIiwgXCJnbHlwaC1uYW1lXCIsIFwiZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbFwiLCBcImdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsXCIsIFwiZ2x5cGhSZWZcIiwgXCJncmFkaWVudFRyYW5zZm9ybVwiLCBcImdyYWRpZW50VW5pdHNcIixcbiAgICAgICAgXCJoYW5kbGVyXCIsIFwiaGFuZ2luZ1wiLCBcImhhdGNoQ29udGVudFVuaXRzXCIsIFwiaGF0Y2hVbml0c1wiLCBcImhlaWdodFwiLCBcImhvcml6LWFkdi14XCIsIFwiaG9yaXotb3JpZ2luLXhcIiwgXCJob3Jpei1vcmlnaW4teVwiLCBcImhyZWZcIiwgXCJocmVmbGFuZ1wiLFxuICAgICAgICBcImlkXCIsIFwiaWRlb2dyYXBoaWNcIiwgXCJpbWFnZS1yZW5kZXJpbmdcIiwgXCJpblwiLCBcImluMlwiLCBcImluaXRpYWxWaXNpYmlsaXR5XCIsIFwiaW50ZXJjZXB0XCIsXG4gICAgICAgIFwia1wiLCBcImsxXCIsIFwiazJcIiwgXCJrM1wiLCBcIms0XCIsIFwia2VybmVsTWF0cml4XCIsIFwia2VybmVsVW5pdExlbmd0aFwiLCBcImtlcm5pbmdcIiwgXCJrZXlQb2ludHNcIiwgXCJrZXlTcGxpbmVzXCIsIFwia2V5VGltZXNcIixcbiAgICAgICAgXCJsZW5ndGhBZGp1c3RcIiwgXCJsZXR0ZXItc3BhY2luZ1wiLCBcImxpZ2h0aW5nLWNvbG9yXCIsIFwibGltaXRpbmdDb25lQW5nbGVcIiwgXCJsb2NhbFwiLFxuICAgICAgICBcIm1hcmtlci1lbmRcIiwgXCJtYXJrZXItbWlkXCIsIFwibWFya2VyLXN0YXJ0XCIsIFwibWFya2VySGVpZ2h0XCIsIFwibWFya2VyVW5pdHNcIiwgXCJtYXJrZXJXaWR0aFwiLCBcIm1hc2tcIiwgXCJtYXNrQ29udGVudFVuaXRzXCIsIFwibWFza1VuaXRzXCIsIFwibWF0aGVtYXRpY2FsXCIsIFwibWF4XCIsIFwibWVkaWFcIiwgXCJtZWRpYUNoYXJhY3RlckVuY29kaW5nXCIsIFwibWVkaWFDb250ZW50RW5jb2RpbmdzXCIsIFwibWVkaWFTaXplXCIsIFwibWVkaWFUaW1lXCIsIFwibWV0aG9kXCIsIFwibWluXCIsIFwibW9kZVwiLFxuICAgICAgICBcIm5hbWVcIiwgXCJuYXYtZG93blwiLCBcIm5hdi1kb3duLWxlZnRcIiwgXCJuYXYtZG93bi1yaWdodFwiLCBcIm5hdi1sZWZ0XCIsIFwibmF2LW5leHRcIiwgXCJuYXYtcHJldlwiLCBcIm5hdi1yaWdodFwiLCBcIm5hdi11cFwiLCBcIm5hdi11cC1sZWZ0XCIsIFwibmF2LXVwLXJpZ2h0XCIsIFwibnVtT2N0YXZlc1wiLFxuICAgICAgICBcIm9ic2VydmVyXCIsIFwib2Zmc2V0XCIsIFwib3BhY2l0eVwiLCBcIm9wZXJhdG9yXCIsIFwib3JkZXJcIiwgXCJvcmllbnRcIiwgXCJvcmllbnRhdGlvblwiLCBcIm9yaWdpblwiLCBcIm92ZXJmbG93XCIsIFwib3ZlcmxheVwiLCBcIm92ZXJsaW5lLXBvc2l0aW9uXCIsIFwib3ZlcmxpbmUtdGhpY2tuZXNzXCIsXG4gICAgICAgIFwicGFub3NlLTFcIiwgXCJwYXRoXCIsIFwicGF0aExlbmd0aFwiLCBcInBhdHRlcm5Db250ZW50VW5pdHNcIiwgXCJwYXR0ZXJuVHJhbnNmb3JtXCIsIFwicGF0dGVyblVuaXRzXCIsIFwicGhhc2VcIiwgXCJwaXRjaFwiLCBcInBsYXliYWNrT3JkZXJcIiwgXCJwbGF5YmFja29yZGVyXCIsIFwicG9pbnRlci1ldmVudHNcIiwgXCJwb2ludHNcIiwgXCJwb2ludHNBdFhcIiwgXCJwb2ludHNBdFlcIiwgXCJwb2ludHNBdFpcIiwgXCJwcmVzZXJ2ZUFscGhhXCIsIFwicHJlc2VydmVBc3BlY3RSYXRpb1wiLCBcInByaW1pdGl2ZVVuaXRzXCIsIFwicHJvcGFnYXRlXCIsXG4gICAgICAgIFwiclwiLCBcInJhZGl1c1wiLCBcInJlZlhcIiwgXCJyZWZZXCIsIFwicmVuZGVyaW5nLWludGVudFwiLCBcInJlcGVhdENvdW50XCIsIFwicmVwZWF0RHVyXCIsIFwicmVxdWlyZWRFeHRlbnNpb25zXCIsIFwicmVxdWlyZWRGZWF0dXJlc1wiLCBcInJlcXVpcmVkRm9udHNcIiwgXCJyZXF1aXJlZEZvcm1hdHNcIiwgXCJyZXN0YXJ0XCIsIFwicmVzdWx0XCIsIFwicm90YXRlXCIsIFwicnhcIiwgXCJyeVwiLFxuICAgICAgICBcInNjYWxlXCIsIFwic2VlZFwiLCBcInNoYXBlLXJlbmRlcmluZ1wiLCBcInNpZGVcIiwgXCJzbG9wZVwiLCBcInNuYXBzaG90VGltZVwiLCBcInNwYWNpbmdcIiwgXCJzcGVjdWxhckNvbnN0YW50XCIsIFwic3BlY3VsYXJFeHBvbmVudFwiLCBcInNwcmVhZE1ldGhvZFwiLCBcInNyY1wiLCBcInN0YXJ0T2Zmc2V0XCIsIFwic3RkRGV2aWF0aW9uXCIsIFwic3RlbWhcIiwgXCJzdGVtdlwiLCBcInN0aXRjaFRpbGVzXCIsIFwic3RvcC1jb2xvclwiLCBcInN0b3Atb3BhY2l0eVwiLCBcInN0cmlrZXRocm91Z2gtcG9zaXRpb25cIiwgXCJzdHJpa2V0aHJvdWdoLXRoaWNrbmVzc1wiLCBcInN0cmluZ1wiLCBcInN0cm9rZVwiLCBcInN0cm9rZS1kYXNoYXJyYXlcIiwgXCJzdHJva2UtZGFzaG9mZnNldFwiLCBcInN0cm9rZS1saW5lY2FwXCIsIFwic3Ryb2tlLWxpbmVqb2luXCIsIFwic3Ryb2tlLW1pdGVybGltaXRcIiwgXCJzdHJva2Utb3BhY2l0eVwiLCBcInN0cm9rZS13aWR0aFwiLCBcInN0eWxlXCIsIFwic3VyZmFjZVNjYWxlXCIsIFwic3luY0JlaGF2aW9yXCIsIFwic3luY0JlaGF2aW9yRGVmYXVsdFwiLCBcInN5bmNNYXN0ZXJcIiwgXCJzeW5jVG9sZXJhbmNlXCIsIFwic3luY1RvbGVyYW5jZURlZmF1bHRcIiwgXCJzeXN0ZW1MYW5ndWFnZVwiLFxuICAgICAgICBcInRhYmxlVmFsdWVzXCIsIFwidGFyZ2V0XCIsIFwidGFyZ2V0WFwiLCBcInRhcmdldFlcIiwgXCJ0ZXh0LWFuY2hvclwiLCBcInRleHQtZGVjb3JhdGlvblwiLCBcInRleHQtcmVuZGVyaW5nXCIsIFwidGV4dExlbmd0aFwiLCBcInRpbWVsaW5lQmVnaW5cIiwgXCJ0aW1lbGluZWJlZ2luXCIsIFwidGl0bGVcIiwgXCJ0b1wiLCBcInRyYW5zZm9ybVwiLCBcInRyYW5zZm9ybUJlaGF2aW9yXCIsIFwidHlwZVwiLFxuICAgICAgICBcInUxXCIsIFwidTJcIiwgXCJ1bmRlcmxpbmUtcG9zaXRpb25cIiwgXCJ1bmRlcmxpbmUtdGhpY2tuZXNzXCIsIFwidW5pY29kZVwiLCBcInVuaWNvZGUtYmlkaVwiLCBcInVuaWNvZGUtcmFuZ2VcIiwgXCJ1bml0cy1wZXItZW1cIixcbiAgICAgICAgXCJ2LWFscGhhYmV0aWNcIiwgXCJ2LWhhbmdpbmdcIiwgXCJ2LWlkZW9ncmFwaGljXCIsIFwidi1tYXRoZW1hdGljYWxcIiwgXCJ2YWx1ZXNcIiwgXCJ2ZXJzaW9uXCIsIFwidmVydC1hZHYteVwiLCBcInZlcnQtb3JpZ2luLXhcIiwgXCJ2ZXJ0LW9yaWdpbi15XCIsIFwidmlld0JveFwiLCBcInZpZXdUYXJnZXRcIiwgXCJ2aXNpYmlsaXR5XCIsXG4gICAgICAgIFwid2lkdGhcIiwgXCJ3aWR0aHNcIiwgXCJ3b3JkLXNwYWNpbmdcIiwgXCJ3cml0aW5nLW1vZGVcIixcbiAgICAgICAgXCJ4XCIsIFwieC1oZWlnaHRcIiwgXCJ4MVwiLCBcIngyXCIsIFwieENoYW5uZWxTZWxlY3RvclwiLFxuICAgICAgICBcInlcIiwgXCJ5MVwiLCBcInkyXCIsIFwieUNoYW5uZWxTZWxlY3RvclwiLFxuICAgICAgICBcInpcIiwgXCJ6b29tQW5kUGFuXCJcbiAgICAgIF0sXG4gICAgICBodG1sQXR0cmlidXRlTmFtZXMgPSBbXG4gICAgICAgIFwiYWNjZXB0XCIsIFwiYWNjZXB0Q2hhcnNldFwiLCBcImFjY2Vzc0tleVwiLCBcImFjdGlvblwiLCBcImFsbG93XCIsIFwiYWxsb3dGdWxsU2NyZWVuXCIsIFwiYWxsb3dUcmFuc3BhcmVuY3lcIiwgXCJhbHRcIiwgXCJhc3luY1wiLCBcImF1dG9Db21wbGV0ZVwiLCBcImF1dG9Gb2N1c1wiLCBcImF1dG9QbGF5XCIsXG4gICAgICAgIFwiY2FwdHVyZVwiLCBcImNlbGxQYWRkaW5nXCIsIFwiY2VsbFNwYWNpbmdcIiwgXCJjaGFsbGVuZ2VcIiwgXCJjaGFyU2V0XCIsIFwiY2hlY2tlZFwiLCBcImNpdGVcIiwgXCJjbGFzc0lEXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29sU3BhblwiLCBcImNvbHNcIiwgXCJjb250ZW50XCIsIFwiY29udGVudEVkaXRhYmxlXCIsIFwiY29udGV4dE1lbnVcIiwgXCJjb250cm9sc1wiLCBcImNvb3Jkc1wiLCBcImNyb3NzT3JpZ2luXCIsXG4gICAgICAgIFwiZGF0YVwiLCBcImRhdGVUaW1lXCIsIFwiZGVmYXVsdFwiLCBcImRlZmVyXCIsIFwiZGlyXCIsIFwiZGlzYWJsZWRcIiwgXCJkb3dubG9hZFwiLCBcImRyYWdnYWJsZVwiLFxuICAgICAgICBcImVuY1R5cGVcIixcbiAgICAgICAgXCJmb3JtXCIsIFwiZm9ybUFjdGlvblwiLCBcImZvcm1FbmNUeXBlXCIsIFwiZm9ybU1ldGhvZFwiLCBcImZvcm1Ob1ZhbGlkYXRlXCIsIFwiZm9ybVRhcmdldFwiLCBcImZyYW1lQm9yZGVyXCIsXG4gICAgICAgIFwiaGVhZGVyc1wiLCBcImhlaWdodFwiLCBcImhpZGRlblwiLCBcImhpZ2hcIiwgXCJocmVmXCIsIFwiaHJlZkxhbmdcIiwgXCJodG1sRm9yXCIsIFwiaHR0cEVxdWl2XCIsXG4gICAgICAgIFwiaWNvblwiLCBcImlkXCIsIFwiaW5wdXRNb2RlXCIsIFwiaW50ZWdyaXR5XCIsIFwiaXNcIixcbiAgICAgICAgXCJrZXlQYXJhbXNcIiwgXCJrZXlUeXBlXCIsIFwia2luZFwiLFxuICAgICAgICBcImxhYmVsXCIsIFwibGFuZ1wiLCBcImxpc3RcIiwgXCJsb29wXCIsIFwibG93XCIsXG4gICAgICAgIFwibWFuaWZlc3RcIiwgXCJtYXJnaW5IZWlnaHRcIiwgXCJtYXJnaW5XaWR0aFwiLCBcIm1heFwiLCBcIm1heExlbmd0aFwiLCBcIm1lZGlhXCIsIFwibWVkaWFHcm91cFwiLCBcIm1ldGhvZFwiLCBcIm1pblwiLCBcIm1pbkxlbmd0aFwiLCBcIm11bHRpcGxlXCIsIFwibXV0ZWRcIixcbiAgICAgICAgXCJuYW1lXCIsIFwibm9WYWxpZGF0ZVwiLCBcIm5vbmNlXCIsXG4gICAgICAgIFwib3BlblwiLCBcIm9wdGltdW1cIixcbiAgICAgICAgXCJwYXR0ZXJuXCIsIFwicGxhY2Vob2xkZXJcIiwgXCJwb3N0ZXJcIiwgXCJwcmVsb2FkXCIsIFwicHJvZmlsZVwiLFxuICAgICAgICBcInJhZGlvR3JvdXBcIiwgXCJyZWFkT25seVwiLCBcInJlbFwiLCBcInJlcXVpcmVkXCIsIFwicmV2ZXJzZWRcIiwgXCJyb2xlXCIsIFwicm93U3BhblwiLCBcInJvd3NcIixcbiAgICAgICAgXCJzYW5kYm94XCIsIFwic2NvcGVcIiwgXCJzY29wZWRcIiwgXCJzY3JvbGxpbmdcIiwgXCJzZWFtbGVzc1wiLCBcInNlbGVjdGVkXCIsIFwic2hhcGVcIiwgXCJzaXplXCIsIFwic2l6ZXNcIiwgXCJzcGFuXCIsIFwic3BlbGxDaGVja1wiLCBcInNyY1wiLCBcInNyY0RvY1wiLCBcInNyY0xhbmdcIiwgXCJzcmNTZXRcIiwgXCJzdGFydFwiLCBcInN0ZXBcIiwgXCJzdHlsZVwiLCBcInN1bW1hcnlcIixcbiAgICAgICAgXCJ0YWJJbmRleFwiLCBcInRhcmdldFwiLCBcInRpdGxlXCIsIFwidHlwZVwiLFxuICAgICAgICBcInVzZU1hcFwiLFxuICAgICAgICBcInZhbHVlXCIsXG4gICAgICAgIFwid2lkdGhcIixcbiAgICAgICAgXCJ3bW9kZVwiLFxuICAgICAgICBcIndyYXBcIlxuICAgICAgXTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcHVzaCB9IGZyb20gXCIuLi91dGlsaXRpZXMvYXJyYXlcIjtcbmltcG9ydCB7IFdJTERDQVJEIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZWxlbWVudHNGcm9tRE9NRWxlbWVudHMoZG9tRWxlbWVudHMpIHtcbiAgY29uc3QgZG9tRWxlbWVudHNXaXRoRWxlbWVudHMgPSBmaWx0ZXJET01Ob2Rlcyhkb21FbGVtZW50cywgKGRvbUVsZW1lbnQpID0+IChkb21FbGVtZW50Ll9fZWxlbWVudF9fICE9PSB1bmRlZmluZWQpKSxcbiAgICAgICAgZWxlbWVudHMgPSBkb21FbGVtZW50c1dpdGhFbGVtZW50cy5tYXAoKGRvbUVsZW1lbnQpID0+IGRvbUVsZW1lbnQuX19lbGVtZW50X18pO1xuXG4gIHJldHVybiBlbGVtZW50cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzY2VuZGFudERPTU5vZGVzRnJvbURPTU5vZGUoZG9tTm9kZSwgaGVpZ2h0LCBhc2NlbmRhbnRET01Ob2RlcyA9IFtdKSB7XG4gIGlmIChoZWlnaHQgPiAwKSB7XG4gICAgY29uc3QgcGFyZW50RE9NTm9kZSA9IGRvbU5vZGUucGFyZW50RWxlbWVudDsgIC8vL1xuXG4gICAgaWYgKHBhcmVudERPTU5vZGUgIT09IG51bGwpIHtcbiAgICAgIGFzY2VuZGFudERPTU5vZGVzLnB1c2gocGFyZW50RE9NTm9kZSk7XG5cbiAgICAgIGhlaWdodC0tO1xuXG4gICAgICBhc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlKHBhcmVudERPTU5vZGUsIGhlaWdodCwgYXNjZW5kYW50RE9NTm9kZXMpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhc2NlbmRhbnRET01Ob2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlKGRvbU5vZGUsIGRlcHRoLCBkZXNjZW5kYW50RE9NTm9kZXMgPSBbXSkge1xuICBpZiAoZGVwdGggPiAwKSB7XG4gICAgY29uc3QgY2hpbGRET01Ob2RlcyA9IGRvbU5vZGUuY2hpbGROb2RlczsgIC8vL1xuXG4gICAgcHVzaChkZXNjZW5kYW50RE9NTm9kZXMsIGNoaWxkRE9NTm9kZXMpO1xuXG4gICAgZGVwdGgtLTtcblxuICAgIGNoaWxkRE9NTm9kZXMuZm9yRWFjaCgoY2hpbGRET01Ob2RlKSA9PiBkZXNjZW5kYW50RE9NTm9kZXNGcm9tRE9NTm9kZShjaGlsZERPTU5vZGUsIGRlcHRoLCBkZXNjZW5kYW50RE9NTm9kZXMpKTtcbiAgfVxuXG4gIHJldHVybiBkZXNjZW5kYW50RE9NTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJET01Ob2Rlc0J5U2VsZWN0b3IoZG9tTm9kZXMsIHNlbGVjdG9yKSB7XG4gIGNvbnN0IGZpbHRlcmVkRE9NTm9kZXMgPSBmaWx0ZXJET01Ob2Rlcyhkb21Ob2RlcywgKGRvbU5vZGUpID0+IGRvbU5vZGVNYXRjaGVzU2VsZWN0b3IoZG9tTm9kZSwgc2VsZWN0b3IpKTtcblxuICByZXR1cm4gZmlsdGVyZWRET01Ob2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRvbU5vZGVNYXRjaGVzU2VsZWN0b3IoZG9tTm9kZSwgc2VsZWN0b3IpIHtcbiAgY29uc3QgZG9tTm9kZVR5cGUgPSBkb21Ob2RlLm5vZGVUeXBlO1xuXG4gIHN3aXRjaCAoZG9tTm9kZVR5cGUpIHtcbiAgICBjYXNlIE5vZGUuRUxFTUVOVF9OT0RFOiB7XG4gICAgICBjb25zdCBkb21FbGVtZW50ID0gZG9tTm9kZTsgLy8vXG5cbiAgICAgIHJldHVybiBkb21FbGVtZW50Lm1hdGNoZXMoc2VsZWN0b3IpO1xuICAgIH1cblxuICAgIGNhc2UgTm9kZS5URVhUX05PREU6IHtcbiAgICAgIGlmIChzZWxlY3RvciA9PT0gV0lMRENBUkQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVyRE9NTm9kZXMoZG9tTm9kZXMsIHRlc3QpIHtcbiAgY29uc3QgZmlsdGVyZWRET01Ob2RlcyA9IFtdLFxuICAgICAgICBkb21Ob2Rlc0xlbmd0aCA9IGRvbU5vZGVzLmxlbmd0aDtcblxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZG9tTm9kZXNMZW5ndGg7IGluZGV4KyspIHtcbiAgICBjb25zdCBkb21Ob2RlID0gZG9tTm9kZXNbaW5kZXhdLFxuICAgICAgICAgIHJlc3VsdCA9IHRlc3QoZG9tTm9kZSk7XG5cbiAgICBpZiAocmVzdWx0KSB7XG4gICAgICBmaWx0ZXJlZERPTU5vZGVzLnB1c2goZG9tTm9kZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZpbHRlcmVkRE9NTm9kZXM7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGZpcnN0IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9hcnJheVwiO1xuaW1wb3J0IHsgV0lMRENBUkQgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBkb21Ob2RlTWF0Y2hlc1NlbGVjdG9yLCBlbGVtZW50c0Zyb21ET01FbGVtZW50cywgZmlsdGVyRE9NTm9kZXNCeVNlbGVjdG9yLCBhc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlLCBkZXNjZW5kYW50RE9NTm9kZXNGcm9tRE9NTm9kZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvZG9tXCI7XG5cbmZ1bmN0aW9uIGdldFBhcmVudEVsZW1lbnQoc2VsZWN0b3IgPSBXSUxEQ0FSRCkge1xuICBsZXQgcGFyZW50RWxlbWVudCA9IG51bGw7XG5cbiAgY29uc3QgcGFyZW50RE9NRWxlbWVudCA9IHRoaXMuZG9tRWxlbWVudC5wYXJlbnRFbGVtZW50O1xuXG4gIGlmIChwYXJlbnRET01FbGVtZW50ICE9PSBudWxsKSB7XG4gICAgaWYgKHBhcmVudERPTUVsZW1lbnQubWF0Y2hlcyhzZWxlY3RvcikpIHtcbiAgICAgIGNvbnN0IHBhcmVudERPTUVsZW1lbnRzID0gW3BhcmVudERPTUVsZW1lbnRdLFxuICAgICAgICAgICAgcGFyZW50RWxlbWVudHMgPSBlbGVtZW50c0Zyb21ET01FbGVtZW50cyhwYXJlbnRET01FbGVtZW50cyksXG4gICAgICAgICAgICBmaXJzdFBhcmVudEVsZW1lbnQgPSBmaXJzdChwYXJlbnRFbGVtZW50cyk7XG5cbiAgICAgIHBhcmVudEVsZW1lbnQgPSBmaXJzdFBhcmVudEVsZW1lbnQgfHwgbnVsbDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGFyZW50RWxlbWVudDtcbn1cblxuZnVuY3Rpb24gZ2V0Q2hpbGRFbGVtZW50cyhzZWxlY3RvciA9IFdJTERDQVJEKSB7XG4gIGNvbnN0IGNoaWxkRE9NTm9kZXMgPSB0aGlzLmRvbUVsZW1lbnQuY2hpbGROb2RlcyxcbiAgICAgICAgY2hpbGRET01FbGVtZW50cyA9IGZpbHRlckRPTU5vZGVzQnlTZWxlY3RvcihjaGlsZERPTU5vZGVzLCBzZWxlY3RvciksXG4gICAgICAgIGNoaWxkRWxlbWVudHMgPSBlbGVtZW50c0Zyb21ET01FbGVtZW50cyhjaGlsZERPTUVsZW1lbnRzKTtcblxuICByZXR1cm4gY2hpbGRFbGVtZW50cztcbn1cblxuZnVuY3Rpb24gZ2V0QXNjZW5kYW50RWxlbWVudHMoc2VsZWN0b3IgPSBXSUxEQ0FSRCwgbWF4aW11bUhlaWdodCA9IEluZmluaXR5KSB7XG4gIGNvbnN0IGhlaWdodCA9IG1heGltdW1IZWlnaHQsIC8vL1xuICAgICAgICBkb21Ob2RlID0gdGhpcy5kb21FbGVtZW50LCAgLy8vXG4gICAgICAgIGFzY2VuZGFudERPTU5vZGVzID0gYXNjZW5kYW50RE9NTm9kZXNGcm9tRE9NTm9kZShkb21Ob2RlLCBoZWlnaHQpLFxuICAgICAgICBhc2NlbmRhbnRET01FbGVtZW50cyA9IGZpbHRlckRPTU5vZGVzQnlTZWxlY3Rvcihhc2NlbmRhbnRET01Ob2Rlcywgc2VsZWN0b3IpLFxuICAgICAgICBhc2NlbmRhbnRFbGVtZW50cyA9IGVsZW1lbnRzRnJvbURPTUVsZW1lbnRzKGFzY2VuZGFudERPTUVsZW1lbnRzKTtcblxuICByZXR1cm4gYXNjZW5kYW50RWxlbWVudHM7XG59XG5cbmZ1bmN0aW9uIGdldERlc2NlbmRhbnRFbGVtZW50cyhzZWxlY3RvciA9IFdJTERDQVJELCBtYXhpbXVtRGVwdGggPSBJbmZpbml0eSkge1xuICBjb25zdCBkZXB0aCA9IG1heGltdW1EZXB0aCwgLy8vXG4gICAgICAgIGRvbU5vZGUgPSB0aGlzLmRvbUVsZW1lbnQsICAvLy9cbiAgICAgICAgZGVzY2VuZGFudERPTU5vZGVzID0gZGVzY2VuZGFudERPTU5vZGVzRnJvbURPTU5vZGUoZG9tTm9kZSwgZGVwdGgpLFxuICAgICAgICBkZXNjZW5kYW50RE9NRWxlbWVudHMgPSBmaWx0ZXJET01Ob2Rlc0J5U2VsZWN0b3IoZGVzY2VuZGFudERPTU5vZGVzLCBzZWxlY3RvciksXG4gICAgICAgIGRlc2NlbmRhbnRFbGVtZW50cyA9IGVsZW1lbnRzRnJvbURPTUVsZW1lbnRzKGRlc2NlbmRhbnRET01FbGVtZW50cyk7XG5cbiAgcmV0dXJuIGRlc2NlbmRhbnRFbGVtZW50cztcbn1cblxuZnVuY3Rpb24gZ2V0TmV4dFNpYmxpbmdFbGVtZW50KHNlbGVjdG9yID0gV0lMRENBUkQpIHtcbiAgbGV0IG5leHRTaWJsaW5nRWxlbWVudCA9IG51bGw7XG5cbiAgY29uc3QgbmV4dFNpYmxpbmdET01Ob2RlID0gdGhpcy5kb21FbGVtZW50Lm5leHRTaWJsaW5nO1xuXG4gIGlmICgobmV4dFNpYmxpbmdET01Ob2RlICE9PSBudWxsKSAmJiBkb21Ob2RlTWF0Y2hlc1NlbGVjdG9yKG5leHRTaWJsaW5nRE9NTm9kZSwgc2VsZWN0b3IpKSB7XG4gICAgbmV4dFNpYmxpbmdFbGVtZW50ID0gbmV4dFNpYmxpbmdET01Ob2RlLl9fZWxlbWVudF9fIHx8IG51bGw7XG4gIH1cblxuICByZXR1cm4gbmV4dFNpYmxpbmdFbGVtZW50O1xufVxuXG5mdW5jdGlvbiBnZXRQcmV2aW91c1NpYmxpbmdFbGVtZW50KHNlbGVjdG9yID0gV0lMRENBUkQpIHtcbiAgbGV0IHByZXZpb3VzU2libGluZ0VsZW1lbnQgPSBudWxsO1xuXG4gIGNvbnN0IHByZXZpb3VzU2libGluZ0RPTU5vZGUgPSB0aGlzLmRvbUVsZW1lbnQucHJldmlvdXNTaWJsaW5nOyAgLy8vXG5cbiAgaWYgKChwcmV2aW91c1NpYmxpbmdET01Ob2RlICE9PSBudWxsKSAmJiBkb21Ob2RlTWF0Y2hlc1NlbGVjdG9yKHByZXZpb3VzU2libGluZ0RPTU5vZGUsIHNlbGVjdG9yKSkge1xuICAgIHByZXZpb3VzU2libGluZ0VsZW1lbnQgPSBwcmV2aW91c1NpYmxpbmdET01Ob2RlLl9fZWxlbWVudF9fIHx8IG51bGw7XG4gIH1cblxuICByZXR1cm4gcHJldmlvdXNTaWJsaW5nRWxlbWVudDtcbn1cblxuY29uc3QgZWxlbWVudE1peGlucyA9IHtcbiAgZ2V0UGFyZW50RWxlbWVudCxcbiAgZ2V0Q2hpbGRFbGVtZW50cyxcbiAgZ2V0QXNjZW5kYW50RWxlbWVudHMsXG4gIGdldERlc2NlbmRhbnRFbGVtZW50cyxcbiAgZ2V0TmV4dFNpYmxpbmdFbGVtZW50LFxuICBnZXRQcmV2aW91c1NpYmxpbmdFbGVtZW50XG59O1xuXG5leHBvcnQgZGVmYXVsdCBlbGVtZW50TWl4aW5zO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgT2Zmc2V0IGZyb20gXCIuL29mZnNldFwiO1xuaW1wb3J0IEJvdW5kcyBmcm9tIFwiLi9ib3VuZHNcIjtcbmltcG9ydCBlbGVtZW50TWl4aW5zIGZyb20gXCIuL21peGlucy9lbGVtZW50XCI7XG5cbmNsYXNzIFRleHRFbGVtZW50IHtcbiAgY29uc3RydWN0b3IodGV4dCkge1xuICAgIHRoaXMuZG9tRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpOyAvLy9cblxuICAgIHRoaXMuZG9tRWxlbWVudC5fX2VsZW1lbnRfXyA9IHRoaXM7XG4gIH1cblxuICBnZXRUZXh0KCkge1xuICAgIGNvbnN0IG5vZGVWYWx1ZSA9IHRoaXMuZG9tRWxlbWVudC5ub2RlVmFsdWUsXG4gICAgICAgICAgdGV4dCA9IG5vZGVWYWx1ZTsgLy8vXG5cbiAgICByZXR1cm4gdGV4dDtcbiAgfVxuXG4gIHNldFRleHQodGV4dCkge1xuICAgIGNvbnN0IG5vZGVWYWx1ZSA9IHRleHQ7IC8vL1xuXG4gICAgdGhpcy5kb21FbGVtZW50Lm5vZGVWYWx1ZSA9IG5vZGVWYWx1ZTtcbiAgfVxuXG4gIGdldE9mZnNldCgpIHtcbiAgICBjb25zdCB0b3AgPSB0aGlzLmRvbUVsZW1lbnQub2Zmc2V0VG9wLCAgLy8vXG4gICAgICAgICAgbGVmdCA9IHRoaXMuZG9tRWxlbWVudC5vZmZzZXRMZWZ0LCAgLy8vXG4gICAgICAgICAgb2Zmc2V0ID0gbmV3IE9mZnNldCh0b3AsIGxlZnQpO1xuXG4gICAgcmV0dXJuIG9mZnNldDtcbiAgfVxuXG4gIGdldEJvdW5kcygpIHtcbiAgICBjb25zdCBib3VuZGluZ0NsaWVudFJlY3QgPSB0aGlzLmRvbUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICAgICAgYm91bmRzID0gQm91bmRzLmZyb21Cb3VuZGluZ0NsaWVudFJlY3QoYm91bmRpbmdDbGllbnRSZWN0KTtcblxuICAgIHJldHVybiBib3VuZHM7XG4gIH1cblxuICBnZXRXaWR0aCgpIHtcbiAgICBjb25zdCBjbGllbnRXaWR0aCA9IHRoaXMuZG9tRWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICAgICAgICB3aWR0aCA9IGNsaWVudFdpZHRoOyAgLy8vXG5cbiAgICByZXR1cm4gd2lkdGg7XG4gIH1cblxuICBnZXRIZWlnaHQoKSB7XG4gICAgY29uc3QgY2xpZW50SGVpZ2h0ID0gdGhpcy5kb21FbGVtZW50LmNsaWVudEhlaWdodCxcbiAgICAgICAgICBoZWlnaHQgPSBjbGllbnRIZWlnaHQ7ICAvLy9cblxuICAgIHJldHVybiBoZWlnaHQ7XG4gIH1cblxuICBwcmVwZW5kVG8ocGFyZW50RWxlbWVudCkgeyBwYXJlbnRFbGVtZW50LnByZXBlbmQodGhpcyk7IH1cblxuICBhcHBlbmRUbyhwYXJlbnRFbGVtZW50KSB7IHBhcmVudEVsZW1lbnQuYXBwZW5kKHRoaXMpOyB9XG5cbiAgYWRkVG8ocGFyZW50RWxlbWVudCkgeyBwYXJlbnRFbGVtZW50LmFkZCh0aGlzKTsgfVxuXG4gIHJlbW92ZUZyb20ocGFyZW50RWxlbWVudCkgeyBwYXJlbnRFbGVtZW50LnJlbW92ZSh0aGlzKTsgfVxuXG4gIGluc2VydEJlZm9yZShzaWJsaW5nRWxlbWVudCkge1xuICAgIGNvbnN0IHBhcmVudERPTU5vZGUgPSBzaWJsaW5nRWxlbWVudC5kb21FbGVtZW50LnBhcmVudE5vZGUsXG4gICAgICAgICAgc2libGluZ0RPTUVsZW1lbnQgPSBzaWJsaW5nRWxlbWVudC5kb21FbGVtZW50O1xuXG4gICAgcGFyZW50RE9NTm9kZS5pbnNlcnRCZWZvcmUodGhpcy5kb21FbGVtZW50LCBzaWJsaW5nRE9NRWxlbWVudCk7XG4gIH1cblxuICBpbnNlcnRBZnRlcihzaWJsaW5nRWxlbWVudCkge1xuICAgIGNvbnN0IHBhcmVudERPTU5vZGUgPSBzaWJsaW5nRWxlbWVudC5kb21FbGVtZW50LnBhcmVudE5vZGUsXG4gICAgICAgICAgc2libGluZ0RPTUVsZW1lbnQgPSBzaWJsaW5nRWxlbWVudC5kb21FbGVtZW50O1xuXG4gICAgcGFyZW50RE9NTm9kZS5pbnNlcnRCZWZvcmUodGhpcy5kb21FbGVtZW50LCBzaWJsaW5nRE9NRWxlbWVudC5uZXh0U2libGluZyk7ICAvLy9cbiAgfVxuXG4gIHJlbW92ZSgpIHtcbiAgICB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlKCk7XG4gIH1cbn1cblxuT2JqZWN0LmFzc2lnbihUZXh0RWxlbWVudC5wcm90b3R5cGUsIGVsZW1lbnRNaXhpbnMpO1xuXG5leHBvcnQgZGVmYXVsdCBUZXh0RWxlbWVudDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRleHRFbGVtZW50IGZyb20gXCIuLi90ZXh0RWxlbWVudFwiO1xuXG5pbXBvcnQgeyBTVFJJTkcgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVGYWxzZXlFbGVtZW50cyhlbGVtZW50cykge1xuICBlbGVtZW50cyA9IGVsZW1lbnRzLnJlZHVjZSgoZWxlbWVudHMsIGVsZW1lbnQpID0+IHtcbiAgICBpZiAoZWxlbWVudCkge1xuICAgICAgZWxlbWVudHMucHVzaChlbGVtZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZWxlbWVudHM7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gZWxlbWVudHM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXBsYWNlU3RyaW5nc1dpdGhUZXh0RWxlbWVudHMoZWxlbWVudHMpIHtcbiAgZWxlbWVudHMgPSBlbGVtZW50cy5tYXAoKGVsZW1lbnQpID0+IHsgIC8vL1xuICAgIGlmICh0eXBlb2YgZWxlbWVudCA9PT0gU1RSSU5HKSB7XG4gICAgICBjb25zdCB0ZXh0ID0gZWxlbWVudCwgIC8vL1xuICAgICAgICAgICAgdGV4dEVsZW1lbnQgPSBuZXcgVGV4dEVsZW1lbnQodGV4dCk7XG5cbiAgICAgIGVsZW1lbnQgPSB0ZXh0RWxlbWVudDsgLy8vXG4gICAgfVxuXG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH0pO1xuXG4gIHJldHVybiBlbGVtZW50cztcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgY29tYmluZSwgcHJ1bmUgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL29iamVjdFwiO1xuaW1wb3J0IHsgZmlyc3QsIGd1YXJhbnRlZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvYXJyYXlcIjtcbmltcG9ydCB7IGlzSFRNTEF0dHJpYnV0ZU5hbWUsIGlzU1ZHQXR0cmlidXRlTmFtZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvbmFtZVwiO1xuaW1wb3J0IHsgcmVtb3ZlRmFsc2V5RWxlbWVudHMsIHJlcGxhY2VTdHJpbmdzV2l0aFRleHRFbGVtZW50cyB9IGZyb20gXCIuLi91dGlsaXRpZXMvZWxlbWVudHNcIjtcbmltcG9ydCB7IEZPUiwgQ0xBU1MsIE9CSkVDVCwgSFRNTF9GT1IsIENMQVNTX05BTUUsIEJPT0xFQU4sIEZVTkNUSU9OLCBTVkdfTkFNRVNQQUNFX1VSSSB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuZnVuY3Rpb24gYXBwbHlQcm9wZXJ0aWVzKHByb3BlcnRpZXMsIGRlZmF1bHRQcm9wZXJ0aWVzLCBpZ25vcmVkUHJvcGVydGllcykge1xuICB0aGlzLnByb3BlcnRpZXMgPSBjb21iaW5lKHByb3BlcnRpZXMsIGRlZmF1bHRQcm9wZXJ0aWVzKTtcblxuICBwcm9wZXJ0aWVzID0gcHJ1bmUodGhpcy5wcm9wZXJ0aWVzLCBpZ25vcmVkUHJvcGVydGllcyk7IC8vL1xuXG4gIGNvbnN0IHsgbmFtZXNwYWNlVVJJIH0gPSB0aGlzLmRvbUVsZW1lbnQsXG4gICAgICAgIHN2ZyA9IChuYW1lc3BhY2VVUkkgPT09IFNWR19OQU1FU1BBQ0VfVVJJKSwgLy8vXG4gICAgICAgIHByb3BlcnRpZXNLZXlzID0gT2JqZWN0LmtleXMocHJvcGVydGllcyksXG4gICAgICAgIG5hbWVzID0gcHJvcGVydGllc0tleXM7ICAvLy89XG5cbiAgbmFtZXMuZm9yRWFjaCgobmFtZSkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gcHJvcGVydGllc1tuYW1lXSxcbiAgICAgICAgICBuYW1lSGFuZGxlck5hbWUgPSBpc05hbWVIYW5kbGVyTmFtZShuYW1lKTtcblxuICAgIGlmIChuYW1lSGFuZGxlck5hbWUpIHtcbiAgICAgIGFkZEhhbmRsZXIodGhpcywgbmFtZSwgdmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBuYW1lQXR0cmlidXRlTmFtZSA9IGlzTmFtZUF0dHJpYnV0ZU5hbWUobmFtZSwgc3ZnKTtcblxuICAgICAgaWYgKG5hbWVBdHRyaWJ1dGVOYW1lKSB7XG4gICAgICAgIGFkZEF0dHJpYnV0ZSh0aGlzLCBuYW1lLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBjb25zdCBjaGlsZEVsZW1lbnRzID0gY2hpbGRFbGVtZW50c0Zyb21FbGVtZW50KHRoaXMpIHx8IHByb3BlcnRpZXMuY2hpbGRFbGVtZW50cywgIC8vL1xuICAgICAgICBjb250ZXh0ID0ge307XG5cbiAgY2hpbGRFbGVtZW50cy5mb3JFYWNoKChjaGlsZEVsZW1lbnQpID0+IHtcbiAgICB1cGRhdGVDb250ZXh0KGNoaWxkRWxlbWVudCwgY29udGV4dCk7XG5cbiAgICB0aGlzLmFkZChjaGlsZEVsZW1lbnQpO1xuICB9KTtcblxuICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xufVxuXG5mdW5jdGlvbiBnZXRQcm9wZXJ0aWVzKCkge1xuICByZXR1cm4gdGhpcy5wcm9wZXJ0aWVzO1xufVxuXG5mdW5jdGlvbiBnZXRDb250ZXh0KCkge1xuICByZXR1cm4gdGhpcy5jb250ZXh0O1xufVxuXG5mdW5jdGlvbiBhc3NpZ25Db250ZXh0KG5hbWVzLCB0aGVuRGVsZXRlKSB7XG4gIGNvbnN0IGFyZ3VtZW50c0xlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG5cbiAgaWYgKGFyZ3VtZW50c0xlbmd0aCA9PT0gMSkge1xuICAgIGNvbnN0IGZpcnN0QXJndW1lbnQgPSBmaXJzdChhcmd1bWVudHMpO1xuXG4gICAgaWYgKHR5cGVvZiBmaXJzdEFyZ3VtZW50ID09PSBCT09MRUFOKSB7XG4gICAgICBuYW1lcyA9IE9iamVjdC5rZXlzKHRoaXMuY29udGV4dCk7XG5cbiAgICAgIHRoZW5EZWxldGUgPSBmaXJzdEFyZ3VtZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGVuRGVsZXRlID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBpZiAoYXJndW1lbnRzTGVuZ3RoID09PSAwKSB7XG4gICAgbmFtZXMgPSBPYmplY3Qua2V5cyh0aGlzLmNvbnRleHQpO1xuXG4gICAgdGhlbkRlbGV0ZSA9IHRydWU7XG4gIH1cblxuICBuYW1lcy5mb3JFYWNoKChuYW1lKSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLmNvbnRleHRbbmFtZV0sXG4gICAgICAgICAgcHJvcGVydHlOYW1lID0gbmFtZSwgIC8vL1xuICAgICAgICAgIGRlc2NyaXB0b3IgPSB7XG4gICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgICB9O1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIHByb3BlcnR5TmFtZSwgZGVzY3JpcHRvcik7XG5cbiAgICBpZiAodGhlbkRlbGV0ZSkge1xuICAgICAgZGVsZXRlIHRoaXMuY29udGV4dFtuYW1lXTtcbiAgICB9XG4gIH0sIFtdKTtcbn1cblxuY29uc3QganN4TWl4aW5zID0ge1xuICBhcHBseVByb3BlcnRpZXMsXG4gIGdldFByb3BlcnRpZXMsXG4gIGdldENvbnRleHQsXG4gIGFzc2lnbkNvbnRleHRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGpzeE1peGlucztcblxuZnVuY3Rpb24gY2hpbGRFbGVtZW50c0Zyb21FbGVtZW50KGVsZW1lbnQpIHtcbiAgbGV0IGNoaWxkRWxlbWVudHMgPSBudWxsO1xuXG4gIGlmICh0eXBlb2YgZWxlbWVudC5jaGlsZEVsZW1lbnRzID09PSBGVU5DVElPTikge1xuICAgIGNoaWxkRWxlbWVudHMgPSBlbGVtZW50LmNoaWxkRWxlbWVudHMuY2FsbChlbGVtZW50KTtcblxuICAgIGNoaWxkRWxlbWVudHMgPSBndWFyYW50ZWUoY2hpbGRFbGVtZW50cyk7XG5cbiAgICBjaGlsZEVsZW1lbnRzID0gcmVtb3ZlRmFsc2V5RWxlbWVudHMoY2hpbGRFbGVtZW50cyk7XG5cbiAgICBjaGlsZEVsZW1lbnRzID0gcmVwbGFjZVN0cmluZ3NXaXRoVGV4dEVsZW1lbnRzKGNoaWxkRWxlbWVudHMpO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkRWxlbWVudHM7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUNvbnRleHQoY2hpbGRFbGVtZW50LCBjb250ZXh0KSB7XG4gIGNvbnN0IHBhcmVudENvbnRleHQgPSAodHlwZW9mIGNoaWxkRWxlbWVudC5wYXJlbnRDb250ZXh0ID09PSBGVU5DVElPTikgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZEVsZW1lbnQucGFyZW50Q29udGV4dCgpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZEVsZW1lbnQuY29udGV4dDsgLy8vXG5cbiAgT2JqZWN0LmFzc2lnbihjb250ZXh0LCBwYXJlbnRDb250ZXh0KTtcbn1cblxuZnVuY3Rpb24gYWRkSGFuZGxlcihlbGVtZW50LCBuYW1lLCB2YWx1ZSkge1xuICBjb25zdCBldmVudFR5cGUgPSBuYW1lLnN1YnN0cigyKS50b0xvd2VyQ2FzZSgpLCAvLy9cbiAgICAgICAgaGFuZGxlciA9IHZhbHVlOyAgLy8vXG5cbiAgZWxlbWVudC5vbihldmVudFR5cGUsIGhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRyaWJ1dGUoZWxlbWVudCwgbmFtZSwgdmFsdWUpIHtcbiAgaWYgKG5hbWUgPT09IENMQVNTX05BTUUpIHtcbiAgICBuYW1lID0gQ0xBU1M7XG4gIH1cblxuICBpZiAobmFtZSA9PT0gSFRNTF9GT1IpIHtcbiAgICBuYW1lID0gRk9SO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gT0JKRUNUKSB7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcblxuICAgIGtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBlbGVtZW50LmRvbUVsZW1lbnRbbmFtZV1ba2V5XSA9IHZhbHVlW2tleV07XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSBCT09MRUFOKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB2YWx1ZSA9IG5hbWU7IC8vL1xuXG4gICAgICBlbGVtZW50LmFkZEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGVsZW1lbnQuYWRkQXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc05hbWVIYW5kbGVyTmFtZShuYW1lKSB7XG4gIHJldHVybiAvXm9uLy50ZXN0KG5hbWUpO1xufVxuXG5mdW5jdGlvbiBpc05hbWVBdHRyaWJ1dGVOYW1lKG5hbWUsIHN2Zykge1xuICByZXR1cm4gc3ZnID8gaXNTVkdBdHRyaWJ1dGVOYW1lKG5hbWUpIDogaXNIVE1MQXR0cmlidXRlTmFtZShuYW1lKVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgT1BFTl9FVkVOVF9UWVBFID0gXCJvcGVuXCI7XG5leHBvcnQgY29uc3QgTU9WRV9FVkVOVF9UWVBFID0gXCJtb3ZlXCI7XG5leHBvcnQgY29uc3QgQkxVUl9FVkVOVF9UWVBFID0gXCJibHVyXCI7XG5leHBvcnQgY29uc3QgRFJBR19FVkVOVF9UWVBFID0gXCJkcmFnXCI7XG5leHBvcnQgY29uc3QgRFJPUF9FVkVOVF9UWVBFID0gXCJkcm9wXCI7XG5leHBvcnQgY29uc3QgV0hFRUxfRVZFTlRfVFlQRSA9IFwid2hlZWxcIjtcbmV4cG9ydCBjb25zdCBJTlBVVF9FVkVOVF9UWVBFID0gXCJpbnB1dFwiO1xuZXhwb3J0IGNvbnN0IEZPQ1VTX0VWRU5UX1RZUEUgPSBcImZvY3VzXCI7XG5leHBvcnQgY29uc3QgQ0xJQ0tfRVZFTlRfVFlQRSA9IFwiY2xpY2tcIjtcbmV4cG9ydCBjb25zdCBLRVlVUF9FVkVOVF9UWVBFID0gXCJrZXl1cFwiO1xuZXhwb3J0IGNvbnN0IFJFTU9WRV9FVkVOVF9UWVBFID0gXCJyZW1vdmVcIjtcbmV4cG9ydCBjb25zdCBDSEFOR0VfRVZFTlRfVFlQRSA9IFwiY2hhbmdlXCI7XG5leHBvcnQgY29uc3QgUkVTSVpFX0VWRU5UX1RZUEUgPSBcInJlc2l6ZVwiO1xuZXhwb3J0IGNvbnN0IFNDUk9MTF9FVkVOVF9UWVBFID0gXCJzY3JvbGxcIjtcbmV4cG9ydCBjb25zdCBLRVlET1dOX0VWRU5UX1RZUEUgPSBcImtleWRvd25cIjtcbmV4cG9ydCBjb25zdCBNT1VTRVVQX0VWRU5UX1RZUEUgPSBcIm1vdXNldXBcIjtcbmV4cG9ydCBjb25zdCBBVVhDTElDS19FVkVOVF9UWVBFID0gXCJhdXhjbGlja1wiO1xuZXhwb3J0IGNvbnN0IERSQUdfT1VUX0VWRU5UX1RZUEUgPSBcImRyYWdvdXRcIjtcbmV4cG9ydCBjb25zdCBNT1VTRU9VVF9FVkVOVF9UWVBFID0gXCJtb3VzZW91dFwiO1xuZXhwb3J0IGNvbnN0IERCTENMSUNLX0VWRU5UX1RZUEUgPSBcImRibGNsaWNrXCI7XG5leHBvcnQgY29uc3QgTU9VU0VPVkVSX0VWRU5UX1RZUEUgPSBcIm1vdXNlb3ZlclwiO1xuZXhwb3J0IGNvbnN0IE1PVVNFRE9XTl9FVkVOVF9UWVBFID0gXCJtb3VzZWRvd25cIjtcbmV4cG9ydCBjb25zdCBNT1VTRU1PVkVfRVZFTlRfVFlQRSA9IFwibW91c2Vtb3ZlXCI7XG5leHBvcnQgY29uc3QgRFJBR19PVkVSX0VWRU5UX1RZUEUgPSBcImRyYWdvdmVyXCI7XG5leHBvcnQgY29uc3QgU1RPUF9EUkFHX0VWRU5UX1RZUEUgPSBcInN0b3BkcmFnXCI7XG5leHBvcnQgY29uc3QgU1RBUlRfRFJBR19FVkVOVF9UWVBFID0gXCJzdGFydGRyYWdcIjtcbmV4cG9ydCBjb25zdCBDT05URVhUTUVOVV9FVkVOVF9UWVBFID0gXCJjb250ZXh0bWVudVwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIE9QRU5fRVZFTlRfVFlQRSxcbiAgTU9WRV9FVkVOVF9UWVBFLFxuICBCTFVSX0VWRU5UX1RZUEUsXG4gIERSQUdfRVZFTlRfVFlQRSxcbiAgRFJPUF9FVkVOVF9UWVBFLFxuICBXSEVFTF9FVkVOVF9UWVBFLFxuICBJTlBVVF9FVkVOVF9UWVBFLFxuICBGT0NVU19FVkVOVF9UWVBFLFxuICBDTElDS19FVkVOVF9UWVBFLFxuICBLRVlVUF9FVkVOVF9UWVBFLFxuICBSRU1PVkVfRVZFTlRfVFlQRSxcbiAgQ0hBTkdFX0VWRU5UX1RZUEUsXG4gIFJFU0laRV9FVkVOVF9UWVBFLFxuICBTQ1JPTExfRVZFTlRfVFlQRSxcbiAgS0VZRE9XTl9FVkVOVF9UWVBFLFxuICBNT1VTRVVQX0VWRU5UX1RZUEUsXG4gIEFVWENMSUNLX0VWRU5UX1RZUEUsXG4gIERSQUdfT1VUX0VWRU5UX1RZUEUsXG4gIE1PVVNFT1VUX0VWRU5UX1RZUEUsXG4gIERCTENMSUNLX0VWRU5UX1RZUEUsXG4gIE1PVVNFT1ZFUl9FVkVOVF9UWVBFLFxuICBNT1VTRURPV05fRVZFTlRfVFlQRSxcbiAgTU9VU0VNT1ZFX0VWRU5UX1RZUEUsXG4gIERSQUdfT1ZFUl9FVkVOVF9UWVBFLFxuICBTVE9QX0RSQUdfRVZFTlRfVFlQRSxcbiAgU1RBUlRfRFJBR19FVkVOVF9UWVBFLFxuICBDT05URVhUTUVOVV9FVkVOVF9UWVBFXG59O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBLRVlVUF9FVkVOVF9UWVBFLCBLRVlET1dOX0VWRU5UX1RZUEUgfSBmcm9tIFwiLi4vZXZlbnRUeXBlc1wiO1xuXG5mdW5jdGlvbiBvbktleVVwKGtleVVwSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uKEtFWVVQX0VWRU5UX1RZUEUsIGtleVVwSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmS2V5VXAoa2V5VXBIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKEtFWVVQX0VWRU5UX1RZUEUsIGtleVVwSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25LZXlEb3duKGtleURvd25IYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub24oS0VZRE9XTl9FVkVOVF9UWVBFLCBrZXlEb3duSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmS2V5RG93bihrZXlEb3duSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihLRVlET1dOX0VWRU5UX1RZUEUsIGtleURvd25IYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5jb25zdCBrZXlNaXhpbnMgPSB7XG4gIG9uS2V5VXAsXG4gIG9mZktleVVwLFxuICBvbktleURvd24sXG4gIG9mZktleURvd25cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGtleU1peGlucztcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ0xJQ0tfRVZFTlRfVFlQRSB9IGZyb20gXCIuLi9ldmVudFR5cGVzXCI7XG5cbmZ1bmN0aW9uIG9uQ2xpY2soY2xpY2tIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub24oQ0xJQ0tfRVZFTlRfVFlQRSwgY2xpY2tIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZDbGljayhjbGlja0hhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoQ0xJQ0tfRVZFTlRfVFlQRSwgY2xpY2tIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5jb25zdCBjbGlja01peGlucyA9IHtcbiAgb25DbGljayxcbiAgb2ZmQ2xpY2tcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsaWNrTWl4aW5zO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgcmV0dXJuIHRoaXMuc3RhdGU7XG59XG5cbmZ1bmN0aW9uIHNldFN0YXRlKHN0YXRlKSB7XG4gIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlU3RhdGUoc3RhdGUpIHtcbiAgT2JqZWN0LmFzc2lnbih0aGlzLnN0YXRlLCBzdGF0ZSk7XG59XG5cbmNvbnN0IHN0YXRlTWl4aW5zID0ge1xuICBnZXRTdGF0ZSxcbiAgc2V0U3RhdGUsXG4gIHVwZGF0ZVN0YXRlXG59O1xuXG5leHBvcnQgZGVmYXVsdCBzdGF0ZU1peGlucztcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IFRFWFRfSFRNTF9DT05URU5UX1RZUEUgPSBcInRleHQvaHRtbFwiO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBSRVNJWkVfRVZFTlRfVFlQRSB9IGZyb20gXCIuLi9ldmVudFR5cGVzXCI7XG5pbXBvcnQgeyBPQkpFQ1QsIEFCT1VUX0JMQU5LIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgVEVYVF9IVE1MX0NPTlRFTlRfVFlQRSB9IGZyb20gXCIuLi9jb250ZW50VHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG9uUmVzaXplKHJlc2l6ZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbihSRVNJWkVfRVZFTlRfVFlQRSwgcmVzaXplSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZXhwb3J0IGZ1bmN0aW9uIG9mZlJlc2l6ZShyZXNpemVIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKFJFU0laRV9FVkVOVF9UWVBFLCByZXNpemVIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBhZGRSZXNpemVPYmplY3QoKSB7XG4gIGNvbnN0IHJlc2l6ZU9iamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoT0JKRUNUKSxcbiAgICAgICAgc3R5bGUgPSBgZGlzcGxheTogYmxvY2s7IFxuICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxuICAgICAgICAgICAgICAgICB0b3A6IDA7IFxuICAgICAgICAgICAgICAgICBsZWZ0OiAwOyBcbiAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOyBcbiAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7IFxuICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyBcbiAgICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IFxuICAgICAgICAgICAgICAgICB6LWluZGV4OiAtMTtgLFxuICAgICAgICBkYXRhID0gQUJPVVRfQkxBTkssXG4gICAgICAgIHR5cGUgPSBURVhUX0hUTUxfQ09OVEVOVF9UWVBFO1xuXG4gIHJlc2l6ZU9iamVjdC5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBzdHlsZSk7XG5cbiAgcmVzaXplT2JqZWN0LmRhdGEgPSBkYXRhO1xuXG4gIHJlc2l6ZU9iamVjdC50eXBlID0gdHlwZTtcblxuICB0aGlzLl9fcmVzaXplT2JqZWN0X18gPSByZXNpemVPYmplY3Q7XG5cbiAgcmVzaXplT2JqZWN0Lm9ubG9hZCA9ICgpID0+IHJlc2l6ZU9iamVjdExvYWRIYW5kbGVyKHRoaXMpO1xuXG4gIHRoaXMuZG9tRWxlbWVudC5hcHBlbmRDaGlsZChyZXNpemVPYmplY3QpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVSZXNpemVPYmplY3QoKSB7XG4gIGNvbnN0IHJlc2l6ZU9iamVjdCA9IHRoaXMuX19yZXNpemVPYmplY3RfXyxcbiAgICAgICAgb2JqZWN0V2luZG93ID0gcmVzaXplT2JqZWN0LmNvbnRlbnREb2N1bWVudC5kZWZhdWx0VmlldzsgIC8vL1xuXG4gIG9iamVjdFdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFJFU0laRV9FVkVOVF9UWVBFLCByZXNpemVFdmVudExpc3RlbmVyKTtcblxuICB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlQ2hpbGQocmVzaXplT2JqZWN0KTtcblxuICBkZWxldGUgdGhpcy5fX3Jlc2l6ZU9iamVjdF9fO1xufVxuXG5jb25zdCByZXNpemVNaXhpbnMgPSB7XG4gIG9uUmVzaXplLFxuICBvZmZSZXNpemUsXG4gIGFkZFJlc2l6ZU9iamVjdCxcbiAgcmVtb3ZlUmVzaXplT2JqZWN0XG59O1xuXG5leHBvcnQgZGVmYXVsdCByZXNpemVNaXhpbnM7XG5cbmZ1bmN0aW9uIHJlc2l6ZU9iamVjdExvYWRIYW5kbGVyKGVsZW1lbnQpIHtcbiAgY29uc3QgcmVzaXplT2JqZWN0ID0gZWxlbWVudC5fX3Jlc2l6ZU9iamVjdF9fLFxuICAgICAgICByZXNpemVPYmplY3RXaW5kb3cgPSByZXNpemVPYmplY3QuY29udGVudERvY3VtZW50LmRlZmF1bHRWaWV3OyAgLy8vXG5cbiAgcmVzaXplT2JqZWN0V2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUkVTSVpFX0VWRU5UX1RZUEUsIChldmVudCkgPT4ge1xuICAgIGNvbnN0IHJlc2l6ZUV2ZW50TGlzdGVuZXJzID0gZWxlbWVudC5maW5kRXZlbnRMaXN0ZW5lcnMoUkVTSVpFX0VWRU5UX1RZUEUpO1xuXG4gICAgcmVzaXplRXZlbnRMaXN0ZW5lcnMuZm9yRWFjaCgocmVzaXplRXZlbnRMaXN0ZW5lcikgPT4gcmVzaXplRXZlbnRMaXN0ZW5lcihldmVudCkpO1xuICB9KTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgU1BBQ0UgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBSRVNJWkVfRVZFTlRfVFlQRSB9IGZyb20gXCIuLi9ldmVudFR5cGVzXCI7XG5pbXBvcnQgeyByZW1vdmVSZXNpemVPYmplY3QgfSBmcm9tIFwiLi4vbWl4aW5zL3Jlc2l6ZVwiO1xuXG5mdW5jdGlvbiBvbihldmVudFR5cGVzLCBoYW5kbGVyLCBlbGVtZW50ID0gdGhpcykge1xuICBldmVudFR5cGVzID0gZXZlbnRUeXBlcy5zcGxpdChTUEFDRSk7XG5cbiAgZXZlbnRUeXBlcy5mb3JFYWNoKChldmVudFR5cGUpID0+IHtcbiAgICBpZiAoZXZlbnRUeXBlID09PSBSRVNJWkVfRVZFTlRfVFlQRSkge1xuICAgICAgY29uc3QgcmVzaXplRXZlbnRMaXN0ZW5lcnMgPSB0aGlzLmZpbmRFdmVudExpc3RlbmVycyhSRVNJWkVfRVZFTlRfVFlQRSksXG4gICAgICAgICAgICByZXNpemVFdmVudExpc3RlbmVyc0xlbmd0aCA9IHJlc2l6ZUV2ZW50TGlzdGVuZXJzLmxlbmd0aDtcblxuICAgICAgaWYgKHJlc2l6ZUV2ZW50TGlzdGVuZXJzTGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRoaXMuYWRkUmVzaXplT2JqZWN0KCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZXZlbnRMaXN0ZW5lciA9IHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQpO1xuXG4gICAgdGhpcy5kb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBldmVudExpc3RlbmVyKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG9mZihldmVudFR5cGVzLCBoYW5kbGVyLCBlbGVtZW50ID0gdGhpcykge1xuICBldmVudFR5cGVzID0gZXZlbnRUeXBlcy5zcGxpdChTUEFDRSk7XG5cbiAgZXZlbnRUeXBlcy5mb3JFYWNoKChldmVudFR5cGUpID0+IHtcbiAgICBjb25zdCBldmVudExpc3RlbmVyID0gdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCk7XG5cbiAgICB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGV2ZW50TGlzdGVuZXIpO1xuXG4gICAgaWYgKGV2ZW50VHlwZSA9PT0gUkVTSVpFX0VWRU5UX1RZUEUpIHtcbiAgICAgIGNvbnN0IHJlc2l6ZUV2ZW50TGlzdGVuZXJzID0gdGhpcy5maW5kRXZlbnRMaXN0ZW5lcnMoUkVTSVpFX0VWRU5UX1RZUEUpLFxuICAgICAgICAgICAgcmVzaXplRXZlbnRMaXN0ZW5lcnNMZW5ndGggPSByZXNpemVFdmVudExpc3RlbmVycy5sZW5ndGg7XG5cbiAgICAgIGlmIChyZXNpemVFdmVudExpc3RlbmVyc0xlbmd0aCA9PT0gMCkge1xuICAgICAgICByZW1vdmVSZXNpemVPYmplY3QodGhpcyk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQpIHtcbiAgaWYgKHRoaXMuZXZlbnRMaXN0ZW5lcnMgPT09IHVuZGVmaW5lZCkge1xuICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgfVxuXG4gIGNvbnN0IGV2ZW50TGlzdGVuZXIgPSB0aGlzLmNyZWF0ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KTtcblxuICB0aGlzLmV2ZW50TGlzdGVuZXJzLnB1c2goZXZlbnRMaXN0ZW5lcik7XG5cbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGV2ZW50TGlzdGVuZXIgPSB0aGlzLmZpbmRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCksXG4gICAgICAgIGluZGV4ID0gdGhpcy5ldmVudExpc3RlbmVycy5pbmRleE9mKGV2ZW50TGlzdGVuZXIpLFxuICAgICAgICBzdGFydCA9IGluZGV4LCAgLy8vXG4gICAgICAgIGRlbGV0ZUNvdW50ID0gMTtcblxuICB0aGlzLmV2ZW50TGlzdGVuZXJzLnNwbGljZShzdGFydCwgZGVsZXRlQ291bnQpO1xuXG4gIGlmICh0aGlzLmV2ZW50TGlzdGVuZXJzLmxlbmd0aCA9PT0gMCkge1xuICAgIGRlbGV0ZSB0aGlzLmV2ZW50TGlzdGVuZXJzO1xuICB9XG5cbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG5cbmZ1bmN0aW9uIGZpbmRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCkge1xuICBjb25zdCBldmVudExpc3RlbmVyID0gdGhpcy5ldmVudExpc3RlbmVycy5maW5kKChldmVudExpc3RlbmVyKSA9PiB7XG4gICAgaWYgKChldmVudExpc3RlbmVyLmVsZW1lbnQgPT09IGVsZW1lbnQpICYmIChldmVudExpc3RlbmVyLmhhbmRsZXIgPT09IGhhbmRsZXIpICYmIChldmVudExpc3RlbmVyLmV2ZW50VHlwZSA9PT0gZXZlbnRUeXBlKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gZXZlbnRMaXN0ZW5lcjtcbn1cblxuZnVuY3Rpb24gZmluZEV2ZW50TGlzdGVuZXJzKGV2ZW50VHlwZSkge1xuICBjb25zdCBldmVudExpc3RlbmVycyA9IFtdO1xuXG4gIGlmICh0aGlzLmV2ZW50TGlzdGVuZXJzICE9PSB1bmRlZmluZWQpIHtcbiAgICB0aGlzLmV2ZW50TGlzdGVuZXJzLmZvckVhY2goKGV2ZW50TGlzdGVuZXIpID0+IHtcbiAgICAgIGNvbnN0IGZvdW5kID0gKGV2ZW50TGlzdGVuZXIuZXZlbnRUeXBlID09PSBldmVudFR5cGUpO1xuXG4gICAgICBpZiAoZm91bmQpIHtcbiAgICAgICAgZXZlbnRMaXN0ZW5lcnMucHVzaChldmVudExpc3RlbmVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBldmVudExpc3RlbmVycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQpIHtcbiAgbGV0IGV2ZW50TGlzdGVuZXI7XG5cbiAgY29uc3QgaGFuZGxlckVsZW1lbnQgPSBlbGVtZW50OyAvLy9cblxuICBldmVudExpc3RlbmVyID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgZWxlbWVudCA9IHRoaXM7IC8vL1xuXG4gICAgaGFuZGxlci5jYWxsKGhhbmRsZXJFbGVtZW50LCBldmVudCwgZWxlbWVudCk7XG4gIH07XG5cbiAgT2JqZWN0LmFzc2lnbihldmVudExpc3RlbmVyLCB7XG4gICAgZWxlbWVudCxcbiAgICBoYW5kbGVyLFxuICAgIGV2ZW50VHlwZVxuICB9KTtcblxuICByZXR1cm4gZXZlbnRMaXN0ZW5lcjtcbn1cblxuY29uc3QgZXZlbnRNaXhpbnMgPSB7XG4gIG9uLFxuICBvZmYsXG4gIGFkZEV2ZW50TGlzdGVuZXIsXG4gIHJlbW92ZUV2ZW50TGlzdGVuZXIsXG4gIGNyZWF0ZUV2ZW50TGlzdGVuZXIsXG4gIGZpbmRFdmVudExpc3RlbmVyLFxuICBmaW5kRXZlbnRMaXN0ZW5lcnNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGV2ZW50TWl4aW5zO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBNT1VTRVVQX0VWRU5UX1RZUEUsXG4gICAgICAgICBNT1VTRU9VVF9FVkVOVF9UWVBFLFxuICAgICAgICAgTU9VU0VET1dOX0VWRU5UX1RZUEUsXG4gICAgICAgICBNT1VTRU9WRVJfRVZFTlRfVFlQRSxcbiAgICAgICAgIE1PVVNFTU9WRV9FVkVOVF9UWVBFIH0gZnJvbSBcIi4uL2V2ZW50VHlwZXNcIjtcblxuZnVuY3Rpb24gb25Nb3VzZVVwKG1vdXNlVXBIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub24oTU9VU0VVUF9FVkVOVF9UWVBFLCBtb3VzZVVwSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VVcChtb3VzZVVwSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihNT1VTRVVQX0VWRU5UX1RZUEUsIG1vdXNlVXBIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvbk1vdXNlT3V0KG1vdXNlT3V0SGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uKE1PVVNFT1VUX0VWRU5UX1RZUEUsIG1vdXNlT3V0SGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VPdXQobW91c2VPdXRIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKE1PVVNFT1VUX0VWRU5UX1RZUEUsIG1vdXNlT3V0SGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25Nb3VzZURvd24obW91c2VEb3duSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uKE1PVVNFRE9XTl9FVkVOVF9UWVBFLCBtb3VzZURvd25IYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZURvd24obW91c2VEb3duSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihNT1VTRURPV05fRVZFTlRfVFlQRSwgbW91c2VEb3duSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25Nb3VzZU92ZXIobW91c2VPdmVySGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uKE1PVVNFT1ZFUl9FVkVOVF9UWVBFLCBtb3VzZU92ZXJIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU92ZXIobW91c2VPdmVySGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihNT1VTRU9WRVJfRVZFTlRfVFlQRSwgbW91c2VPdmVySGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb25Nb3VzZU1vdmUobW91c2VNb3ZlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uKE1PVVNFTU9WRV9FVkVOVF9UWVBFLCBtb3VzZU1vdmVIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU1vdmUobW91c2VNb3ZlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihNT1VTRU1PVkVfRVZFTlRfVFlQRSwgbW91c2VNb3ZlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuY29uc3QgbW91c2VNaXhpbnMgPSB7XG4gIG9uTW91c2VVcCxcbiAgb2ZmTW91c2VVcCxcbiAgb25Nb3VzZU91dCxcbiAgb2ZmTW91c2VPdXQsXG4gIG9uTW91c2VEb3duLFxuICBvZmZNb3VzZURvd24sXG4gIG9uTW91c2VPdmVyLFxuICBvZmZNb3VzZU92ZXIsXG4gIG9uTW91c2VNb3ZlLFxuICBvZmZNb3VzZU1vdmVcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1vdXNlTWl4aW5zO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBTQ1JPTExfRVZFTlRfVFlQRSB9IGZyb20gXCIuLi9ldmVudFR5cGVzXCI7XG5cbmZ1bmN0aW9uIG9uU2Nyb2xsKHNjcm9sbEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbihTQ1JPTExfRVZFTlRfVFlQRSwgc2Nyb2xsSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmU2Nyb2xsKHNjcm9sbEhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoU0NST0xMX0VWRU5UX1RZUEUsIHNjcm9sbEhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIGdldFNjcm9sbFRvcCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zY3JvbGxUb3A7IH1cblxuZnVuY3Rpb24gZ2V0U2Nyb2xsTGVmdCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zY3JvbGxMZWZ0OyB9XG5cbmZ1bmN0aW9uIHNldFNjcm9sbFRvcChzY3JvbGxUb3ApIHsgdGhpcy5kb21FbGVtZW50LnNjcm9sbFRvcCA9IHNjcm9sbFRvcDsgfVxuXG5mdW5jdGlvbiBzZXRTY3JvbGxMZWZ0KHNjcm9sbExlZnQpIHsgdGhpcy5kb21FbGVtZW50LnNjcm9sbExlZnQgPSBzY3JvbGxMZWZ0OyB9XG5cbmNvbnN0IHNjcm9sbE1peGlucyA9IHtcbiAgb25TY3JvbGwsXG4gIG9mZlNjcm9sbCxcbiAgZ2V0U2Nyb2xsVG9wLFxuICBnZXRTY3JvbGxMZWZ0LFxuICBzZXRTY3JvbGxUb3AsXG4gIHNldFNjcm9sbExlZnRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNjcm9sbE1peGlucztcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IE9mZnNldCBmcm9tIFwiLi9vZmZzZXRcIjtcbmltcG9ydCBCb3VuZHMgZnJvbSBcIi4vYm91bmRzXCI7XG5pbXBvcnQganN4TWl4aW5zIGZyb20gXCIuL21peGlucy9qc3hcIjtcbmltcG9ydCBrZXlNaXhpbnMgZnJvbSBcIi4vbWl4aW5zL2tleVwiO1xuaW1wb3J0IGNsaWNrTWl4aW5zIGZyb20gXCIuL21peGlucy9jbGlja1wiO1xuaW1wb3J0IHN0YXRlTWl4aW5zIGZyb20gXCIuL21peGlucy9zdGF0ZVwiO1xuaW1wb3J0IGV2ZW50TWl4aW5zIGZyb20gXCIuL21peGlucy9ldmVudFwiO1xuaW1wb3J0IG1vdXNlTWl4aW5zIGZyb20gXCIuL21peGlucy9tb3VzZVwiO1xuaW1wb3J0IHJlc2l6ZU1peGlucyBmcm9tIFwiLi9taXhpbnMvcmVzaXplXCI7XG5pbXBvcnQgc2Nyb2xsTWl4aW5zIGZyb20gXCIuL21peGlucy9zY3JvbGxcIjtcbmltcG9ydCBlbGVtZW50TWl4aW5zIGZyb20gXCIuL21peGlucy9lbGVtZW50XCI7XG5cbmltcG9ydCB7IGNvbWJpbmUgfSBmcm9tIFwiLi91dGlsaXRpZXMvb2JqZWN0XCI7XG5pbXBvcnQgeyBpc1NWR1RhZ05hbWUgfSBmcm9tIFwiLi91dGlsaXRpZXMvbmFtZVwiO1xuaW1wb3J0IHsgZmlyc3QsIGF1Z21lbnQgfSBmcm9tIFwiLi91dGlsaXRpZXMvYXJyYXlcIjtcbmltcG9ydCB7IE5PTkUsXG4gICAgICAgICBCTE9DSyxcbiAgICAgICAgIFdJRFRILFxuICAgICAgICAgU1RSSU5HLFxuICAgICAgICAgSEVJR0hULFxuICAgICAgICAgRElTUExBWSxcbiAgICAgICAgIERJU0FCTEVELFxuICAgICAgICAgRU1QVFlfU1RSSU5HLFxuICAgICAgICAgU1ZHX05BTUVTUEFDRV9VUkksXG4gICAgICAgICBERUZBVUxUX1BST1BFUlRJRVMsXG4gICAgICAgICBJR05PUkVEX1BST1BFUlRJRVMgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuY2xhc3MgRWxlbWVudCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yKSB7XG4gICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICB0aGlzLmRvbUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcblxuICAgICAgdGhpcy5kb21FbGVtZW50Ll9fZWxlbWVudF9fID0gdGhpczsgLy8vXG4gICAgfVxuICB9XG5cbiAgZ2V0RE9NRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5kb21FbGVtZW50O1xuICB9XG5cbiAgZ2V0T2Zmc2V0KCkge1xuICAgIGNvbnN0IHRvcCA9IHRoaXMuZG9tRWxlbWVudC5vZmZzZXRUb3AsICAvLy9cbiAgICAgICAgICBsZWZ0ID0gdGhpcy5kb21FbGVtZW50Lm9mZnNldExlZnQsICAvLy9cbiAgICAgICAgICBvZmZzZXQgPSBuZXcgT2Zmc2V0KHRvcCwgbGVmdCk7XG5cbiAgICByZXR1cm4gb2Zmc2V0O1xuICB9XG5cbiAgZ2V0Qm91bmRzKCkge1xuICAgIGNvbnN0IGJvdW5kaW5nQ2xpZW50UmVjdCA9IHRoaXMuZG9tRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgICAgICBib3VuZHMgPSBCb3VuZHMuZnJvbUJvdW5kaW5nQ2xpZW50UmVjdChib3VuZGluZ0NsaWVudFJlY3QpO1xuXG4gICAgcmV0dXJuIGJvdW5kcztcbiAgfVxuXG4gIGdldFdpZHRoKGluY2x1ZGVCb3JkZXIgPSB0cnVlKSB7XG4gICAgY29uc3Qgd2lkdGggPSBpbmNsdWRlQm9yZGVyID9cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kb21FbGVtZW50Lm9mZnNldFdpZHRoIDpcbiAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRvbUVsZW1lbnQuY2xpZW50V2lkdGg7XG5cbiAgICByZXR1cm4gd2lkdGg7XG4gIH1cblxuICBzZXRXaWR0aCh3aWR0aCkge1xuICAgIHdpZHRoID0gYCR7d2lkdGh9cHhgOyAvLy9cblxuICAgIHRoaXMuc3R5bGUoV0lEVEgsIHdpZHRoKTtcbiAgfVxuXG4gIGdldEhlaWdodChpbmNsdWRlQm9yZGVyID0gdHJ1ZSkge1xuICAgIGNvbnN0IGhlaWdodCA9IGluY2x1ZGVCb3JkZXIgP1xuICAgICAgICAgICAgICAgICAgICAgdGhpcy5kb21FbGVtZW50Lm9mZnNldEhlaWdodCA6XG4gICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZG9tRWxlbWVudC5jbGllbnRIZWlnaHQ7XG5cbiAgICByZXR1cm4gaGVpZ2h0O1xuICB9XG5cbiAgc2V0SGVpZ2h0KGhlaWdodCkge1xuICAgIGhlaWdodCA9IGAke2hlaWdodH1weGA7IC8vL1xuXG4gICAgdGhpcy5zdHlsZShIRUlHSFQsIGhlaWdodCk7XG4gIH1cblxuICBoYXNBdHRyaWJ1dGUobmFtZSkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50Lmhhc0F0dHJpYnV0ZShuYW1lKTsgfVxuXG4gIGdldEF0dHJpYnV0ZShuYW1lKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQuZ2V0QXR0cmlidXRlKG5hbWUpOyB9XG5cbiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKSB7IHRoaXMuZG9tRWxlbWVudC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpOyB9XG5cbiAgY2xlYXJBdHRyaWJ1dGUobmFtZSkgeyB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpOyB9XG5cbiAgYWRkQXR0cmlidXRlKG5hbWUsIHZhbHVlKSB7IHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTsgfVxuXG4gIHJlbW92ZUF0dHJpYnV0ZShuYW1lKSB7IHRoaXMuY2xlYXJBdHRyaWJ1dGUobmFtZSk7IH1cblxuICBzZXRDbGFzcyhjbGFzc05hbWUpIHsgdGhpcy5kb21FbGVtZW50LmNsYXNzTmFtZSA9IGNsYXNzTmFtZTsgfVxuXG4gIGFkZENsYXNzKGNsYXNzTmFtZSkgeyB0aGlzLmRvbUVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpOyB9XG5cbiAgcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7IHRoaXMuZG9tRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7IH1cblxuICB0b2dnbGVDbGFzcyhjbGFzc05hbWUpIHsgdGhpcy5kb21FbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoY2xhc3NOYW1lKTsgfVxuXG4gIGhhc0NsYXNzKGNsYXNzTmFtZSkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpOyB9XG5cbiAgY2xlYXJDbGFzc2VzKCkgeyB0aGlzLmRvbUVsZW1lbnQuY2xhc3NOYW1lID0gRU1QVFlfU1RSSU5HOyB9XG5cbiAgcHJlcGVuZFRvKHBhcmVudEVsZW1lbnQpIHsgcGFyZW50RWxlbWVudC5wcmVwZW5kKHRoaXMpOyB9XG5cbiAgYXBwZW5kVG8ocGFyZW50RWxlbWVudCkgeyBwYXJlbnRFbGVtZW50LmFwcGVuZCh0aGlzKTsgfVxuXG4gIGFkZFRvKHBhcmVudEVsZW1lbnQpIHsgcGFyZW50RWxlbWVudC5hZGQodGhpcyk7IH1cblxuICByZW1vdmVGcm9tKHBhcmVudEVsZW1lbnQpIHsgcGFyZW50RWxlbWVudC5yZW1vdmUodGhpcyk7IH1cblxuICBpbnNlcnRCZWZvcmUoc2libGluZ0VsZW1lbnQpIHtcbiAgICBjb25zdCBwYXJlbnRET01Ob2RlID0gc2libGluZ0VsZW1lbnQuZG9tRWxlbWVudC5wYXJlbnROb2RlLFxuICAgICAgICAgIHNpYmxpbmdET01FbGVtZW50ID0gc2libGluZ0VsZW1lbnQuZG9tRWxlbWVudDtcblxuICAgIHBhcmVudERPTU5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuZG9tRWxlbWVudCwgc2libGluZ0RPTUVsZW1lbnQpO1xuICB9XG5cbiAgaW5zZXJ0QWZ0ZXIoc2libGluZ0VsZW1lbnQpIHtcbiAgICBjb25zdCBwYXJlbnRET01Ob2RlID0gc2libGluZ0VsZW1lbnQuZG9tRWxlbWVudC5wYXJlbnROb2RlLFxuICAgICAgICAgIHNpYmxpbmdET01FbGVtZW50ID0gc2libGluZ0VsZW1lbnQuZG9tRWxlbWVudDtcblxuICAgIHBhcmVudERPTU5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuZG9tRWxlbWVudCwgc2libGluZ0RPTUVsZW1lbnQubmV4dFNpYmxpbmcpOyAgLy8vXG4gIH1cblxuICBwcmVwZW5kKGVsZW1lbnQpIHtcbiAgICBjb25zdCBkb21FbGVtZW50ID0gZWxlbWVudC5kb21FbGVtZW50LFxuICAgICAgICAgIGZpcnN0Q2hpbGRET01FbGVtZW50ID0gdGhpcy5kb21FbGVtZW50LmZpcnN0Q2hpbGQ7XG5cbiAgICB0aGlzLmRvbUVsZW1lbnQuaW5zZXJ0QmVmb3JlKGRvbUVsZW1lbnQsIGZpcnN0Q2hpbGRET01FbGVtZW50KTtcbiAgfVxuXG4gIGFwcGVuZChlbGVtZW50KSB7XG4gICAgY29uc3QgZG9tRWxlbWVudCA9IGVsZW1lbnQuZG9tRWxlbWVudDtcblxuICAgIHRoaXMuZG9tRWxlbWVudC5pbnNlcnRCZWZvcmUoZG9tRWxlbWVudCwgbnVsbCk7IC8vL1xuICB9XG5cbiAgYWRkKGVsZW1lbnQpIHsgdGhpcy5hcHBlbmQoZWxlbWVudCk7IH1cblxuICByZW1vdmUoZWxlbWVudCkge1xuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICBjb25zdCBkb21FbGVtZW50ID0gZWxlbWVudC5kb21FbGVtZW50O1xuXG4gICAgICB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlQ2hpbGQoZG9tRWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZG9tRWxlbWVudC5yZW1vdmUoKTtcbiAgICB9XG4gIH1cblxuICBtb3VudChlbGVtZW50KSB7XG4gICAgY29uc3QgZGVzY2VuZGFudEVsZW1lbnRzID0gZWxlbWVudC5nZXREZXNjZW5kYW50RWxlbWVudHMoKSxcbiAgICAgICAgICBlbGVtZW50cyA9IFtcbiAgICAgICAgICAgIGVsZW1lbnQsXG4gICAgICAgICAgICAuLi5kZXNjZW5kYW50RWxlbWVudHNcbiAgICAgICAgICBdO1xuXG4gICAgdGhpcy5hZGQoZWxlbWVudCk7XG5cbiAgICBlbGVtZW50cy5yZXZlcnNlKCk7IC8vL1xuXG4gICAgZWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCkgPT4gKGVsZW1lbnQuZGlkTW91bnQgJiYgZWxlbWVudC5kaWRNb3VudCgpKSk7ICAvLy9cbiAgfVxuXG4gIHVubW91bnQoZWxlbWVudCkge1xuICAgIGNvbnN0IGRlc2NlbmRhbnRFbGVtZW50cyA9IGVsZW1lbnQuZ2V0RGVzY2VuZGFudEVsZW1lbnRzKCksXG4gICAgICAgICAgZWxlbWVudHMgPSBbXG4gICAgICAgICAgICBlbGVtZW50LFxuICAgICAgICAgICAgLi4uZGVzY2VuZGFudEVsZW1lbnRzXG4gICAgICAgICAgXTtcblxuICAgIGVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQpID0+IChlbGVtZW50LndpbGxVbm1vdW50ICYmIGVsZW1lbnQud2lsbFVubW91bnQoKSkpOyAgLy8vXG5cbiAgICB0aGlzLnJlbW92ZShlbGVtZW50KTtcbiAgfVxuXG4gIHNob3coZGlzcGxheVN0eWxlID0gQkxPQ0spIHsgdGhpcy5kaXNwbGF5KGRpc3BsYXlTdHlsZSk7IH1cblxuICBoaWRlKCkgeyB0aGlzLnN0eWxlKERJU1BMQVksIE5PTkUpOyB9XG5cbiAgZGlzcGxheShkaXNwbGF5KSB7IHRoaXMuc3R5bGUoRElTUExBWSwgZGlzcGxheSk7IH1cblxuICBlbmFibGUoKSB7IHRoaXMuY2xlYXJBdHRyaWJ1dGUoRElTQUJMRUQpOyB9XG5cbiAgZGlzYWJsZSgpIHsgdGhpcy5zZXRBdHRyaWJ1dGUoRElTQUJMRUQsIERJU0FCTEVEKTsgfVxuXG4gIGlzRW5hYmxlZCgpIHtcbiAgICBjb25zdCBkaXNhYmxlZCA9IHRoaXMuaXNEaXNhYmxlZCgpLFxuICAgICAgICAgIGVuYWJsZWQgPSAhZGlzYWJsZWQ7XG5cbiAgICByZXR1cm4gZW5hYmxlZDtcbiAgfVxuXG4gIGlzRGlzYWJsZWQoKSB7XG4gICAgY29uc3QgZGlzYWJsZWQgPSB0aGlzLmhhc0F0dHJpYnV0ZShESVNBQkxFRCk7XG5cbiAgICByZXR1cm4gZGlzYWJsZWQ7XG4gIH1cbiAgXG4gIGlzRGlzcGxheWVkKCkge1xuICAgIGNvbnN0IGRpc3BsYXkgPSB0aGlzLmNzcyhESVNQTEFZKSxcbiAgICAgICAgICBkaXNwbGF5ZWQgPSAoZGlzcGxheSAhPT0gTk9ORSk7XG4gICAgXG4gICAgcmV0dXJuIGRpc3BsYXllZDtcbiAgfVxuXG4gIGlzU2hvd2luZygpIHtcbiAgICBjb25zdCBkaXNwbGF5ZWQgPSB0aGlzLmlzRGlzcGxheWVkKCksXG4gICAgICAgICAgc2hvd2luZyA9IGRpc3BsYXllZDsgIC8vL1xuXG4gICAgcmV0dXJuIHNob3dpbmc7XG4gIH1cblxuICBpc0hpZGRlbigpIHtcbiAgICBjb25zdCBkaXNwbGF5ZWQgPSB0aGlzLmlzRGlzcGxheWVkKCksXG4gICAgICAgICAgaGlkZGVuID0gIWRpc3BsYXllZDtcblxuICAgIHJldHVybiBoaWRkZW47XG4gIH1cblxuICBzdHlsZShuYW1lLCB2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLmRvbUVsZW1lbnQuc3R5bGVbbmFtZV0gPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgc3R5bGUgPSB0aGlzLmRvbUVsZW1lbnQuc3R5bGVbbmFtZV07XG5cbiAgICAgIHJldHVybiBzdHlsZTtcbiAgICB9XG4gIH1cblxuICBodG1sKGh0bWwpIHtcbiAgICBpZiAoaHRtbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBpbm5lckhUTUwgPSB0aGlzLmRvbUVsZW1lbnQuaW5uZXJIVE1MO1xuXG4gICAgICBodG1sID0gaW5uZXJIVE1MOyAvLy9cblxuICAgICAgcmV0dXJuIGh0bWw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGlubmVySFRNTCA9IGh0bWw7IC8vL1xuXG4gICAgICB0aGlzLmRvbUVsZW1lbnQuaW5uZXJIVE1MID0gaW5uZXJIVE1MXG4gICAgfVxuICB9XG5cbiAgY3NzKGNzcykge1xuICAgIGlmIChjc3MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc3QgY29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUodGhpcy5kb21FbGVtZW50KSxcbiAgICAgICAgICAgIGNzcyA9IHt9O1xuXG4gICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY29tcHV0ZWRTdHlsZS5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgY29uc3QgZmlyc3RDb21wdXRlZFN0eWxlID0gZmlyc3RbY29tcHV0ZWRTdHlsZV0sXG4gICAgICAgICAgICAgIG5hbWUgPSBmaXJzdENvbXB1dGVkU3R5bGUsICAvLy9cbiAgICAgICAgICAgICAgdmFsdWUgPSBjb21wdXRlZFN0eWxlLmdldFByb3BlcnR5VmFsdWUobmFtZSk7IC8vL1xuXG4gICAgICAgIGNzc1tuYW1lXSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY3NzO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGNzcyA9PT0gU1RSSU5HKSB7XG4gICAgICBsZXQgbmFtZSA9IGNzczsgLy8vXG5cbiAgICAgIGNvbnN0IGNvbXB1dGVkU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKHRoaXMuZG9tRWxlbWVudCksXG4gICAgICAgICAgICB2YWx1ZSA9IGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKTsgLy8vXG5cbiAgICAgIGNzcyA9IHZhbHVlOyAgLy8vXG5cbiAgICAgIHJldHVybiBjc3M7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IG5hbWVzID0gT2JqZWN0LmtleXMoY3NzKTsgLy8vXG5cbiAgICAgIG5hbWVzLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBjc3NbbmFtZV07XG5cbiAgICAgICAgdGhpcy5zdHlsZShuYW1lLCB2YWx1ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgXG4gIGJsdXIoKSB7IHRoaXMuZG9tRWxlbWVudC5ibHVyKCk7IH1cblxuICBmb2N1cygpIHsgdGhpcy5kb21FbGVtZW50LmZvY3VzKCk7IH1cblxuICBoYXNGb2N1cygpIHtcbiAgICBjb25zdCBmb2N1cyA9IChkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSB0aGlzLmRvbUVsZW1lbnQpOyAgLy8vXG5cbiAgICByZXR1cm4gZm9jdXM7XG4gIH1cblxuICBzdGF0aWMgZnJvbUNsYXNzKENsYXNzLCBwcm9wZXJ0aWVzLCAuLi5yZW1haW5pbmdBcmd1bWVudHMpIHtcbiAgICBjb25zdCB7IHRhZ05hbWUgfSA9IENsYXNzLFxuICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50RnJvbVRhZ05hbWUoQ2xhc3MsIHRhZ05hbWUsIC4uLnJlbWFpbmluZ0FyZ3VtZW50cyksXG4gICAgICAgICAgZGVmYXVsdFByb3BlcnRpZXMgPSBkZWZhdWx0UHJvcGVydGllc0Zyb21DbGFzcyhDbGFzcyksXG4gICAgICAgICAgaWdub3JlZFByb3BlcnRpZXMgPSBpZ25vcmVkUHJvcGVydGllc0Zyb21DbGFzcyhDbGFzcyk7XG5cbiAgICBlbGVtZW50LmFwcGx5UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBkZWZhdWx0UHJvcGVydGllcywgaWdub3JlZFByb3BlcnRpZXMpO1xuXG4gICAgZWxlbWVudC5pbml0aWFsaXNlICYmIGVsZW1lbnQuaW5pdGlhbGlzZSgpOyAvLy9cblxuICAgIHJldHVybiBlbGVtZW50O1xuICB9XG5cbiAgc3RhdGljIGZyb21UYWdOYW1lKHRhZ05hbWUsIHByb3BlcnRpZXMsIC4uLnJlbWFpbmluZ0FyZ3VtZW50cykge1xuICAgIGNvbnN0IENsYXNzID0gRWxlbWVudCwgIC8vL1xuICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50RnJvbVRhZ05hbWUoQ2xhc3MsIHRhZ05hbWUsIC4uLnJlbWFpbmluZ0FyZ3VtZW50cyksXG4gICAgICAgICAgZGVmYXVsdFByb3BlcnRpZXMgPSB7fSwgLy8vXG4gICAgICAgICAgaWdub3JlZFByb3BlcnRpZXMgPSBbXTsgLy8vXG5cbiAgICBlbGVtZW50LmFwcGx5UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBkZWZhdWx0UHJvcGVydGllcywgaWdub3JlZFByb3BlcnRpZXMpO1xuXG4gICAgZWxlbWVudC5pbml0aWFsaXNlICYmIGVsZW1lbnQuaW5pdGlhbGlzZSgpOyAvLy9cblxuICAgIHJldHVybiBlbGVtZW50O1xuICB9XG59XG5cbk9iamVjdC5hc3NpZ24oRWxlbWVudC5wcm90b3R5cGUsIGpzeE1peGlucyk7XG5PYmplY3QuYXNzaWduKEVsZW1lbnQucHJvdG90eXBlLCBrZXlNaXhpbnMpO1xuT2JqZWN0LmFzc2lnbihFbGVtZW50LnByb3RvdHlwZSwgY2xpY2tNaXhpbnMpO1xuT2JqZWN0LmFzc2lnbihFbGVtZW50LnByb3RvdHlwZSwgc3RhdGVNaXhpbnMpO1xuT2JqZWN0LmFzc2lnbihFbGVtZW50LnByb3RvdHlwZSwgZXZlbnRNaXhpbnMpO1xuT2JqZWN0LmFzc2lnbihFbGVtZW50LnByb3RvdHlwZSwgbW91c2VNaXhpbnMpO1xuT2JqZWN0LmFzc2lnbihFbGVtZW50LnByb3RvdHlwZSwgcmVzaXplTWl4aW5zKTtcbk9iamVjdC5hc3NpZ24oRWxlbWVudC5wcm90b3R5cGUsIHNjcm9sbE1peGlucyk7XG5PYmplY3QuYXNzaWduKEVsZW1lbnQucHJvdG90eXBlLCBlbGVtZW50TWl4aW5zKTtcblxuZXhwb3J0IGRlZmF1bHQgRWxlbWVudDtcblxuZnVuY3Rpb24gZWxlbWVudEZyb21UYWdOYW1lKENsYXNzLCB0YWdOYW1lLCAuLi5yZW1haW5pbmdBcmd1bWVudHMpIHtcbiAgY29uc3Qgc2VsZWN0b3IgPSBudWxsLFxuICAgICAgICBlbGVtZW50ID0gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5jYWxsKENsYXNzLCBudWxsLCBzZWxlY3RvciwgLi4ucmVtYWluaW5nQXJndW1lbnRzKSk7XG5cbiAgZWxlbWVudC5kb21FbGVtZW50ID0gaXNTVkdUYWdOYW1lKHRhZ05hbWUpID9cbiAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoU1ZHX05BTUVTUEFDRV9VUkksIHRhZ05hbWUpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XG5cbiAgZWxlbWVudC5kb21FbGVtZW50Ll9fZWxlbWVudF9fID0gZWxlbWVudDsgLy8vXG5cbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcm9wZXJ0aWVzRnJvbUNsYXNzKENsYXNzLCBkZWZhdWx0UHJvcGVydGllcyA9IHt9KSB7XG4gIGlmIChDbGFzcy5oYXNPd25Qcm9wZXJ0eShERUZBVUxUX1BST1BFUlRJRVMpKSB7XG4gICAgZGVmYXVsdFByb3BlcnRpZXMgPSBjb21iaW5lKGRlZmF1bHRQcm9wZXJ0aWVzLCBDbGFzc1tERUZBVUxUX1BST1BFUlRJRVNdKTtcbiAgfVxuXG4gIGNvbnN0IHN1cGVyQ2xhc3MgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ2xhc3MpO1xuXG4gIGlmIChzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgZGVmYXVsdFByb3BlcnRpZXMgPSBkZWZhdWx0UHJvcGVydGllc0Zyb21DbGFzcyhzdXBlckNsYXNzLCBkZWZhdWx0UHJvcGVydGllcyk7XG4gIH1cblxuICByZXR1cm4gZGVmYXVsdFByb3BlcnRpZXM7XG59XG5cbmZ1bmN0aW9uIGlnbm9yZWRQcm9wZXJ0aWVzRnJvbUNsYXNzKENsYXNzLCBpZ25vcmVkUHJvcGVydGllcyA9IFtdKSB7XG4gIGlmIChDbGFzcy5oYXNPd25Qcm9wZXJ0eShJR05PUkVEX1BST1BFUlRJRVMpKSB7XG4gICAgaWdub3JlZFByb3BlcnRpZXMgPSBhdWdtZW50KGlnbm9yZWRQcm9wZXJ0aWVzLCBDbGFzc1tJR05PUkVEX1BST1BFUlRJRVNdLCAoaWdub3JlZFByb3BlcnR5KSA9PiAhaWdub3JlZFByb3BlcnRpZXMuaW5jbHVkZXMoaWdub3JlZFByb3BlcnR5KSk7XG4gIH1cblxuICBjb25zdCBzdXBlckNsYXNzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKENsYXNzKTtcblxuICBpZiAoc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIGlnbm9yZWRQcm9wZXJ0aWVzID0gaWdub3JlZFByb3BlcnRpZXNGcm9tQ2xhc3Moc3VwZXJDbGFzcywgaWdub3JlZFByb3BlcnRpZXMpO1xuICB9XG5cbiAgcmV0dXJuIGlnbm9yZWRQcm9wZXJ0aWVzO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi9lbGVtZW50XCI7XG5cbmltcG9ydCB7IGZsYXR0ZW4gfSBmcm9tIFwiLi91dGlsaXRpZXMvYXJyYXlcIjtcbmltcG9ydCB7IFNUUklORywgRlVOQ1RJT04gfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IHJlbW92ZUZhbHNleUVsZW1lbnRzLCByZXBsYWNlU3RyaW5nc1dpdGhUZXh0RWxlbWVudHMgfSBmcm9tIFwiLi91dGlsaXRpZXMvZWxlbWVudHNcIjtcblxuZnVuY3Rpb24gY3JlYXRlRWxlbWVudChmaXJzdEFyZ3VtZW50LCBwcm9wZXJ0aWVzLCAuLi5jaGlsZEVsZW1lbnRzKSB7XG4gIGxldCBlbGVtZW50ID0gbnVsbDtcblxuICBpZiAoZmlyc3RBcmd1bWVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgY2hpbGRFbGVtZW50cyA9IHNhbml0aXNlQ2hpbGRFbGVtZW50cyhjaGlsZEVsZW1lbnRzKTtcblxuICAgIHByb3BlcnRpZXMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgIGNoaWxkRWxlbWVudHNcbiAgICB9LCBwcm9wZXJ0aWVzKTtcblxuICAgIGlmIChmYWxzZSkge1xuICAgICAgLy8vXG4gICAgfSBlbHNlIGlmIChpc1N1YmNsYXNzT2YoZmlyc3RBcmd1bWVudCwgRWxlbWVudCkpIHtcbiAgICAgIGNvbnN0IENsYXNzID0gZmlyc3RBcmd1bWVudDsgIC8vL1xuXG4gICAgICBlbGVtZW50ID0gQ2xhc3MuZnJvbUNsYXNzKENsYXNzLCBwcm9wZXJ0aWVzKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBmaXJzdEFyZ3VtZW50ID09PSBTVFJJTkcpIHtcbiAgICAgIGNvbnN0IHRhZ05hbWUgPSBmaXJzdEFyZ3VtZW50OyAvLy9cblxuICAgICAgZWxlbWVudCA9IEVsZW1lbnQuZnJvbVRhZ05hbWUodGFnTmFtZSwgcHJvcGVydGllcyk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZmlyc3RBcmd1bWVudCA9PT0gRlVOQ1RJT04pIHtcbiAgICAgIGNvbnN0IGVsZW1lbnRGdW5jdGlvbiA9IGZpcnN0QXJndW1lbnQ7ICAvLy9cblxuICAgICAgZWxlbWVudCA9IGVsZW1lbnRGdW5jdGlvbihwcm9wZXJ0aWVzKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZWxlbWVudDtcbn1cblxuY29uc3QgUmVhY3QgPSB7XG4gIGNyZWF0ZUVsZW1lbnRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0O1xuXG5mdW5jdGlvbiBzYW5pdGlzZUNoaWxkRWxlbWVudHMoY2hpbGRFbGVtZW50cykge1xuICBjaGlsZEVsZW1lbnRzID0gZmxhdHRlbihjaGlsZEVsZW1lbnRzKTtcblxuICBjaGlsZEVsZW1lbnRzID0gcmVtb3ZlRmFsc2V5RWxlbWVudHMoY2hpbGRFbGVtZW50cyk7XG5cbiAgY2hpbGRFbGVtZW50cyA9IHJlcGxhY2VTdHJpbmdzV2l0aFRleHRFbGVtZW50cyhjaGlsZEVsZW1lbnRzKTtcblxuICByZXR1cm4gY2hpbGRFbGVtZW50cztcbn1cblxuZnVuY3Rpb24gaXNTdWJjbGFzc09mKGFyZ3VtZW50LCBDbGFzcykge1xuICBsZXQgc3ViY2xhc3NPZiA9IGZhbHNlO1xuXG4gIGlmIChhcmd1bWVudC5uYW1lID09PSBDbGFzcy5uYW1lKSB7IC8vL1xuICAgIHN1YmNsYXNzT2YgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIGFyZ3VtZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGFyZ3VtZW50KTsgLy8vXG5cbiAgICBpZiAoYXJndW1lbnQpIHtcbiAgICAgIHN1YmNsYXNzT2YgPSBpc1N1YmNsYXNzT2YoYXJndW1lbnQsIENsYXNzKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3ViY2xhc3NPZjtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL2VsZW1lbnRcIjtcblxuaW1wb3J0IHsgQk9EWSB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm9keSBleHRlbmRzIEVsZW1lbnQge1xuICBjb25zdHJ1Y3RvcihzZWxlY3RvciA9IEJPRFkpIHtcbiAgICBzdXBlcihzZWxlY3Rvcik7XG4gIH1cblxuICBzdGF0aWMgdGFnTmFtZSA9IFwiYm9keVwiO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vZWxlbWVudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaW5rIGV4dGVuZHMgRWxlbWVudCB7XG4gIGdldEhSZWYoKSB7IHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShcImhyZWZcIik7IH1cblxuICBzZXRIUmVmKGhyZWYpIHsgcmV0dXJuIHRoaXMuc2V0QXR0cmlidXRlKFwiaHJlZlwiLCBocmVmKTsgfVxuXG4gIHN0YXRpYyB0YWdOYW1lID0gXCJhXCI7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IENIQU5HRV9FVkVOVF9UWVBFIH0gZnJvbSBcIi4uL2V2ZW50VHlwZXNcIjtcblxuZnVuY3Rpb24gb25DaGFuZ2UoY2hhbmdlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9uKENIQU5HRV9FVkVOVF9UWVBFLCBjaGFuZ2VIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZDaGFuZ2UoY2hhbmdlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihDSEFOR0VfRVZFTlRfVFlQRSwgY2hhbmdlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuY29uc3QgY2hhbmdlTWl4aW5zID0ge1xuICBvbkNoYW5nZSxcbiAgb2ZmQ2hhbmdlXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjaGFuZ2VNaXhpbnM7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBFbGVtZW50IGZyb20gXCIuL2VsZW1lbnRcIjtcbmltcG9ydCBjaGFuZ2VNaXhpbnMgZnJvbSBcIi4vbWl4aW5zL2NoYW5nZVwiO1xuXG5pbXBvcnQgeyBDSEFOR0VfRVZFTlRfVFlQRSB9IGZyb20gXCIuL2V2ZW50VHlwZXNcIjtcblxuY2xhc3MgSW5wdXRFbGVtZW50IGV4dGVuZHMgRWxlbWVudCB7XG4gIG9uQ2hhbmdlKGNoYW5nZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbihDSEFOR0VfRVZFTlRfVFlQRSwgY2hhbmdlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuICBvZmZDaGFuZ2UoY2hhbmdlSGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihDSEFOR0VfRVZFTlRfVFlQRSwgY2hhbmdlSGFuZGxlciwgZWxlbWVudCk7IH1cblxuICBvblJlc2l6ZShyZXNpemVIYW5kbGVyLCBlbGVtZW50KSB7fSAvLy9cblxuICBvZmZSZXNpemUocmVzaXplSGFuZGxlciwgZWxlbWVudCkge30gIC8vL1xuXG4gIGdldFZhbHVlKCkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50LnZhbHVlOyB9XG5cbiAgZ2V0U2VsZWN0aW9uU3RhcnQoKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0aW9uU3RhcnQ7IH1cblxuICBnZXRTZWxlY3Rpb25FbmQoKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0aW9uRW5kOyB9XG4gIFxuICBpc1JlYWRPbmx5KCkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50LnJlYWRPbmx5OyB9XG5cbiAgc2V0VmFsdWUodmFsdWUpIHsgdGhpcy5kb21FbGVtZW50LnZhbHVlID0gdmFsdWU7IH1cblxuICBzZXRTZWxlY3Rpb25TdGFydChzZWxlY3Rpb25TdGFydCkgeyB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0aW9uU3RhcnQgPSBzZWxlY3Rpb25TdGFydDsgfVxuXG4gIHNldFNlbGVjdGlvbkVuZChzZWxlY3Rpb25FbmQpIHsgdGhpcy5kb21FbGVtZW50LnNlbGVjdGlvbkVuZCA9IHNlbGVjdGlvbkVuZDsgfVxuXG4gIHNldFJlYWRPbmx5KHJlYWRPbmx5KSB7IHRoaXMuZG9tRWxlbWVudC5yZWFkT25seSA9IHJlYWRPbmx5OyB9XG5cbiAgc2VsZWN0KCkgeyB0aGlzLmRvbUVsZW1lbnQuc2VsZWN0KCk7IH1cbn1cblxuT2JqZWN0LmFzc2lnbihJbnB1dEVsZW1lbnQucHJvdG90eXBlLCBjaGFuZ2VNaXhpbnMpO1xuXG5leHBvcnQgZGVmYXVsdCBJbnB1dEVsZW1lbnQ7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBJbnB1dEVsZW1lbnQgZnJvbSBcIi4uL2lucHV0RWxlbWVudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbnB1dCBleHRlbmRzIElucHV0RWxlbWVudCB7XG4gIHN0YXRpYyB0YWdOYW1lID0gXCJpbnB1dFwiO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vZWxlbWVudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdXR0b24gZXh0ZW5kcyBFbGVtZW50IHtcbiAgc3RhdGljIHRhZ05hbWUgPSBcImJ1dHRvblwiO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vZWxlbWVudFwiO1xuaW1wb3J0IGNoYW5nZU1peGlucyBmcm9tIFwiLi4vbWl4aW5zL2NoYW5nZVwiO1xuXG5jbGFzcyBTZWxlY3QgZXh0ZW5kcyBFbGVtZW50IHtcbiAgb25SZXNpemUocmVzaXplSGFuZGxlciwgZWxlbWVudCkge30gLy8vXG5cbiAgb2ZmUmVzaXplKHJlc2l6ZUhhbmRsZXIsIGVsZW1lbnQpIHt9ICAvLy9cblxuICBnZXRWYWx1ZSgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC52YWx1ZTsgfVxuXG4gIHNldFZhbHVlKHZhbHVlKSB7IHRoaXMuZG9tRWxlbWVudC52YWx1ZSA9IHZhbHVlOyB9XG5cbiAgc3RhdGljIHRhZ05hbWUgPSBcInNlbGVjdFwiO1xufVxuXG5PYmplY3QuYXNzaWduKFNlbGVjdC5wcm90b3R5cGUsIGNoYW5nZU1peGlucyk7XG5cbmV4cG9ydCBkZWZhdWx0IFNlbGVjdDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL2VsZW1lbnRcIjtcbmltcG9ydCBjaGFuZ2VNaXhpbnMgZnJvbSBcIi4uL21peGlucy9jaGFuZ2VcIjtcblxuY2xhc3MgQ2hlY2tib3ggZXh0ZW5kcyBFbGVtZW50IHtcbiAgaXNDaGVja2VkKCkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50LmNoZWNrZWQ7IH1cblxuICBjaGVjayhjaGVja2VkID0gdHJ1ZSkgeyB0aGlzLmRvbUVsZW1lbnQuY2hlY2tlZCA9IGNoZWNrZWQ7IH1cblxuICBzdGF0aWMgdGFnTmFtZSA9IFwiaW5wdXRcIjtcblxuICBzdGF0aWMgZGVmYXVsdFByb3BlcnRpZXMgPSB7XG4gICAgdHlwZTogXCJjaGVja2JveFwiXG4gIH07XG59XG5cbk9iamVjdC5hc3NpZ24oQ2hlY2tib3gucHJvdG90eXBlLCBjaGFuZ2VNaXhpbnMpO1xuXG5leHBvcnQgZGVmYXVsdCBDaGVja2JveDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IElucHV0RWxlbWVudCBmcm9tIFwiLi4vaW5wdXRFbGVtZW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRleHRhcmVhIGV4dGVuZHMgSW5wdXRFbGVtZW50IHtcbiAgc3RhdGljIHRhZ05hbWUgPSBcInRleHRhcmVhXCI7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IG9uUmVzaXplLCBvZmZSZXNpemUgfSBmcm9tIFwiLi4vbWl4aW5zL3Jlc2l6ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG9uUmVzaXplLFxuICBvZmZSZXNpemVcbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBrZXlNaXhpbnMgZnJvbSBcIi4vbWl4aW5zL2tleVwiO1xuaW1wb3J0IGV2ZW50TWl4aW5zIGZyb20gXCIuL21peGlucy9ldmVudFwiO1xuaW1wb3J0IG1vdXNlTWl4aW5zIGZyb20gXCIuL21peGlucy9tb3VzZVwiO1xuaW1wb3J0IGNsaWNrTWl4aW5zIGZyb20gXCIuL21peGlucy9jbGlja1wiO1xuaW1wb3J0IHdpbmRvd01peGlucyBmcm9tIFwiLi9taXhpbnMvd2luZG93XCI7XG5cbmltcG9ydCB7IFVOREVGSU5FRCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5jbGFzcyBXaW5kb3cge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmRvbUVsZW1lbnQgPSB3aW5kb3c7IC8vL1xuICB9XG5cbiAgYXNzaWduKC4uLnNvdXJjZXMpIHtcbiAgICBjb25zdCB0YXJnZXQgPSB0aGlzLmRvbUVsZW1lbnQ7IC8vL1xuXG4gICAgT2JqZWN0LmFzc2lnbih0YXJnZXQsIC4uLnNvdXJjZXMpO1xuICB9XG5cbiAgYWRkUmVzaXplT2JqZWN0KCkge30gLy8vXG5cbiAgcmVtb3ZlUmVzaXplT2JqZWN0KCkge30gLy8vXG5cbiAgZ2V0V2lkdGgoKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQuaW5uZXJXaWR0aDsgfSAvLy9cbiAgXG4gIGdldEhlaWdodCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5pbm5lckhlaWdodDsgfSAvLy9cblxuICBnZXRTY3JvbGxUb3AoKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQucGFnZVlPZmZzZXQ7IH0gIC8vL1xuXG4gIGdldFNjcm9sbExlZnQoKSB7IHJldHVybiB0aGlzLmRvbUVsZW1lbnQucGFnZVhPZmZzZXQ7IH0gLy8vXG59XG5cbk9iamVjdC5hc3NpZ24oV2luZG93LnByb3RvdHlwZSwga2V5TWl4aW5zKTtcbk9iamVjdC5hc3NpZ24oV2luZG93LnByb3RvdHlwZSwgZXZlbnRNaXhpbnMpO1xuT2JqZWN0LmFzc2lnbihXaW5kb3cucHJvdG90eXBlLCBtb3VzZU1peGlucyk7XG5PYmplY3QuYXNzaWduKFdpbmRvdy5wcm90b3R5cGUsIGNsaWNrTWl4aW5zKTtcbk9iamVjdC5hc3NpZ24oV2luZG93LnByb3RvdHlwZSwgd2luZG93TWl4aW5zKTtcblxuZXhwb3J0IGRlZmF1bHQgKHR5cGVvZiB3aW5kb3cgPT09IFVOREVGSU5FRCkgPyB1bmRlZmluZWQgOiBuZXcgV2luZG93KCk7ICAvLy9cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IExFRlRfTU9VU0VfQlVUVE9OID0gMDtcbmV4cG9ydCBjb25zdCBSSUdIVF9NT1VTRV9CVVRUT04gPSAyO1xuZXhwb3J0IGNvbnN0IE1JRERMRV9NT1VTRV9CVVRUT04gPSAxO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIExFRlRfTU9VU0VfQlVUVE9OLFxuICBSSUdIVF9NT1VTRV9CVVRUT04sXG4gIE1JRERMRV9NT1VTRV9CVVRUT05cbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBrZXlNaXhpbnMgZnJvbSBcIi4vbWl4aW5zL2tleVwiO1xuaW1wb3J0IGNsaWNrTWl4aW5zIGZyb20gXCIuL21peGlucy9jbGlja1wiO1xuaW1wb3J0IGV2ZW50TWl4aW5zIGZyb20gXCIuL21peGlucy9ldmVudFwiO1xuaW1wb3J0IG1vdXNlTWl4aW5zIGZyb20gXCIuL21peGlucy9tb3VzZVwiO1xuXG5pbXBvcnQgeyBVTkRFRklORUQgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuY2xhc3MgRG9jdW1lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmRvbUVsZW1lbnQgPSBkb2N1bWVudDsgLy8vXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgKHR5cGVvZiBkb2N1bWVudCA9PT0gVU5ERUZJTkVEKSA/IHVuZGVmaW5lZCA6IG5ldyBEb2N1bWVudCgpOyAgLy8vXG5cbk9iamVjdC5hc3NpZ24oRG9jdW1lbnQucHJvdG90eXBlLCBrZXlNaXhpbnMpO1xuT2JqZWN0LmFzc2lnbihEb2N1bWVudC5wcm90b3R5cGUsIGNsaWNrTWl4aW5zKTtcbk9iamVjdC5hc3NpZ24oRG9jdW1lbnQucHJvdG90eXBlLCBldmVudE1peGlucyk7XG5PYmplY3QuYXNzaWduKERvY3VtZW50LnByb3RvdHlwZSwgbW91c2VNaXhpbnMpO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIFJlYWN0IH0gZnJvbSBcIi4vcmVhY3RcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQm91bmRzIH0gZnJvbSBcIi4vYm91bmRzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE9mZnNldCB9IGZyb20gXCIuL29mZnNldFwiO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIEJvZHkgfSBmcm9tIFwiLi9lbGVtZW50L2JvZHlcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTGluayB9IGZyb20gXCIuL2VsZW1lbnQvbGlua1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBJbnB1dCB9IGZyb20gXCIuL2lucHV0RWxlbWVudC9pbnB1dFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBCdXR0b24gfSBmcm9tIFwiLi9lbGVtZW50L2J1dHRvblwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTZWxlY3QgfSBmcm9tIFwiLi9lbGVtZW50L3NlbGVjdFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBFbGVtZW50IH0gZnJvbSBcIi4vZWxlbWVudFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBDaGVja2JveCB9IGZyb20gXCIuL2VsZW1lbnQvY2hlY2tib3hcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVGV4dGFyZWEgfSBmcm9tIFwiLi9pbnB1dEVsZW1lbnQvdGV4dGFyZWFcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVGV4dEVsZW1lbnQgfSBmcm9tIFwiLi90ZXh0RWxlbWVudFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBJbnB1dEVsZW1lbnQgfSBmcm9tIFwiLi9pbnB1dEVsZW1lbnRcIjtcblxuZXhwb3J0IHsgZGVmYXVsdCBhcyB3aW5kb3cgfSBmcm9tIFwiLi93aW5kb3dcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYnV0dG9ucyB9IGZyb20gXCIuL2J1dHRvbnNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZG9jdW1lbnQgfSBmcm9tIFwiLi9kb2N1bWVudFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBldmVudFR5cGVzIH0gZnJvbSBcIi4vZXZlbnRUeXBlc1wiO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBSZWFjdCwgd2luZG93IH0gZnJvbSBcImVhc3lcIjtcblxud2luZG93LmFzc2lnbih7XG4gIFJlYWN0XG59KTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFwiLi9qdXh0YXBvc2VcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgdGFnTmFtZXMgPSBbXG4gIFwiYVwiLCBcImFiYnJcIiwgXCJhZGRyZXNzXCIsIFwiYXNpZGVcIiwgXCJhdWRpb1wiLFxuICBcImJcIiwgXCJiYXNlXCIsIFwiYmRpXCIsIFwiYmRvXCIsIFwiYmxvY2txdW90ZVwiLCBcImJvZHlcIiwgXCJiclwiLCBcImJ1dHRvblwiLFxuICBcImNhbnZhc1wiLCBcImNhcHRpb25cIiwgXCJjaXRlXCIsIFwiY29kZVwiLCBcImNvbFwiLCBcImNvbGdyb3VwXCIsXG4gIFwiZGF0YVwiLCBcImRhdGFsaXN0XCIsIFwiZGRcIiwgXCJkZWxcIiwgXCJkZXRhaWxzXCIsIFwiZGZuXCIsIFwiZGlhbG9nXCIsIFwiZGl2XCIsIFwiZGxcIiwgXCJkdFwiLCBcImVtXCIsIFwiZW1iZWRcIiwgXCJmaWVsZHNldFwiLCBcImZpZ2NhcHRpb25cIiwgXCJmaWd1cmVcIiwgXCJmb290ZXJcIiwgXCJmb3JtXCIsXG4gIFwiaDFcIiwgXCJoMlwiLCBcImgzXCIsIFwiaDRcIiwgXCJoNVwiLCBcImg2XCIsIFwiaGVhZFwiLCBcImhlYWRlclwiLCBcImhyXCIsIFwiaHRtbFwiLFxuICBcImlcIiwgXCJpZnJhbWVcIiwgXCJpbWdcIiwgXCJpbnB1dFwiLCBcImluc1wiLCBcImtiZFwiLCBcImxhYmVsXCIsIFwibGVnZW5kXCIsIFwibGlcIiwgXCJsaW5rXCIsXG4gIFwibWFpblwiLCBcIm1hcFwiLCBcIm1hcmtcIiwgXCJtZXRhXCIsIFwibWV0ZXJcIiwgXCJuYXZcIiwgXCJub3NjcmlwdFwiLFxuICBcIm9iamVjdFwiLCBcIm9sXCIsIFwib3B0Z3JvdXBcIiwgXCJvcHRpb25cIiwgXCJvdXRwdXRcIixcbiAgXCJwXCIsIFwicGFyYW1cIiwgXCJwaWN0dXJlXCIsIFwicHJlXCIsIFwicHJvZ3Jlc3NcIixcbiAgXCJxXCIsIFwicnBcIiwgXCJydFwiLCBcInJ1YnlcIixcbiAgXCJzXCIsIFwic2FtcFwiLCBcInNjcmlwdFwiLCBcInNlY3Rpb25cIiwgXCJzZWxlY3RcIiwgXCJzbWFsbFwiLCBcInNvdXJjZVwiLCBcInNwYW5cIiwgXCJzdHJvbmdcIiwgXCJzdHlsZVwiLCBcInN1YlwiLCBcInN1bW1hcnlcIiwgXCJzdXBcIiwgXCJzdmdcIixcbiAgXCJ0YWJsZVwiLCBcInRib2R5XCIsIFwidGRcIiwgXCJ0ZW1wbGF0ZVwiLCBcInRleHRhcmVhXCIsIFwidGZvb3RcIiwgXCJ0aFwiLCBcInRoZWFkXCIsIFwidGltZVwiLCBcInRpdGxlXCIsIFwidHJcIiwgXCJ0cmFja1wiLFxuICBcInVcIiwgXCJ1bFwiLFxuICBcInZhclwiLCBcInZpZGVvXCIsXG4gIFwid2JyXCJcbl07XG5cbmV4cG9ydCBkZWZhdWx0IHRhZ05hbWVzO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgVFJBQ0VfTEVWRUwgPSBcInRyYWNlXCI7XG5leHBvcnQgY29uc3QgREVCVUdfTEVWRUwgPSBcImRlYnVnXCI7XG5leHBvcnQgY29uc3QgSU5GT19MRVZFTCA9IFwiaW5mb1wiO1xuZXhwb3J0IGNvbnN0IFdBUk5JTkdfTEVWRUwgPSBcIndhcm5pbmdcIjtcbmV4cG9ydCBjb25zdCBFUlJPUl9MRVZFTCA9IFwiZXJyb3JcIjtcbmV4cG9ydCBjb25zdCBGQVRBTF9MRVZFTCA9IFwiZmF0YWxcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBUUkFDRV9MRVZFTCxcbiAgREVCVUdfTEVWRUwsXG4gIElORk9fTEVWRUwsXG4gIFdBUk5JTkdfTEVWRUwsXG4gIEVSUk9SX0xFVkVMLFxuICBGQVRBTF9MRVZFTFxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IEdFVF9NRVRIT0QgPSBcIkdFVFwiO1xuZXhwb3J0IGNvbnN0IFBPU1RfTUVUSE9EID0gXCJQT1NUXCI7XG5leHBvcnQgY29uc3QgUEFUQ0hfTUVUSE9EID0gXCJQQVRDSFwiO1xuZXhwb3J0IGNvbnN0IERFTEVURV9NRVRIT0QgPSBcIkRFTEVURVwiO1xuZXhwb3J0IGNvbnN0IE9QVElPTlNfTUVUSE9EID0gXCJPUFRJT05TXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgR0VUX01FVEhPRCxcbiAgUE9TVF9NRVRIT0QsXG4gIFBBVENIX01FVEhPRCxcbiAgREVMRVRFX01FVEhPRCxcbiAgT1BUSU9OU19NRVRIT0Rcbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBQUkFHTUFfSEVBREVSID0gXCJwcmFnbWFcIjtcbmV4cG9ydCBjb25zdCBBQ0NFUFRfSEVBREVSID0gXCJhY2NlcHRcIjtcbmV4cG9ydCBjb25zdCBMT0NBVElPTl9IRUFERVIgPSBcImxvY2F0aW9uXCI7XG5leHBvcnQgY29uc3QgVVNFUl9BR0VOVF9IRUFERVIgPSBcInVzZXItYWdlbnRcIjtcbmV4cG9ydCBjb25zdCBDT05URU5UX1RZUEVfSEVBREVSID0gXCJjb250ZW50LXR5cGVcIjtcbmV4cG9ydCBjb25zdCBBVVRIT1JJWkFUSU9OX0hFQURFUiA9IFwiYXV0aG9yaXphdGlvblwiO1xuZXhwb3J0IGNvbnN0IENBQ0hFX0NPTlRST0xfSEVBREVSID0gXCJjYWNoZS1jb250cm9sXCI7XG5leHBvcnQgY29uc3QgQ09OVEVOVF9MRU5HVEhfSEVBREVSID0gXCJjb250ZW50LWxlbmd0aFwiO1xuZXhwb3J0IGNvbnN0IFRSQU5TRkVSX0VOQ09ESU5HX0hFQURFUiA9IFwidHJhbnNmZXItZW5jb2RpbmdcIjtcbmV4cG9ydCBjb25zdCBDT05URU5UX0RJU1BPU0lUSU9OX0hFQURFUiA9IFwiY29udGVudC1kaXNwb3NpdGlvblwiO1xuZXhwb3J0IGNvbnN0IEFDQ0VTU19DT05UUk9MX0FMTE9XX09SSUdJTl9IRUFERVIgPSBcImFjY2Vzcy1jb250cm9sLWFsbG93LW9yaWdpblwiO1xuZXhwb3J0IGNvbnN0IEFDQ0VTU19DT05UUk9MX0FMTE9XX01FVEhPRFNfSEVBREVSID0gXCJhY2Nlc3MtY29udHJvbC1hbGxvdy1tZXRob2RzXCI7XG5leHBvcnQgY29uc3QgQUNDRVNTX0NPTlRST0xfQUxMT1dfSEVBREVSU19IRUFERVIgPSBcImFjY2Vzcy1jb250cm9sLWFsbG93LWhlYWRlcnNcIjtcbmV4cG9ydCBjb25zdCBBQ0NFU1NfQ09OVFJPTF9SRVFVRVNUX01FVEhPRF9IRUFERVIgPSBcImFjY2Vzcy1jb250cm9sLXJlcXVlc3QtbWV0aG9kXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgUFJBR01BX0hFQURFUixcbiAgQUNDRVBUX0hFQURFUixcbiAgTE9DQVRJT05fSEVBREVSLFxuICBVU0VSX0FHRU5UX0hFQURFUixcbiAgQ09OVEVOVF9UWVBFX0hFQURFUixcbiAgQVVUSE9SSVpBVElPTl9IRUFERVIsXG4gIENBQ0hFX0NPTlRST0xfSEVBREVSLFxuICBDT05URU5UX0xFTkdUSF9IRUFERVIsXG4gIFRSQU5TRkVSX0VOQ09ESU5HX0hFQURFUixcbiAgQ09OVEVOVF9ESVNQT1NJVElPTl9IRUFERVIsXG4gIEFDQ0VTU19DT05UUk9MX0FMTE9XX09SSUdJTl9IRUFERVIsXG4gIEFDQ0VTU19DT05UUk9MX0FMTE9XX01FVEhPRFNfSEVBREVSLFxuICBBQ0NFU1NfQ09OVFJPTF9BTExPV19IRUFERVJTX0hFQURFUixcbiAgQUNDRVNTX0NPTlRST0xfUkVRVUVTVF9NRVRIT0RfSEVBREVSXG59OyIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IFNISUZUX0tFWV9DT0RFID0gMTY7XG5leHBvcnQgY29uc3QgRVNDQVBFX0tFWUNPREUgPSAyNztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBTSElGVF9LRVlfQ09ERSxcbiAgRVNDQVBFX0tFWUNPREVcbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBVVEY4X0VOQ09ESU5HID0gXCJ1dGY4XCI7XG5leHBvcnQgY29uc3QgVVRGXzhfRU5DT0RJTkcgPSBcInV0Zi04XCI7XG5leHBvcnQgY29uc3QgQkFTRTY0X0VOQ09ESU5HID0gXCJiYXNlNjRcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBVVEY4X0VOQ09ESU5HLFxuICBVVEZfOF9FTkNPRElORyxcbiAgQkFTRTY0X0VOQ09ESU5HXG59O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgRVRYX0NIQVJBQ1RFUiA9IFwiXFx1MDAwM1wiO1xuZXhwb3J0IGNvbnN0IEJBUl9DSEFSQUNURVIgPSBcInxcIjtcbmV4cG9ydCBjb25zdCBEQVNIX0NIQVJBQ1RFUiA9IFwiLVwiO1xuZXhwb3J0IGNvbnN0IFNQQUNFX0NIQVJBQ1RFUiA9IFwiIFwiO1xuZXhwb3J0IGNvbnN0IENPTU1BX0NIQVJBQ1RFUiA9IFwiLFwiO1xuZXhwb3J0IGNvbnN0IENPTE9OX0NIQVJBQ1RFUiA9IFwiOlwiO1xuZXhwb3J0IGNvbnN0IFBFUklPRF9DSEFSQUNURVIgPSBcIi5cIjtcbmV4cG9ydCBjb25zdCBDVFJMX0NfQ0hBUkFDVEVSID0gXCJeQ1wiO1xuZXhwb3J0IGNvbnN0IFdJTERDQVJEX0NIQVJBQ1RFUiA9IFwiKlwiO1xuZXhwb3J0IGNvbnN0IEJBQ0tUSUNLX0RFTElNSVRFUiA9IFwiYFwiO1xuZXhwb3J0IGNvbnN0IE5FV19MSU5FX0NIQVJBQ1RFUiA9IFwiXFxuXCI7XG5leHBvcnQgY29uc3QgQkFDS1NQQUNFX0NIQVJBQ1RFUiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoMTI3KTtcbmV4cG9ydCBjb25zdCBBTVBFUlNBTkRfQ0hBUkFDVEVSID0gXCImXCI7XG5leHBvcnQgY29uc3QgTEVTU19USEFOX0NIQVJBQ1RFUiA9IFwiJmx0O1wiO1xuZXhwb3J0IGNvbnN0IEdSRUFURVJfVEhBTl9DSEFSQUNURVIgPSBcIiZndDtcIjtcbmV4cG9ydCBjb25zdCBGT1JXQVJEX1NMQVNIX0NIQVJBQ1RFUiA9IFwiL1wiO1xuZXhwb3J0IGNvbnN0IENBUlJJQUdFX1JFVFVSTl9DSEFSQUNURVIgPSBcIlxcclwiO1xuZXhwb3J0IGNvbnN0IEVYQ0xBTUFUSU9OX01BUktfQ0hBUkFDVEVSID0gXCIhXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgRVRYX0NIQVJBQ1RFUixcbiAgQkFSX0NIQVJBQ1RFUixcbiAgREFTSF9DSEFSQUNURVIsXG4gIFNQQUNFX0NIQVJBQ1RFUixcbiAgQ09NTUFfQ0hBUkFDVEVSLFxuICBDT0xPTl9DSEFSQUNURVIsXG4gIFBFUklPRF9DSEFSQUNURVIsXG4gIENUUkxfQ19DSEFSQUNURVIsXG4gIFdJTERDQVJEX0NIQVJBQ1RFUixcbiAgQkFDS1RJQ0tfREVMSU1JVEVSLFxuICBORVdfTElORV9DSEFSQUNURVIsXG4gIEFNUEVSU0FORF9DSEFSQUNURVIsXG4gIEJBQ0tTUEFDRV9DSEFSQUNURVIsXG4gIExFU1NfVEhBTl9DSEFSQUNURVIsXG4gIEdSRUFURVJfVEhBTl9DSEFSQUNURVIsXG4gIEZPUldBUkRfU0xBU0hfQ0hBUkFDVEVSLFxuICBDQVJSSUFHRV9SRVRVUk5fQ0hBUkFDVEVSLFxuICBFWENMQU1BVElPTl9NQVJLX0NIQVJBQ1RFUlxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IFpFUk9fMF9TVEFUVVNfQ09ERSA9IDA7XG5leHBvcnQgY29uc3QgT0tfMjAwX1NUQVRVU19DT0RFID0gMjAwO1xuZXhwb3J0IGNvbnN0IEZPVU5EXzMwMl9TVEFUVVNfQ09ERSA9IDMwMjtcbmV4cG9ydCBjb25zdCBDUkVBVEVEXzIwMV9TVEFUVVNfQ09ERSA9IDIwMTtcbmV4cG9ydCBjb25zdCBTRUVfT1RIRVJfMzAzX1NUQVRVU19DT0RFID0gMzAzO1xuZXhwb3J0IGNvbnN0IEZPUkJJRERFTl80MDNfU1RBVFVTX0NPREUgPSA0MDM7XG5leHBvcnQgY29uc3QgTk9UX0ZPVU5EXzQwNF9TVEFUVVNfQ09ERSA9IDQwNDtcbmV4cG9ydCBjb25zdCBOT19DT05URU5UXzIwNF9TVEFUVVNfQ09ERSA9IDIwNDtcbmV4cG9ydCBjb25zdCBCQURfR0FURVdBWV81MDJfU1RBVFVTX0NPREUgPSA1MDI7XG5leHBvcnQgY29uc3QgQkFEX1JFUVVFU1RfNDAwX1NUQVRVU19DT0RFID0gNDAwO1xuZXhwb3J0IGNvbnN0IFVOQVVUSE9SSVNFRF80MDFfU1RBVFVTX0NPREUgPSA0MDE7XG5leHBvcnQgY29uc3QgVE9PX01BTllfUkVRVUVTVFNfNDI5X1NUQVRVU19DT0RFID0gNDI5O1xuZXhwb3J0IGNvbnN0IElOVEVSTkFMX1NFUlZFUl9FUlJPUl81MDBfU1RBVFVTX0NPREUgPSA1MDA7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgWkVST18wX1NUQVRVU19DT0RFLFxuICBPS18yMDBfU1RBVFVTX0NPREUsXG4gIEZPVU5EXzMwMl9TVEFUVVNfQ09ERSxcbiAgQ1JFQVRFRF8yMDFfU1RBVFVTX0NPREUsXG4gIFNFRV9PVEhFUl8zMDNfU1RBVFVTX0NPREUsXG4gIEZPUkJJRERFTl80MDNfU1RBVFVTX0NPREUsXG4gIE5PVF9GT1VORF80MDRfU1RBVFVTX0NPREUsXG4gIE5PX0NPTlRFTlRfMjA0X1NUQVRVU19DT0RFLFxuICBCQURfR0FURVdBWV81MDJfU1RBVFVTX0NPREUsXG4gIEJBRF9SRVFVRVNUXzQwMF9TVEFUVVNfQ09ERSxcbiAgVU5BVVRIT1JJU0VEXzQwMV9TVEFUVVNfQ09ERSxcbiAgVE9PX01BTllfUkVRVUVTVFNfNDI5X1NUQVRVU19DT0RFLFxuICBJTlRFUk5BTF9TRVJWRVJfRVJST1JfNTAwX1NUQVRVU19DT0RFXG59O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgVEVYVF9IVE1MX0NPTlRFTlRfVFlQRSA9IFwidGV4dC9odG1sXCI7XG5leHBvcnQgY29uc3QgVEVYVF9QTEFJTl9DT05URU5UX1RZUEUgPSBcInRleHQvcGxhaW5cIjtcbmV4cG9ydCBjb25zdCBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSA9IFwiYXBwbGljYXRpb24vanNvblwiO1xuZXhwb3J0IGNvbnN0IEFQUExJQ0FUSU9OX1hfV1dXX0ZPUk1fRU5DT0RFRF9DT05URU5UX1RZUEUgPSBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiO1xuZXhwb3J0IGNvbnN0IFRFWFRfSFRNTF9DSEFSU0VUX1VURl84X0NPTlRFTlRfVFlQRSA9IFwidGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04XCI7XG5leHBvcnQgY29uc3QgVEVYVF9QTEFJTl9DSEFSU0VUX1VURl84X0NPTlRFTlRfVFlQRSA9IFwidGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOFwiO1xuZXhwb3J0IGNvbnN0IEFQUExJQ0FUSU9OX0pTT05fQ0hBUlNFVF9VVEZfOF9DT05URU5UX1RZUEUgPSBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIjtcbmV4cG9ydCBjb25zdCBBUFBMSUNBVElPTl9YX1dXV19GT1JNX0VOQ09ERURfQ0hBUlNFVF9VVEZfOF9DT05URU5UX1RZUEUgPSBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD11dGYtOFwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFRFWFRfSFRNTF9DT05URU5UX1RZUEUsXG4gIFRFWFRfUExBSU5fQ09OVEVOVF9UWVBFLFxuICBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSxcbiAgQVBQTElDQVRJT05fSlNPTl9DSEFSU0VUX1VURl84X0NPTlRFTlRfVFlQRSxcbiAgVEVYVF9IVE1MX0NIQVJTRVRfVVRGXzhfQ09OVEVOVF9UWVBFLFxuICBURVhUX1BMQUlOX0NIQVJTRVRfVVRGXzhfQ09OVEVOVF9UWVBFLFxuICBBUFBMSUNBVElPTl9YX1dXV19GT1JNX0VOQ09ERURfQ09OVEVOVF9UWVBFLFxuICBBUFBMSUNBVElPTl9YX1dXV19GT1JNX0VOQ09ERURfQ0hBUlNFVF9VVEZfOF9DT05URU5UX1RZUEVcbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBPS18yMDBfU1RBVFVTX01FU1NBR0UgPSBcIk9LXCI7XG5leHBvcnQgY29uc3QgRk9VTkRfMzAyX1NUQVRVU19NRVNTQUdFID0gXCJGb3VuZFwiO1xuZXhwb3J0IGNvbnN0IENSRUFURURfMjAxX1NUQVRVU19NRVNTQUdFID0gXCJDcmVhdGVkXCI7XG5leHBvcnQgY29uc3QgU0VFX09USEVSXzMwM19TVEFUVVNfTUVTU0FHRSA9IFwiU2VlIG90aGVyXCI7XG5leHBvcnQgY29uc3QgRk9SQklEREVOXzQwM19TVEFUVVNfTUVTU0FHRSA9IFwiRm9yYmlkZGVuXCI7XG5leHBvcnQgY29uc3QgTk9UX0ZPVU5EXzQwNF9TVEFUVVNfTUVTU0FHRSA9IFwiTm90IGZvdW5kXCI7XG5leHBvcnQgY29uc3QgTk9fQ09OVEVOVF8yMDRfU1RBVFVTX01FU1NBR0UgPSBcIk5vIGNvbnRlbnRcIjtcbmV4cG9ydCBjb25zdCBCQURfR0FURVdBWV81MDJfU1RBVFVTX01FU1NBR0UgPSBcIkJhZCBnYXRld2F5XCI7XG5leHBvcnQgY29uc3QgQkFEX1JFUVVFU1RfNDAwX1NUQVRVU19NRVNTQUdFID0gXCJCYWQgcmVxdWVzdFwiO1xuZXhwb3J0IGNvbnN0IFVOQVVUSE9SSVNFRF80MDFfU1RBVFVTX01FU1NBR0UgPSBcIlVuYXV0aG9yaXNlZFwiO1xuZXhwb3J0IGNvbnN0IFRPT19NQU5ZX1JFUVVFU1RTXzQyOV9TVEFUVVNfTUVTU0FHRSA9IFwiVG9vIG1hbnkgcmVxdWVzdHNcIjtcbmV4cG9ydCBjb25zdCBJTlRFUk5BTF9TRVJWRVJfRVJST1JfNTAwX1NUQVRVU19NRVNTQUdFID0gXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBPS18yMDBfU1RBVFVTX01FU1NBR0UsXG4gIEZPVU5EXzMwMl9TVEFUVVNfTUVTU0FHRSxcbiAgQ1JFQVRFRF8yMDFfU1RBVFVTX01FU1NBR0UsXG4gIFNFRV9PVEhFUl8zMDNfU1RBVFVTX01FU1NBR0UsXG4gIEZPUkJJRERFTl80MDNfU1RBVFVTX01FU1NBR0UsXG4gIE5PVF9GT1VORF80MDRfU1RBVFVTX01FU1NBR0UsXG4gIE5PX0NPTlRFTlRfMjA0X1NUQVRVU19NRVNTQUdFLFxuICBCQURfR0FURVdBWV81MDJfU1RBVFVTX01FU1NBR0UsXG4gIEJBRF9SRVFVRVNUXzQwMF9TVEFUVVNfTUVTU0FHRSxcbiAgVU5BVVRIT1JJU0VEXzQwMV9TVEFUVVNfTUVTU0FHRSxcbiAgVE9PX01BTllfUkVRVUVTVFNfNDI5X1NUQVRVU19NRVNTQUdFLFxuICBJTlRFUk5BTF9TRVJWRVJfRVJST1JfNTAwX1NUQVRVU19NRVNTQUdFXG59O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZmlyc3QoYXJyYXkpIHsgcmV0dXJuIGFycmF5WzBdO31cblxuZXhwb3J0IGZ1bmN0aW9uIHNlY29uZChhcnJheSkgeyByZXR1cm4gYXJyYXlbMV07IH1cblxuZXhwb3J0IGZ1bmN0aW9uIHRoaXJkKGFycmF5KSB7IHJldHVybiBhcnJheVsyXTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gZm91cnRoKGFycmF5KSB7IHJldHVybiBhcnJheVszXTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gZmlmdGgoYXJyYXkpIHsgcmV0dXJuIGFycmF5WzRdOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWZ0aExhc3QoYXJyYXkpIHsgcmV0dXJuIGFycmF5W2FycmF5Lmxlbmd0aCAtIDVdOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3VydGhMYXN0KGFycmF5KSB7IHJldHVybiBhcnJheVthcnJheS5sZW5ndGggLSA0XTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gdGhpcmRMYXN0KGFycmF5KSB7IHJldHVybiBhcnJheVthcnJheS5sZW5ndGggLSAzXTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gc2Vjb25kTGFzdChhcnJheSkgeyByZXR1cm4gYXJyYXlbYXJyYXkubGVuZ3RoIC0gMl07IH1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpcnN0TGFzdChhcnJheSkgeyByZXR1cm4gYXJyYXlbYXJyYXkubGVuZ3RoIC0gMV07IH1cblxuZXhwb3J0IGZ1bmN0aW9uIGxhc3QoYXJyYXkpIHsgcmV0dXJuIGFycmF5W2FycmF5Lmxlbmd0aCAtIDFdOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBoZWFkKGFycmF5KSB7IHJldHVybiBhcnJheS5zbGljZSgwLCAxKTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gdGFpbChhcnJheSkgeyByZXR1cm4gYXJyYXkuc2xpY2UoMSk7IH1cblxuZXhwb3J0IGZ1bmN0aW9uIGJhY2soYXJyYXkpIHsgcmV0dXJuIGFycmF5LnNsaWNlKGFycmF5Lmxlbmd0aCAtIDEpOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBmcm9udChhcnJheSkgeyByZXR1cm4gYXJyYXkuc2xpY2UoMCwgYXJyYXkubGVuZ3RoIC0gMSk7IH1cblxuZXhwb3J0IGZ1bmN0aW9uIHB1c2goYXJyYXkxLCBhcnJheTIpIHsgQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoYXJyYXkxLCBhcnJheTIpOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiB1bnNoaWZ0KGFycmF5MSwgYXJyYXkyKSB7IEFycmF5LnByb3RvdHlwZS51bnNoaWZ0LmFwcGx5KGFycmF5MSwgYXJyYXkyKTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0KGFycmF5MSwgZWxlbWVudE9yQXJyYXkyKSB7XG4gIGNvbnN0IGFycmF5MiA9IChlbGVtZW50T3JBcnJheTIgaW5zdGFuY2VvZiBBcnJheSkgP1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50T3JBcnJheTIgOlxuICAgICAgICAgICAgICAgICAgICAgW2VsZW1lbnRPckFycmF5Ml07XG4gIFxuICBwdXNoKGFycmF5MSwgYXJyYXkyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyKGFycmF5KSB7XG4gIGNvbnN0IHN0YXJ0ID0gMDtcbiAgXG4gIHJldHVybiBhcnJheS5zcGxpY2Uoc3RhcnQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29weShhcnJheTEsIGFycmF5Mikge1xuICBjb25zdCBzdGFydCA9IDAsXG4gICAgICAgIGRlbGV0ZUNvdW50ID0gYXJyYXkyLmxlbmd0aDsgIC8vL1xuICBcbiAgc3BsaWNlKGFycmF5MSwgc3RhcnQsIGRlbGV0ZUNvdW50LCBhcnJheTIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2UoYXJyYXkxLCBhcnJheTIpIHsgQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoYXJyYXkxLCBhcnJheTIpOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBzcGxpY2UoYXJyYXkxLCBzdGFydCwgZGVsZXRlQ291bnQgPSBJbmZpbml0eSwgYXJyYXkyID0gW10pIHtcbiAgY29uc3QgYXJncyA9IFtzdGFydCwgZGVsZXRlQ291bnQsIC4uLmFycmF5Ml0sXG4gICAgICAgIGRlbGV0ZWRJdGVtc0FycmF5ID0gQXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShhcnJheTEsIGFyZ3MpO1xuXG4gIHJldHVybiBkZWxldGVkSXRlbXNBcnJheTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2UoYXJyYXksIGVsZW1lbnQsIHRlc3QpIHtcbiAgbGV0IHN0YXJ0O1xuICBcbiAgY29uc3QgZm91bmQgPSBhcnJheS5zb21lKChlbGVtZW50LCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IHBhc3NlZCA9IHRlc3QoZWxlbWVudCwgaW5kZXgpO1xuXG4gICAgaWYgKHBhc3NlZCkge1xuICAgICAgc3RhcnQgPSBpbmRleDsgIC8vL1xuICAgICAgXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0pO1xuICBcbiAgaWYgKGZvdW5kKSB7XG4gICAgY29uc3QgZGVsZXRlQ291bnQgPSAxO1xuXG4gICAgYXJyYXkuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCwgZWxlbWVudCk7XG4gIH1cblxuICByZXR1cm4gZm91bmQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXIoYXJyYXksIHRlc3QpIHtcbiAgY29uc3QgZmlsdGVyZWRFbGVtZW50cyA9IFtdO1xuICBcbiAgYmFja3dhcmRzRm9yRWFjaChhcnJheSwgKGVsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgcGFzc2VkID0gdGVzdChlbGVtZW50LCBpbmRleCk7XG5cbiAgICBpZiAoIXBhc3NlZCkge1xuICAgICAgY29uc3Qgc3RhcnQgPSBpbmRleCwgIC8vL1xuICAgICAgICAgICAgZGVsZXRlQ291bnQgPSAxLFxuICAgICAgICAgICAgZGVsZXRlZEVsZW1lbnRzID0gYXJyYXkuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCksXG4gICAgICAgICAgICBmaXJzdERlbGV0ZWRFbGVtZW50ID0gZmlyc3QoZGVsZXRlZEVsZW1lbnRzKTtcbiAgICAgIFxuICAgICAgZmlsdGVyZWRFbGVtZW50cy51bnNoaWZ0KGZpcnN0RGVsZXRlZEVsZW1lbnQpOyAgLy8vXG4gICAgfVxuICB9KTtcbiAgXG4gIHJldHVybiBmaWx0ZXJlZEVsZW1lbnRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZChhcnJheSwgdGVzdCkge1xuICBjb25zdCBlbGVtZW50cyA9IFtdO1xuXG4gIGZvcndhcmRzRm9yRWFjaChhcnJheSwgKGVsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgcGFzc2VkID0gdGVzdChlbGVtZW50LCBpbmRleCk7XG5cbiAgICBpZiAocGFzc2VkKSB7XG4gICAgICBlbGVtZW50cy5wdXNoKGVsZW1lbnQpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGVsZW1lbnRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJ1bmUoYXJyYXksIHRlc3QpIHtcbiAgbGV0IHBydW5lZEVsZW1lbnQgPSB1bmRlZmluZWQ7XG4gIFxuICBhcnJheS5zb21lKChlbGVtZW50LCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IHBhc3NlZCA9IHRlc3QoZWxlbWVudCwgaW5kZXgpO1xuXG4gICAgaWYgKCFwYXNzZWQpIHtcbiAgICAgIGNvbnN0IHN0YXJ0ID0gaW5kZXgsICAvLy9cbiAgICAgICAgICAgIGRlbGV0ZUNvdW50ID0gMSxcbiAgICAgICAgICAgIGRlbGV0ZWRFbGVtZW50cyA9IGFycmF5LnNwbGljZShzdGFydCwgZGVsZXRlQ291bnQpLFxuICAgICAgICAgICAgZmlyc3REZWxldGVkRWxlbWVudCA9IGZpcnN0KGRlbGV0ZWRFbGVtZW50cyk7XG4gICAgICBcbiAgICAgIHBydW5lZEVsZW1lbnQgPSBmaXJzdERlbGV0ZWRFbGVtZW50OyAgLy8vXG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG4gIFxuICByZXR1cm4gcHJ1bmVkRWxlbWVudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhdGNoKGFycmF5LCBlbGVtZW50LCB0ZXN0KSB7XG4gIGNvbnN0IGZvdW5kID0gYXJyYXkuc29tZSgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBwYXNzZWQgPSB0ZXN0KGVsZW1lbnQsIGluZGV4KTtcblxuICAgIGlmIChwYXNzZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG5cblxuICBpZiAoZm91bmQpIHtcbiAgICBhcnJheS5wdXNoKGVsZW1lbnQpO1xuICB9XG5cbiAgcmV0dXJuIGZvdW5kO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXVnbWVudChhcnJheTEsIGFycmF5MiwgdGVzdCkge1xuICBhcnJheTIuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBwYXNzZWQgPSB0ZXN0KGVsZW1lbnQsIGluZGV4KTtcblxuICAgIGlmIChwYXNzZWQpIHtcbiAgICAgIGFycmF5MS5wdXNoKGVsZW1lbnQpO1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXBhcmF0ZShhcnJheSwgYXJyYXkxLCBhcnJheTIsIHRlc3QpIHtcbiAgYXJyYXkuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBwYXNzZWQgPSB0ZXN0KGVsZW1lbnQsIGluZGV4KTtcblxuICAgIHBhc3NlZCA/XG4gICAgICBhcnJheTEucHVzaChlbGVtZW50KSA6XG4gICAgICAgIGFycmF5Mi5wdXNoKGVsZW1lbnQpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmRzU29tZShhcnJheSwgY2FsbGJhY2spIHtcbiAgY29uc3QgYXJyYXlMZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGFycmF5TGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IGFycmF5W2luZGV4XSxcbiAgICAgICAgICByZXN1bHQgPSBjYWxsYmFjayhlbGVtZW50LCBpbmRleCk7XG4gICAgXG4gICAgaWYgKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmFja3dhcmRzU29tZShhcnJheSwgY2FsbGJhY2spIHtcbiAgY29uc3QgYXJyYXlMZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgZm9yIChsZXQgaW5kZXggPSBhcnJheUxlbmd0aCAtIDE7IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICBjb25zdCBlbGVtZW50ID0gYXJyYXlbaW5kZXhdLFxuICAgICAgICAgIHJlc3VsdCA9IGNhbGxiYWNrKGVsZW1lbnQsIGluZGV4KTtcblxuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmRzRXZlcnkoYXJyYXksIGNhbGxiYWNrKSB7XG4gIGNvbnN0IGFycmF5TGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuXG4gIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBhcnJheUxlbmd0aDsgaW5kZXgrKykge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBhcnJheVtpbmRleF0sXG4gICAgICAgICAgcmVzdWx0ID0gY2FsbGJhY2soZWxlbWVudCwgaW5kZXgpO1xuXG4gICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJhY2t3YXJkc0V2ZXJ5KGFycmF5LCBjYWxsYmFjaykge1xuICBjb25zdCBhcnJheUxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICBmb3IgKGxldCBpbmRleCA9IGFycmF5TGVuZ3RoIC0gMTsgaW5kZXggPj0gMDsgaW5kZXgtLSkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBhcnJheVtpbmRleF0sXG4gICAgICAgICAgcmVzdWx0ID0gY2FsbGJhY2soZWxlbWVudCwgaW5kZXgpO1xuXG4gICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmRzUmVkdWNlKGFycmF5LCBjYWxsYmFjaywgaW5pdGlhbFZhbHVlKSB7XG4gIGxldCB2YWx1ZSA9IGluaXRpYWxWYWx1ZTtcblxuICBmb3J3YXJkc0ZvckVhY2goYXJyYXksIChlbGVtZW50LCBpbmRleCkgPT4ge1xuICAgIHZhbHVlID0gY2FsbGJhY2sodmFsdWUsIGVsZW1lbnQsIGluZGV4KTtcbiAgfSk7XG5cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmFja3dhcmRzUmVkdWNlKGFycmF5LCBjYWxsYmFjaywgaW5pdGlhbFZhbHVlKSB7XG4gIGxldCB2YWx1ZSA9IGluaXRpYWxWYWx1ZTtcblxuICBiYWNrd2FyZHNGb3JFYWNoKGFycmF5LCAoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICB2YWx1ZSA9IGNhbGxiYWNrKHZhbHVlLCBlbGVtZW50LCBpbmRleCk7XG4gIH0pO1xuXG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmRzRm9yRWFjaChhcnJheSwgY2FsbGJhY2spIHtcbiAgY29uc3QgYXJyYXlMZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGFycmF5TGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IGFycmF5W2luZGV4XTtcblxuICAgIGNhbGxiYWNrKGVsZW1lbnQsIGluZGV4KTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYmFja3dhcmRzRm9yRWFjaChhcnJheSwgY2FsbGJhY2spIHtcbiAgY29uc3QgYXJyYXlMZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgZm9yIChsZXQgaW5kZXggPSBhcnJheUxlbmd0aCAtIDE7IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICBjb25zdCBlbGVtZW50ID0gYXJyYXlbaW5kZXhdO1xuXG4gICAgY2FsbGJhY2soZWxlbWVudCwgaW5kZXgpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZmlyc3QsXG4gIHNlY29uZCxcbiAgdGhpcmQsXG4gIGZvdXJ0aCxcbiAgZmlmdGgsXG4gIGZpZnRoTGFzdCxcbiAgZm91cnRoTGFzdCxcbiAgdGhpcmRMYXN0LFxuICBzZWNvbmRMYXN0LFxuICBmaXJzdExhc3QsXG4gIGxhc3QsXG4gIGhlYWQsXG4gIHRhaWwsXG4gIGJhY2ssXG4gIGZyb250LFxuICBwdXNoLFxuICB1bnNoaWZ0LFxuICBjb25jYXQsXG4gIGNsZWFyLFxuICBjb3B5LFxuICBtZXJnZSxcbiAgc3BsaWNlLFxuICByZXBsYWNlLFxuICBmaWx0ZXIsXG4gIGZpbmQsXG4gIHBydW5lLFxuICBwYXRjaCxcbiAgYXVnbWVudCxcbiAgc2VwYXJhdGUsXG4gIGZvcndhcmRzU29tZSxcbiAgYmFja3dhcmRzU29tZSxcbiAgZm9yd2FyZHNFdmVyeSxcbiAgYmFja3dhcmRzRXZlcnksXG4gIGZvcndhcmRzUmVkdWNlLFxuICBiYWNrd2FyZHNSZWR1Y2UsXG4gIGZvcndhcmRzRm9yRWFjaCxcbiAgYmFja3dhcmRzRm9yRWFjaFxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IERBVEEgPSBcImRhdGFcIjtcbmV4cG9ydCBjb25zdCBFUlJPUiA9IFwiZXJyb3JcIjtcbmV4cG9ydCBjb25zdCBTVFJJTkcgPSBcInN0cmluZ1wiO1xuZXhwb3J0IGNvbnN0IE5VTUJFUiA9IFwibnVtYmVyXCI7XG5leHBvcnQgY29uc3QgQk9PTEVBTiA9IFwiYm9vbGVhblwiO1xuZXhwb3J0IGNvbnN0IERFRkFVTFQgPSBcImRlZmF1bHRcIjtcbmV4cG9ydCBjb25zdCBFTlZJUk9OTUVOVCA9IFwiRU5WSVJPTk1FTlRcIjtcbmV4cG9ydCBjb25zdCBFTVBUWV9TVFJJTkcgPSBcIlwiO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzZWNvbmQgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2FycmF5XCI7XG5pbXBvcnQgeyBFTVBUWV9TVFJJTkcgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBDT0xPTl9DSEFSQUNURVIsIEFNUEVSU0FORF9DSEFSQUNURVIgfSBmcm9tIFwiLi4vY2hhcmFjdGVyc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gb3ZlcndyaXRlKGhlYWRlcnMsIG5hbWUsIHZhbHVlKSB7XG4gIGNvbnN0IGxvd2VyQ2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCksXG4gICAgICAgIGV4aXN0aW5nTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhoZWFkZXJzKSwgIC8vL1xuICAgICAgICBleGlzdGluZ05hbWUgPSBleGlzdGluZ05hbWVzLmZpbmQoKGV4aXN0aW5nTmFtZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGV4aXN0aW5nTG93ZXJDYXNlTmFtZSA9IGV4aXN0aW5nTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgICAgaWYgKGV4aXN0aW5nTG93ZXJDYXNlTmFtZSA9PT0gbG93ZXJDYXNlTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9KSB8fCBudWxsO1xuXG4gIGlmIChleGlzdGluZ05hbWUgIT09IG51bGwpIHtcbiAgICBoZWFkZXJzW2V4aXN0aW5nTmFtZV0gPSB2YWx1ZTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5kZXJ3cml0ZShoZWFkZXJzLCBuYW1lLCB2YWx1ZSkge1xuICBjb25zdCBsb3dlckNhc2VOYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpLFxuICAgICAgICBleGlzdGluZ05hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoaGVhZGVycyksICAvLy9cbiAgICAgICAgZXhpc3RpbmdOYW1lID0gZXhpc3RpbmdOYW1lcy5maW5kKChleGlzdGluZ05hbWUpID0+IHtcbiAgICAgICAgICBjb25zdCBleGlzdGluZ0xvd2VyQ2FzZU5hbWUgPSBleGlzdGluZ05hbWUudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAgIGlmIChleGlzdGluZ0xvd2VyQ2FzZU5hbWUgPT09IGxvd2VyQ2FzZU5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSkgfHwgbnVsbDtcblxuICBpZiAoZXhpc3RpbmdOYW1lID09PSBudWxsKSB7XG4gICAgaGVhZGVyc1tuYW1lXSA9IHZhbHVlO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3J0RnJvbUhvc3QoaG9zdCkge1xuICBsZXQgcG9ydDtcblxuICBjb25zdCBtYXRjaGVzID0gaG9zdC5tYXRjaCgvXmh0dHBzPzpcXC9cXC8oW15cXC9dKykvKSxcbiAgICAgICAgc2Vjb25kTWF0Y2ggPSBzZWNvbmQobWF0Y2hlcyksXG4gICAgICAgIGluZGV4ID0gc2Vjb25kTWF0Y2guaW5kZXhPZihDT0xPTl9DSEFSQUNURVIpO1xuXG4gIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICBjb25zdCBzZWN1cmUgPSBzZWN1cmVGcm9tSG9zdChob3N0KTtcblxuICAgIHBvcnQgPSBzZWN1cmUgPyA0NDMgOiA4MDsgLy8vXG4gIH0gZWxzZSB7XG4gICAgY29uc3Qgc3RhcnQgPSBpbmRleCArIDEsXG4gICAgICAgICAgcG9ydFN0cmluZyA9IHNlY29uZE1hdGNoLnN1YnN0cmluZyhzdGFydCk7XG5cbiAgICBwb3J0ID0gTnVtYmVyKHBvcnRTdHJpbmcpO1xuICB9XG5cbiAgcmV0dXJuIHBvcnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWN1cmVGcm9tSG9zdChob3N0KSB7XG4gIGNvbnN0IHNlY3VyZSA9IC9eaHR0cHM6XFwvXFwvLy50ZXN0KGhvc3QpO1xuXG4gIHJldHVybiBzZWN1cmU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBob3N0bmFtZUZyb21Ib3N0KGhvc3QpIHtcbiAgY29uc3QgbWF0Y2hlcyA9IGhvc3QubWF0Y2goL15odHRwcz86XFwvXFwvKFteOlxcL10rKS8pLFxuICAgICAgICBzZWNvbmRNYXRjaCA9IHNlY29uZChtYXRjaGVzKSxcbiAgICAgICAgaG9zdG5hbWUgPSBzZWNvbmRNYXRjaDsgLy8vXG5cbiAgcmV0dXJuIGhvc3RuYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcXVlcnlTdHJpbmdGcm9tUXVlcnkocXVlcnkpIHtcbiAgY29uc3QgbmFtZXMgPSBPYmplY3Qua2V5cyhxdWVyeSksXG4gICAgICAgIG5hbWVzTGVuZ3RoID0gbmFtZXMubGVuZ3RoLFxuICAgICAgICBsYXN0SW5kZXggPSBuYW1lc0xlbmd0aCAtIDEsXG4gICAgICAgIHF1ZXJ5U3RyaW5nID0gbmFtZXMucmVkdWNlKChxdWVyeVN0cmluZywgbmFtZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IHF1ZXJ5W25hbWVdLFxuICAgICAgICAgICAgICAgIGVuY29kZWROYW1lID0gZW5jb2RlVVJJQ29tcG9uZW50KG5hbWUpLFxuICAgICAgICAgICAgICAgIGVuY29kZWRWYWx1ZSA9IGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSksXG4gICAgICAgICAgICAgICAgYW1wZXJzYW5kT3JOb3RoaW5nID0gKGluZGV4ICE9PSBsYXN0SW5kZXgpID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFNUEVSU0FORF9DSEFSQUNURVIgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFTVBUWV9TVFJJTkc7XG4gIFxuICAgICAgICAgIHF1ZXJ5U3RyaW5nICs9IGAke2VuY29kZWROYW1lfT0ke2VuY29kZWRWYWx1ZX0ke2FtcGVyc2FuZE9yTm90aGluZ31gO1xuICBcbiAgICAgICAgICByZXR1cm4gcXVlcnlTdHJpbmc7XG4gICAgICAgIH0sIEVNUFRZX1NUUklORyk7XG5cbiAgcmV0dXJuIHF1ZXJ5U3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXJsRnJvbUhvc3RVUklBbmRRdWVyeShob3N0LCB1cmksIHF1ZXJ5KSB7XG4gIGNvbnN0IHF1ZXJ5U3RyaW5nID0gcXVlcnlTdHJpbmdGcm9tUXVlcnkocXVlcnkpLFxuICAgICAgICB1cmwgPSAocXVlcnlTdHJpbmcgPT09IEVNUFRZX1NUUklORykgP1xuICAgICAgICAgICAgICAgIGAke2hvc3R9JHt1cml9YCA6XG4gICAgICAgICAgICAgICAgICBgJHtob3N0fSR7dXJpfT8ke3F1ZXJ5U3RyaW5nfWA7XG5cbiAgcmV0dXJuIHVybDtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBvdmVyd3JpdGUsXG4gIHVuZGVyd3JpdGUsXG4gIHBvcnRGcm9tSG9zdCxcbiAgc2VjdXJlRnJvbUhvc3QsXG4gIGhvc3RuYW1lRnJvbUhvc3QsXG4gIHF1ZXJ5U3RyaW5nRnJvbVF1ZXJ5LFxuICB1cmxGcm9tSG9zdFVSSUFuZFF1ZXJ5XG59O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBHRVRfTUVUSE9ELCBQT1NUX01FVEhPRCB9IGZyb20gXCIuLi9tZXRob2RzXCI7XG5pbXBvcnQgeyBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSB9IGZyb20gXCIuLi9jb250ZW50VHlwZXNcIjtcbmltcG9ydCB7IEFDQ0VQVF9IRUFERVIsIENPTlRFTlRfVFlQRV9IRUFERVIgfSBmcm9tIFwiLi4vaGVhZGVyc1wiO1xuaW1wb3J0IHsgdW5kZXJ3cml0ZSwgdXJsRnJvbUhvc3RVUklBbmRRdWVyeSB9IGZyb20gXCIuLi91dGlsaXRpZXMvaHR0cFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0KGhvc3QsIHVyaSwgcXVlcnksIGhlYWRlcnMsIGNhbGxiYWNrKSB7XG4gIGlmIChjYWxsYmFjayA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2FsbGJhY2sgPSBoZWFkZXJzOyAvLy9cbiAgICBoZWFkZXJzID0ge307XG4gIH1cblxuICBjb25zdCBtZXRob2QgPSBHRVRfTUVUSE9ELFxuICAgICAgICBhY2NlcHQgPSBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSxcbiAgICAgICAgY29udGVudCA9IG51bGw7XG5cbiAgdW5kZXJ3cml0ZUFjY2VwdEhlYWRlcihoZWFkZXJzLCBhY2NlcHQpO1xuXG4gIHJlcXVlc3QoaG9zdCwgdXJpLCBxdWVyeSwgbWV0aG9kLCBoZWFkZXJzLCBjb250ZW50LCBjYWxsYmFjayk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3N0KGhvc3QsIHVyaSwgcXVlcnksIGhlYWRlcnMsIGNvbnRlbnQsIGNhbGxiYWNrKSB7XG4gIGlmIChjYWxsYmFjayA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2FsbGJhY2sgPSBjb250ZW50O1xuICAgIGNvbnRlbnQgPSBoZWFkZXJzO1xuICAgIGhlYWRlcnMgPSB7fTtcbiAgfVxuXG4gIGNvbnN0IG1ldGhvZCA9IFBPU1RfTUVUSE9ELFxuICAgICAgICBhY2NlcHQgPSBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSxcbiAgICAgICAgY29udGVudFR5cGUgPSBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRTtcblxuICB1bmRlcndyaXRlQWNjZXB0SGVhZGVyKGhlYWRlcnMsIGFjY2VwdCk7XG5cbiAgdW5kZXJ3cml0ZUNvbnRlbnRUeXBlSGVhZGVyKGhlYWRlcnMsIGNvbnRlbnRUeXBlKTtcblxuICByZXF1ZXN0KGhvc3QsIHVyaSwgcXVlcnksIG1ldGhvZCwgaGVhZGVycywgY29udGVudCwgY2FsbGJhY2spO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVxdWVzdChob3N0LCB1cmksIHF1ZXJ5LCBtZXRob2QsIGhlYWRlcnMsIGNvbnRlbnQsIGNhbGxiYWNrKSB7XG4gIGNvbnN0IHVybCA9IHVybEZyb21Ib3N0VVJJQW5kUXVlcnkoaG9zdCwgdXJpLCBxdWVyeSksXG4gICAgICAgIGFjY2VwdCA9IGhlYWRlcnNbQUNDRVBUX0hFQURFUl0gfHwgbnVsbCxcbiAgICAgICAgY29udGVudFR5cGUgPSBoZWFkZXJzW0NPTlRFTlRfVFlQRV9IRUFERVJdIHx8IG51bGwsXG4gICAgICAgIHhtbEh0dHBSZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgaWYgKGNvbnRlbnRUeXBlID09PSBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSkge1xuICAgIGNvbnN0IGpzb24gPSBjb250ZW50LCAgLy8vXG4gICAgICAgICAganNvblN0cmluZyA9IEpTT04uc3RyaW5naWZ5KGpzb24pO1xuXG4gICAgY29udGVudCA9IGpzb25TdHJpbmc7ICAvLy9cbiAgfVxuXG4gIHhtbEh0dHBSZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHtcbiAgICBjb25zdCB7IHJlYWR5U3RhdGUsIHN0YXR1cywgcmVzcG9uc2UgfSA9IHhtbEh0dHBSZXF1ZXN0LFxuICAgICAgICAgIHN0YXR1c0NvZGUgPSBzdGF0dXM7XG5cbiAgICBpZiAocmVhZHlTdGF0ZSA9PSA0KSB7XG4gICAgICBsZXQgY29udGVudCA9IHJlc3BvbnNlO1xuXG4gICAgICBpZiAoYWNjZXB0ID09PSBBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGpzb25TdHJpbmcgPSBjb250ZW50LCAgLy8vXG4gICAgICAgICAgICAgICAganNvbiA9IEpTT04ucGFyc2UoanNvblN0cmluZyk7XG5cbiAgICAgICAgICBjb250ZW50ID0ganNvbjsgIC8vL1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnRlbnQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKGNvbnRlbnQsIHN0YXR1c0NvZGUpO1xuICAgIH1cbiAgfTtcblxuICB4bWxIdHRwUmVxdWVzdC5vcGVuKG1ldGhvZCwgdXJsKTtcblxuICBpZiAoYWNjZXB0ICE9PSBudWxsKSB7XG4gICAgeG1sSHR0cFJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihBQ0NFUFRfSEVBREVSLCBhY2NlcHQpO1xuICB9XG5cbiAgaWYgKGNvbnRlbnRUeXBlICE9PSBudWxsKSB7XG4gICAgeG1sSHR0cFJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihDT05URU5UX1RZUEVfSEVBREVSLCBjb250ZW50VHlwZSk7XG4gIH1cblxuICAoY29udGVudCAhPT0gbnVsbCkgP1xuICAgIHhtbEh0dHBSZXF1ZXN0LnNlbmQoY29udGVudCkgOlxuICAgICAgeG1sSHR0cFJlcXVlc3Quc2VuZCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdldCxcbiAgcG9zdCxcbiAgcmVxdWVzdFxufVxuXG5mdW5jdGlvbiB1bmRlcndyaXRlQWNjZXB0SGVhZGVyKGhlYWRlcnMsIGFjY2VwdCkge1xuICBjb25zdCBuYW1lID0gQUNDRVBUX0hFQURFUiwgIC8vL1xuICAgICAgICB2YWx1ZSA9IGFjY2VwdDsgLy8vXG5cbiAgdW5kZXJ3cml0ZShoZWFkZXJzLCBuYW1lLCB2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHVuZGVyd3JpdGVDb250ZW50VHlwZUhlYWRlcihoZWFkZXJzLCBjb250ZW50VFlwZSkge1xuICBjb25zdCBuYW1lID0gQ09OVEVOVF9UWVBFX0hFQURFUiwgIC8vL1xuICAgICAgICB2YWx1ZSA9IGNvbnRlbnRUWXBlOyAvLy9cblxuICB1bmRlcndyaXRlKGhlYWRlcnMsIG5hbWUsIHZhbHVlKTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZmlyc3QsIHNlY29uZCwgbGFzdCB9IGZyb20gXCIuLi91dGlsaXRpZXMvYXJyYXlcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzUGF0aE5hbWUocGF0aCkge1xuICBwYXRoID0gcGF0aC5yZXBsYWNlKC9eXFwvLywgRU1QVFlfU1RSSU5HKS5yZXBsYWNlKC9cXC8kLywgRU1QVFlfU1RSSU5HKTsgLy8vXG5cbiAgY29uc3QgcGF0aE5hbWUgPSAoL1xcLy8udGVzdChwYXRoKSA9PT0gZmFsc2UpO1xuXG4gIHJldHVybiBwYXRoTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUGF0aFRvcG1vc3ROYW1lKHBhdGgpIHtcbiAgY29uc3QgcGF0aE5hbWUgPSBpc1BhdGhOYW1lKHBhdGgpLFxuICAgICAgICBwYXRoQWJzb2x1dGVQYXRoID0gaXNQYXRoQWJzb2x1dGVQYXRoKHBhdGgpLFxuICAgICAgICBwYXRoVG9wbW9zdE5hbWUgPSAocGF0aE5hbWUgJiYgcGF0aEFic29sdXRlUGF0aCk7XG5cbiAgcmV0dXJuIHBhdGhUb3Btb3N0TmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUGF0aFJlbGF0aXZlUGF0aChwYXRoKSB7XG4gIGNvbnN0IHBhdGhSZWxhdGl2ZVBhdGggPSAhL15cXC8vLnRlc3QocGF0aCk7XG5cbiAgcmV0dXJuIHBhdGhSZWxhdGl2ZVBhdGg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1BhdGhBYnNvbHV0ZVBhdGgocGF0aCkge1xuICBjb25zdCBwYXRoQWJzb2x1dGVQYXRoID0gL15cXC8vLnRlc3QocGF0aCk7XG5cbiAgcmV0dXJuIHBhdGhBYnNvbHV0ZVBhdGg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1RvcG1vc3ROYW1lSW5BYnNvbHV0ZVBhdGgodG9wbW9zdE5hbWUsIGFic29sdXRlUGF0aCkge1xuICBjb25zdCByZWdFeHAgPSBuZXcgUmVnRXhwKGBeJHt0b3Btb3N0TmFtZX0oPzpcXFxcLy4rKT8kYCksXG4gICAgICAgIHRvcG1vc3ROYW1lSW5BYnNvbHV0ZVBhdGggPSByZWdFeHAudGVzdChhYnNvbHV0ZVBhdGgpO1xuXG4gIHJldHVybiB0b3Btb3N0TmFtZUluQWJzb2x1dGVQYXRoXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21iaW5lUGF0aHMocGF0aCwgcmVsYXRpdmVQYXRoKSB7XG4gIGxldCBjb21iaW5lZFBhdGggPSBudWxsO1xuXG4gIGNvbnN0IHBhdGhOYW1lcyA9IHBhdGguc3BsaXQoL1xcLy8pLFxuICAgICAgICByZWxhdGl2ZVBhdGhOYW1lcyA9IHJlbGF0aXZlUGF0aC5zcGxpdCgvXFwvLyk7XG5cbiAgbGV0IGxhc3RQYXRoTmFtZSxcbiAgICAgIGZpcnN0UmVsYXRpdmVQYXRoTmFtZSA9IGZpcnN0KHJlbGF0aXZlUGF0aE5hbWVzKTtcblxuICBpZiAoZmlyc3RSZWxhdGl2ZVBhdGhOYW1lID09PSBcIi5cIikge1xuICAgIHJlbGF0aXZlUGF0aE5hbWVzLnNoaWZ0KCk7XG4gIH1cblxuICBmaXJzdFJlbGF0aXZlUGF0aE5hbWUgPSBmaXJzdChyZWxhdGl2ZVBhdGhOYW1lcyk7XG4gIGxhc3RQYXRoTmFtZSA9IGxhc3QocGF0aE5hbWVzKTtcblxuICB3aGlsZSAoKGZpcnN0UmVsYXRpdmVQYXRoTmFtZSA9PT0gXCIuLlwiKSAmJiAobGFzdFBhdGhOYW1lICE9PSB1bmRlZmluZWQpKSB7XG4gICAgcmVsYXRpdmVQYXRoTmFtZXMuc2hpZnQoKTtcbiAgICBwYXRoTmFtZXMucG9wKCk7XG5cbiAgICBmaXJzdFJlbGF0aXZlUGF0aE5hbWUgPSBmaXJzdChyZWxhdGl2ZVBhdGhOYW1lcyk7XG4gICAgbGFzdFBhdGhOYW1lID0gbGFzdChwYXRoTmFtZXMpO1xuICB9XG5cbiAgaWYgKGxhc3RQYXRoTmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgY29tYmluZWRQYXRoTmFtZXMgPSBbXS5jb25jYXQocGF0aE5hbWVzKS5jb25jYXQocmVsYXRpdmVQYXRoTmFtZXMpO1xuXG4gICAgY29tYmluZWRQYXRoID0gY29tYmluZWRQYXRoTmFtZXMuam9pbihcIi9cIik7XG4gIH1cblxuICByZXR1cm4gY29tYmluZWRQYXRoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0ZW5hdGVQYXRocyhwYXRoLCByZWxhdGl2ZVBhdGgpIHtcbiAgcGF0aCA9IHBhdGgucmVwbGFjZSgvXFwvJC8sIEVNUFRZX1NUUklORyk7ICAvLy9cblxuICBjb25zdCBjb25jYXRlbmF0ZWRQYXRoID0gYCR7cGF0aH0vJHtyZWxhdGl2ZVBhdGh9YDtcblxuICByZXR1cm4gY29uY2F0ZW5hdGVkUGF0aDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJvdHRvbW1vc3ROYW1lRnJvbVBhdGgocGF0aCkge1xuICBsZXQgYm90dG9tbW9zdE5hbWUgPSBudWxsO1xuXG4gIGNvbnN0IG1hdGNoZXMgPSBwYXRoLm1hdGNoKC9eLipcXC8oW15cXC9dK1xcLz8pJC8pO1xuXG4gIGlmIChtYXRjaGVzICE9PSBudWxsKSB7XG4gICAgY29uc3Qgc2Vjb25kTWF0Y2ggPSBzZWNvbmQobWF0Y2hlcyk7XG5cbiAgICBib3R0b21tb3N0TmFtZSA9IHNlY29uZE1hdGNoOyAgLy8vXG4gIH1cblxuICByZXR1cm4gYm90dG9tbW9zdE5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b3Btb3N0RGlyZWN0b3J5UGF0aEZyb21QYXRoKHBhdGgpIHtcbiAgY29uc3QgbWF0Y2hlcyA9IHBhdGgubWF0Y2goL14oLispXFwvW15cXC9dK1xcLz8kLyksXG4gICAgICAgIHNlY29uZE1hdGNoID0gc2Vjb25kKG1hdGNoZXMpLFxuICAgICAgICB0b3Btb3N0RGlyZWN0b3J5UGF0aCA9IHNlY29uZE1hdGNoOyAvLy9cblxuICByZXR1cm4gdG9wbW9zdERpcmVjdG9yeVBhdGg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b3Btb3N0RGlyZWN0b3J5TmFtZUZyb21QYXRoKHBhdGgpIHtcbiAgbGV0IHRvcG1vc3REaXJlY3RvcnlOYW1lID0gbnVsbDtcblxuICBjb25zdCBtYXRjaGVzID0gcGF0aC5tYXRjaCgvXihbXlxcL10rKVxcLy4rJC8pO1xuXG4gIGlmIChtYXRjaGVzICE9PSBudWxsKSB7XG4gICAgY29uc3Qgc2Vjb25kTWF0Y2ggPSBzZWNvbmQobWF0Y2hlcyk7XG5cbiAgICB0b3Btb3N0RGlyZWN0b3J5TmFtZSA9IHNlY29uZE1hdGNoOyAgLy8vXG4gIH1cblxuICByZXR1cm4gdG9wbW9zdERpcmVjdG9yeU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lRnJvbVBhdGgocGF0aCkge1xuICBsZXQgcGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZSA9IG51bGw7XG5cbiAgY29uc3QgbWF0Y2hlcyA9IHBhdGgubWF0Y2goL14oLiopXFwvW15cXC9dK1xcLz8kLyk7XG5cbiAgaWYgKG1hdGNoZXMgIT09IG51bGwpIHtcbiAgICBjb25zdCBzZWNvbmRNYXRjaCA9IHNlY29uZChtYXRjaGVzKTtcblxuICAgIHBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUgPSBzZWNvbmRNYXRjaDsgLy8vXG4gIH1cblxuICByZXR1cm4gcGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhdGhXaXRob3V0VG9wbW9zdERpcmVjdG9yeU5hbWVGcm9tUGF0aChwYXRoKSB7XG4gIGxldCBwYXRoV2l0aG91dFRvcG1vc3REaXJlY3RvcnlOYW1lID0gbnVsbDtcblxuICBjb25zdCBtYXRjaGVzID0gcGF0aC5tYXRjaCgvXlteXFwvXStcXC8oLispJC8pO1xuXG4gIGlmIChtYXRjaGVzICE9PSBudWxsKSB7XG4gICAgY29uc3Qgc2Vjb25kTWF0Y2ggPSBzZWNvbmQobWF0Y2hlcyk7XG5cbiAgICBwYXRoV2l0aG91dFRvcG1vc3REaXJlY3RvcnlOYW1lID0gc2Vjb25kTWF0Y2g7XG4gIH1cblxuICByZXR1cm4gcGF0aFdpdGhvdXRUb3Btb3N0RGlyZWN0b3J5TmFtZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBpc1BhdGhOYW1lLFxuICBpc1BhdGhUb3Btb3N0TmFtZSxcbiAgaXNQYXRoUmVsYXRpdmVQYXRoLFxuICBpc1BhdGhBYnNvbHV0ZVBhdGgsXG4gIGlzVG9wbW9zdE5hbWVJbkFic29sdXRlUGF0aCxcbiAgY29tYmluZVBhdGhzLFxuICBjb25jYXRlbmF0ZVBhdGhzLFxuICBib3R0b21tb3N0TmFtZUZyb21QYXRoLFxuICB0b3Btb3N0RGlyZWN0b3J5UGF0aEZyb21QYXRoLFxuICB0b3Btb3N0RGlyZWN0b3J5TmFtZUZyb21QYXRoLFxuICBwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lRnJvbVBhdGgsXG4gIHBhdGhXaXRob3V0VG9wbW9zdERpcmVjdG9yeU5hbWVGcm9tUGF0aFxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB3aGlsc3Qob3BlcmF0aW9uLCBkb25lLCBjb250ZXh0KSB7XHJcbiAgbGV0IGNvdW50ID0gLTE7XHJcblxyXG4gIGZ1bmN0aW9uIG5leHQoKSB7XHJcbiAgICBjb3VudCsrO1xyXG5cclxuICAgIGNvbnN0IGluZGV4ID0gY291bnQsICAvLy9cclxuICAgICAgICAgIHRlcm1pbmF0ZSA9IG9wZXJhdGlvbihuZXh0LCBkb25lLCBjb250ZXh0LCBpbmRleCk7XHJcblxyXG4gICAgaWYgKHRlcm1pbmF0ZSkge1xyXG4gICAgICBkb25lKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZXh0KCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmb3JFYWNoKGFycmF5LCBvcGVyYXRpb24sIGRvbmUsIGNvbnRleHQpIHtcclxuICBjb25zdCBsZW5ndGggPSBhcnJheS5sZW5ndGg7ICAvLy9cclxuXHJcbiAgbGV0IGNvdW50ID0gLTE7XHJcblxyXG4gIGZ1bmN0aW9uIG5leHQoKSB7XHJcbiAgICBjb3VudCsrO1xyXG5cclxuICAgIGNvbnN0IHRlcm1pbmF0ZSA9IChjb3VudCA9PT0gbGVuZ3RoKTtcclxuXHJcbiAgICBpZiAodGVybWluYXRlKSB7XHJcbiAgICAgIGRvbmUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnN0IGluZGV4ID0gY291bnQsICAvLy9cclxuICAgICAgICAgICAgZWxlbWVudCA9IGFycmF5W2luZGV4XTtcclxuXHJcbiAgICAgIG9wZXJhdGlvbihlbGVtZW50LCBuZXh0LCBkb25lLCBjb250ZXh0LCBpbmRleCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZXh0KCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXF1ZW5jZShvcGVyYXRpb25zLCBkb25lLCBjb250ZXh0KSB7XHJcbiAgY29uc3QgbGVuZ3RoID0gb3BlcmF0aW9ucy5sZW5ndGg7ICAvLy9cclxuXHJcbiAgbGV0IGNvdW50ID0gLTE7XHJcblxyXG4gIGZ1bmN0aW9uIG5leHQoKSB7XHJcbiAgICBjb3VudCsrO1xyXG5cclxuICAgIGNvbnN0IHRlcm1pbmF0ZSA9IChjb3VudCA9PT0gbGVuZ3RoKTtcclxuXHJcbiAgICBpZiAodGVybWluYXRlKSB7XHJcbiAgICAgIGRvbmUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnN0IGluZGV4ID0gY291bnQsICAvLy9cclxuICAgICAgICAgICAgb3BlcmF0aW9uID0gb3BlcmF0aW9uc1tpbmRleF07XHJcblxyXG4gICAgICBvcGVyYXRpb24obmV4dCwgZG9uZSwgY29udGV4dCwgaW5kZXgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbmV4dCgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZXZlbnR1YWxseShvcGVyYXRpb25zLCBkb25lLCBjb250ZXh0KSB7XHJcbiAgY29uc3QgbGVuZ3RoID0gb3BlcmF0aW9ucy5sZW5ndGg7ICAvLy9cclxuXHJcbiAgbGV0IGNvdW50ID0gMDtcclxuXHJcbiAgZnVuY3Rpb24gbmV4dCgpIHtcclxuICAgIGNvdW50Kys7XHJcblxyXG4gICAgY29uc3QgdGVybWluYXRlID0gKGNvdW50ID09PSBsZW5ndGgpO1xyXG5cclxuICAgIGlmICh0ZXJtaW5hdGUpIHtcclxuICAgICAgZG9uZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb3BlcmF0aW9ucy5mb3JFYWNoKChvcGVyYXRpb24sIGluZGV4KSA9PiB7XHJcbiAgICBvcGVyYXRpb24obmV4dCwgZG9uZSwgY29udGV4dCwgaW5kZXgpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVwZWF0ZWRseShvcGVyYXRpb24sIGxlbmd0aCwgZG9uZSwgY29udGV4dCkge1xyXG4gIGxldCBjb3VudCA9IDA7XHJcblxyXG4gIGZ1bmN0aW9uIG5leHQoKSB7XHJcbiAgICBjb3VudCsrO1xyXG5cclxuICAgIGNvbnN0IHRlcm1pbmF0ZSA9IChjb3VudCA9PT0gbGVuZ3RoKTtcclxuXHJcbiAgICBpZiAodGVybWluYXRlKSB7XHJcbiAgICAgIGRvbmUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcclxuICAgIG9wZXJhdGlvbihuZXh0LCBkb25lLCBjb250ZXh0LCBpbmRleCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZHNGb3JFYWNoKGFycmF5LCBvcGVyYXRpb24sIGRvbmUsIGNvbnRleHQpIHtcclxuICBjb25zdCBsZW5ndGggPSBhcnJheS5sZW5ndGg7ICAvLy9cclxuXHJcbiAgbGV0IGNvdW50ID0gLTE7XHJcblxyXG4gIGZ1bmN0aW9uIG5leHQoKSB7XHJcbiAgICBjb3VudCsrO1xyXG5cclxuICAgIGNvbnN0IHRlcm1pbmF0ZSA9IChjb3VudCA9PT0gbGVuZ3RoKTtcclxuXHJcbiAgICBpZiAodGVybWluYXRlKSB7XHJcbiAgICAgIGRvbmUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnN0IGluZGV4ID0gY291bnQsICAvLy9cclxuICAgICAgICAgICAgZWxlbWVudCA9IGFycmF5W2luZGV4XTtcclxuXHJcbiAgICAgIG9wZXJhdGlvbihlbGVtZW50LCBuZXh0LCBkb25lLCBjb250ZXh0LCBpbmRleCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZXh0KCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBiYWNrd2FyZHNGb3JFYWNoKGFycmF5LCBvcGVyYXRpb24sIGRvbmUsIGNvbnRleHQpIHtcclxuICBjb25zdCBsZW5ndGggPSBhcnJheS5sZW5ndGg7ICAvLy9cclxuXHJcbiAgbGV0IGNvdW50ID0gbGVuZ3RoO1xyXG5cclxuICBmdW5jdGlvbiBuZXh0KCkge1xyXG4gICAgY291bnQtLTtcclxuXHJcbiAgICBjb25zdCB0ZXJtaW5hdGUgPSAoY291bnQgPT09IC0xKTtcclxuXHJcbiAgICBpZiAodGVybWluYXRlKSB7XHJcbiAgICAgIGRvbmUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnN0IGluZGV4ID0gY291bnQsICAvLy9cclxuICAgICAgICAgICAgZWxlbWVudCA9IGFycmF5W2luZGV4XTtcclxuXHJcbiAgICAgIG9wZXJhdGlvbihlbGVtZW50LCBuZXh0LCBkb25lLCBjb250ZXh0LCBpbmRleCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZXh0KCk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICB3aGlsc3QsXHJcbiAgZm9yRWFjaCxcclxuICBzZXF1ZW5jZSxcclxuICBldmVudHVhbGx5LFxyXG4gIHJlcGVhdGVkbHksXHJcbiAgZm9yd2FyZHNGb3JFYWNoLFxyXG4gIGJhY2t3YXJkc0ZvckVhY2hcclxufTtcclxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIGxldmVscyB9IGZyb20gXCIuL2xldmVsc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBtZXRob2RzIH0gZnJvbSBcIi4vbWV0aG9kc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBoZWFkZXJzIH0gZnJvbSBcIi4vaGVhZGVyc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBrZXlDb2RlcyB9IGZyb20gXCIuL2tleUNvZGVzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGVuY29kaW5ncyB9IGZyb20gXCIuL2VuY29kaW5nc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBjaGFyYWN0ZXJzIH0gZnJvbSBcIi4vY2hhcmFjdGVyc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBzdGF0dXNDb2RlcyB9IGZyb20gXCIuL3N0YXR1c0NvZGVzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGNvbnRlbnRUeXBlcyB9IGZyb20gXCIuL2NvbnRlbnRUeXBlc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBzdGF0dXNNZXNzYWdlcyB9IGZyb20gXCIuL3N0YXR1c01lc3NhZ2VzXCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgYWpheFV0aWxpdGllcyB9IGZyb20gXCIuL3V0aWxpdGllcy9hamF4XCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgcGF0aFV0aWxpdGllcyB9IGZyb20gXCIuL3V0aWxpdGllcy9wYXRoXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGh0dHBVdGlsaXRpZXMgfSBmcm9tIFwiLi91dGlsaXRpZXMvaHR0cFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBhcnJheVV0aWxpdGllcyB9IGZyb20gXCIuL3V0aWxpdGllcy9hcnJheVwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBhc3luY2hyb25vdXNVdGlsaXRpZXMgfSBmcm9tIFwiLi91dGlsaXRpZXMvYXN5bmNocm9ub3VzXCI7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgeyBjaGFyYWN0ZXJzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xyXG5cclxuY29uc3QgeyBMRVNTX1RIQU5fQ0hBUkFDVEVSLCBBTVBFUlNBTkRfQ0hBUkFDVEVSLCBHUkVBVEVSX1RIQU5fQ0hBUkFDVEVSIH0gPSBjaGFyYWN0ZXJzO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXNlQ29udGVudChjb250ZW50KSB7XHJcbiAgY29uc3Qgc2FuaXRpc2VkQ29udGVudCA9IGNvbnRlbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8mLywgQU1QRVJTQU5EX0NIQVJBQ1RFUilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC88LywgTEVTU19USEFOX0NIQVJBQ1RFUilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8+LywgR1JFQVRFUl9USEFOX0NIQVJBQ1RFUik7XHJcblxyXG4gIHJldHVybiBzYW5pdGlzZWRDb250ZW50O1xyXG59XHJcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IHR5cGVUeXBlID0gXCJ0eXBlXCI7XG5leHBvcnQgY29uc3QgbmFtZVR5cGUgPSBcIm5hbWVcIjtcbmV4cG9ydCBjb25zdCBjb21tZW50VHlwZSA9IFwiY29tbWVudFwiO1xuZXhwb3J0IGNvbnN0IGVuZE9mTGluZVR5cGUgPSBcImVuZC1vZi1saW5lXCI7XG5leHBvcnQgY29uc3Qgd2hpdGVzcGFjZVR5cGUgPSBcIndoaXRlc3BhY2VcIjtcbmV4cG9ydCBjb25zdCBzdHJpbmdMaXRlcmFsVHlwZSA9IFwic3RyaW5nLWxpdGVyYWxcIjtcbmV4cG9ydCBjb25zdCBlbmRPZkxpbmVDb21tZW50VHlwZSA9IGAke2VuZE9mTGluZVR5cGV9ICR7Y29tbWVudFR5cGV9YDtcbmV4cG9ydCBjb25zdCBzaW5nbGVMaW5lQ29tbWVudFR5cGUgPSBgc2luZ2xlLWxpbmUgJHtjb21tZW50VHlwZX1gO1xuZXhwb3J0IGNvbnN0IHJlZ3VsYXJFeHByZXNzaW9uVHlwZSA9IFwicmVndWxhci1leHByZXNzaW9uXCI7XG5leHBvcnQgY29uc3QgZW5kT2ZNdWx0aUxpbmVDb21tZW50VHlwZSA9IGBlbmQtb2YtbXVsdGktbGluZSAke2NvbW1lbnRUeXBlfWA7XG5leHBvcnQgY29uc3Qgc3RhcnRPZk11bHRpTGluZUNvbW1lbnRUeXBlID0gYHN0YXJ0LW9mLW11bHRpLWxpbmUgJHtjb21tZW50VHlwZX1gO1xuZXhwb3J0IGNvbnN0IG1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFR5cGUgPSBgbWlkZGxlLW9mLW11bHRpLWxpbmUgJHtjb21tZW50VHlwZX1gO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHR5cGVUeXBlLFxuICBuYW1lVHlwZSxcbiAgY29tbWVudFR5cGUsXG4gIGVuZE9mTGluZVR5cGUsXG4gIHdoaXRlc3BhY2VUeXBlLFxuICBzdHJpbmdMaXRlcmFsVHlwZSxcbiAgZW5kT2ZMaW5lQ29tbWVudFR5cGUsXG4gIHNpbmdsZUxpbmVDb21tZW50VHlwZSxcbiAgcmVndWxhckV4cHJlc3Npb25UeXBlLFxuICBlbmRPZk11bHRpTGluZUNvbW1lbnRUeXBlLFxuICBzdGFydE9mTXVsdGlMaW5lQ29tbWVudFR5cGUsXG4gIG1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFR5cGVcbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX25lY2Vzc2FyeSA9IHJlcXVpcmUoXCJuZWNlc3NhcnlcIik7XG52YXIgX2NvbnRlbnQgPSByZXF1aXJlKFwiLi91dGlsaXRpZXMvY29udGVudFwiKTtcbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gICAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG4gICAgZm9yKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspYXJyMltpXSA9IGFycltpXTtcbiAgICByZXR1cm4gYXJyMjtcbn1cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTtcbn1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7XG4gICAgICAgIF9jb25zdHJ1Y3QgPSBSZWZsZWN0LmNvbnN0cnVjdDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBfY29uc3RydWN0ID0gZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gICAgICAgICAgICB2YXIgYSA9IFtcbiAgICAgICAgICAgICAgICBudWxsXG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgYS5wdXNoLmFwcGx5KGEsIGFyZ3MpO1xuICAgICAgICAgICAgdmFyIENvbnN0cnVjdG9yID0gRnVuY3Rpb24uYmluZC5hcHBseShQYXJlbnQsIGEpO1xuICAgICAgICAgICAgdmFyIGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKCk7XG4gICAgICAgICAgICBpZiAoQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihpbnN0YW5jZSwgQ2xhc3MucHJvdG90eXBlKTtcbiAgICAgICAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIF9jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspe1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gICAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgaXRlcltTeW1ib2wuaXRlcmF0b3JdICE9IG51bGwgfHwgaXRlcltcIkBAaXRlcmF0b3JcIl0gIT0gbnVsbCkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59XG5mdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICAgIHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7XG59XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gICAgaWYgKCFvKSByZXR1cm47XG4gICAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gICAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShuKTtcbiAgICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59XG52YXIgZmlyc3QgPSBfbmVjZXNzYXJ5LmFycmF5VXRpbGl0aWVzLmZpcnN0O1xudmFyIFRva2VuID0gLyojX19QVVJFX18qLyBmdW5jdGlvbigpIHtcbiAgICBmdW5jdGlvbiBUb2tlbih0eXBlLCBjb250ZW50LCBpbm5lckhUTUwsIHNpZ25pZmljYW50KSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUb2tlbik7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuY29udGVudCA9IGNvbnRlbnQ7XG4gICAgICAgIHRoaXMuaW5uZXJIVE1MID0gaW5uZXJIVE1MO1xuICAgICAgICB0aGlzLnNpZ25pZmljYW50ID0gc2lnbmlmaWNhbnQ7XG4gICAgfVxuICAgIF9jcmVhdGVDbGFzcyhUb2tlbiwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0VHlwZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFR5cGUoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudHlwZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImdldENvbnRlbnRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRDb250ZW50KCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbnRlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRJbm5lckhUTUxcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJbm5lckhUTUwoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW5uZXJIVE1MO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0Q29udGVudExlbmd0aFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvbnRlbnRMZW5ndGgoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRlbnRMZW5ndGggPSB0aGlzLmNvbnRlbnQubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb250ZW50TGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiaXNTaWduaWZpY2FudFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGlzU2lnbmlmaWNhbnQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2lnbmlmaWNhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJpc0NvbW1lbnRUb2tlblwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGlzQ29tbWVudFRva2VuKCkge1xuICAgICAgICAgICAgICAgIHZhciB0eXBlSW5jbHVkZXNDb21tZW50VHlwZSA9IHRoaXMudHlwZS5pbmNsdWRlcyhfdHlwZXMuY29tbWVudFR5cGUpLCBjb21tZW50VG9rZW4gPSB0eXBlSW5jbHVkZXNDb21tZW50VHlwZTsgLy8vXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1lbnRUb2tlbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImlzRW5kT2ZMaW5lVG9rZW5cIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpc0VuZE9mTGluZVRva2VuKCkge1xuICAgICAgICAgICAgICAgIHZhciB0eXBlRW5kT2ZMaW5lVHlwZSA9IHRoaXMudHlwZS5pbmNsdWRlcyhfdHlwZXMuZW5kT2ZMaW5lVHlwZSksIGVuZE9mTGluZVRva2VuID0gdHlwZUVuZE9mTGluZVR5cGU7IC8vL1xuICAgICAgICAgICAgICAgIHJldHVybiBlbmRPZkxpbmVUb2tlbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImlzV2hpdGVzcGFjZVRva2VuXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaXNXaGl0ZXNwYWNlVG9rZW4oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHR5cGVXaGl0ZXNwYWNlVHlwZSA9IHRoaXMudHlwZSA9PT0gX3R5cGVzLndoaXRlc3BhY2VUeXBlLCB3aGl0ZXNwYWNlVG9rZW4gPSB0eXBlV2hpdGVzcGFjZVR5cGU7IC8vL1xuICAgICAgICAgICAgICAgIHJldHVybiB3aGl0ZXNwYWNlVG9rZW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJpc0VxdWFsVG9cIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpc0VxdWFsVG8odG9rZW4pIHtcbiAgICAgICAgICAgICAgICB2YXIgZXF1YWxUb1Rva2VuID0gdGhpcyA9PT0gdG9rZW47XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVxdWFsVG9Ub2tlbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcIm1hdGNoXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gbWF0Y2godG9rZW4pIHtcbiAgICAgICAgICAgICAgICB2YXIgdHlwZSA9IHRva2VuLmdldFR5cGUoKSwgY29udGVudCA9IHRva2VuLmdldENvbnRlbnQoKSwgc2lnbmlmaWNhbnQgPSB0b2tlbi5pc1NpZ25pZmljYW50KCksIG1hdGNoZXMgPSB0aGlzLnR5cGUgPT09IHR5cGUgJiYgdGhpcy5jb250ZW50ID09PSBjb250ZW50ICYmIHRoaXMuc2lnbmlmaWNhbnQgPT09IHNpZ25pZmljYW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaGVzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiYXNIVE1MXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gYXNIVE1MKCkge1xuICAgICAgICAgICAgICAgIHZhciBjbGFzc05hbWUgPSB0aGlzLnR5cGUsIGh0bWwgPSBcIjxzcGFuIGNsYXNzPVxcXCJcIi5jb25jYXQoY2xhc3NOYW1lLCBcIlxcXCI+XCIpLmNvbmNhdCh0aGlzLmlubmVySFRNTCwgXCI8L3NwYW4+XCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBodG1sO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiY2xvbmVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZShDbGFzcywgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24sIHNpZ25pZmljYW50KSB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcmVtYWluaW5nQXJndW1lbnRzID0gbmV3IEFycmF5KF9sZW4gPiA0ID8gX2xlbiAtIDQgOiAwKSwgX2tleSA9IDQ7IF9rZXkgPCBfbGVuOyBfa2V5Kyspe1xuICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdBcmd1bWVudHNbX2tleSAtIDRdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgdG9rZW4gPSBudWxsO1xuICAgICAgICAgICAgICAgIGlmIChzdGFydFBvc2l0aW9uICE9PSBlbmRQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY29udGVudCA9IHRoaXMuZ2V0Q29udGVudCgpO1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5zdWJzdHJpbmcoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyAvLy9cbiAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGUgPSB0aGlzLmdldFR5cGUoKSwgc2FuaXRpc2VkQ29udGVudCA9ICgwLCBfY29udGVudCkuc2FuaXRpc2VDb250ZW50KGNvbnRlbnQpLCBpbm5lckhUTUwgPSBzYW5pdGlzZWRDb250ZW50OyAvLy9cbiAgICAgICAgICAgICAgICAgICAgdG9rZW4gPSBfY29uc3RydWN0KENsYXNzLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlubmVySFRNTCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25pZmljYW50XG4gICAgICAgICAgICAgICAgICAgIF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShyZW1haW5pbmdBcmd1bWVudHMpKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0b2tlbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0sIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcIm1hdGNoXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gbWF0Y2goQ2xhc3MsIGNvbnRlbnQsIHNpZ25pZmljYW50KSB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcmVtYWluaW5nQXJndW1lbnRzID0gbmV3IEFycmF5KF9sZW4gPiAzID8gX2xlbiAtIDMgOiAwKSwgX2tleSA9IDM7IF9rZXkgPCBfbGVuOyBfa2V5Kyspe1xuICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdBcmd1bWVudHNbX2tleSAtIDNdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgdG9rZW4gPSBudWxsO1xuICAgICAgICAgICAgICAgIHZhciByZWd1bGFyRXhwcmVzc2lvbiA9IENsYXNzLnJlZ3VsYXJFeHByZXNzaW9uLCBtYXRjaGVzID0gY29udGVudC5tYXRjaChyZWd1bGFyRXhwcmVzc2lvbik7XG4gICAgICAgICAgICAgICAgaWYgKG1hdGNoZXMgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gbWF0Y2hlcy5pbmRleDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlyc3RNYXRjaCA9IGZpcnN0KG1hdGNoZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCA9IGZpcnN0TWF0Y2g7IC8vL1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRlbnRMZW5ndGggPSBjb250ZW50Lmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb250ZW50TGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0eXBlID0gQ2xhc3MudHlwZSwgc2FuaXRpc2VkQ29udGVudCA9ICgwLCBfY29udGVudCkuc2FuaXRpc2VDb250ZW50KGNvbnRlbnQpLCBpbm5lckhUTUwgPSBzYW5pdGlzZWRDb250ZW50OyAvLy9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbiA9IF9jb25zdHJ1Y3QoQ2xhc3MsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5uZXJIVE1MLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaWduaWZpY2FudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShyZW1haW5pbmdBcmd1bWVudHMpKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbUNvbnRlbnRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBmcm9tQ29udGVudChDbGFzcywgY29udGVudCwgc2lnbmlmaWNhbnQpIHtcbiAgICAgICAgICAgICAgICBmb3IodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCByZW1haW5pbmdBcmd1bWVudHMgPSBuZXcgQXJyYXkoX2xlbiA+IDMgPyBfbGVuIC0gMyA6IDApLCBfa2V5ID0gMzsgX2tleSA8IF9sZW47IF9rZXkrKyl7XG4gICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0FyZ3VtZW50c1tfa2V5IC0gM10gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB0eXBlID0gQ2xhc3MudHlwZSwgc2FuaXRpc2VkQ29udGVudCA9ICgwLCBfY29udGVudCkuc2FuaXRpc2VDb250ZW50KGNvbnRlbnQpLCBpbm5lckhUTUwgPSBzYW5pdGlzZWRDb250ZW50LCB0b2tlbiA9IF9jb25zdHJ1Y3QoQ2xhc3MsIFtcbiAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgaW5uZXJIVE1MLFxuICAgICAgICAgICAgICAgICAgICBzaWduaWZpY2FudFxuICAgICAgICAgICAgICAgIF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShyZW1haW5pbmdBcmd1bWVudHMpKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbUNvbnRlbnRBbmRUeXBlXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbUNvbnRlbnRBbmRUeXBlKENsYXNzLCBjb250ZW50LCB0eXBlLCBzaWduaWZpY2FudCkge1xuICAgICAgICAgICAgICAgIGZvcih2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHJlbWFpbmluZ0FyZ3VtZW50cyA9IG5ldyBBcnJheShfbGVuID4gNCA/IF9sZW4gLSA0IDogMCksIF9rZXkgPSA0OyBfa2V5IDwgX2xlbjsgX2tleSsrKXtcbiAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nQXJndW1lbnRzW19rZXkgLSA0XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHNhbml0aXNlZENvbnRlbnQgPSAoMCwgX2NvbnRlbnQpLnNhbml0aXNlQ29udGVudChjb250ZW50KSwgaW5uZXJIVE1MID0gc2FuaXRpc2VkQ29udGVudCwgdG9rZW4gPSBfY29uc3RydWN0KENsYXNzLCBbXG4gICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgIGlubmVySFRNTCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmlmaWNhbnRcbiAgICAgICAgICAgICAgICBdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocmVtYWluaW5nQXJndW1lbnRzKSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0b2tlbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0pO1xuICAgIHJldHVybiBUb2tlbjtcbn0oKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFRva2VuO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1TDNOeVl5OTBiMnRsYmk1cWN5SmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpjSW5WelpTQnpkSEpwWTNSY0lqdGNibHh1YVcxd2IzSjBJSHNnWVhKeVlYbFZkR2xzYVhScFpYTWdmU0JtY205dElGd2libVZqWlhOellYSjVYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lITmhibWwwYVhObFEyOXVkR1Z1ZENCOUlHWnliMjBnWENJdUwzVjBhV3hwZEdsbGN5OWpiMjUwWlc1MFhDSTdYRzVwYlhCdmNuUWdleUJqYjIxdFpXNTBWSGx3WlN3Z1pXNWtUMlpNYVc1bFZIbHdaU3dnZDJocGRHVnpjR0ZqWlZSNWNHVWdmU0JtY205dElGd2lMaTkwZVhCbGMxd2lPMXh1WEc1amIyNXpkQ0I3SUdacGNuTjBJSDBnUFNCaGNuSmhlVlYwYVd4cGRHbGxjenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJ4aGMzTWdWRzlyWlc0Z2UxeHVJQ0JqYjI1emRISjFZM1J2Y2loMGVYQmxMQ0JqYjI1MFpXNTBMQ0JwYm01bGNraFVUVXdzSUhOcFoyNXBabWxqWVc1MEtTQjdYRzRnSUNBZ2RHaHBjeTUwZVhCbElEMGdkSGx3WlR0Y2JpQWdJQ0IwYUdsekxtTnZiblJsYm5RZ1BTQmpiMjUwWlc1ME8xeHVJQ0FnSUhSb2FYTXVhVzV1WlhKSVZFMU1JRDBnYVc1dVpYSklWRTFNTzF4dUlDQWdJSFJvYVhNdWMybG5ibWxtYVdOaGJuUWdQU0J6YVdkdWFXWnBZMkZ1ZER0Y2JpQWdmVnh1WEc0Z0lHZGxkRlI1Y0dVb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkSGx3WlR0Y2JpQWdmVnh1WEc0Z0lHZGxkRU52Ym5SbGJuUW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dWRHVnVkRHRjYmlBZ2ZWeHVJQ0JjYmlBZ1oyVjBTVzV1WlhKSVZFMU1LQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG1sdWJtVnlTRlJOVER0Y2JpQWdmVnh1WEc0Z0lHZGxkRU52Ym5SbGJuUk1aVzVuZEdnb0tTQjdYRzRnSUNBZ1kyOXVjM1FnWTI5dWRHVnVkRXhsYm1kMGFDQTlJSFJvYVhNdVkyOXVkR1Z1ZEM1c1pXNW5kR2c3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdZMjl1ZEdWdWRFeGxibWQwYUR0Y2JpQWdmVnh1WEc0Z0lHbHpVMmxuYm1sbWFXTmhiblFvS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWMybG5ibWxtYVdOaGJuUTdYRzRnSUgxY2JpQWdYRzRnSUdselEyOXRiV1Z1ZEZSdmEyVnVLQ2tnZTF4dUlDQWdJR052Ym5OMElIUjVjR1ZKYm1Oc2RXUmxjME52YlcxbGJuUlVlWEJsSUQwZ2RHaHBjeTUwZVhCbExtbHVZMngxWkdWektHTnZiVzFsYm5SVWVYQmxLU3hjYmlBZ0lDQWdJQ0FnSUNCamIyMXRaVzUwVkc5clpXNGdQU0IwZVhCbFNXNWpiSFZrWlhORGIyMXRaVzUwVkhsd1pUc2dMeTh2WEc1Y2JpQWdJQ0J5WlhSMWNtNGdZMjl0YldWdWRGUnZhMlZ1TzF4dUlDQjlYRzVjYmlBZ2FYTkZibVJQWmt4cGJtVlViMnRsYmlncElIdGNiaUFnSUNCamIyNXpkQ0IwZVhCbFJXNWtUMlpNYVc1bFZIbHdaU0E5SUNoMGFHbHpMblI1Y0dVdWFXNWpiSFZrWlhNb1pXNWtUMlpNYVc1bFZIbHdaU2twTEZ4dUlDQWdJQ0FnSUNBZ0lHVnVaRTltVEdsdVpWUnZhMlZ1SUQwZ2RIbHdaVVZ1WkU5bVRHbHVaVlI1Y0dVN0lDOHZMMXh1WEc0Z0lDQWdjbVYwZFhKdUlHVnVaRTltVEdsdVpWUnZhMlZ1TzF4dUlDQjlYRzVjYmlBZ2FYTlhhR2wwWlhOd1lXTmxWRzlyWlc0b0tTQjdYRzRnSUNBZ1kyOXVjM1FnZEhsd1pWZG9hWFJsYzNCaFkyVlVlWEJsSUQwZ0tIUm9hWE11ZEhsd1pTQTlQVDBnZDJocGRHVnpjR0ZqWlZSNWNHVXBMRnh1SUNBZ0lDQWdJQ0FnSUhkb2FYUmxjM0JoWTJWVWIydGxiaUE5SUhSNWNHVlhhR2wwWlhOd1lXTmxWSGx3WlRzZ0x5OHZYRzVjYmlBZ0lDQnlaWFIxY200Z2QyaHBkR1Z6Y0dGalpWUnZhMlZ1TzF4dUlDQjlYRzVjYmlBZ2FYTkZjWFZoYkZSdktIUnZhMlZ1S1NCN1hHNGdJQ0FnWTI5dWMzUWdaWEYxWVd4VWIxUnZhMlZ1SUQwZ0tIUm9hWE1nUFQwOUlIUnZhMlZ1S1R0Y2JseHVJQ0FnSUhKbGRIVnliaUJsY1hWaGJGUnZWRzlyWlc0N1hHNGdJSDFjYmx4dUlDQnRZWFJqYUNoMGIydGxiaWtnZTF4dUlDQWdJR052Ym5OMElIUjVjR1VnUFNCMGIydGxiaTVuWlhSVWVYQmxLQ2tzWEc0Z0lDQWdJQ0FnSUNBZ1kyOXVkR1Z1ZENBOUlIUnZhMlZ1TG1kbGRFTnZiblJsYm5Rb0tTeGNiaUFnSUNBZ0lDQWdJQ0J6YVdkdWFXWnBZMkZ1ZENBOUlIUnZhMlZ1TG1selUybG5ibWxtYVdOaGJuUW9LU3hjYmlBZ0lDQWdJQ0FnSUNCdFlYUmphR1Z6SUQwZ0tDaDBhR2x6TG5SNWNHVWdQVDA5SUhSNWNHVXBJQ1ltSUNoMGFHbHpMbU52Ym5SbGJuUWdQVDA5SUdOdmJuUmxiblFwSUNZbUlDaDBhR2x6TG5OcFoyNXBabWxqWVc1MElEMDlQU0J6YVdkdWFXWnBZMkZ1ZENrcE8xeHVYRzRnSUNBZ2NtVjBkWEp1SUcxaGRHTm9aWE03WEc0Z0lIMWNibHh1SUNCaGMwaFVUVXdvS1NCN1hHNGdJQ0FnWTI5dWMzUWdZMnhoYzNOT1lXMWxJRDBnZEdocGN5NTBlWEJsTENBZ0x5OHZYRzRnSUNBZ0lDQWdJQ0FnYUhSdGJDQTlJR0E4YzNCaGJpQmpiR0Z6Y3oxY0lpUjdZMnhoYzNOT1lXMWxmVndpUGlSN2RHaHBjeTVwYm01bGNraFVUVXg5UEM5emNHRnVQbUE3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdhSFJ0YkR0Y2JpQWdmVnh1WEc0Z0lHTnNiMjVsS0VOc1lYTnpMQ0J6ZEdGeWRGQnZjMmwwYVc5dUxDQmxibVJRYjNOcGRHbHZiaXdnYzJsbmJtbG1hV05oYm5Rc0lDNHVMbkpsYldGcGJtbHVaMEZ5WjNWdFpXNTBjeWtnZTF4dUlDQWdJR3hsZENCMGIydGxiaUE5SUc1MWJHdzdYRzVjYmlBZ0lDQnBaaUFvYzNSaGNuUlFiM05wZEdsdmJpQWhQVDBnWlc1a1VHOXphWFJwYjI0cElIdGNiaUFnSUNBZ0lHeGxkQ0JqYjI1MFpXNTBJRDBnZEdocGN5NW5aWFJEYjI1MFpXNTBLQ2s3WEc1Y2JpQWdJQ0FnSUdOdmJuUmxiblFnUFNCamIyNTBaVzUwTG5OMVluTjBjbWx1WnloemRHRnlkRkJ2YzJsMGFXOXVMQ0JsYm1SUWIzTnBkR2x2YmlrN0lDQXZMeTljYmx4dUlDQWdJQ0FnWTI5dWMzUWdkSGx3WlNBOUlIUm9hWE11WjJWMFZIbHdaU2dwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjMkZ1YVhScGMyVmtRMjl1ZEdWdWRDQTlJSE5oYm1sMGFYTmxRMjl1ZEdWdWRDaGpiMjUwWlc1MEtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWJtVnlTRlJOVENBOUlITmhibWwwYVhObFpFTnZiblJsYm5RN0lDOHZMMXh1WEc0Z0lDQWdJQ0IwYjJ0bGJpQTlJRzVsZHlCRGJHRnpjeWgwZVhCbExDQmpiMjUwWlc1MExDQnBibTVsY2toVVRVd3NJSE5wWjI1cFptbGpZVzUwTENBdUxpNXlaVzFoYVc1cGJtZEJjbWQxYldWdWRITXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCMGIydGxianRjYmlBZ2ZWeHVYRzRnSUhOMFlYUnBZeUJ0WVhSamFDaERiR0Z6Y3l3Z1kyOXVkR1Z1ZEN3Z2MybG5ibWxtYVdOaGJuUXNJQzR1TG5KbGJXRnBibWx1WjBGeVozVnRaVzUwY3lrZ2UxeHVJQ0FnSUd4bGRDQjBiMnRsYmlBOUlHNTFiR3c3WEc1Y2JpQWdJQ0JqYjI1emRDQjdJSEpsWjNWc1lYSkZlSEJ5WlhOemFXOXVJSDBnUFNCRGJHRnpjeXhjYmlBZ0lDQWdJQ0FnSUNCdFlYUmphR1Z6SUQwZ1kyOXVkR1Z1ZEM1dFlYUmphQ2h5WldkMWJHRnlSWGh3Y21WemMybHZiaWs3WEc1Y2JpQWdJQ0JwWmlBb2JXRjBZMmhsY3lBaFBUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnZXlCcGJtUmxlQ0I5SUQwZ2JXRjBZMmhsY3p0Y2JseHVJQ0FnSUNBZ2FXWWdLR2x1WkdWNElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdacGNuTjBUV0YwWTJnZ1BTQm1hWEp6ZENodFlYUmphR1Z6S1R0Y2JseHVJQ0FnSUNBZ0lDQmpiMjUwWlc1MElEMGdabWx5YzNSTllYUmphRHNnTHk4dlhHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1kyOXVkR1Z1ZEV4bGJtZDBhQ0E5SUdOdmJuUmxiblF1YkdWdVozUm9PMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaGpiMjUwWlc1MFRHVnVaM1JvSUQ0Z01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSHNnZEhsd1pTQjlJRDBnUTJ4aGMzTXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMkZ1YVhScGMyVmtRMjl1ZEdWdWRDQTlJSE5oYm1sMGFYTmxRMjl1ZEdWdWRDaGpiMjUwWlc1MEtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibTVsY2toVVRVd2dQU0J6WVc1cGRHbHpaV1JEYjI1MFpXNTBPeUF2THk5Y2JseHVJQ0FnSUNBZ0lDQWdJSFJ2YTJWdUlEMGdibVYzSUVOc1lYTnpLSFI1Y0dVc0lHTnZiblJsYm5Rc0lHbHVibVZ5U0ZSTlRDd2djMmxuYm1sbWFXTmhiblFzSUM0dUxuSmxiV0ZwYm1sdVowRnlaM1Z0Wlc1MGN5azdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2RHOXJaVzQ3WEc0Z0lIMWNibHh1SUNCemRHRjBhV01nWm5KdmJVTnZiblJsYm5Rb1EyeGhjM01zSUdOdmJuUmxiblFzSUhOcFoyNXBabWxqWVc1MExDQXVMaTV5WlcxaGFXNXBibWRCY21kMWJXVnVkSE1wSUh0Y2JpQWdJQ0JqYjI1emRDQjdJSFI1Y0dVZ2ZTQTlJRU5zWVhOekxGeHVJQ0FnSUNBZ0lDQWdJSE5oYm1sMGFYTmxaRU52Ym5SbGJuUWdQU0J6WVc1cGRHbHpaVU52Ym5SbGJuUW9ZMjl1ZEdWdWRDa3NYRzRnSUNBZ0lDQWdJQ0FnYVc1dVpYSklWRTFNSUQwZ2MyRnVhWFJwYzJWa1EyOXVkR1Z1ZEN3Z0x5OHZYRzRnSUNBZ0lDQWdJQ0FnZEc5clpXNGdQU0J1WlhjZ1EyeGhjM01vZEhsd1pTd2dZMjl1ZEdWdWRDd2dhVzV1WlhKSVZFMU1MQ0J6YVdkdWFXWnBZMkZ1ZEN3Z0xpNHVjbVZ0WVdsdWFXNW5RWEpuZFcxbGJuUnpLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQjBiMnRsYmp0Y2JpQWdmVnh1WEc0Z0lITjBZWFJwWXlCbWNtOXRRMjl1ZEdWdWRFRnVaRlI1Y0dVb1EyeGhjM01zSUdOdmJuUmxiblFzSUhSNWNHVXNJSE5wWjI1cFptbGpZVzUwTENBdUxpNXlaVzFoYVc1cGJtZEJjbWQxYldWdWRITXBJSHRjYmlBZ0lDQmpiMjV6ZENCellXNXBkR2x6WldSRGIyNTBaVzUwSUQwZ2MyRnVhWFJwYzJWRGIyNTBaVzUwS0dOdmJuUmxiblFwTEZ4dUlDQWdJQ0FnSUNBZ0lHbHVibVZ5U0ZSTlRDQTlJSE5oYm1sMGFYTmxaRU52Ym5SbGJuUXNJQzh2TDF4dUlDQWdJQ0FnSUNBZ0lIUnZhMlZ1SUQwZ2JtVjNJRU5zWVhOektIUjVjR1VzSUdOdmJuUmxiblFzSUdsdWJtVnlTRlJOVEN3Z2MybG5ibWxtYVdOaGJuUXNJQzR1TG5KbGJXRnBibWx1WjBGeVozVnRaVzUwY3lrN1hHNWNiaUFnSUNCeVpYUjFjbTRnZEc5clpXNDdYRzRnSUgxY2JuMWNiaUpkTENKdVlXMWxjeUk2V3lKbWFYSnpkQ0lzSW1GeWNtRjVWWFJwYkdsMGFXVnpJaXdpVkc5clpXNGlMQ0owZVhCbElpd2lZMjl1ZEdWdWRDSXNJbWx1Ym1WeVNGUk5UQ0lzSW5OcFoyNXBabWxqWVc1MElpd2laMlYwVkhsd1pTSXNJbWRsZEVOdmJuUmxiblFpTENKblpYUkpibTVsY2toVVRVd2lMQ0puWlhSRGIyNTBaVzUwVEdWdVozUm9JaXdpWTI5dWRHVnVkRXhsYm1kMGFDSXNJbXhsYm1kMGFDSXNJbWx6VTJsbmJtbG1hV05oYm5RaUxDSnBjME52YlcxbGJuUlViMnRsYmlJc0luUjVjR1ZKYm1Oc2RXUmxjME52YlcxbGJuUlVlWEJsSWl3aWFXNWpiSFZrWlhNaUxDSmpiMjF0Wlc1MFZIbHdaU0lzSW1OdmJXMWxiblJVYjJ0bGJpSXNJbWx6Ulc1a1QyWk1hVzVsVkc5clpXNGlMQ0owZVhCbFJXNWtUMlpNYVc1bFZIbHdaU0lzSW1WdVpFOW1UR2x1WlZSNWNHVWlMQ0psYm1SUFpreHBibVZVYjJ0bGJpSXNJbWx6VjJocGRHVnpjR0ZqWlZSdmEyVnVJaXdpZEhsd1pWZG9hWFJsYzNCaFkyVlVlWEJsSWl3aWQyaHBkR1Z6Y0dGalpWUjVjR1VpTENKM2FHbDBaWE53WVdObFZHOXJaVzRpTENKcGMwVnhkV0ZzVkc4aUxDSjBiMnRsYmlJc0ltVnhkV0ZzVkc5VWIydGxiaUlzSW0xaGRHTm9JaXdpYldGMFkyaGxjeUlzSW1GelNGUk5UQ0lzSW1Oc1lYTnpUbUZ0WlNJc0ltaDBiV3dpTENKamJHOXVaU0lzSWtOc1lYTnpJaXdpYzNSaGNuUlFiM05wZEdsdmJpSXNJbVZ1WkZCdmMybDBhVzl1SWl3aWNtVnRZV2x1YVc1blFYSm5kVzFsYm5Seklpd2ljM1ZpYzNSeWFXNW5JaXdpYzJGdWFYUnBjMlZrUTI5dWRHVnVkQ0lzSW5OaGJtbDBhWE5sUTI5dWRHVnVkQ0lzSW5KbFozVnNZWEpGZUhCeVpYTnphVzl1SWl3aWFXNWtaWGdpTENKbWFYSnpkRTFoZEdOb0lpd2labkp2YlVOdmJuUmxiblFpTENKbWNtOXRRMjl1ZEdWdWRFRnVaRlI1Y0dVaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFTkJRVmtzVjBGQlFTeERRVUZET3pzN1JUdDNRanRCUVVWclFpeEhRVUZYTEVOQlFWZ3NWVUZCVnp0QlFVVldMRWRCUVhGQ0xFTkJRWEpDTEZGQlFYRkNPMEZCUTAwc1IwRkJVeXhEUVVGVUxFMUJRVk03TzNsRU8zVkZPenM3T3pzN096czdPenM3T3pzN08yZEdPenM3T3pzN096dHpRenM3T3pzN08ybERPenM3YVVVN08xTTdPenM3T3pzN09FUTdjME03TmtRN2FVVTdPenM3ZDBVN1owVTdPenM3T3pzN096czdPM1ZDT3p0TE96czdPenM3T3pzN095dEVPenM3TzBGQlJYQkZMRWRCUVVzc1EwRkJSMEVzUzBGQlN5eEhRVUZMUXl4VlFVRmpMR2RDUVVGNFFrUXNTMEZCU3p0SlFVVlJSU3hMUVVGTExHbENRVUZZTEZGQlFWRTdZVUZCUmtFc1MwRkJTeXhEUVVOYVF5eEpRVUZKTEVWQlFVVkRMRTlCUVU4c1JVRkJSVU1zVTBGQlV5eEZRVUZGUXl4WFFVRlhPMjlETzFGQlF5OURMRWxCUVVrc1EwRkJRMGdzU1VGQlNTeEhRVUZIUVN4SlFVRkpMRU5CUVVNN1VVRkRha0lzU1VGQlNTeERRVUZEUXl4UFFVRlBMRWRCUVVkQkxFOUJRVThzUTBGQlF6dFJRVU4yUWl4SlFVRkpMRU5CUVVORExGTkJRVk1zUjBGQlIwRXNVMEZCVXl4RFFVRkRPMUZCUXpOQ0xFbEJRVWtzUTBGQlEwTXNWMEZCVnl4SFFVRkhRU3hYUVVGWExFTkJRVU03T3pzN1dVRkhha05ETEVkQlFVOHNSVUZCVUVFc1EwRkJUenR0UWtGQlVFRXNVVUZCVVN4RFFVRlNRU3hQUVVGUExFZEJRVWNzUTBGQlF6dG5Ra0ZEVkN4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRFNpeEpRVUZKTzFsQlEyeENMRU5CUVVNN096dFpRVVZFU3l4SFFVRlZMRVZCUVZaQkxFTkJRVlU3YlVKQlFWWkJMRkZCUVZFc1EwRkJVa0VzVlVGQlZTeEhRVUZITEVOQlFVTTdaMEpCUTFvc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlEwb3NUMEZCVHp0WlFVTnlRaXhEUVVGRE96czdXVUZGUkVzc1IwRkJXU3hGUVVGYVFTeERRVUZaTzIxQ1FVRmFRU3hSUVVGUkxFTkJRVkpCTEZsQlFWa3NSMEZCUnl4RFFVRkRPMmRDUVVOa0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTktMRk5CUVZNN1dVRkRka0lzUTBGQlF6czdPMWxCUlVSTExFZEJRV2RDTEVWQlFXaENRU3hEUVVGblFqdHRRa0ZCYUVKQkxGRkJRVkVzUTBGQlVrRXNaMEpCUVdkQ0xFZEJRVWNzUTBGQlF6dG5Ra0ZEYkVJc1IwRkJTeXhEUVVGRFF5eGhRVUZoTEVkQlFVY3NTVUZCU1N4RFFVRkRVQ3hQUVVGUExFTkJRVU5STEUxQlFVMDdaMEpCUlhwRExFMUJRVTBzUTBGQlEwUXNZVUZCWVR0WlFVTjBRaXhEUVVGRE96czdXVUZGUkVVc1IwRkJZU3hGUVVGaVFTeERRVUZoTzIxQ1FVRmlRU3hSUVVGUkxFTkJRVkpCTEdGQlFXRXNSMEZCUnl4RFFVRkRPMmRDUVVObUxFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTlFMRmRCUVZjN1dVRkRla0lzUTBGQlF6czdPMWxCUlVSUkxFZEJRV01zUlVGQlpFRXNRMEZCWXp0dFFrRkJaRUVzVVVGQlVTeERRVUZTUVN4alFVRmpMRWRCUVVjc1EwRkJRenRuUWtGRGFFSXNSMEZCU3l4RFFVRkRReXgxUWtGQmRVSXNSMEZCUnl4SlFVRkpMRU5CUVVOYUxFbEJRVWtzUTBGQlEyRXNVVUZCVVN4RFFVRkRReXhOUVVGWExHVkJRM2hFUXl4WlFVRlpMRWRCUVVkSUxIVkNRVUYxUWl4RlFVRkZMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVZxUkN4TlFVRk5MRU5CUVVOSExGbEJRVms3V1VGRGNrSXNRMEZCUXpzN08xbEJSVVJETEVkQlFXZENMRVZCUVdoQ1FTeERRVUZuUWp0dFFrRkJhRUpCTEZGQlFWRXNRMEZCVWtFc1owSkJRV2RDTEVkQlFVY3NRMEZCUXp0blFrRkRiRUlzUjBGQlN5eERRVUZEUXl4cFFrRkJhVUlzUjBGQlNTeEpRVUZKTEVOQlFVTnFRaXhKUVVGSkxFTkJRVU5oTEZGQlFWRXNRMEZCUTBzc1RVRkJZU3hwUWtGRGNrUkRMR05CUVdNc1IwRkJSMFlzYVVKQlFXbENMRVZCUVVVc1JVRkJSeXhCUVVGSUxFTkJRVWM3WjBKQlJUZERMRTFCUVUwc1EwRkJRMFVzWTBGQll6dFpRVU4yUWl4RFFVRkRPenM3V1VGRlJFTXNSMEZCYVVJc1JVRkJha0pCTEVOQlFXbENPMjFDUVVGcVFrRXNVVUZCVVN4RFFVRlNRU3hwUWtGQmFVSXNSMEZCUnl4RFFVRkRPMmRDUVVOdVFpeEhRVUZMTEVOQlFVTkRMR3RDUVVGclFpeEhRVUZKTEVsQlFVa3NRMEZCUTNKQ0xFbEJRVWtzUzBGQlMzTkNMRTFCUVdNc2FVSkJRMnhFUXl4bFFVRmxMRWRCUVVkR0xHdENRVUZyUWl4RlFVRkZMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVV2UXl4TlFVRk5MRU5CUVVORkxHVkJRV1U3V1VGRGVFSXNRMEZCUXpzN08xbEJSVVJETEVkQlFWTXNSVUZCVkVFc1EwRkJVenR0UWtGQlZFRXNVVUZCVVN4RFFVRlNRU3hUUVVGVExFTkJRVU5ETEV0QlFVc3NSVUZCUlN4RFFVRkRPMmRDUVVOb1FpeEhRVUZMTEVOQlFVTkRMRmxCUVZrc1IwRkJTU3hKUVVGSkxFdEJRVXRFTEV0QlFVczdaMEpCUlhCRExFMUJRVTBzUTBGQlEwTXNXVUZCV1R0WlFVTnlRaXhEUVVGRE96czdXVUZGUkVNc1IwRkJTeXhGUVVGTVFTeERRVUZMTzIxQ1FVRk1RU3hSUVVGUkxFTkJRVkpCTEV0QlFVc3NRMEZCUTBZc1MwRkJTeXhGUVVGRkxFTkJRVU03WjBKQlExb3NSMEZCU3l4RFFVRkRla0lzU1VGQlNTeEhRVUZIZVVJc1MwRkJTeXhEUVVGRGNrSXNUMEZCVHl4SlFVTndRa2dzVDBGQlR5eEhRVUZIZDBJc1MwRkJTeXhEUVVGRGNFSXNWVUZCVlN4SlFVTXhRa1lzVjBGQlZ5eEhRVUZIYzBJc1MwRkJTeXhEUVVGRFppeGhRVUZoTEVsQlEycERhMElzVDBGQlR5eEhRVUZMTEVsQlFVa3NRMEZCUXpWQ0xFbEJRVWtzUzBGQlMwRXNTVUZCU1N4SlFVRk5MRWxCUVVrc1EwRkJRME1zVDBGQlR5eExRVUZMUVN4UFFVRlBMRWxCUVUwc1NVRkJTU3hEUVVGRFJTeFhRVUZYTEV0QlFVdEJMRmRCUVZjN1owSkJSWGhITEUxQlFVMHNRMEZCUTNsQ0xFOUJRVTg3V1VGRGFFSXNRMEZCUXpzN08xbEJSVVJETEVkQlFVMHNSVUZCVGtFc1EwRkJUVHR0UWtGQlRrRXNVVUZCVVN4RFFVRlNRU3hOUVVGTkxFZEJRVWNzUTBGQlF6dG5Ra0ZEVWl4SFFVRkxMRU5CUVVORExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTTVRaXhKUVVGSkxFVkJRM0pDSzBJc1NVRkJTU3hIUVVGSkxFTkJRV0VzWjBKQlFXZENMRTFCUVdNc1EwRkJOVUpFTEZOQlFWTXNSVUZCUXl4RFFVRkZMRTFCUVdsQ0xFMUJRVThzUTBGQmRFSXNTVUZCU1N4RFFVRkROVUlzVTBGQlV5eEZRVUZETEVOQlFVODdaMEpCUldwRkxFMUJRVTBzUTBGQlF6WkNMRWxCUVVrN1dVRkRZaXhEUVVGRE96czdXVUZGUkVNc1IwRkJTeXhGUVVGTVFTeERRVUZMTzIxQ1FVRk1RU3hSUVVGUkxFTkJRVkpCTEV0QlFVc3NRMEZCUTBNc1MwRkJTeXhGUVVGRlF5eGhRVUZoTEVWQlFVVkRMRmRCUVZjc1JVRkJSV2hETEZkQlFWY3NSVUZCZVVJc1EwRkJRenRuUWtGQmVFSXNSMEZCUjJsRExFTkJRVWdzUjBGQmNVSXNRMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNVMEZCY1VJc1EwRkJja0lzVFVGQmNVSXNSVUZCYkVKQkxHdENRVUZyUWl4SFFVRnlRaXhIUVVGeFFpeFBRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeERRVUZ4UWl4SFFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRnhRaXhQUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhEUVVGeFFpeEZRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeEpRVUZ4UWl4RlFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRkRPMjlDUVVGRlFTeHJRa0ZCYTBJc1EwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzU1VGQmNrSXNVMEZCY1VJc1EwRkJja0lzU1VGQmNVSXNRME5zUmpkRkxFTkVhMFkyUlR0blFrRkJSQ3hEUVVGRE8yZENRVU42UlN4SFFVRkhMRU5CUVVOWUxFdEJRVXNzUjBGQlJ5eEpRVUZKTzJkQ1FVVm9RaXhGUVVGRkxFVkJRVVZUTEdGQlFXRXNTMEZCUzBNc1YwRkJWeXhGUVVGRkxFTkJRVU03YjBKQlEyeERMRWRCUVVjc1EwRkJRMnhETEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVOSkxGVkJRVlU3YjBKQlJUZENTaXhQUVVGUExFZEJRVWRCTEU5QlFVOHNRMEZCUTI5RExGTkJRVk1zUTBGQlEwZ3NZVUZCWVN4RlFVRkZReXhYUVVGWExFTkJRVU1zUTBGQlF5eERRVUZGTEVWQlFVY3NRVUZCU0N4RFFVRkhPMjlDUVVVM1JDeEhRVUZMTEVOQlFVTnVReXhKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZEU1N4UFFVRlBMRWxCUTI1Q2EwTXNaMEpCUVdkQ0xFOUJRVWRETEZGQlFXVXNhMEpCUVVOMFF5eFBRVUZQTEVkQlF6RkRReXhUUVVGVExFZEJRVWR2UXl4blFrRkJaMElzUlVGQlJTeEZRVUZITEVGQlFVZ3NRMEZCUnp0dlFrRkZka05pTEV0QlFVc3NZMEZCVDFFc1MwRkJTeXhGUVVGVUxFTkJRVU03ZDBKQlFWTnFReXhKUVVGSk8zZENRVUZGUXl4UFFVRlBPM2RDUVVGRlF5eFRRVUZUTzNkQ1FVRkZReXhYUVVGWE8yOUNRVUYxUWl4RFFVRkRMRU5CUVhaRkxFMUJRWFZGTEc5Q1FVRnVRbWxETEd0Q1FVRnJRaXhIUVVGRExFTkJRVU03WjBKQlEyeEdMRU5CUVVNN1owSkJSVVFzVFVGQlRTeERRVUZEV0N4TFFVRkxPMWxCUTJRc1EwRkJRenM3T3p0WlFVVk5SU3hIUVVGTExFVkJRVXhCTEVOQlFVczdiVUpCUVZvc1VVRkJVU3hEUVVGRVFTeExRVUZMTEVOQlFVTk5MRXRCUVVzc1JVRkJSV2hETEU5QlFVOHNSVUZCUlVVc1YwRkJWeXhGUVVGNVFpeERRVUZETzJkQ1FVRjRRaXhIUVVGSGFVTXNRMEZCU0N4SFFVRnhRaXhEUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhUUVVGeFFpeERRVUZ5UWl4TlFVRnhRaXhGUVVGc1FrRXNhMEpCUVd0Q0xFZEJRWEpDTEVkQlFYRkNMRTlCUVhKQ0xFbEJRWEZDTEVkQlFYSkNMRU5CUVhGQ0xFZEJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xFTkJRWEZDTEU5QlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVOQlFYRkNMRVZCUVhKQ0xFbEJRWEZDTEVkQlFYSkNMRWxCUVhGQ0xFVkJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xFTkJRVU03YjBKQlFVVkJMR3RDUVVGclFpeERRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeERRVUZ4UWl4SlFVRnlRaXhUUVVGeFFpeERRVUZ5UWl4SlFVRnhRaXhEUTNCSGFrVXNRMFJ2UjJsRk8yZENRVUZFTEVOQlFVTTdaMEpCUXpkRUxFZEJRVWNzUTBGQlExZ3NTMEZCU3l4SFFVRkhMRWxCUVVrN1owSkJSV2hDTEVkQlFVc3NRMEZCUjJVc2FVSkJRV2xDTEVkQlFVdFFMRXRCUVVzc1EwRkJNMEpQTEdsQ1FVRnBRaXhGUVVOdVFsb3NUMEZCVHl4SFFVRkhNMElzVDBGQlR5eERRVUZETUVJc1MwRkJTeXhEUVVGRFlTeHBRa0ZCYVVJN1owSkJSUzlETEVWQlFVVXNSVUZCUlZvc1QwRkJUeXhMUVVGTExFbEJRVWtzUlVGQlJTeERRVUZETzI5Q1FVTnlRaXhIUVVGTExFTkJRVWRoTEV0QlFVc3NSMEZCUzJJc1QwRkJUeXhEUVVGcVFtRXNTMEZCU3p0dlFrRkZZaXhGUVVGRkxFVkJRVVZCTEV0QlFVc3NTMEZCU3l4RFFVRkRMRVZCUVVVc1EwRkJRenQzUWtGRGFFSXNSMEZCU3l4RFFVRkRReXhWUVVGVkxFZEJRVWMzUXl4TFFVRkxMRU5CUVVNclFpeFBRVUZQTzNkQ1FVVm9Rek5DTEU5QlFVOHNSMEZCUjNsRExGVkJRVlVzUTBGQlF5eERRVUZETEVWQlFVY3NRVUZCU0N4RFFVRkhPM2RDUVVWNlFpeEhRVUZMTEVOQlFVTnNReXhoUVVGaExFZEJRVWRRTEU5QlFVOHNRMEZCUTFFc1RVRkJUVHQzUWtGRmNFTXNSVUZCUlN4RlFVRkZSQ3hoUVVGaExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTTdORUpCUTNSQ0xFZEJRVXNzUTBGQlIxSXNTVUZCU1N4SFFVRkxhVU1zUzBGQlN5eERRVUZrYWtNc1NVRkJTU3hGUVVOT2MwTXNaMEpCUVdkQ0xFOUJRVWRETEZGQlFXVXNhMEpCUVVOMFF5eFBRVUZQTEVkQlF6RkRReXhUUVVGVExFZEJRVWR2UXl4blFrRkJaMElzUlVGQlJTeEZRVUZITEVGQlFVZ3NRMEZCUnpzMFFrRkZka05pTEV0QlFVc3NZMEZCVDFFc1MwRkJTeXhGUVVGVUxFTkJRVU03WjBOQlFWTnFReXhKUVVGSk8yZERRVUZGUXl4UFFVRlBPMmREUVVGRlF5eFRRVUZUTzJkRFFVRkZReXhYUVVGWE96UkNRVUYxUWl4RFFVRkRMRU5CUVhaRkxFMUJRWFZGTEc5Q1FVRnVRbWxETEd0Q1FVRnJRaXhIUVVGRExFTkJRVU03ZDBKQlEyeEdMRU5CUVVNN2IwSkJRMGdzUTBGQlF6dG5Ra0ZEU0N4RFFVRkRPMmRDUVVWRUxFMUJRVTBzUTBGQlExZ3NTMEZCU3p0WlFVTmtMRU5CUVVNN096dFpRVVZOYTBJc1IwRkJWeXhGUVVGWVFTeERRVUZYTzIxQ1FVRnNRaXhSUVVGUkxFTkJRVVJCTEZkQlFWY3NRMEZCUTFZc1MwRkJTeXhGUVVGRmFFTXNUMEZCVHl4RlFVRkZSU3hYUVVGWExFVkJRWGxDTEVOQlFVTTdaMEpCUVhoQ0xFZEJRVWRwUXl4RFFVRklMRWRCUVhGQ0xFTkJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xGTkJRWEZDTEVOQlFYSkNMRTFCUVhGQ0xFVkJRV3hDUVN4clFrRkJhMElzUjBGQmNrSXNSMEZCY1VJc1QwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzUjBGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQmNVSXNUMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNRMEZCY1VJc1JVRkJja0lzU1VGQmNVSXNSMEZCY2tJc1NVRkJjVUlzUlVGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQlF6dHZRa0ZCUlVFc2EwSkJRV3RDTEVOQlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVOQlFYRkNMRWxCUVhKQ0xGTkJRWEZDTEVOQlFYSkNMRWxCUVhGQ0xFTkRha2wyUlN4RFJHbEpkVVU3WjBKQlFVUXNRMEZCUXp0blFrRkRia1VzUjBGQlN5eERRVUZIY0VNc1NVRkJTU3hIUVVGTGFVTXNTMEZCU3l4RFFVRmtha01zU1VGQlNTeEZRVU5PYzBNc1owSkJRV2RDTEU5QlFVZERMRkZCUVdVc2EwSkJRVU4wUXl4UFFVRlBMRWRCUXpGRFF5eFRRVUZUTEVkQlFVZHZReXhuUWtGQlowSXNSVUZETlVKaUxFdEJRVXNzWTBGQlQxRXNTMEZCU3l4RlFVRlVMRU5CUVVNN2IwSkJRVk5xUXl4SlFVRkpPMjlDUVVGRlF5eFBRVUZQTzI5Q1FVRkZReXhUUVVGVE8yOUNRVUZGUXl4WFFVRlhPMmRDUVVGMVFpeERRVUZETEVOQlFYWkZMRTFCUVhWRkxHOUNRVUZ1UW1sRExHdENRVUZyUWp0blFrRkZjRVlzVFVGQlRTeERRVUZEV0N4TFFVRkxPMWxCUTJRc1EwRkJRenM3TzFsQlJVMXRRaXhIUVVGclFpeEZRVUZzUWtFc1EwRkJhMEk3YlVKQlFYcENMRkZCUVZFc1EwRkJSRUVzYTBKQlFXdENMRU5CUVVOWUxFdEJRVXNzUlVGQlJXaERMRTlCUVU4c1JVRkJSVVFzU1VGQlNTeEZRVUZGUnl4WFFVRlhMRVZCUVhsQ0xFTkJRVU03WjBKQlFYaENMRWRCUVVkcFF5eERRVUZJTEVkQlFYRkNMRU5CUVhKQ0xFbEJRWEZDTEVkQlFYSkNMRk5CUVhGQ0xFTkJRWEpDTEUxQlFYRkNMRVZCUVd4Q1FTeHJRa0ZCYTBJc1IwRkJja0lzUjBGQmNVSXNUMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNRMEZCY1VJc1IwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzVDBGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQmNVSXNSVUZCY2tJc1NVRkJjVUlzUjBGQmNrSXNTVUZCY1VJc1JVRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJRenR2UWtGQlJVRXNhMEpCUVd0Q0xFTkJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xFTkJRWEZDTEVsQlFYSkNMRk5CUVhGQ0xFTkJRWEpDTEVsQlFYRkNMRU5ETVVsd1JpeERSREJKYjBZN1owSkJRVVFzUTBGQlF6dG5Ra0ZEYUVZc1IwRkJTeXhEUVVGRFJTeG5Ra0ZCWjBJc1QwRkJSME1zVVVGQlpTeHJRa0ZCUTNSRExFOUJRVThzUjBGRE1VTkRMRk5CUVZNc1IwRkJSMjlETEdkQ1FVRm5RaXhGUVVNMVFtSXNTMEZCU3l4alFVRlBVU3hMUVVGTExFVkJRVlFzUTBGQlF6dHZRa0ZCVTJwRExFbEJRVWs3YjBKQlFVVkRMRTlCUVU4N2IwSkJRVVZETEZOQlFWTTdiMEpCUVVWRExGZEJRVmM3WjBKQlFYVkNMRU5CUVVNc1EwRkJka1VzVFVGQmRVVXNiMEpCUVc1Q2FVTXNhMEpCUVd0Q08yZENRVVZ3Uml4TlFVRk5MRU5CUVVOWUxFdEJRVXM3V1VGRFpDeERRVUZET3p0Tk96czdhMEpCZGtsclFqRkNMRXRCUVVzc1FTSjkiLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3Rva2VuID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdG9rZW5cIikpO1xuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcbiAgICBmb3IodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKylhcnIyW2ldID0gYXJyW2ldO1xuICAgIHJldHVybiBhcnIyO1xufVxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpO1xufVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7XG4gICAgICAgIF9nZXQgPSBSZWZsZWN0LmdldDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgICAgICAgICAgdmFyIGJhc2UgPSBfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmICghYmFzZSkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmIChkZXNjLmdldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkZXNjLnZhbHVlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpO1xufVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICAgIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICAgIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufVxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXFxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5mdW5jdGlvbiBfc3VwZXJQcm9wQmFzZShvYmplY3QsIHByb3BlcnR5KSB7XG4gICAgd2hpbGUoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSl7XG4gICAgICAgIG9iamVjdCA9IF9nZXRQcm90b3R5cGVPZihvYmplY3QpO1xuICAgICAgICBpZiAob2JqZWN0ID09PSBudWxsKSBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbn1cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpO1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgICBpZiAoIW8pIHJldHVybjtcbiAgICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICAgIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG4pO1xuICAgIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgc2lnbmlmaWNhbnQgPSB0cnVlO1xudmFyIFNpZ25pZmljYW50VG9rZW4gPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKFRva2VuKSB7XG4gICAgX2luaGVyaXRzKFNpZ25pZmljYW50VG9rZW4sIFRva2VuKTtcbiAgICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFNpZ25pZmljYW50VG9rZW4pO1xuICAgIGZ1bmN0aW9uIFNpZ25pZmljYW50VG9rZW4oKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTaWduaWZpY2FudFRva2VuKTtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoU2lnbmlmaWNhbnRUb2tlbiwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiY2xvbmVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZShDbGFzcywgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICBmb3IodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCByZW1haW5pbmdBcmd1bWVudHMgPSBuZXcgQXJyYXkoX2xlbiA+IDMgPyBfbGVuIC0gMyA6IDApLCBfa2V5ID0gMzsgX2tleSA8IF9sZW47IF9rZXkrKyl7XG4gICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0FyZ3VtZW50c1tfa2V5IC0gM10gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBfaW5zdGFuY2U7XG4gICAgICAgICAgICAgICAgaWYgKGVuZFBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZW5kUG9zaXRpb24gPSBzdGFydFBvc2l0aW9uOyAvLy9cbiAgICAgICAgICAgICAgICAgICAgc3RhcnRQb3NpdGlvbiA9IENsYXNzOyAvLy9cbiAgICAgICAgICAgICAgICAgICAgQ2xhc3MgPSBTaWduaWZpY2FudFRva2VuOyAvLy9cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHNpZ25pZmljYW50VG9rZW4gPSAoX2luc3RhbmNlID0gX2dldChfZ2V0UHJvdG90eXBlT2YoU2lnbmlmaWNhbnRUb2tlbi5wcm90b3R5cGUpLCBcImNsb25lXCIsIHRoaXMpKS5jYWxsLmFwcGx5KF9pbnN0YW5jZSwgW1xuICAgICAgICAgICAgICAgICAgICB0aGlzLFxuICAgICAgICAgICAgICAgICAgICBDbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgc3RhcnRQb3NpdGlvbixcbiAgICAgICAgICAgICAgICAgICAgZW5kUG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgIHNpZ25pZmljYW50XG4gICAgICAgICAgICAgICAgXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHJlbWFpbmluZ0FyZ3VtZW50cykpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2lnbmlmaWNhbnRUb2tlbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0sIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcIm1hdGNoXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gbWF0Y2goQ2xhc3MsIGNvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICBmb3IodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCByZW1haW5pbmdBcmd1bWVudHMgPSBuZXcgQXJyYXkoX2xlbiA+IDIgPyBfbGVuIC0gMiA6IDApLCBfa2V5ID0gMjsgX2tleSA8IF9sZW47IF9rZXkrKyl7XG4gICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0FyZ3VtZW50c1tfa2V5IC0gMl0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBfVG9rZW47XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gQ2xhc3M7IC8vL1xuICAgICAgICAgICAgICAgICAgICBDbGFzcyA9IFNpZ25pZmljYW50VG9rZW47IC8vL1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgc2lnbmlmaWNhbnRUb2tlbiA9IChfVG9rZW4gPSBfdG9rZW4uZGVmYXVsdCkubWF0Y2guYXBwbHkoX1Rva2VuLCBbXG4gICAgICAgICAgICAgICAgICAgIENsYXNzLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50LFxuICAgICAgICAgICAgICAgICAgICBzaWduaWZpY2FudFxuICAgICAgICAgICAgICAgIF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShyZW1haW5pbmdBcmd1bWVudHMpKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNpZ25pZmljYW50VG9rZW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJmcm9tQ29udGVudFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21Db250ZW50KENsYXNzLCBjb250ZW50KSB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcmVtYWluaW5nQXJndW1lbnRzID0gbmV3IEFycmF5KF9sZW4gPiAyID8gX2xlbiAtIDIgOiAwKSwgX2tleSA9IDI7IF9rZXkgPCBfbGVuOyBfa2V5Kyspe1xuICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdBcmd1bWVudHNbX2tleSAtIDJdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgX1Rva2VuO1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudCA9IENsYXNzOyAvLy9cbiAgICAgICAgICAgICAgICAgICAgQ2xhc3MgPSBTaWduaWZpY2FudFRva2VuOyAvLy9cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHNpZ25pZmljYW50VG9rZW4gPSAoX1Rva2VuID0gX3Rva2VuLmRlZmF1bHQpLmZyb21Db250ZW50LmFwcGx5KF9Ub2tlbiwgW1xuICAgICAgICAgICAgICAgICAgICBDbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmlmaWNhbnRcbiAgICAgICAgICAgICAgICBdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocmVtYWluaW5nQXJndW1lbnRzKSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzaWduaWZpY2FudFRva2VuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbUNvbnRlbnRBbmRUeXBlXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbUNvbnRlbnRBbmRUeXBlKENsYXNzLCBjb250ZW50LCB0eXBlKSB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcmVtYWluaW5nQXJndW1lbnRzID0gbmV3IEFycmF5KF9sZW4gPiAzID8gX2xlbiAtIDMgOiAwKSwgX2tleSA9IDM7IF9rZXkgPCBfbGVuOyBfa2V5Kyspe1xuICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdBcmd1bWVudHNbX2tleSAtIDNdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgX1Rva2VuO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZSA9IGNvbnRlbnQ7IC8vL1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gQ2xhc3M7IC8vL1xuICAgICAgICAgICAgICAgICAgICBDbGFzcyA9IFNpZ25pZmljYW50VG9rZW47IC8vL1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgc2lnbmlmaWNhbnRUb2tlbiA9IChfVG9rZW4gPSBfdG9rZW4uZGVmYXVsdCkuZnJvbUNvbnRlbnRBbmRUeXBlLmFwcGx5KF9Ub2tlbiwgW1xuICAgICAgICAgICAgICAgICAgICBDbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmlmaWNhbnRcbiAgICAgICAgICAgICAgICBdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocmVtYWluaW5nQXJndW1lbnRzKSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzaWduaWZpY2FudFRva2VuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIFNpZ25pZmljYW50VG9rZW47XG59KF90b2tlbi5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFNpZ25pZmljYW50VG9rZW47XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOeVl5OTBiMnRsYmk5emFXZHVhV1pwWTJGdWRDNXFjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dWFXMXdiM0owSUZSdmEyVnVJR1p5YjIwZ1hDSXVMaTkwYjJ0bGJsd2lPMXh1WEc1amIyNXpkQ0J6YVdkdWFXWnBZMkZ1ZENBOUlIUnlkV1U3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdOc1lYTnpJRk5wWjI1cFptbGpZVzUwVkc5clpXNGdaWGgwWlc1a2N5QlViMnRsYmlCN1hHNGdJR05zYjI1bEtFTnNZWE56TENCemRHRnlkRkJ2YzJsMGFXOXVMQ0JsYm1SUWIzTnBkR2x2Yml3Z0xpNHVjbVZ0WVdsdWFXNW5RWEpuZFcxbGJuUnpLU0I3WEc0Z0lDQWdhV1lnS0dWdVpGQnZjMmwwYVc5dUlEMDlQU0IxYm1SbFptbHVaV1FwSUh0Y2JpQWdJQ0FnSUdWdVpGQnZjMmwwYVc5dUlEMGdjM1JoY25SUWIzTnBkR2x2YmpzZ0lDOHZMMXh1SUNBZ0lDQWdjM1JoY25SUWIzTnBkR2x2YmlBOUlFTnNZWE56T3lBZ0x5OHZYRzRnSUNBZ0lDQkRiR0Z6Y3lBOUlGTnBaMjVwWm1sallXNTBWRzlyWlc0N0lDOHZMMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUhOcFoyNXBabWxqWVc1MFZHOXJaVzRnUFNCemRYQmxjaTVqYkc5dVpTaERiR0Z6Y3l3Z2MzUmhjblJRYjNOcGRHbHZiaXdnWlc1a1VHOXphWFJwYjI0c0lITnBaMjVwWm1sallXNTBMQ0F1TGk1eVpXMWhhVzVwYm1kQmNtZDFiV1Z1ZEhNcE8xeHVYRzRnSUNBZ2NtVjBkWEp1SUhOcFoyNXBabWxqWVc1MFZHOXJaVzQ3WEc0Z0lIMWNibHh1SUNCemRHRjBhV01nYldGMFkyZ29RMnhoYzNNc0lHTnZiblJsYm5Rc0lDNHVMbkpsYldGcGJtbHVaMEZ5WjNWdFpXNTBjeWtnZTF4dUlDQWdJR2xtSUNoamIyNTBaVzUwSUQwOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQWdJR052Ym5SbGJuUWdQU0JEYkdGemN6c2dJQzh2TDF4dUlDQWdJQ0FnUTJ4aGMzTWdQU0JUYVdkdWFXWnBZMkZ1ZEZSdmEyVnVPeUF2THk5Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQnphV2R1YVdacFkyRnVkRlJ2YTJWdUlEMGdWRzlyWlc0dWJXRjBZMmdvUTJ4aGMzTXNJR052Ym5SbGJuUXNJSE5wWjI1cFptbGpZVzUwTENBdUxpNXlaVzFoYVc1cGJtZEJjbWQxYldWdWRITXBPMXh1WEc0Z0lDQWdjbVYwZFhKdUlITnBaMjVwWm1sallXNTBWRzlyWlc0N1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1puSnZiVU52Ym5SbGJuUW9RMnhoYzNNc0lHTnZiblJsYm5Rc0lDNHVMbkpsYldGcGJtbHVaMEZ5WjNWdFpXNTBjeWtnZTF4dUlDQWdJR2xtSUNoamIyNTBaVzUwSUQwOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQWdJR052Ym5SbGJuUWdQU0JEYkdGemN6c2dJQzh2TDF4dUlDQWdJQ0FnUTJ4aGMzTWdQU0JUYVdkdWFXWnBZMkZ1ZEZSdmEyVnVPeUF2THk5Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQnphV2R1YVdacFkyRnVkRlJ2YTJWdUlEMGdWRzlyWlc0dVpuSnZiVU52Ym5SbGJuUW9RMnhoYzNNc0lHTnZiblJsYm5Rc0lITnBaMjVwWm1sallXNTBMQ0F1TGk1eVpXMWhhVzVwYm1kQmNtZDFiV1Z1ZEhNcE8xeHVYRzRnSUNBZ2NtVjBkWEp1SUhOcFoyNXBabWxqWVc1MFZHOXJaVzQ3WEc0Z0lIMWNibHh1SUNCemRHRjBhV01nWm5KdmJVTnZiblJsYm5SQmJtUlVlWEJsS0VOc1lYTnpMQ0JqYjI1MFpXNTBMQ0IwZVhCbExDQXVMaTV5WlcxaGFXNXBibWRCY21kMWJXVnVkSE1wSUh0Y2JpQWdJQ0JwWmlBb2RIbHdaU0E5UFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ0lDQjBlWEJsSUQwZ1kyOXVkR1Z1ZERzZ0x5OHZYRzRnSUNBZ0lDQmpiMjUwWlc1MElEMGdRMnhoYzNNN0lDQXZMeTljYmlBZ0lDQWdJRU5zWVhOeklEMGdVMmxuYm1sbWFXTmhiblJVYjJ0bGJqc2dMeTh2WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ2MybG5ibWxtYVdOaGJuUlViMnRsYmlBOUlGUnZhMlZ1TG1aeWIyMURiMjUwWlc1MFFXNWtWSGx3WlNoRGJHRnpjeXdnWTI5dWRHVnVkQ3dnZEhsd1pTd2djMmxuYm1sbWFXTmhiblFzSUM0dUxuSmxiV0ZwYm1sdVowRnlaM1Z0Wlc1MGN5azdYRzVjYmlBZ0lDQnlaWFIxY200Z2MybG5ibWxtYVdOaGJuUlViMnRsYmp0Y2JpQWdmVnh1ZlZ4dUlsMHNJbTVoYldWeklqcGJJbk5wWjI1cFptbGpZVzUwSWl3aVUybG5ibWxtYVdOaGJuUlViMnRsYmlJc0ltTnNiMjVsSWl3aVEyeGhjM01pTENKemRHRnlkRkJ2YzJsMGFXOXVJaXdpWlc1a1VHOXphWFJwYjI0aUxDSnlaVzFoYVc1cGJtZEJjbWQxYldWdWRITWlMQ0oxYm1SbFptbHVaV1FpTENKemFXZHVhV1pwWTJGdWRGUnZhMlZ1SWl3aWJXRjBZMmdpTENKamIyNTBaVzUwSWl3aVZHOXJaVzRpTENKbWNtOXRRMjl1ZEdWdWRDSXNJbVp5YjIxRGIyNTBaVzUwUVc1a1ZIbHdaU0lzSW5SNWNHVWlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRU5CUVZrc1YwRkJRU3hEUVVGRE96czdSVHQzUWp0QlFVVkxMRWRCUVZVc1EwRkJWaXhOUVVGVk96dDVSRHQxUlRzN096czdPenM3T3pzN096czdPenM3T3pzN09FUTdjME03TmtRN2FVVTdPenM3ZDBVN1owVTdPenM3T3pCQ096czdPenM3T3pzN08xTTdPenM3T3pzN1N6czdPenM3T3pzN096czdPenROTzNsRU96czdPenM3T3pzN096czdPenM3T3pzN096czdkVUk3TzBzN096czdPM2RET3pzN096czdPenM3TWtJN096czdPenM3SzBRN096czdPenM3T3p0eFJqczdPenM3T3pzN096czdPMjFGT3p0cFJEczdPenM3UVVGRk5VSXNSMEZCU3l4RFFVRkRRU3hYUVVGWExFZEJRVWNzU1VGQlNUdEpRVVZJUXl4blFrRkJaMElzYVVKQlFYUkNMRkZCUVZFN2MwTTdPMkZCUVVaQkxHZENRVUZuUWpzclF6czdPenM3V1VGRGJrTkRMRWRCUVVzc1JVRkJURUVzUTBGQlN6dHRRa0ZCVEVFc1VVRkJVU3hEUVVGU1FTeExRVUZMTEVOQlFVTkRMRXRCUVVzc1JVRkJSVU1zWVVGQllTeEZRVUZGUXl4WFFVRlhMRVZCUVhsQ0xFTkJRVU03WjBKQlFYaENMRWRCUVVkRExFTkJRVWdzUjBGQmNVSXNRMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNVMEZCY1VJc1EwRkJja0lzVFVGQmNVSXNSVUZCYkVKQkxHdENRVUZyUWl4SFFVRnlRaXhIUVVGeFFpeFBRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeERRVUZ4UWl4SFFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRnhRaXhQUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhEUVVGeFFpeEZRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeEpRVUZ4UWl4RlFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRkRPMjlDUVVGRlFTeHJRa0ZCYTBJc1EwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzU1VGQmNrSXNVMEZCY1VJc1EwRkJja0lzU1VGQmNVSXNRME5RYUVVc1EwUlBaMFU3WjBKQlFVUXNRMEZCUXp0dlFrRlBia01zVTBGQlN6dG5Ra0ZPT1VJc1JVRkJSU3hGUVVGRlJDeFhRVUZYTEV0QlFVdEZMRk5CUVZNc1JVRkJSU3hEUVVGRE8yOUNRVU01UWtZc1YwRkJWeXhIUVVGSFJDeGhRVUZoTEVOQlFVTXNRMEZCUlN4RlFVRkhMRUZCUVVnc1EwRkJSenR2UWtGRGFrTkJMR0ZCUVdFc1IwRkJSMFFzUzBGQlN5eERRVUZETEVOQlFVVXNSVUZCUnl4QlFVRklMRU5CUVVjN2IwSkJRek5DUVN4TFFVRkxMRWRCUVVkR0xHZENRVUZuUWl4RFFVRkRMRU5CUVVNc1JVRkJSeXhCUVVGSUxFTkJRVWM3WjBKQlF5OUNMRU5CUVVNN1owSkJSVVFzUjBGQlN5eERRVUZEVHl4blFrRkJaMElzU1VGQlJ5eFRRVUZMTEhkQ1FWSmlVQ3huUWtGQlowSXNZVUZSUmtNc1EwRkJTeXhSUVVGWUxFbEJRVXNzWTBGQlRDeFRRVUZMT3p0dlFrRkJUME1zUzBGQlN6dHZRa0ZCUlVNc1lVRkJZVHR2UWtGQlJVTXNWMEZCVnp0dlFrRkJSVXdzVjBGQlZ6czBRMEZCUzAwc2EwSkJRV3RDTzJkQ1FVVXhSeXhOUVVGTkxFTkJRVU5GTEdkQ1FVRm5RanRaUVVONlFpeERRVUZET3pzN08xbEJSVTFETEVkQlFVc3NSVUZCVEVFc1EwRkJTenR0UWtGQldpeFJRVUZSTEVOQlFVUkJMRXRCUVVzc1EwRkJRMDRzUzBGQlN5eEZRVUZGVHl4UFFVRlBMRVZCUVhsQ0xFTkJRVU03WjBKQlFYaENMRWRCUVVkS0xFTkJRVWdzUjBGQmNVSXNRMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNVMEZCY1VJc1EwRkJja0lzVFVGQmNVSXNSVUZCYkVKQkxHdENRVUZyUWl4SFFVRnlRaXhIUVVGeFFpeFBRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeERRVUZ4UWl4SFFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRnhRaXhQUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhEUVVGeFFpeEZRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeEpRVUZ4UWl4RlFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRkRPMjlDUVVGRlFTeHJRa0ZCYTBJc1EwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzU1VGQmNrSXNVMEZCY1VJc1EwRkJja0lzU1VGQmNVSXNRME51UW5CRUxFTkViVUp2UkR0blFrRkJSQ3hEUVVGRE8yOUNRVTEyUWtzc1RVRkJTenRuUWtGTU9VSXNSVUZCUlN4RlFVRkZSQ3hQUVVGUExFdEJRVXRJTEZOQlFWTXNSVUZCUlN4RFFVRkRPMjlDUVVNeFFrY3NUMEZCVHl4SFFVRkhVQ3hMUVVGTExFTkJRVU1zUTBGQlJTeEZRVUZITEVGQlFVZ3NRMEZCUnp0dlFrRkRja0pCTEV0QlFVc3NSMEZCUjBZc1owSkJRV2RDTEVOQlFVTXNRMEZCUXl4RlFVRkhMRUZCUVVnc1EwRkJSenRuUWtGREwwSXNRMEZCUXp0blFrRkZSQ3hIUVVGTExFTkJRVU5QTEdkQ1FVRm5RaXhKUVVGSFJ5eE5RVUZMTEVkQlFVeEJMRTFCUVVzc1ZVRkJRMFlzUzBGQlN5eERRVUZZUlN4TFFVRXJSQ3hEUVVFdlJFRXNUVUZCU3l4RlFVRk1RU3hEUVVGRE8yOUNRVUZYVWl4TFFVRkxPMjlDUVVGRlR5eFBRVUZQTzI5Q1FVRkZWaXhYUVVGWE8yZENRVUYxUWl4RFFVRkRMRU5CUVM5RVZ5eE5RVUVyUkN4dlFrRkJia0pNTEd0Q1FVRnJRanRuUWtGRmRrWXNUVUZCVFN4RFFVRkRSU3huUWtGQlowSTdXVUZEZWtJc1EwRkJRenM3TzFsQlJVMUpMRWRCUVZjc1JVRkJXRUVzUTBGQlZ6dHRRa0ZCYkVJc1VVRkJVU3hEUVVGRVFTeFhRVUZYTEVOQlFVTlVMRXRCUVVzc1JVRkJSVThzVDBGQlR5eEZRVUY1UWl4RFFVRkRPMmRDUVVGNFFpeEhRVUZIU2l4RFFVRklMRWRCUVhGQ0xFTkJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xGTkJRWEZDTEVOQlFYSkNMRTFCUVhGQ0xFVkJRV3hDUVN4clFrRkJhMElzUjBGQmNrSXNSMEZCY1VJc1QwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzUjBGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQmNVSXNUMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNRMEZCY1VJc1JVRkJja0lzU1VGQmNVSXNSMEZCY2tJc1NVRkJjVUlzUlVGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQlF6dHZRa0ZCUlVFc2EwSkJRV3RDTEVOQlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVOQlFYRkNMRWxCUVhKQ0xGTkJRWEZDTEVOQlFYSkNMRWxCUVhGQ0xFTkRPVUl4UkN4RFJEaENNRVE3WjBKQlFVUXNRMEZCUXp0dlFrRk5OMEpMTEUxQlFVczdaMEpCVERsQ0xFVkJRVVVzUlVGQlJVUXNUMEZCVHl4TFFVRkxTQ3hUUVVGVExFVkJRVVVzUTBGQlF6dHZRa0ZETVVKSExFOUJRVThzUjBGQlIxQXNTMEZCU3l4RFFVRkRMRU5CUVVVc1JVRkJSeXhCUVVGSUxFTkJRVWM3YjBKQlEzSkNRU3hMUVVGTExFZEJRVWRHTEdkQ1FVRm5RaXhEUVVGRExFTkJRVU1zUlVGQlJ5eEJRVUZJTEVOQlFVYzdaMEpCUXk5Q0xFTkJRVU03WjBKQlJVUXNSMEZCU3l4RFFVRkRUeXhuUWtGQlowSXNTVUZCUjBjc1RVRkJTeXhIUVVGTVFTeE5RVUZMTEZWQlFVTkRMRmRCUVZjc1EwRkJha0pFTEV0QlFYRkZMRU5CUVhKRlFTeE5RVUZMTEVWQlFVeEJMRU5CUVVNN2IwSkJRV2xDVWl4TFFVRkxPMjlDUVVGRlR5eFBRVUZQTzI5Q1FVRkZWaXhYUVVGWE8yZENRVUYxUWl4RFFVRkRMRU5CUVhKRlZ5eE5RVUZ4UlN4dlFrRkJia0pNTEd0Q1FVRnJRanRuUWtGRk4wWXNUVUZCVFN4RFFVRkRSU3huUWtGQlowSTdXVUZEZWtJc1EwRkJRenM3TzFsQlJVMUxMRWRCUVd0Q0xFVkJRV3hDUVN4RFFVRnJRanR0UWtGQmVrSXNVVUZCVVN4RFFVRkVRU3hyUWtGQmEwSXNRMEZCUTFZc1MwRkJTeXhGUVVGRlR5eFBRVUZQTEVWQlFVVkpMRWxCUVVrc1JVRkJlVUlzUTBGQlF6dG5Ra0ZCZUVJc1IwRkJSMUlzUTBGQlNDeEhRVUZ4UWl4RFFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4VFFVRnhRaXhEUVVGeVFpeE5RVUZ4UWl4RlFVRnNRa0VzYTBKQlFXdENMRWRCUVhKQ0xFZEJRWEZDTEU5QlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVOQlFYRkNMRWRCUVhKQ0xFbEJRWEZDTEVkQlFYSkNMRU5CUVhGQ0xFOUJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xFTkJRWEZDTEVWQlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVsQlFYRkNMRVZCUVhKQ0xFbEJRWEZDTEVkQlFYSkNMRU5CUVVNN2IwSkJRVVZCTEd0Q1FVRnJRaXhEUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhEUVVGeFFpeEpRVUZ5UWl4VFFVRnhRaXhEUVVGeVFpeEpRVUZ4UWl4RFEzcERka1VzUTBSNVEzVkZPMmRDUVVGRUxFTkJRVU03YjBKQlR6RkRTeXhOUVVGTE8yZENRVTQ1UWl4RlFVRkZMRVZCUVVWSExFbEJRVWtzUzBGQlMxQXNVMEZCVXl4RlFVRkZMRU5CUVVNN2IwSkJRM1pDVHl4SlFVRkpMRWRCUVVkS0xFOUJRVThzUTBGQlF5eERRVUZETEVWQlFVY3NRVUZCU0N4RFFVRkhPMjlDUVVOdVFrRXNUMEZCVHl4SFFVRkhVQ3hMUVVGTExFTkJRVU1zUTBGQlJTeEZRVUZITEVGQlFVZ3NRMEZCUnp0dlFrRkRja0pCTEV0QlFVc3NSMEZCUjBZc1owSkJRV2RDTEVOQlFVTXNRMEZCUXl4RlFVRkhMRUZCUVVnc1EwRkJSenRuUWtGREwwSXNRMEZCUXp0blFrRkZSQ3hIUVVGTExFTkJRVU5QTEdkQ1FVRm5RaXhKUVVGSFJ5eE5RVUZMTEVkQlFVeEJMRTFCUVVzc1ZVRkJRMFVzYTBKQlFXdENMRU5CUVhoQ1JpeExRVUZyUml4RFFVRnNSa0VzVFVGQlN5eEZRVUZNUVN4RFFVRkRPMjlDUVVGM1FsSXNTMEZCU3p0dlFrRkJSVThzVDBGQlR6dHZRa0ZCUlVrc1NVRkJTVHR2UWtGQlJXUXNWMEZCVnp0blFrRkJkVUlzUTBGQlF5eERRVUZzUmxjc1RVRkJhMFlzYjBKQlFXNUNUQ3hyUWtGQmEwSTdaMEpCUlRGSExFMUJRVTBzUTBGQlEwVXNaMEpCUVdkQ08xbEJRM3BDTEVOQlFVTTdPMDA3TzBWQk4wTXlRMGNzVFVGQlN6dHJRa0ZCT1VKV0xHZENRVUZuUWl4QkluMD0iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBVID0gXCJ1XCI7XG5leHBvcnQgY29uc3QgRU1QVFlfU1RSSU5HID0gXCJcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgYXJyYXlVdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmltcG9ydCBTaWduaWZpY2FudFRva2VuIGZyb20gXCIuL3Rva2VuL3NpZ25pZmljYW50XCI7XG5cbmltcG9ydCB7IFUsIEVNUFRZX1NUUklORyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5jb25zdCB7IGZpcnN0IH0gPSBhcnJheVV0aWxpdGllcztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKHR5cGUsIHJlZ3VsYXJFeHByZXNzaW9uKSB7XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICB0aGlzLnJlZ3VsYXJFeHByZXNzaW9uID0gcmVndWxhckV4cHJlc3Npb247XG4gIH1cbiAgXG4gIGdldFR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMudHlwZTtcbiAgfVxuICBcbiAgZ2V0UmVndWxhckV4cHJlc3Npb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucmVndWxhckV4cHJlc3Npb247XG4gIH1cblxuICBtYXRjaChjb250ZW50KSB7XG4gICAgbGV0IHNpZ25pZmljYW50VG9rZW4gPSBudWxsO1xuXG4gICAgY29uc3QgbWF0Y2hlcyA9IGNvbnRlbnQubWF0Y2godGhpcy5yZWd1bGFyRXhwcmVzc2lvbik7XG5cbiAgICBpZiAobWF0Y2hlcyAhPT0gbnVsbCkge1xuICAgICAgY29uc3QgeyBpbmRleCB9ID0gbWF0Y2hlcztcblxuICAgICAgaWYgKGluZGV4ID09PSAwKSB7XG4gICAgICAgIGNvbnN0IGZpcnN0TWF0Y2ggPSBmaXJzdChtYXRjaGVzKTtcblxuICAgICAgICBjb250ZW50ID0gZmlyc3RNYXRjaDsgLy8vXG5cbiAgICAgICAgY29uc3QgY29udGVudExlbmd0aCA9IGNvbnRlbnQubGVuZ3RoO1xuXG4gICAgICAgIGlmIChjb250ZW50TGVuZ3RoID4gMCkge1xuICAgICAgICAgIHNpZ25pZmljYW50VG9rZW4gPSBTaWduaWZpY2FudFRva2VuLmZyb21Db250ZW50QW5kVHlwZShjb250ZW50LCB0aGlzLnR5cGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNpZ25pZmljYW50VG9rZW47XG4gIH1cbiAgXG4gIGFzRW50cnkoKSB7XG4gICAgY29uc3QgZW50cnkgPSB7fSxcbiAgICAgICAgICByZWd1bGFyRXhwcmVzc2lvblBhdHRlcm4gPSBgJHt0aGlzLnJlZ3VsYXJFeHByZXNzaW9ufWA7XG5cbiAgICBlbnRyeVt0aGlzLnR5cGVdID0gcmVndWxhckV4cHJlc3Npb25QYXR0ZXJuO1xuXG4gICAgcmV0dXJuIGVudHJ5O1xuICB9XG5cbiAgc3RhdGljIGZyb21Ub2tlbihUb2tlbikge1xuICAgIGNvbnN0IHsgdHlwZSwgcmVndWxhckV4cHJlc3Npb24gfSA9IFRva2VuLFxuICAgICAgICAgIHJ1bGUgPSBuZXcgUnVsZSh0eXBlLCByZWd1bGFyRXhwcmVzc2lvbik7XG5cbiAgICByZXR1cm4gcnVsZTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tRW50cnkoZW50cnkpIHtcbiAgICBjb25zdCBlbnRyeUtleXMgPSBPYmplY3Qua2V5cyhlbnRyeSksXG4gICAgICAgICAgZmlyc3RFbnRyeUtleSA9IGZpcnN0KGVudHJ5S2V5cyksXG4gICAgICAgICAgdHlwZSA9IGZpcnN0RW50cnlLZXksIC8vL1xuICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUGF0dGVybiA9IGVudHJ5W3R5cGVdLFxuICAgICAgICAgIHJ1bGUgPSBSdWxlLmZyb21UeXBlQW5kUmVndWxhckV4cHJlc3Npb25QYXR0ZXJuKHR5cGUsIHJlZ3VsYXJFeHByZXNzaW9uUGF0dGVybik7XG4gICAgICAgIFxuICAgIHJldHVybiBydWxlOyBcbiAgfVxuXG4gIHN0YXRpYyBmcm9tVHlwZUFuZFJlZ3VsYXJFeHByZXNzaW9uUGF0dGVybih0eXBlLCByZWd1bGFyRXhwcmVzc2lvblBhdHRlcm4pIHtcbiAgICBjb25zdCB1bmljb2RlID0gaXNVbmljb2RlKHJlZ3VsYXJFeHByZXNzaW9uUGF0dGVybiksXG4gICAgICAgICAgZmxhZ3MgPSB1bmljb2RlID9cbiAgICAgICAgICAgICAgICAgICAgVSA6XG4gICAgICAgICAgICAgICAgICAgICAgRU1QVFlfU1RSSU5HLFxuICAgICAgICAgIHJlZ0V4cCA9IG5ldyBSZWdFeHAocmVndWxhckV4cHJlc3Npb25QYXR0ZXJuLCBmbGFncyksXG4gICAgICAgICAgcmVndWxhckV4cHJlc3Npb24gPSByZWdFeHAsIC8vL1xuICAgICAgICAgIHJ1bGUgPSBuZXcgUnVsZSh0eXBlLCByZWd1bGFyRXhwcmVzc2lvbik7XG5cbiAgICByZXR1cm4gcnVsZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1VuaWNvZGUocmVndWxhckV4cHJlc3Npb25QYXR0ZXJuKSB7XG4gIGNvbnN0IHVuaWNvZGVSZWd1bGFyRXhwcmVzc2lvbiA9IC91ey8sIC8vL1xuICAgICAgICBpbmRleCA9IHJlZ3VsYXJFeHByZXNzaW9uUGF0dGVybi5zZWFyY2godW5pY29kZVJlZ3VsYXJFeHByZXNzaW9uKSxcbiAgICAgICAgdW5pY29kZSA9IChpbmRleCAhPT0gLTEpO1xuXG4gIHJldHVybiB1bmljb2RlO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBsdXMgPSBcIitcIjtcclxuZXhwb3J0IGNvbnN0IGVwc2lsb24gPSBcIlx1MDNCNVwiO1xyXG5leHBvcnQgY29uc3Qgd2lsZGNhcmQgPSBcIi5cIjtcclxuZXhwb3J0IGNvbnN0IGFzdGVyaXNrID0gXCIqXCI7XHJcbmV4cG9ydCBjb25zdCBzZXBhcmF0b3IgPSBcIjo6PVwiO1xyXG5leHBvcnQgY29uc3QgdGVybWluYXRvciA9IFwiO1wiO1xyXG5leHBvcnQgY29uc3QgdmVydGljYWxCYXIgPSBcInxcIjtcclxuZXhwb3J0IGNvbnN0IG9wZW5CcmFja2V0ID0gXCIoXCI7XHJcbmV4cG9ydCBjb25zdCBjbG9zZUJyYWNrZXQgPSBcIilcIjtcclxuZXhwb3J0IGNvbnN0IHF1ZXN0aW9uTWFyayA9IFwiP1wiO1xyXG5leHBvcnQgY29uc3QgZXhjbGFtYXRpb25NYXJrID0gXCIhXCI7XHJcbmV4cG9ydCBjb25zdCBOT19XSElURVNQQUNFID0gXCI8Tk9fV0hJVEVTUEFDRT5cIjtcclxuZXhwb3J0IGNvbnN0IEVORF9PRl9MSU5FID0gXCI8RU5EX09GX0xJTkU+XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgcGx1cyxcclxuICBlcHNpbG9uLFxyXG4gIHdpbGRjYXJkLFxyXG4gIGFzdGVyaXNrLFxyXG4gIHNlcGFyYXRvcixcclxuICB0ZXJtaW5hdG9yLFxyXG4gIHZlcnRpY2FsQmFyLFxyXG4gIG9wZW5CcmFja2V0LFxyXG4gIGNsb3NlQnJhY2tldCxcclxuICBxdWVzdGlvbk1hcmssXHJcbiAgZXhjbGFtYXRpb25NYXJrLFxyXG4gIE5PX1dISVRFU1BBQ0UsXHJcbiAgRU5EX09GX0xJTkVcclxufTtcclxuIiwgIlwidXNlIHN0cmljdFwiO1xyXG5cclxuY29uc3QgZW50cmllcyA9IFtcclxuICB7XHJcbiAgICBcInNwZWNpYWxcIjogXCJeKD86Ojo9fFxcXFx8fFxcXFwofFxcXFwpfFxcXFw/fFxcXFwhfFxcXFwqfFxcXFwrfFxcXFwufFx1MDNCNXw7fDxOT19XSElURVNQQUNFPnw8RU5EX09GX0xJTkU+KVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcInR5cGVcIjogXCJeXFxcXFtbXlxcXFxdXStcXFxcXVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIm5hbWVcIjogXCJeW1xcXFx3fl0rXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwidW5hc3NpZ25lZFwiOiBcIl5bXlxcXFxzXStcIlxyXG4gIH1cclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGVudHJpZXM7XHJcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGluQ29tbWVudEZyb21Ub2tlbkFuZEluQ29tbWVudCh0b2tlbiwgaW5Db21tZW50KSB7XG4gIGNvbnN0IHRva2VuQ29tbWVudFRva2VuID0gdG9rZW4uaXNDb21tZW50VG9rZW4oKTtcblxuICBpZiAodG9rZW5Db21tZW50VG9rZW4pIHtcbiAgICBjb25zdCBjb21tZW50VG9rZW4gPSB0b2tlbiwgLy8vXG4gICAgICAgICAgY29tbWVudFRva2VuSW5Db21tZW50UHJlc2VydmluZyA9IGNvbW1lbnRUb2tlbi5pc0luQ29tbWVudFByZXNlcnZpbmcoKTtcblxuICAgIGluQ29tbWVudCA9IGNvbW1lbnRUb2tlbkluQ29tbWVudFByZXNlcnZpbmc7ICAvLy9cbiAgfVxuXG4gIHJldHVybiBpbkNvbW1lbnQ7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xyXG5cclxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBpbkNvbW1lbnRGcm9tVG9rZW5BbmRJbkNvbW1lbnQgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3Rva2VuXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21tb25MZXhlciB7XHJcbiAgY29uc3RydWN0b3IocnVsZXMsIEluQ29tbWVudENsYXNzZXMsIE5vdEluQ29tbWVudENsYXNzZXMpIHtcclxuICAgIHRoaXMucnVsZXMgPSBydWxlcztcclxuICAgIHRoaXMuSW5Db21tZW50Q2xhc3NlcyA9IEluQ29tbWVudENsYXNzZXM7XHJcbiAgICB0aGlzLk5vdEluQ29tbWVudENsYXNzZXMgPSBOb3RJbkNvbW1lbnRDbGFzc2VzO1xyXG4gIH1cclxuICBcclxuICBnZXRSdWxlcygpIHtcclxuICAgIHJldHVybiB0aGlzLnJ1bGVzO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5Db21tZW50Q2xhc3NlcygpIHtcclxuICAgIHJldHVybiB0aGlzLkluQ29tbWVudENsYXNzZXM7XHJcbiAgfVxyXG5cclxuICBnZXROb3RJbkNvbW1lbnRDbGFzc2VzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuTm90SW5Db21tZW50Q2xhc3NlcztcclxuICB9XHJcblxyXG4gIHRva2VuaXNlKGNvbnRlbnQsIGluQ29tbWVudCA9IGZhbHNlKSB7XHJcbiAgICBjb25zdCB0b2tlbnMgPSBbXTtcclxuXHJcbiAgICB3aGlsZSAoY29udGVudCAhPT0gRU1QVFlfU1RSSU5HKSB7XHJcbiAgICAgIGxldCB0b2tlbiA9IG51bGw7XHJcblxyXG4gICAgICBjb25zdCBDbGFzc2VzID0gaW5Db21tZW50ID9cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5JbkNvbW1lbnRDbGFzc2VzIDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLk5vdEluQ29tbWVudENsYXNzZXM7XHJcblxyXG4gICAgICBDbGFzc2VzLnNvbWUoKENsYXNzKSA9PiB7XHJcbiAgICAgICAgaWYgKENsYXNzICE9PSBudWxsKSB7XHJcbiAgICAgICAgICB0b2tlbiA9IENsYXNzLm1hdGNoKGNvbnRlbnQpO1xyXG5cclxuICAgICAgICAgIGlmICh0b2tlbiAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKHRva2VuID09PSBudWxsKSB7XHJcbiAgICAgICAgbGV0IHNpZ25pZmljYW50VG9rZW4gPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLnJ1bGVzLnNvbWUoKHJ1bGUpID0+IHtcclxuICAgICAgICAgIHNpZ25pZmljYW50VG9rZW4gPSBydWxlLm1hdGNoKGNvbnRlbnQpO1xyXG5cclxuICAgICAgICAgIGlmIChzaWduaWZpY2FudFRva2VuICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRva2VuID0gc2lnbmlmaWNhbnRUb2tlbjsgLy8vXHJcblxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHRva2VuID09PSBudWxsKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgY29udGVudCAnJHtjb250ZW50fScgY2Fubm90IGJlIHRva2VuaXNlZC5gKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdG9rZW5zLnB1c2godG9rZW4pO1xyXG5cclxuICAgICAgaW5Db21tZW50ID0gaW5Db21tZW50RnJvbVRva2VuQW5kSW5Db21tZW50KHRva2VuLCBpbkNvbW1lbnQpO1xyXG5cclxuICAgICAgY29uc3QgdG9rZW5Db250ZW50TGVuZ3RoID0gdG9rZW4uZ2V0Q29udGVudExlbmd0aCgpLFxyXG4gICAgICAgICAgICBzdGFydCA9IHRva2VuQ29udGVudExlbmd0aDsgLy8vXHJcblxyXG4gICAgICBjb250ZW50ID0gY29udGVudC5zdWJzdHJpbmcoc3RhcnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0b2tlbnM7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZnJvbU5vdGhpbmcoQ2xhc3MpIHtcclxuICAgIGNvbnN0IHsgZW50cmllcyB9ID0gQ2xhc3MsXHJcbiAgICAgICAgICBJbkNvbW1lbnRDbGFzc2VzID0gSW5Db21tZW50Q2xhc3Nlc0Zyb21DbGFzcyhDbGFzcyksXHJcbiAgICAgICAgICBOb3RJbkNvbW1lbnRDbGFzc2VzID0gTm90SW5Db21tZW50Q2xhc3Nlc0Zyb21DbGFzcyhDbGFzcyksXHJcbiAgICAgICAgICBydWxlcyA9IGVudHJpZXMubWFwKChlbnRyeSkgPT4gUnVsZS5mcm9tRW50cnkoZW50cnkpKSxcclxuICAgICAgICAgIGxleGVyID0gbmV3IENsYXNzKHJ1bGVzLCBJbkNvbW1lbnRDbGFzc2VzLCBOb3RJbkNvbW1lbnRDbGFzc2VzKTtcclxuXHJcbiAgICByZXR1cm4gbGV4ZXI7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZnJvbVJ1bGVzKENsYXNzLCBydWxlcykge1xyXG4gICAgY29uc3QgSW5Db21tZW50Q2xhc3NlcyA9IEluQ29tbWVudENsYXNzZXNGcm9tQ2xhc3MoQ2xhc3MpLFxyXG4gICAgICAgICAgTm90SW5Db21tZW50Q2xhc3NlcyA9IE5vdEluQ29tbWVudENsYXNzZXNGcm9tQ2xhc3MoQ2xhc3MpLFxyXG4gICAgICAgICAgbGV4ZXIgPSBuZXcgQ2xhc3MocnVsZXMsIEluQ29tbWVudENsYXNzZXMsIE5vdEluQ29tbWVudENsYXNzZXMpO1xyXG5cclxuICAgIHJldHVybiBsZXhlcjtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBmcm9tRW50cmllcyhDbGFzcywgZW50cmllcykge1xyXG4gICAgY29uc3QgcnVsZXMgPSBlbnRyaWVzLm1hcCgoZW50cnkpID0+IFJ1bGUuZnJvbUVudHJ5KGVudHJ5KSksXHJcbiAgICAgICAgICBJbkNvbW1lbnRDbGFzc2VzID0gSW5Db21tZW50Q2xhc3Nlc0Zyb21DbGFzcyhDbGFzcyksXHJcbiAgICAgICAgICBOb3RJbkNvbW1lbnRDbGFzc2VzID0gTm90SW5Db21tZW50Q2xhc3Nlc0Zyb21DbGFzcyhDbGFzcyksXHJcbiAgICAgICAgICBsZXhlciA9IG5ldyBDbGFzcyhydWxlcywgSW5Db21tZW50Q2xhc3NlcywgTm90SW5Db21tZW50Q2xhc3Nlcyk7XHJcblxyXG4gICAgcmV0dXJuIGxleGVyO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gSW5Db21tZW50Q2xhc3Nlc0Zyb21DbGFzcyhDbGFzcykge1xyXG4gIGNvbnN0IHsgRW5kT2ZMaW5lQ29tbWVudFRva2VuLCBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiwgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gfSA9IENsYXNzLFxyXG4gICAgICAgIEluQ29tbWVudENsYXNzZXMgPSBbXHJcbiAgICAgICAgICBFbmRPZkxpbmVDb21tZW50VG9rZW4sXHJcbiAgICAgICAgICBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbixcclxuICAgICAgICAgIE1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuXHJcbiAgICAgICAgXTtcclxuXHJcbiAgcmV0dXJuIEluQ29tbWVudENsYXNzZXM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIE5vdEluQ29tbWVudENsYXNzZXNGcm9tQ2xhc3MoQ2xhc3MpIHtcclxuICBjb25zdCB7IEVuZE9mTGluZVRva2VuLFxyXG4gICAgICAgICAgV2hpdGVzcGFjZVRva2VuLFxyXG4gICAgICAgICAgU2luZ2xlTGluZUNvbW1lbnRUb2tlbixcclxuICAgICAgICAgIFJlZ3VsYXJFeHByZXNzaW9uVG9rZW4sXHJcbiAgICAgICAgICBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLFxyXG4gICAgICAgICAgU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuLFxyXG4gICAgICAgICAgRG91Ymx5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuIH0gPSBDbGFzcyxcclxuICAgICAgTm90SW5Db21tZW50Q2xhc3NlcyA9IFtcclxuICAgICAgICBFbmRPZkxpbmVUb2tlbixcclxuICAgICAgICBXaGl0ZXNwYWNlVG9rZW4sXHJcbiAgICAgICAgU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbixcclxuICAgICAgICBTaW5nbGVMaW5lQ29tbWVudFRva2VuLFxyXG4gICAgICAgIFJlZ3VsYXJFeHByZXNzaW9uVG9rZW4sXHJcbiAgICAgICAgU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuLFxyXG4gICAgICAgIERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlblxyXG4gICAgICBdO1xyXG5cclxuICByZXR1cm4gTm90SW5Db21tZW50Q2xhc3NlcztcclxufSIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRva2VuIGZyb20gXCIuLi90b2tlblwiO1xuXG5jb25zdCBzaWduaWZpY2FudCA9IGZhbHNlO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb25TaWduaWZpY2FudFRva2VuIGV4dGVuZHMgVG9rZW4ge1xuICBjbG9uZShDbGFzcywgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKENsYXNzLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbiwgc2lnbmlmaWNhbnQpOyB9XG5cbiAgc3RhdGljIG1hdGNoKENsYXNzLCBjb250ZW50KSB7IHJldHVybiBUb2tlbi5tYXRjaChDbGFzcywgY29udGVudCwgc2lnbmlmaWNhbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KENsYXNzLCBjb250ZW50KSB7IHJldHVybiBUb2tlbi5mcm9tQ29udGVudChDbGFzcywgY29udGVudCwgc2lnbmlmaWNhbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50QW5kVHlwZShDbGFzcywgY29udGVudCwgdHlwZSkgeyByZXR1cm4gVG9rZW4uZnJvbUNvbnRlbnRBbmRUeXBlKENsYXNzLCBjb250ZW50LCB0eXBlLCBzaWduaWZpY2FudCk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IE5vblNpZ25pZmljYW50VG9rZW4gZnJvbSBcIi4uLy4uL3Rva2VuL25vblNpZ25pZmljYW50XCI7XG5cbmltcG9ydCB7IHdoaXRlc3BhY2VUeXBlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdoaXRlc3BhY2VUb2tlbiBleHRlbmRzIE5vblNpZ25pZmljYW50VG9rZW4ge1xuICBhc0hUTUwoKSB7XG4gICAgY29uc3QgaHRtbCA9IHRoaXMuaW5uZXJIVE1MOyAgLy8vXG5cbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG4gIGNsb25lKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7IHJldHVybiBzdXBlci5jbG9uZShXaGl0ZXNwYWNlVG9rZW4sIHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKTsgfVxuXG4gIHN0YXRpYyB0eXBlID0gd2hpdGVzcGFjZVR5cGU7XG5cbiAgc3RhdGljIHJlZ3VsYXJFeHByZXNzaW9uID0gL15bXFx0IF0rLztcblxuICBzdGF0aWMgbWF0Y2goY29udGVudCkgeyByZXR1cm4gTm9uU2lnbmlmaWNhbnRUb2tlbi5tYXRjaChXaGl0ZXNwYWNlVG9rZW4sIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KGNvbnRlbnQpIHsgcmV0dXJuIE5vblNpZ25pZmljYW50VG9rZW4uZnJvbUNvbnRlbnQoV2hpdGVzcGFjZVRva2VuLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlbiBmcm9tIFwiLi4vLi4vdG9rZW4vc2lnbmlmaWNhbnRcIjtcblxuaW1wb3J0IHsgcmVndWxhckV4cHJlc3Npb25UeXBlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZ3VsYXJFeHByZXNzaW9uVG9rZW4gZXh0ZW5kcyBTaWduaWZpY2FudFRva2VuIHtcbiAgY2xvbmUoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKFJlZ3VsYXJFeHByZXNzaW9uVG9rZW4sIHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKTsgfVxuXG4gIHN0YXRpYyB0eXBlID0gcmVndWxhckV4cHJlc3Npb25UeXBlO1xuXG4gIHN0YXRpYyByZWd1bGFyRXhwcmVzc2lvbiA9IC9eXFwvKD86XFxcXFteXFxzXXxbXlxcL1xcclxcbl0pKlxcLy87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIFNpZ25pZmljYW50VG9rZW4ubWF0Y2goUmVndWxhckV4cHJlc3Npb25Ub2tlbiwgY29udGVudCk7IH1cblxuICBzdGF0aWMgZnJvbUNvbnRlbnQoY29udGVudCkgeyByZXR1cm4gU2lnbmlmaWNhbnRUb2tlbi5mcm9tQ29udGVudChSZWd1bGFyRXhwcmVzc2lvblRva2VuLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uU2lnbmlmaWNhbnRUb2tlbiBmcm9tIFwiLi4vLi4vdG9rZW4vbm9uU2lnbmlmaWNhbnRcIjtcblxuaW1wb3J0IHsgZW5kT2ZMaW5lVHlwZSB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmRPZkxpbmVOb25TaWduaWZpY2FudFRva2VuIGV4dGVuZHMgTm9uU2lnbmlmaWNhbnRUb2tlbiB7XG4gIGNsb25lKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7IHJldHVybiBzdXBlci5jbG9uZShFbmRPZkxpbmVOb25TaWduaWZpY2FudFRva2VuLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBhc0hUTUwoKSB7XG4gICAgY29uc3QgaHRtbCA9IHRoaXMuaW5uZXJIVE1MOyAgLy8vXG5cbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG4gIHN0YXRpYyB0eXBlID0gZW5kT2ZMaW5lVHlwZTtcblxuICBzdGF0aWMgcmVndWxhckV4cHJlc3Npb24gPSAvXig/OlxcclxcbnxcXHJ8XFxuKS87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIE5vblNpZ25pZmljYW50VG9rZW4ubWF0Y2goRW5kT2ZMaW5lTm9uU2lnbmlmaWNhbnRUb2tlbiwgY29udGVudCk7IH1cblxuICBzdGF0aWMgZnJvbUNvbnRlbnQoY29udGVudCkgeyByZXR1cm4gTm9uU2lnbmlmaWNhbnRUb2tlbi5mcm9tQ29udGVudChFbmRPZkxpbmVOb25TaWduaWZpY2FudFRva2VuLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlbiBmcm9tIFwiLi4vLi4vdG9rZW4vc2lnbmlmaWNhbnRcIjtcblxuaW1wb3J0IHsgc3RyaW5nTGl0ZXJhbFR5cGUgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RyaW5nTGl0ZXJhbFRva2VuIGV4dGVuZHMgU2lnbmlmaWNhbnRUb2tlbiB7XG4gIGNsb25lKENsYXNzLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbikgeyByZXR1cm4gc3VwZXIuY2xvbmUoQ2xhc3MsIHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKTsgfVxuXG4gIGdldFN0cmluZygpIHtcbiAgICBjb25zdCBjb250ZW50ID0gdGhpcy5nZXRDb250ZW50KCksXG4gICAgICAgICAgY29udGVudExlbmd0aCA9IGNvbnRlbnQubGVuZ3RoLFxuICAgICAgICAgIHN0YXJ0ID0gMSxcbiAgICAgICAgICBlbmQgPSBjb250ZW50TGVuZ3RoIC0gMSxcbiAgICAgICAgICBzdHJpbmcgPSBjb250ZW50LnN1YnN0cmluZyhzdGFydCwgZW5kKTtcblxuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cblxuICBzdGF0aWMgdHlwZSA9IHN0cmluZ0xpdGVyYWxUeXBlO1xuXG4gIHN0YXRpYyBtYXRjaChDbGFzcywgY29udGVudCkgeyByZXR1cm4gU2lnbmlmaWNhbnRUb2tlbi5tYXRjaChDbGFzcywgY29udGVudCk7IH1cblxuICBzdGF0aWMgZnJvbUNvbnRlbnQoQ2xhc3MsIGNvbnRlbnQpIHsgcmV0dXJuIFNpZ25pZmljYW50VG9rZW4uZnJvbUNvbnRlbnQoQ2xhc3MsIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBTdHJpbmdMaXRlcmFsVG9rZW4gZnJvbSBcIi4uLy4uL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRG91Ymx5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuIGV4dGVuZHMgU3RyaW5nTGl0ZXJhbFRva2VuIHtcbiAgY2xvbmUoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiwgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyB9XG5cbiAgc3RhdGljIHJlZ3VsYXJFeHByZXNzaW9uID0gL15cIig/OlxcXFxbXlxcc118W15cIlxcXFxcXHJcXG5dKSpcIi87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIFN0cmluZ0xpdGVyYWxUb2tlbi5tYXRjaChEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4sIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KGNvbnRlbnQpIHsgcmV0dXJuIFN0cmluZ0xpdGVyYWxUb2tlbi5mcm9tQ29udGVudChEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgZW50cmllcyBmcm9tIFwiLi9lbnRyaWVzXCI7XHJcbmltcG9ydCBDb21tb25MZXhlciBmcm9tIFwiLi4vY29tbW9uL2xleGVyXCI7XHJcbmltcG9ydCBXaGl0ZXNwYWNlVG9rZW4gZnJvbSBcIi4uL3Rva2VuL25vblNpZ25pZmljYW50L3doaXRlc3BhY2VcIjtcclxuaW1wb3J0IFJlZ3VsYXJFeHByZXNzaW9uVG9rZW4gZnJvbSBcIi4uL3Rva2VuL3NpZ25pZmljYW50L3JlZ3VsYXJFeHByZXNzaW9uXCI7XHJcbmltcG9ydCBFbmRPZkxpbmVOb25TaWduaWZpY2FudFRva2VuIGZyb20gXCIuLi90b2tlbi9ub25TaWduaWZpY2FudC9lbmRPZkxpbmVcIjtcclxuaW1wb3J0IERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiBmcm9tIFwiLi4vdG9rZW4vc2lnbmlmaWNhbnQvc3RyaW5nTGl0ZXJhbC9kb3VibHlRdW90ZWRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJORkxleGVyIGV4dGVuZHMgQ29tbW9uTGV4ZXIge1xyXG4gIHRva2Vuc0Zyb21CTkYoYm5mKSB7XHJcbiAgICBjb25zdCBjb250ZW50ID0gYm5mLCAgLy8vXHJcbiAgICAgICAgICB0b2tlbnMgPSBzdXBlci50b2tlbmlzZShjb250ZW50KTtcclxuXHJcbiAgICByZXR1cm4gdG9rZW5zO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGVudHJpZXMgPSBlbnRyaWVzO1xyXG5cclxuICBzdGF0aWMgRW5kT2ZMaW5lVG9rZW4gPSBFbmRPZkxpbmVOb25TaWduaWZpY2FudFRva2VuOyAvLy9cclxuXHJcbiAgc3RhdGljIFdoaXRlc3BhY2VUb2tlbiA9IFdoaXRlc3BhY2VUb2tlbjtcclxuXHJcbiAgc3RhdGljIEVuZE9mTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBSZWd1bGFyRXhwcmVzc2lvblRva2VuID0gUmVndWxhckV4cHJlc3Npb25Ub2tlbjtcclxuXHJcbiAgc3RhdGljIFNpbmdsZUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgRG91Ymx5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuID0gRG91Ymx5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuO1xyXG5cclxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7IHJldHVybiBDb21tb25MZXhlci5mcm9tTm90aGluZyhCTkZMZXhlcik7IH1cclxuXHJcbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uTGV4ZXIuZnJvbVJ1bGVzKEJORkxleGVyLCBydWxlcyk7IH1cclxuXHJcbiAgc3RhdGljIGZyb21FbnRyaWVzKGVudHJpZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21FbnRyaWVzKEJORkxleGVyLCBlbnRyaWVzKTsgfVxyXG59XHJcbiIsICJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmNvbnN0IGVudHJpZXMgPSBbXHJcbiAge1xyXG4gICAgXCJkaWdpdFwiOiBcIl5cXFxcZCtcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJicmFja2V0XCI6IFwiXig/OlxcXFwofFxcXFwpKVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIm9wZXJhdG9yXCI6IFwiXig/OlxcXFwrfFxcXFwtfFxcXFwqfFxcXFwvKVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcInVuYXNzaWduZWRcIjogXCJeW15cXFxcc10rXCJcclxuICB9XHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBlbnRyaWVzO1xyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBTdHJpbmdMaXRlcmFsVG9rZW4gZnJvbSBcIi4uLy4uL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuIGV4dGVuZHMgU3RyaW5nTGl0ZXJhbFRva2VuIHtcbiAgY2xvbmUoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKFNpbmdseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiwgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyB9XG5cbiAgc3RhdGljIHJlZ3VsYXJFeHByZXNzaW9uID0gL14nKD86XFxcXFteXFxzXXxbXidcXFxcXFxyXFxuXSkqJy87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIFN0cmluZ0xpdGVyYWxUb2tlbi5tYXRjaChTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4sIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KGNvbnRlbnQpIHsgcmV0dXJuIFN0cmluZ0xpdGVyYWxUb2tlbi5mcm9tQ29udGVudChTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBOb25TaWduaWZpY2FudFRva2VuIGZyb20gXCIuLi8uLi8uLi90b2tlbi9ub25TaWduaWZpY2FudFwiO1xuXG5pbXBvcnQgeyBzaW5nbGVMaW5lQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vLi4vLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2luZ2xlTGluZUNvbW1lbnRUb2tlbiBleHRlbmRzIE5vblNpZ25pZmljYW50VG9rZW4ge1xuICBjbG9uZShDbGFzcywgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKENsYXNzLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBpc0luQ29tbWVudFByZXNlcnZpbmcoKSB7XG4gICAgY29uc3QgaW5Db21tZW50UHJlc2VydmluZyA9IGZhbHNlO1xuXG4gICAgcmV0dXJuIGluQ29tbWVudFByZXNlcnZpbmc7XG4gIH1cblxuICBzdGF0aWMgdHlwZSA9IHNpbmdsZUxpbmVDb21tZW50VHlwZTtcblxuICBzdGF0aWMgbWF0Y2goQ2xhc3MsIGNvbnRlbnQpIHsgcmV0dXJuIE5vblNpZ25pZmljYW50VG9rZW4ubWF0Y2goQ2xhc3MsIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KENsYXNzLCBjb250ZW50KSB7IHJldHVybiBOb25TaWduaWZpY2FudFRva2VuLmZyb21Db250ZW50KENsYXNzLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgU2luZ2xlTGluZUNvbW1lbnRUb2tlbiBmcm9tIFwiLi4vLi4vLi4vLi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9zaW5nbGVMaW5lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFB5dGhvblN0eWxlU2luZ2xlTGluZUNvbW1lbnRUb2tlbiBleHRlbmRzIFNpbmdsZUxpbmVDb21tZW50VG9rZW4ge1xuICBjbG9uZShzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbikgeyByZXR1cm4gc3VwZXIuY2xvbmUoUHl0aG9uU3R5bGVTaW5nbGVMaW5lQ29tbWVudFRva2VuLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBzdGF0aWMgcmVndWxhckV4cHJlc3Npb24gPSAvXiNbXlxcclxcbl0qLztcblxuICBzdGF0aWMgbWF0Y2goY29udGVudCkgeyByZXR1cm4gU2luZ2xlTGluZUNvbW1lbnRUb2tlbi5tYXRjaChQeXRob25TdHlsZVNpbmdsZUxpbmVDb21tZW50VG9rZW4sIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KGNvbnRlbnQpIHsgcmV0dXJuIFNpbmdsZUxpbmVDb21tZW50VG9rZW4uZnJvbUNvbnRlbnQoUHl0aG9uU3R5bGVTaW5nbGVMaW5lQ29tbWVudFRva2VuLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uU2lnbmlmaWNhbnRUb2tlbiBmcm9tIFwiLi4vLi4vLi4vdG9rZW4vbm9uU2lnbmlmaWNhbnRcIjtcblxuaW1wb3J0IHsgZW5kT2ZMaW5lQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vLi4vLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW5kT2ZMaW5lQ29tbWVudE5vblNpZ25pZmljYW50VG9rZW4gZXh0ZW5kcyBOb25TaWduaWZpY2FudFRva2VuIHtcbiAgY2xvbmUoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKEVuZE9mTGluZUNvbW1lbnROb25TaWduaWZpY2FudFRva2VuLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBhc0hUTUwoKSB7XG4gICAgY29uc3QgaHRtbCA9IHRoaXMuaW5uZXJIVE1MOyAgLy8vXG5cbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG4gIGlzSW5Db21tZW50UHJlc2VydmluZygpIHtcbiAgICBjb25zdCBpbkNvbW1lbnRQcmVzZXJ2aW5nID0gdHJ1ZTtcblxuICAgIHJldHVybiBpbkNvbW1lbnRQcmVzZXJ2aW5nO1xuICB9XG5cbiAgc3RhdGljIHR5cGUgPSBlbmRPZkxpbmVDb21tZW50VHlwZTtcblxuICBzdGF0aWMgcmVndWxhckV4cHJlc3Npb24gPSAvXig/OlxcclxcbnxcXHJ8XFxuKS87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIE5vblNpZ25pZmljYW50VG9rZW4ubWF0Y2goRW5kT2ZMaW5lQ29tbWVudE5vblNpZ25pZmljYW50VG9rZW4sIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KGNvbnRlbnQpIHsgcmV0dXJuIE5vblNpZ25pZmljYW50VG9rZW4uZnJvbUNvbnRlbnQoRW5kT2ZMaW5lQ29tbWVudE5vblNpZ25pZmljYW50VG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBOb25TaWduaWZpY2FudFRva2VuIGZyb20gXCIuLi8uLi8uLi8uLi90b2tlbi9ub25TaWduaWZpY2FudFwiO1xuXG5pbXBvcnQgeyBlbmRPZk11bHRpTGluZUNvbW1lbnRUeXBlIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGV4dGVuZHMgTm9uU2lnbmlmaWNhbnRUb2tlbiB7XG4gIGNsb25lKENsYXNzLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbikgeyByZXR1cm4gc3VwZXIuY2xvbmUoQ2xhc3MsIHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKTsgfVxuXG4gIGlzSW5Db21tZW50UHJlc2VydmluZygpIHtcbiAgICBjb25zdCBpbkNvbW1lbnRQcmVzZXJ2aW5nID0gZmFsc2U7XG5cbiAgICByZXR1cm4gaW5Db21tZW50UHJlc2VydmluZztcbiAgfVxuXG4gIHN0YXRpYyB0eXBlID0gZW5kT2ZNdWx0aUxpbmVDb21tZW50VHlwZTtcblxuICBzdGF0aWMgbWF0Y2goQ2xhc3MsIGNvbnRlbnQpIHsgcmV0dXJuIE5vblNpZ25pZmljYW50VG9rZW4ubWF0Y2goQ2xhc3MsIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KENsYXNzLCBjb250ZW50KSB7IHJldHVybiBOb25TaWduaWZpY2FudFRva2VuLmZyb21Db250ZW50KENsYXNzLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvbXVsdGlMaW5lL2VuZE9mXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFB5dGhvblN0eWxlRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gZXh0ZW5kcyBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiB7XG4gIGNsb25lKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7IHJldHVybiBzdXBlci5jbG9uZShQeXRob25TdHlsZUVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBzdGF0aWMgcmVndWxhckV4cHJlc3Npb24gPSAvXiMjIy87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLm1hdGNoKFB5dGhvblN0eWxlRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4sIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KGNvbnRlbnQpIHsgcmV0dXJuIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLmZyb21Db250ZW50KFB5dGhvblN0eWxlRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBOb25TaWduaWZpY2FudFRva2VuIGZyb20gXCIuLi8uLi8uLi8uLi90b2tlbi9ub25TaWduaWZpY2FudFwiO1xuXG5pbXBvcnQgeyBzdGFydE9mTXVsdGlMaW5lQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiBleHRlbmRzIE5vblNpZ25pZmljYW50VG9rZW4ge1xuICBjbG9uZShDbGFzcywgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKENsYXNzLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBpc0luQ29tbWVudFByZXNlcnZpbmcoKSB7XG4gICAgY29uc3QgaW5Db21tZW50UHJlc2VydmluZyA9IHRydWU7XG5cbiAgICByZXR1cm4gaW5Db21tZW50UHJlc2VydmluZztcbiAgfVxuXG4gIHN0YXRpYyB0eXBlID0gc3RhcnRPZk11bHRpTGluZUNvbW1lbnRUeXBlO1xuXG4gIHN0YXRpYyBtYXRjaChDbGFzcywgY29udGVudCkgeyByZXR1cm4gTm9uU2lnbmlmaWNhbnRUb2tlbi5tYXRjaChDbGFzcywgY29udGVudCk7IH1cblxuICBzdGF0aWMgZnJvbUNvbnRlbnQoQ2xhc3MsIGNvbnRlbnQpIHsgcmV0dXJuIE5vblNpZ25pZmljYW50VG9rZW4uZnJvbUNvbnRlbnQoQ2xhc3MsIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGZyb20gXCIuLi8uLi8uLi8uLi8uLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9zdGFydE9mXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFB5dGhvblN0eWxlU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiBleHRlbmRzIFN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4ge1xuICBjbG9uZShzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbikgeyByZXR1cm4gc3VwZXIuY2xvbmUoUHl0aG9uU3R5bGVTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBzdGF0aWMgcmVndWxhckV4cHJlc3Npb24gPSAvXiMjIy87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIFN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4ubWF0Y2goUHl0aG9uU3R5bGVTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLCBjb250ZW50KTsgfVxuXG4gIHN0YXRpYyBmcm9tQ29udGVudChjb250ZW50KSB7IHJldHVybiBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLmZyb21Db250ZW50KFB5dGhvblN0eWxlU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiwgY29udGVudCk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IE5vblNpZ25pZmljYW50VG9rZW4gZnJvbSBcIi4uLy4uLy4uLy4uL3Rva2VuL25vblNpZ25pZmljYW50XCI7XG5cbmltcG9ydCB7IG1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gZXh0ZW5kcyBOb25TaWduaWZpY2FudFRva2VuIHtcbiAgY2xvbmUoQ2xhc3MsIHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7IHJldHVybiBzdXBlci5jbG9uZShDbGFzcywgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyB9XG5cbiAgaXNJbkNvbW1lbnRQcmVzZXJ2aW5nKCkge1xuICAgIGNvbnN0IGluQ29tbWVudFByZXNlcnZpbmcgPSB0cnVlO1xuXG4gICAgcmV0dXJuIGluQ29tbWVudFByZXNlcnZpbmc7XG4gIH1cblxuICBzdGF0aWMgdHlwZSA9IG1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFR5cGU7XG5cbiAgc3RhdGljIG1hdGNoKENsYXNzLCBjb250ZW50KSB7IHJldHVybiBOb25TaWduaWZpY2FudFRva2VuLm1hdGNoKENsYXNzLCBjb250ZW50KTsgfVxuXG4gIHN0YXRpYyBmcm9tQ29udGVudChDbGFzcywgY29udGVudCkgeyByZXR1cm4gTm9uU2lnbmlmaWNhbnRUb2tlbi5mcm9tQ29udGVudChDbGFzcywgY29udGVudCk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IE1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGZyb20gXCIuLi8uLi8uLi8uLi8uLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9taWRkbGVPZlwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQeXRob25TdHlsZU1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGV4dGVuZHMgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4ge1xuICBjbG9uZShzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbikgeyByZXR1cm4gc3VwZXIuY2xvbmUoUHl0aG9uU3R5bGVNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiwgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyB9XG5cbiAgc3RhdGljIHJlZ3VsYXJFeHByZXNzaW9uID0gL14oPzpbXlxcclxcbl0rPyg/PSMjIyl8W15cXHJcXG5dKykvO1xuXG4gIHN0YXRpYyBtYXRjaChjb250ZW50KSB7IHJldHVybiBNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbi5tYXRjaChQeXRob25TdHlsZU1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuLCBjb250ZW50KTsgfVxuXG4gIHN0YXRpYyBmcm9tQ29udGVudChjb250ZW50KSB7IHJldHVybiBNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbi5mcm9tQ29udGVudChQeXRob25TdHlsZU1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xyXG5cclxuaW1wb3J0IGVudHJpZXMgZnJvbSBcIi4vZW50cmllc1wiO1xyXG5pbXBvcnQgQ29tbW9uTGV4ZXIgZnJvbSBcIi4uL2NvbW1vbi9sZXhlclwiO1xyXG5pbXBvcnQgV2hpdGVzcGFjZVRva2VuIGZyb20gXCIuLi90b2tlbi9ub25TaWduaWZpY2FudC93aGl0ZXNwYWNlXCI7XHJcbmltcG9ydCBSZWd1bGFyRXhwcmVzc2lvblRva2VuIGZyb20gXCIuLi90b2tlbi9zaWduaWZpY2FudC9yZWd1bGFyRXhwcmVzc2lvblwiO1xyXG5pbXBvcnQgRW5kT2ZMaW5lTm9uU2lnbmlmaWNhbnRUb2tlbiBmcm9tIFwiLi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvZW5kT2ZMaW5lXCI7XHJcbmltcG9ydCBTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gZnJvbSBcIi4uL3Rva2VuL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWwvc2luZ2x5UXVvdGVkXCI7XHJcbmltcG9ydCBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gZnJvbSBcIi4uL3Rva2VuL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWwvZG91Ymx5UXVvdGVkXCI7XHJcbmltcG9ydCBQeXRob25TdHlsZVNpbmdsZUxpbmVDb21tZW50VG9rZW4gZnJvbSBcIi4uL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvc2luZ2xlTGluZS9weXRob25TdHlsZVwiO1xyXG5pbXBvcnQgRW5kT2ZMaW5lQ29tbWVudE5vblNpZ25pZmljYW50VG9rZW4gZnJvbSBcIi4uL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvZW5kT2ZMaW5lXCI7XHJcbmltcG9ydCBQeXRob25TdHlsZUVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGZyb20gXCIuLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9lbmRPZi9weXRob25TdHlsZVwiO1xyXG5pbXBvcnQgUHl0aG9uU3R5bGVTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGZyb20gXCIuLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9zdGFydE9mL3B5dGhvblN0eWxlXCI7XHJcbmltcG9ydCBQeXRob25TdHlsZU1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGZyb20gXCIuLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9taWRkbGVPZi9weXRob25TdHlsZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzaWNMZXhlciBleHRlbmRzIENvbW1vbkxleGVyIHtcclxuICBzdGF0aWMgZW50cmllcyA9IGVudHJpZXM7XHJcblxyXG4gIHN0YXRpYyBFbmRPZkxpbmVUb2tlbiA9IEVuZE9mTGluZU5vblNpZ25pZmljYW50VG9rZW47IC8vL1xyXG5cclxuICBzdGF0aWMgV2hpdGVzcGFjZVRva2VuID0gV2hpdGVzcGFjZVRva2VuO1xyXG5cclxuICBzdGF0aWMgRW5kT2ZMaW5lQ29tbWVudFRva2VuID0gRW5kT2ZMaW5lQ29tbWVudE5vblNpZ25pZmljYW50VG9rZW47IC8vL1xyXG5cclxuICBzdGF0aWMgUmVndWxhckV4cHJlc3Npb25Ub2tlbiA9IFJlZ3VsYXJFeHByZXNzaW9uVG9rZW47XHJcblxyXG4gIHN0YXRpYyBTaW5nbGVMaW5lQ29tbWVudFRva2VuID0gUHl0aG9uU3R5bGVTaW5nbGVMaW5lQ29tbWVudFRva2VuOyAvLy9cclxuXHJcbiAgc3RhdGljIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gUHl0aG9uU3R5bGVFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbjsgLy8vXHJcblxyXG4gIHN0YXRpYyBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gUHl0aG9uU3R5bGVTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuOyAvLy9cclxuXHJcbiAgc3RhdGljIE1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gUHl0aG9uU3R5bGVNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbjsgLy8vXHJcblxyXG4gIHN0YXRpYyBTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW47XHJcblxyXG4gIHN0YXRpYyBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW47XHJcblxyXG4gIHN0YXRpYyBmcm9tTm90aGluZygpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21Ob3RoaW5nKEJhc2ljTGV4ZXIpOyB9XHJcblxyXG4gIHN0YXRpYyBmcm9tUnVsZXMocnVsZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21SdWxlcyhCYXNpY0xleGVyLCBydWxlcyk7IH1cclxuXHJcbiAgc3RhdGljIGZyb21FbnRyaWVzKGVudHJpZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21FbnRyaWVzKEJhc2ljTGV4ZXIsIGVudHJpZXMpOyB9XHJcbn1cclxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlbiBmcm9tIFwiLi4vLi4vdG9rZW4vc2lnbmlmaWNhbnRcIjtcblxuaW1wb3J0IHsgZW5kT2ZMaW5lVHlwZSB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuIGV4dGVuZHMgU2lnbmlmaWNhbnRUb2tlbiB7XG4gIGNsb25lKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7IHJldHVybiBzdXBlci5jbG9uZShFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBhc0hUTUwoKSB7XG4gICAgY29uc3QgaHRtbCA9IHRoaXMuaW5uZXJIVE1MOyAgLy8vXG5cbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG4gIHN0YXRpYyB0eXBlID0gZW5kT2ZMaW5lVHlwZTtcblxuICBzdGF0aWMgcmVndWxhckV4cHJlc3Npb24gPSAvXig/OlxcclxcbnxcXHJ8XFxuKS87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIFNpZ25pZmljYW50VG9rZW4ubWF0Y2goRW5kT2ZMaW5lU2lnbmlmaWNhbnRUb2tlbiwgY29udGVudCk7IH1cblxuICBzdGF0aWMgZnJvbUNvbnRlbnQoY29udGVudCkgeyByZXR1cm4gU2lnbmlmaWNhbnRUb2tlbi5mcm9tQ29udGVudChFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuLCBjb250ZW50KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlbiBmcm9tIFwiLi4vLi4vLi4vdG9rZW4vc2lnbmlmaWNhbnRcIjtcblxuaW1wb3J0IHsgZW5kT2ZMaW5lQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vLi4vLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW5kT2ZMaW5lQ29tbWVudFNpZ25pZmljYW50VG9rZW4gZXh0ZW5kcyBTaWduaWZpY2FudFRva2VuIHtcbiAgY2xvbmUoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKEVuZE9mTGluZUNvbW1lbnRTaWduaWZpY2FudFRva2VuLCBzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7IH1cblxuICBhc0hUTUwoKSB7XG4gICAgY29uc3QgaHRtbCA9IHRoaXMuaW5uZXJIVE1MOyAgLy8vXG5cbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG4gIGlzSW5Db21tZW50UHJlc2VydmluZygpIHtcbiAgICBjb25zdCBpbkNvbW1lbnRQcmVzZXJ2aW5nID0gdHJ1ZTtcblxuICAgIHJldHVybiBpbkNvbW1lbnRQcmVzZXJ2aW5nO1xuICB9XG5cbiAgc3RhdGljIHR5cGUgPSBlbmRPZkxpbmVDb21tZW50VHlwZTtcblxuICBzdGF0aWMgcmVndWxhckV4cHJlc3Npb24gPSAvXig/OlxcclxcbnxcXHJ8XFxuKS87XG5cbiAgc3RhdGljIG1hdGNoKGNvbnRlbnQpIHsgcmV0dXJuIFNpZ25pZmljYW50VG9rZW4ubWF0Y2goRW5kT2ZMaW5lQ29tbWVudFNpZ25pZmljYW50VG9rZW4sIGNvbnRlbnQpOyB9XG5cbiAgc3RhdGljIGZyb21Db250ZW50KGNvbnRlbnQpIHsgcmV0dXJuIFNpZ25pZmljYW50VG9rZW4uZnJvbUNvbnRlbnQoRW5kT2ZMaW5lQ29tbWVudFNpZ25pZmljYW50VG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBTaW5nbGVMaW5lQ29tbWVudFRva2VuIGZyb20gXCIuLi8uLi8uLi8uLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L3NpbmdsZUxpbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ1N0eWxlU2luZ2xlTGluZUNvbW1lbnRUb2tlbiBleHRlbmRzIFNpbmdsZUxpbmVDb21tZW50VG9rZW4ge1xuICBjbG9uZShzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbikgeyByZXR1cm4gc3VwZXIuY2xvbmUoQ1N0eWxlU2luZ2xlTGluZUNvbW1lbnRUb2tlbiwgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyB9XG5cbiAgc3RhdGljIHJlZ3VsYXJFeHByZXNzaW9uID0gL15cXC9cXC9bXlxcclxcbl0qLztcblxuICBzdGF0aWMgbWF0Y2goY29udGVudCkgeyByZXR1cm4gU2luZ2xlTGluZUNvbW1lbnRUb2tlbi5tYXRjaChDU3R5bGVTaW5nbGVMaW5lQ29tbWVudFRva2VuLCBjb250ZW50KTsgfVxuXG4gIHN0YXRpYyBmcm9tQ29udGVudChjb250ZW50KSB7IHJldHVybiBTaW5nbGVMaW5lQ29tbWVudFRva2VuLmZyb21Db250ZW50KENTdHlsZVNpbmdsZUxpbmVDb21tZW50VG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvZW5kT2ZcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ1N0eWxlRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gZXh0ZW5kcyBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiB7XG4gIGNsb25lKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7IHJldHVybiBzdXBlci5jbG9uZShDU3R5bGVFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiwgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyB9XG5cbiAgc3RhdGljIHJlZ3VsYXJFeHByZXNzaW9uID0gL15cXCpcXC8vO1xuXG4gIHN0YXRpYyBtYXRjaChjb250ZW50KSB7IHJldHVybiBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbi5tYXRjaChDU3R5bGVFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiwgY29udGVudCk7IH1cblxuICBzdGF0aWMgZnJvbUNvbnRlbnQoY29udGVudCkgeyByZXR1cm4gRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4uZnJvbUNvbnRlbnQoQ1N0eWxlRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIGZyb20gXCIuLi8uLi8uLi8uLi8uLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9zdGFydE9mXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENTdHlsZVN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gZXh0ZW5kcyBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIHtcbiAgY2xvbmUoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pIHsgcmV0dXJuIHN1cGVyLmNsb25lKENTdHlsZVN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4sIHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKTsgfVxuXG4gIHN0YXRpYyByZWd1bGFyRXhwcmVzc2lvbiA9IC9eXFwvXFwqLztcblxuICBzdGF0aWMgbWF0Y2goY29udGVudCkgeyByZXR1cm4gU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbi5tYXRjaChDU3R5bGVTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLCBjb250ZW50KTsgfVxuXG4gIHN0YXRpYyBmcm9tQ29udGVudChjb250ZW50KSB7IHJldHVybiBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuLmZyb21Db250ZW50KENTdHlsZVN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvbWlkZGxlT2ZcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ1N0eWxlTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gZXh0ZW5kcyBNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiB7XG4gIGNsb25lKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7IHJldHVybiBzdXBlci5jbG9uZShDU3R5bGVNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiwgc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pOyB9XG5cbiAgc3RhdGljIHJlZ3VsYXJFeHByZXNzaW9uID0gL14oPzpbXlxcclxcbl0rPyg/PVxcKlxcLyl8W15cXHJcXG5dKykvO1xuXG4gIHN0YXRpYyBtYXRjaChjb250ZW50KSB7IHJldHVybiBNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbi5tYXRjaChDU3R5bGVNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiwgY29udGVudCk7IH1cblxuICBzdGF0aWMgZnJvbUNvbnRlbnQoY29udGVudCkgeyByZXR1cm4gTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4uZnJvbUNvbnRlbnQoQ1N0eWxlTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4sIGNvbnRlbnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgUnVsZSB9IGZyb20gXCIuL3J1bGVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdHlwZXMgfSBmcm9tIFwiLi90eXBlc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBzcGVjaWFsU3ltYm9scyB9IGZyb20gXCIuL3NwZWNpYWxTeW1ib2xzXCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgQk5GTGV4ZXIgfSBmcm9tIFwiLi9ibmYvbGV4ZXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQmFzaWNMZXhlciB9IGZyb20gXCIuL2Jhc2ljL2xleGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIENvbW1vbkxleGVyIH0gZnJvbSBcIi4vY29tbW9uL2xleGVyXCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2lnbmlmaWNhbnRUb2tlbiB9IGZyb20gXCIuL3Rva2VuL3NpZ25pZmljYW50XCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE5vblNpZ25pZmljYW50VG9rZW4gfSBmcm9tIFwiLi90b2tlbi9ub25TaWduaWZpY2FudFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuIH0gZnJvbSBcIi4vdG9rZW4vc2lnbmlmaWNhbnQvZW5kT2ZMaW5lXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEVuZE9mTGluZU5vblNpZ25pZmljYW50VG9rZW4gfSBmcm9tIFwiLi90b2tlbi9ub25TaWduaWZpY2FudC9lbmRPZkxpbmVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgRW5kT2ZMaW5lQ29tbWVudFNpZ25pZmljYW50VG9rZW4gfSBmcm9tIFwiLi90b2tlbi9zaWduaWZpY2FudC9jb21tZW50L2VuZE9mTGluZVwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBFbmRPZkxpbmVDb21tZW50Tm9uU2lnbmlmaWNhbnRUb2tlbiB9IGZyb20gXCIuL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvZW5kT2ZMaW5lXCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgV2hpdGVzcGFjZVRva2VuIH0gZnJvbSBcIi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvd2hpdGVzcGFjZVwiO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIFN0cmluZ0xpdGVyYWxUb2tlbiB9IGZyb20gXCIuL3Rva2VuL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWxcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUmVndWxhckV4cHJlc3Npb25Ub2tlbiB9IGZyb20gXCIuL3Rva2VuL3NpZ25pZmljYW50L3JlZ3VsYXJFeHByZXNzaW9uXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNpbmdseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiB9IGZyb20gXCIuL3Rva2VuL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWwvc2luZ2x5UXVvdGVkXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiB9IGZyb20gXCIuL3Rva2VuL3NpZ25pZmljYW50L3N0cmluZ0xpdGVyYWwvZG91Ymx5UXVvdGVkXCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2luZ2xlTGluZUNvbW1lbnRUb2tlbiB9IGZyb20gXCIuL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvc2luZ2xlTGluZVwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiB9IGZyb20gXCIuL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvbXVsdGlMaW5lL2VuZE9mXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gfSBmcm9tIFwiLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9zdGFydE9mXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuIH0gZnJvbSBcIi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvbWlkZGxlT2ZcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ1N0eWxlU2luZ2xlTGluZUNvbW1lbnRUb2tlbiB9IGZyb20gXCIuL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvc2luZ2xlTGluZS9jU3R5bGVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ1N0eWxlRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gfSBmcm9tIFwiLi90b2tlbi9ub25TaWduaWZpY2FudC9jb21tZW50L211bHRpTGluZS9lbmRPZi9jU3R5bGVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ1N0eWxlU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiB9IGZyb20gXCIuL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvbXVsdGlMaW5lL3N0YXJ0T2YvY1N0eWxlXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIENTdHlsZU1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuIH0gZnJvbSBcIi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvbWlkZGxlT2YvY1N0eWxlXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFB5dGhvblN0eWxlU2luZ2xlTGluZUNvbW1lbnRUb2tlbiB9IGZyb20gXCIuL3Rva2VuL25vblNpZ25pZmljYW50L2NvbW1lbnQvc2luZ2xlTGluZS9weXRob25TdHlsZVwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQeXRob25TdHlsZUVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIH0gZnJvbSBcIi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvZW5kT2YvcHl0aG9uU3R5bGVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUHl0aG9uU3R5bGVTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuIH0gZnJvbSBcIi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvc3RhcnRPZi9weXRob25TdHlsZVwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQeXRob25TdHlsZU1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuIH0gZnJvbSBcIi4vdG9rZW4vbm9uU2lnbmlmaWNhbnQvY29tbWVudC9tdWx0aUxpbmUvbWlkZGxlT2YvcHl0aG9uU3R5bGVcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmNvbnN0IGVudHJpZXMgPSBbXHJcblxyXG4gIHsgXCJjb2xvdXJcIjogXCJeIyg/OlswLTlhLWZBLUZdezZ9fFswLTlhLWZBLUZdezN9KVwiIH0sXHJcblxyXG4gIHsgXCJrZXl3b3JkXCI6IFwiXig/OiFpbXBvcnRhbnR8QG1lZGlhKVwiIH0sXHJcblxyXG4gIHsgXCJwZXJjZW50YWdlXCI6IFwiXig/OlswLTldK3xbMC05XSpcXFxcLlswLTldKylcXFxcJVwiIH0sXHJcblxyXG4gIHsgXCJmcmVxdWVuY3lcIjogXCJeKD86WzAtOV0rfFswLTldKlxcXFwuWzAtOV0rKSg/Omh6fGtoeilcIiB9LFxyXG5cclxuICB7IFwiZnJhY3Rpb25cIjogXCJeWzEtOV1bMC05XSo/ZnJcIiB9LFxyXG5cclxuICB7IFwibGVuZ3RoXCI6IFwiXig/OlswLTldK3xbMC05XSpcXFxcLlswLTldKykoPzpweHxjbXxtbXxpbnxwdHxwYylcIiB9LFxyXG5cclxuICB7IFwiYW5nbGVcIjogXCJeKD86WzAtOV0rfFswLTldKlxcXFwuWzAtOV0rKSg/OmRlZ3xyYWR8Z3JhZClcIiB9LFxyXG5cclxuICB7IFwidGltZVwiOiBcIl4oPzpbMC05XSt8WzAtOV0qXFxcXC5bMC05XSspKD86c3xtcylcIiB9LFxyXG5cclxuICB7IFwicmVtc1wiOiBcIl4oPzpbMC05XSt8WzAtOV0qXFxcXC5bMC05XSspcmVtXCIgfSxcclxuXHJcbiAgeyBcImVtc1wiOiBcIl4oPzpbMC05XSt8WzAtOV0qXFxcXC5bMC05XSspZW1cIiB9LFxyXG5cclxuICB7IFwibnVtYmVyXCI6IFwiXlswLTldK3xbMC05XSpcXFxcLlswLTldK1wiIH0sXHJcblxyXG4gIHsgXCJzcGVjaWFsXCI6IFwiXjt8Ojp8OnxcXFxcLnwsfC98XFxcXHw9fH49fD18PnxcXFxce3xcXFxcfXxcXFxcKHxcXFxcKXxcXFxcW3xcXFxcXVwiIH0sXHJcblxyXG4gIHsgXCJvcGVyYXRvclwiOiBcIl5eKD86YW5kfG5vdHxvbmx5KSRcIiB9LFxyXG5cclxuICB7IFwiaWRlbnRpZmllclwiOiBcIl5bX2EtekEtWjAtOS1dK1wiIH0sXHJcblxyXG4gIHsgXCJ1bmFyeS1vcGVyYXRvclwiOiBcIl5cXFxcK3xcXFxcLVwiIH0sXHJcblxyXG4gIHsgXCJ1bmFzc2lnbmVkXCI6IFwiXlteXFxcXHNdK1wiIH1cclxuXHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBlbnRyaWVzO1xyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgeyBDb21tb25MZXhlciwgV2hpdGVzcGFjZVRva2VuLCBFbmRPZkxpbmVOb25TaWduaWZpY2FudFRva2VuLCBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XHJcblxyXG5pbXBvcnQgZW50cmllcyBmcm9tIFwiLi9lbnRyaWVzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDU1NMZXhlciBleHRlbmRzIENvbW1vbkxleGVyIHtcclxuICBzdGF0aWMgZW50cmllcyA9IGVudHJpZXM7XHJcblxyXG4gIHN0YXRpYyBFbmRPZkxpbmVUb2tlbiA9IEVuZE9mTGluZU5vblNpZ25pZmljYW50VG9rZW47IC8vL1xyXG5cclxuICBzdGF0aWMgV2hpdGVzcGFjZVRva2VuID0gV2hpdGVzcGFjZVRva2VuO1xyXG5cclxuICBzdGF0aWMgRW5kT2ZMaW5lQ29tbWVudFRva2VuID0gbnVsbDsgLy8vXHJcblxyXG4gIHN0YXRpYyBSZWd1bGFyRXhwcmVzc2lvblRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIFNpbmdsZUxpbmVDb21tZW50VG9rZW4gPSBudWxsOyAvLy9cclxuXHJcbiAgc3RhdGljIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDsgLy8vXHJcblxyXG4gIHN0YXRpYyBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDsgLy8vXHJcblxyXG4gIHN0YXRpYyBNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7IC8vL1xyXG5cclxuICBzdGF0aWMgU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiA9IERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbjtcclxuXHJcbiAgc3RhdGljIGZyb21Ob3RoaW5nKCkgeyByZXR1cm4gQ29tbW9uTGV4ZXIuZnJvbU5vdGhpbmcoQ1NTTGV4ZXIpOyB9XHJcblxyXG4gIHN0YXRpYyBmcm9tUnVsZXMocnVsZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21SdWxlcyhDU1NMZXhlciwgcnVsZXMpOyB9XHJcblxyXG4gIHN0YXRpYyBmcm9tRW50cmllcyhlbnRyaWVzKSB7IHJldHVybiBDb21tb25MZXhlci5mcm9tRW50cmllcyhDU1NMZXhlciwgZW50cmllcyk7IH1cclxufVxyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGJuZiA9IGBcblxuICAgICAgZG9jdW1lbnQgICAgICAgICAgICAgIDo6PSAgKCBydWxlIHwgZXJyb3IgKSsgO1xuXG4gICAgICBydWxlICAgICAgICAgICAgICAgICAgOjo9ICBuYW1lIFwiOjo9XCIgZGVmaW5pdGlvbnMgXCI7XCIgO1xuXG4gICAgICBuYW1lICAgICAgICAgICAgICAgICAgOjo9ICBbbmFtZV0gO1xuXG4gICAgICBkZWZpbml0aW9ucyAgICAgICAgICAgOjo9ICBkZWZpbml0aW9uICggXCJ8XCIgZGVmaW5pdGlvbiApKiA7XG5cbiAgICAgIGRlZmluaXRpb24gICAgICAgICAgICA6Oj0gIHBhcnQrIDtcblxuICAgICAgcGFydCAgICAgICAgICAgICAgICAgIDo6PSAgbm9uVGVybWluYWxQYXJ0IHF1YW50aWZpZXIqXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHRlcm1pbmFsUGFydCBxdWFudGlmaWVyKlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBub1doaXRlc3BhY2VQYXJ0XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuICAgICAgbm9uVGVybWluYWxQYXJ0ICAgICAgIDo6PSAgY2hvaWNlT2ZQYXJ0c1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBzZXF1ZW5jZU9mUGFydHNcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgcnVsZU5hbWUgbG9va0FoZWFkTW9kaWZpZXI/XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuICAgICAgdGVybWluYWxQYXJ0ICAgICAgICAgIDo6PSAgc2lnbmlmaWNhbnRUb2tlblR5cGVcbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHJlZ3VsYXJFeHByZXNzaW9uXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHRlcm1pbmFsU3ltYm9sXG4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBlbmRPZkxpbmVcbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHdpbGRjYXJkXG4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgIG5vV2hpdGVzcGFjZVBhcnQgICAgICA6Oj0gIFwiPE5PX1dISVRFU1BBQ0U+XCIgOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICBjaG9pY2VPZlBhcnRzICAgICAgICAgOjo9ICBcIihcIiBwYXJ0ICggXCJ8XCIgcGFydCApKyBcIilcIiA7XG5cbiAgICAgIHNlcXVlbmNlT2ZQYXJ0cyAgICAgICA6Oj0gIFwiKFwiIHBhcnQgcGFydCsgXCIpXCIgO1xuXG4gICAgICBydWxlTmFtZSAgICAgICAgICAgICAgOjo9ICBbbmFtZV0gO1xuXG4gICAgICBzaWduaWZpY2FudFRva2VuVHlwZSAgOjo9ICBbdHlwZV0gO1xuXG4gICAgICByZWd1bGFyRXhwcmVzc2lvbiAgICAgOjo9ICBbcmVndWxhci1leHByZXNzaW9uXSA7XG5cbiAgICAgIHRlcm1pbmFsU3ltYm9sICAgICAgICA6Oj0gIFtzdHJpbmctbGl0ZXJhbF0gO1xuXG4gICAgICBlbmRPZkxpbmUgICAgICAgICAgICAgOjo9ICBcIjxFTkRfT0ZfTElORT5cIiA7XG5cbiAgICAgIHdpbGRjYXJkICAgICAgICAgICAgICA6Oj0gIFwiLlwiIDtcblxuICAgICAgcXVhbnRpZmllciAgICAgICAgICAgIDo6PSAgb3B0aW9uYWxRdWFudGlmaWVyXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIG9uZU9yTW9yZVF1YW50aWZpZXJcbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHplcm9Pck1vcmVRdWFudGlmaWVyXG4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cbiAgICAgIGxvb2tBaGVhZE1vZGlmaWVyICAgICA6Oj0gIDxOT19XSElURVNQQUNFPlwiIVwiIDtcblxuICAgICAgb3B0aW9uYWxRdWFudGlmaWVyICAgIDo6PSAgPE5PX1dISVRFU1BBQ0U+XCI/XCIgO1xuXG4gICAgICBvbmVPck1vcmVRdWFudGlmaWVyICAgOjo9ICA8Tk9fV0hJVEVTUEFDRT5cIitcIiA7XG5cbiAgICAgIHplcm9Pck1vcmVRdWFudGlmaWVyICA6Oj0gIDxOT19XSElURVNQQUNFPlwiKlwiIDtcblxuICAgICAgZXJyb3IgICAgICAgICAgICAgICAgIDo6PSAgLiA7XG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IEVNUFRZX1NUUklORyA9IFwiXCI7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGNoYXJhY3RlcnMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmltcG9ydCB7IEVNUFRZX1NUUklORyB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuY29uc3QgeyBTUEFDRV9DSEFSQUNURVIgfSA9IGNoYXJhY3RlcnM7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWRkaW5nRnJvbVBhZGRpbmdMZW5ndGgocGFkZGluZ0xlbmd0aCkge1xuICBsZXQgcGFkZGluZyA9IEVNUFRZX1NUUklORztcblxuICBmb3IgKGxldCBwb3NpdGlvbiA9IDA7IHBvc2l0aW9uIDwgcGFkZGluZ0xlbmd0aDsgcG9zaXRpb24rKykge1xuICAgIHBhZGRpbmcgKz0gU1BBQ0VfQ0hBUkFDVEVSO1xuICB9XG5cbiAgcmV0dXJuIHBhZGRpbmc7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEVNUFRZX1NUUklORyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgcGFkZGluZ0Zyb21QYWRkaW5nTGVuZ3RoIH0gZnJvbSBcIi4vdXRpbGl0aWVzL3N0cmluZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlIHtcbiAgY29uc3RydWN0b3IobmFtZSwgZGVmaW5pdGlvbnMsIE5vblRlcm1pbmFsTm9kZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5kZWZpbml0aW9ucyA9IGRlZmluaXRpb25zO1xuICAgIHRoaXMuTm9uVGVybWluYWxOb2RlID0gTm9uVGVybWluYWxOb2RlO1xuICB9XG5cbiAgZ2V0TmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5uYW1lO1xuICB9XG5cbiAgZ2V0RGVmaW5pdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVmaW5pdGlvbnM7XG4gIH1cblxuICBnZXROb25UZXJtaW5hbE5vZGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuTm9uVGVybWluYWxOb2RlO1xuICB9XG5cbiAgc2V0TmFtZShuYW1lKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgfVxuXG4gIHNldERlZmluaXRpb25zKGRlZmluaXRpb25zKSB7XG4gICAgdGhpcy5kZWZpbml0aW9ucyA9IGRlZmluaXRpb25zO1xuICB9XG5cbiAgc2V0Tm9uVGVybWluYWxOb2RlKE5vblRlcm1pbmFsTm9kZSkge1xuICAgIHRoaXMuTm9uVGVybWluYWxOb2RlID0gTm9uVGVybWluYWxOb2RlO1xuICB9XG5cbiAgYWRkRGVmaW5pdGlvbihkZWZpbml0aW9uLCBwb3NpdGlvbikge1xuICAgIGNvbnN0IGRlZmluaXRpb25zSW5jbHVkZXNEZWZpbml0aW9uID0gdGhpcy5kZWZpbml0aW9ucy5pbmNsdWRlcyhkZWZpbml0aW9uKTtcblxuICAgIGlmICghZGVmaW5pdGlvbnNJbmNsdWRlc0RlZmluaXRpb24pIHtcbiAgICAgIGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IGRlZmluaXRpb25zTGVuZ3RoID0gdGhpcy5kZWZpbml0aW9ucy5sZW5ndGg7XG5cbiAgICAgICAgcG9zaXRpb24gPSBkZWZpbml0aW9uc0xlbmd0aDsgLy8vXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHN0YXJ0ID0gcG9zaXRpb24sIC8vL1xuICAgICAgICAgICAgZGVsZXRlQ291bnQgPSAwO1xuXG4gICAgICB0aGlzLmRlZmluaXRpb25zLnNwbGljZShzdGFydCwgZGVsZXRlQ291bnQsIGRlZmluaXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZURlZmluaXRpb24oZGVmaW5pdGlvbikge1xuICAgIGNvbnN0IGRlZmluaXRpb25zSW5jbHVkZXNEZWZpbml0aW9uID0gdGhpcy5kZWZpbml0aW9ucy5pbmNsdWRlcyhkZWZpbml0aW9uKTtcblxuICAgIGlmIChkZWZpbml0aW9uc0luY2x1ZGVzRGVmaW5pdGlvbikge1xuICAgICAgY29uc3QgZGVmaW5pdGlvbkluZGV4ID0gdGhpcy5kZWZpbml0aW9ucy5pbmRleE9mKGRlZmluaXRpb24pLFxuICAgICAgICAgICAgc3RhcnQgPSBkZWZpbml0aW9uSW5kZXgsICAvLy9cbiAgICAgICAgICAgIGRlbGV0ZUNvdW50ID0gMTtcblxuICAgICAgdGhpcy5kZWZpbml0aW9ucy5zcGxpY2Uoc3RhcnQsIGRlbGV0ZUNvdW50KTtcbiAgICB9XG4gIH1cblxuICByZXBsYWNlRGVmaW5pdGlvbihvbGREZWZpbml0aW9uLCBuZXdEZWZpbml0aW9uKSB7XG4gICAgY29uc3Qgb2xkRGVmaW5pdGlvbkluZGV4ID0gdGhpcy5kZWZpbml0aW9ucy5pbmRleE9mKG9sZERlZmluaXRpb24pO1xuXG4gICAgaWYgKG9sZERlZmluaXRpb25JbmRleCA+IC0xKSB7XG4gICAgICBjb25zdCBzdGFydCA9IG9sZERlZmluaXRpb25JbmRleCwgLy8vXG4gICAgICAgICAgICBkZWxldGVDb3VudCA9IDE7XG5cbiAgICAgIHRoaXMuZGVmaW5pdGlvbnMuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCwgbmV3RGVmaW5pdGlvbilcbiAgICB9XG4gIH1cblxuICBwYXJzZShzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICBsZXQgcnVsZU5vZGUgPSBudWxsO1xuXG4gICAgc3RhdGUuaW5jcmVhc2VEZXB0aCgpO1xuXG4gICAgY29uc3QgdG9vRGVlcCA9IHN0YXRlLmlzVG9vRGVlcCgpO1xuXG4gICAgaWYgKHRvb0RlZXApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIHBhcnNlIHRyZWUgaXMgdG9vIGRlZXAgYXQgcnVsZSBcIiR7dGhpcy5uYW1lfVwiLmApO1xuICAgIH1cblxuICAgIGxldCBwYXJzZWQsXG4gICAgICAgIGRlZmluaXRpb25Ob2RlcztcblxuICAgIHRoaXMuZGVmaW5pdGlvbnMuc29tZSgoZGVmaW5pdGlvbikgPT4ge1xuICAgICAgZGVmaW5pdGlvbk5vZGVzID0gW107XG5cbiAgICAgIHBhcnNlZCA9IHRoaXMucGFyc2VEZWZpbml0aW9uKGRlZmluaXRpb24sIGRlZmluaXRpb25Ob2Rlcywgc3RhdGUsIGNhbGxiYWNrKTtcblxuICAgICAgaWYgKHBhcnNlZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmIChwYXJzZWQpIHtcbiAgICAgIGNvbnN0IHJ1bGVOYW1lID0gdGhpcy5uYW1lLCAvLy9cbiAgICAgICAgICAgIGNoaWxkTm9kZXMgPSBkZWZpbml0aW9uTm9kZXMsICAvLy9cbiAgICAgICAgICAgIG5vblRlcm1pbmFsTm9kZSA9IHRoaXMuTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpO1xuXG4gICAgICBydWxlTm9kZSA9IG5vblRlcm1pbmFsTm9kZTsgLy8vXG4gICAgfVxuXG4gICAgc3RhdGUuZGVjcmVhc2VEZXB0aCgpO1xuXG4gICAgcmV0dXJuIHJ1bGVOb2RlO1xuICB9XG5cbiAgcGFyc2VEZWZpbml0aW9uKGRlZmluaXRpb24sIG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICBsZXQgcGFyc2VkO1xuXG4gICAgY29uc3Qgc2F2ZWRJbmRleCA9IHN0YXRlLmdldFNhdmVkSW5kZXgoKTtcblxuICAgIHBhcnNlZCA9IGRlZmluaXRpb24ucGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG5cbiAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgc3RhdGUuYmFja3RyYWNrKHNhdmVkSW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJzZWQ7XG4gIH1cblxuICBhc1N0cmluZyhtYXhpbXVtUnVsZU5hbWVMZW5ndGgsIG11bHRpTGluZSA9IHRydWUpIHtcbiAgICBjb25zdCBkZWZpbml0aW9uc0xlbmd0aCA9IHRoaXMuZGVmaW5pdGlvbnMubGVuZ3RoO1xuXG4gICAgbXVsdGlMaW5lID0gbXVsdGlMaW5lICYmIChkZWZpbml0aW9uc0xlbmd0aCA+IDEpOyAgLy8vXG5cbiAgICBjb25zdCBtYXhpbXVtUGFkZGluZyA9IHBhZGRpbmdGcm9tUGFkZGluZ0xlbmd0aChtYXhpbXVtUnVsZU5hbWVMZW5ndGgpLFxuICAgICAgICAgIGRlZmluaXRpb25zU3RyaW5nID0gdGhpcy5kZWZpbml0aW9ucy5yZWR1Y2UoKGRlZmluaXRpb25zU3RyaW5nLCBkZWZpbml0aW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWZpbml0aW9uU3RyaW5nID0gZGVmaW5pdGlvbi5hc1N0cmluZygpO1xuXG4gICAgICAgICAgICBpZiAoZGVmaW5pdGlvbnNTdHJpbmcgPT09IEVNUFRZX1NUUklORykge1xuICAgICAgICAgICAgICBkZWZpbml0aW9uc1N0cmluZyA9IGRlZmluaXRpb25TdHJpbmc7IC8vL1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgZGVmaW5pdGlvbnNTdHJpbmcgPSBtdWx0aUxpbmUgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgJHtkZWZpbml0aW9uc1N0cmluZ31cblxuJHttYXhpbXVtUGFkZGluZ30gICB8ICR7ZGVmaW5pdGlvblN0cmluZ31gIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgJHtkZWZpbml0aW9uc1N0cmluZ30gfCAke2RlZmluaXRpb25TdHJpbmd9YDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGRlZmluaXRpb25zU3RyaW5nO1xuICAgICAgICAgIH0sIEVNUFRZX1NUUklORyksXG4gICAgICAgICAgcnVsZU5hbWUgPSB0aGlzLm5hbWUsIC8vL1xuICAgICAgICAgIHJ1bGVOYW1lTGVuZ3RoID0gcnVsZU5hbWUubGVuZ3RoLFxuICAgICAgICAgIHBhZGRpbmdMZW5ndGggPSBtYXhpbXVtUnVsZU5hbWVMZW5ndGggLSBydWxlTmFtZUxlbmd0aCxcbiAgICAgICAgICBwYWRkaW5nID0gcGFkZGluZ0Zyb21QYWRkaW5nTGVuZ3RoKHBhZGRpbmdMZW5ndGgpO1xuXG4gICAgY29uc3Qgc2VtaWNvbG9uU3RyaW5nID0gbXVsdGlMaW5lID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYFxuXG4ke21heGltdW1QYWRkaW5nfSAgIDtgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiA7XCIsXG4gICAgICAgICAgc3RyaW5nID0gYFxuXG4ke3RoaXMubmFtZX0ke3BhZGRpbmd9IDo6PSAke2RlZmluaXRpb25zU3RyaW5nfSR7c2VtaWNvbG9uU3RyaW5nfWA7XG5cbiAgICByZXR1cm4gc3RyaW5nO1xuICB9XG5cbiAgc3RhdGljIGZyb21SdWxlKENsYXNzLCBydWxlKSB7XG4gICAgaWYgKHJ1bGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcnVsZSA9IENsYXNzO1xuICAgICAgQ2xhc3MgPSBSdWxlO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBuYW1lID0gcnVsZS5nZXROYW1lKCksXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBydWxlLmdldERlZmluaXRpb25zKCksXG4gICAgICAgICAgTm9uVGVybWluYWxOb2RlID0gcnVsZS5nZXROb25UZXJtaW5hbE5vZGUoKTtcblxuICAgIHJ1bGUgPSBuZXcgQ2xhc3MobmFtZSwgZGVmaW5pdGlvbnMsIE5vblRlcm1pbmFsTm9kZSk7XG5cbiAgICByZXR1cm4gcnVsZTtcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9NQVhJTVVNX0RFUFRIID0gOTk7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IERFRkFVTFRfTUFYSU1VTV9ERVBUSCB9IGZyb20gXCIuL2RlZmF1bHRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0YXRlIHtcbiAgY29uc3RydWN0b3IocnVsZU1hcCwgdG9rZW5zLCBpbmRleCwgZGVwdGgsIG1heGltdW1EZXB0aCkge1xuICAgIHRoaXMucnVsZU1hcCA9IHJ1bGVNYXA7XG4gICAgdGhpcy50b2tlbnMgPSB0b2tlbnM7XG5cdFx0dGhpcy5pbmRleCA9IGluZGV4O1xuXHRcdHRoaXMuZGVwdGggPSBkZXB0aDtcbiAgICB0aGlzLm1heGltdW1EZXB0aCA9IG1heGltdW1EZXB0aDtcbiAgfVxuXG4gIGdldFJ1bGVNYXAoKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZU1hcDtcbiAgfVxuXG4gIGdldFRva2VucygpIHtcbiAgICByZXR1cm4gdGhpcy50b2tlbnM7XG4gIH1cblxuXHRnZXRJbmRleCgpIHtcblx0XHRyZXR1cm4gdGhpcy5pbmRleDtcblx0fVxuXG4gIGdldERlcHRoKCkge1xuICAgIHJldHVybiB0aGlzLmRlcHRoO1xuICB9XG5cblx0Z2V0TWF4aW11bURlcHRoKCkge1xuXHRcdHJldHVybiB0aGlzLm1heGltdW1EZXB0aDtcblx0fVxuXG5cdGdldFNhdmVkSW5kZXgoKSB7XG4gICAgY29uc3Qgc2F2ZWRJbmRleCA9IHRoaXMuaW5kZXg7IC8vL1xuICBcbiAgICByZXR1cm4gc2F2ZWRJbmRleDtcbiAgfVxuXG4gIGdldE5leHRUb2tlbigpIHtcbiAgICBsZXQgbmV4dFRva2VuID0gbnVsbDtcblxuICAgIGNvbnN0IHRva2Vuc0xlbmd0aCA9IHRoaXMudG9rZW5zLmxlbmd0aDtcblxuICAgIGlmICh0aGlzLmluZGV4IDwgdG9rZW5zTGVuZ3RoKSB7XG4gICAgICBuZXh0VG9rZW4gPSB0aGlzLnRva2Vuc1t0aGlzLmluZGV4KytdO1xuICAgIH1cblxuICAgIHJldHVybiBuZXh0VG9rZW47XG4gIH1cblxuICBnZXROZXh0U2lnbmlmaWNhbnRUb2tlbigpIHtcblx0XHRsZXQgbmV4dFNpZ25pZmljYW50VG9rZW4gPSBudWxsO1xuXG4gIFx0Y29uc3QgdG9rZW5zTGVuZ3RoID0gdGhpcy50b2tlbnMubGVuZ3RoO1xuXG4gIFx0d2hpbGUgKHRoaXMuaW5kZXggPCB0b2tlbnNMZW5ndGgpIHtcbiAgXHRcdGNvbnN0IHRva2VuID0gdGhpcy50b2tlbnNbdGhpcy5pbmRleCsrXSxcblx0XHRcdFx0XHRcdHRva2VuU2lnbmlmaWNhbnQgPSB0b2tlbi5pc1NpZ25pZmljYW50KCk7XG5cbiAgXHRcdGlmICh0b2tlblNpZ25pZmljYW50KSB7XG4gIFx0XHQgIGNvbnN0IHNpZ25pZmljYW50VG9rZW4gPSB0b2tlbjsgLy8vXG5cblx0XHRcdFx0bmV4dFNpZ25pZmljYW50VG9rZW4gPSBzaWduaWZpY2FudFRva2VuO1x0Ly8vXG5cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG4gIFx0fVxuXG5cdFx0cmV0dXJuIG5leHRTaWduaWZpY2FudFRva2VuO1xuICB9XG5cbiAgaXNOZXh0VG9rZW5XaGl0ZXNwYWNlVG9rZW4oKSB7XG4gICAgbGV0IG5leHRUb2tlbldoaXRlc3BhY2VUb2tlbiA9IGZhbHNlO1xuXG4gICAgY29uc3QgdG9rZW5zTGVuZ3RoID0gdGhpcy50b2tlbnMubGVuZ3RoO1xuXG4gICAgaWYgKHRoaXMuaW5kZXggPCB0b2tlbnNMZW5ndGgpIHtcbiAgICAgIGNvbnN0IG5leHRUb2tlbiA9IHRoaXMudG9rZW5zW3RoaXMuaW5kZXhdO1xuXG4gICAgICBuZXh0VG9rZW5XaGl0ZXNwYWNlVG9rZW4gPSBuZXh0VG9rZW4uaXNXaGl0ZXNwYWNlVG9rZW4oKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV4dFRva2VuV2hpdGVzcGFjZVRva2VuO1xuICB9XG5cbiAgaXNUb29EZWVwKCkge1xuICAgIGNvbnN0IHRvb0RlZXAgPSAodGhpcy5kZXB0aCA+IHRoaXMubWF4aW11bURlcHRoKTtcblxuICAgIHJldHVybiB0b29EZWVwO1xuICB9XG5cblx0YmFja3RyYWNrKHNhdmVkSW5kZXgpIHtcblx0XHR0aGlzLmluZGV4ID0gc2F2ZWRJbmRleDsgIC8vL1xuXHR9XG5cbiAgc2V0SW5kZXgoaW5kZXgpIHtcbiAgICB0aGlzLmluZGV4ID0gaW5kZXg7XG4gIH1cblxuICBpbmNyZWFzZURlcHRoKCkge1xuICAgIHRoaXMuZGVwdGgrKztcbiAgfVxuXG4gIGRlY3JlYXNlRGVwdGgoKSB7XG4gICAgdGhpcy5kZXB0aC0tO1xuICB9XG5cbiAgc3RhdGljIGZyb21Ub2tlbnNBbmRSdWxlTWFwKHRva2VucywgcnVsZU1hcCkge1xuICAgIGNvbnN0IGluZGV4ID0gMCxcblx0XHRcdFx0XHRkZXB0aCA9IDAsXG5cdFx0XHRcdFx0bWF4aW11bURlcHRoID0gREVGQVVMVF9NQVhJTVVNX0RFUFRILFxuXHRcdFx0XHRcdHN0YXRlID0gbmV3IFN0YXRlKHJ1bGVNYXAsIHRva2VucywgaW5kZXgsIGRlcHRoLCBtYXhpbXVtRGVwdGgpO1xuXG4gICAgcmV0dXJuIHN0YXRlO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGFycmF5VXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5leHBvcnQgY29uc3QgeyBmaXJzdCwgc2Vjb25kLCB0aGlyZCwgbGFzdCwgcHVzaCwgZmlsdGVyLCBmb3J3YXJkc1NvbWUsIGJhY2t3YXJkc1NvbWUgfSA9IGFycmF5VXRpbGl0aWVzO1xuXG5leHBvcnQgZnVuY3Rpb24gZXZlbihhcnJheSkgeyByZXR1cm4gYXJyYXkuZmlsdGVyKChlbnRyeSwgaW5kZXgpID0+IGlzRXZlbihpbmRleCkpOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBhbGxCdXRGaXJzdChhcnJheSkge1xuICBhcnJheSA9IGFycmF5LnNsaWNlKCk7ICAvLy9cblxuICBhcnJheS5zaGlmdCgpO1xuXG4gIHJldHVybiBhcnJheTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFsbEJ1dEZpcnN0QW5kTGFzdChhcnJheSkge1xuICBhcnJheSA9IGFycmF5LnNsaWNlKCk7ICAvLy9cblxuICBhcnJheS5zaGlmdCgpO1xuXG4gIGFycmF5LnBvcCgpO1xuXG4gIHJldHVybiBhcnJheTtcbn1cblxuZnVuY3Rpb24gaXNFdmVuKGluZGV4KSB7XG4gIGNvbnN0IGV2ZW4gPSAoTWF0aC5mbG9vcihpbmRleC8yKSA9PT0gaW5kZXgvMik7XG5cbiAgcmV0dXJuIGV2ZW47XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGNoYXJhY3RlcnMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmltcG9ydCB7IGxhc3QgfSBmcm9tIFwiLi91dGlsaXRpZXMvYXJyYXlcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbmNvbnN0IHsgTkVXX0xJTkVfQ0hBUkFDVEVSLCBTUEFDRV9DSEFSQUNURVIgfSA9IGNoYXJhY3RlcnM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhcnNlVHJlZSB7XG4gIGNvbnN0cnVjdG9yKGxpbmVzKSB7XG4gICAgdGhpcy5saW5lcyA9IGxpbmVzO1xuICB9XG5cbiAgY2xvbmUoKSB7XG4gICAgY29uc3QgbGluZXMgPSB0aGlzLmxpbmVzLnNsaWNlKCksICAvLy9cbiAgICAgICAgICBwYXJzZVRyZWUgPSBuZXcgUGFyc2VUcmVlKGxpbmVzKTtcblxuICAgIHJldHVybiBwYXJzZVRyZWU7XG4gIH1cblxuICBnZXRXaWR0aCgpIHtcbiAgICBsZXQgd2lkdGg7XG5cbiAgICBsZXQgbGluZXNMZW5ndGggPSB0aGlzLmxpbmVzLmxlbmd0aDtcblxuICAgIGlmIChsaW5lc0xlbmd0aCA9PT0gMCkge1xuICAgICAgd2lkdGggPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBsYXN0TGluZSA9IGxhc3QodGhpcy5saW5lcyksXG4gICAgICAgICAgICBsYXN0TGluZUxlbmd0aCA9IGxhc3RMaW5lLmxlbmd0aDtcblxuICAgICAgd2lkdGggPSBsYXN0TGluZUxlbmd0aDsgLy8vXG4gICAgfVxuXG4gICAgcmV0dXJuIHdpZHRoO1xuICB9XG5cbiAgZ2V0RGVwdGgoKSB7XG4gICAgY29uc3QgbGluZXNMZW5ndGggPSB0aGlzLmxpbmVzLmxlbmd0aCxcbiAgICAgICAgICBkZXB0aCA9IGxpbmVzTGVuZ3RoOyAgLy8vXG5cbiAgICByZXR1cm4gZGVwdGg7XG4gIH1cblxuICBmb3JFYWNoTGluZShjYWxsYmFjaykge1xuICAgIHRoaXMubGluZXMuZm9yRWFjaChjYWxsYmFjayk7XG4gIH1cblxuICBhcHBlbmRUb1RvcChwYXJzZVRyZWUpIHtcbiAgICBwYXJzZVRyZWUuZm9yRWFjaExpbmUoKGxpbmUpID0+IHtcbiAgICAgIHRoaXMubGluZXMudW5zaGlmdChsaW5lKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFwcGVuZFRvTGVmdChwYXJzZVRyZWUpIHtcbiAgICBwYXJzZVRyZWUuZm9yRWFjaExpbmUoKGxpbmUsIGluZGV4KSA9PiB7XG4gICAgICB0aGlzLmxpbmVzW2luZGV4XSA9IGxpbmUgKyB0aGlzLmxpbmVzW2luZGV4XTtcbiAgICB9KTtcbiAgfVxuXG4gIGFwcGVuZFRvUmlnaHQocGFyc2VUcmVlKSB7XG4gICAgcGFyc2VUcmVlLmZvckVhY2hMaW5lKChsaW5lLCBpbmRleCkgPT4ge1xuICAgICAgdGhpcy5saW5lc1tpbmRleF0gPSB0aGlzLmxpbmVzW2luZGV4XSArIGxpbmU7XG4gICAgfSk7XG4gIH1cblxuICBhcHBlbmRUb0JvdHRvbShwYXJzZVRyZWUpIHtcbiAgICBwYXJzZVRyZWUuZm9yRWFjaExpbmUoKGxpbmUpID0+IHtcbiAgICAgIHRoaXMubGluZXMucHVzaChsaW5lKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZFRvcE1hcmdpbih0b3BNYXJnaW5EZXB0aCkge1xuICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRXaWR0aCgpLFxuICAgICAgICAgIHRvcE1hcmdpbldpZHRoID0gd2lkdGgsICAvLy9cbiAgICAgICAgICB0b3BNYXJnaW5TdHJpbmcgPSBtYXJnaW5TdHJpbmdGcm9tTWFyZ2luV2lkdGgodG9wTWFyZ2luV2lkdGgpO1xuXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRvcE1hcmdpbkRlcHRoOyBpbmRleCsrKSB7XG4gICAgICB0aGlzLmxpbmVzLnVuc2hpZnQodG9wTWFyZ2luU3RyaW5nKTtcbiAgICB9XG4gIH1cblxuICBhZGRMZWZ0TWFyZ2luKGxlZnRNYXJnaW5XaWR0aCkge1xuICAgIGNvbnN0IGxlZnRNYXJnaW5TdHJpbmcgPSBtYXJnaW5TdHJpbmdGcm9tTWFyZ2luV2lkdGgobGVmdE1hcmdpbldpZHRoKSxcbiAgICAgICAgICBsaW5lc0xlbmd0aCA9IHRoaXMubGluZXMubGVuZ3RoO1xuXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGxpbmVzTGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICB0aGlzLmxpbmVzW2luZGV4XSA9IGxlZnRNYXJnaW5TdHJpbmcgKyB0aGlzLmxpbmVzW2luZGV4XTtcbiAgICB9XG4gIH1cblxuICBhZGRSaWdodE1hcmdpbihyaWdodE1hcmdpbldpZHRoKSB7XG4gICAgY29uc3QgcmlnaHRNYXJnaW5TdHJpbmcgPSBtYXJnaW5TdHJpbmdGcm9tTWFyZ2luV2lkdGgocmlnaHRNYXJnaW5XaWR0aCksXG4gICAgICAgICAgbGluZXNMZW5ndGggPSB0aGlzLmxpbmVzLmxlbmd0aDtcblxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBsaW5lc0xlbmd0aDsgaW5kZXgrKykge1xuICAgICAgdGhpcy5saW5lc1tpbmRleF0gPSB0aGlzLmxpbmVzW2luZGV4XSArIHJpZ2h0TWFyZ2luU3RyaW5nO1xuICAgIH1cbiAgfVxuXG4gIGFkZEJvdHRvbU1hcmdpbihib3R0b21NYXJnaW5EZXB0aCkge1xuICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRXaWR0aCgpLFxuICAgICAgICAgIGJvdHRvbU1hcmdpbldpZHRoID0gd2lkdGgsICAvLy9cbiAgICAgICAgICBib3R0b21NYXJnaW5TdHJpbmcgPSBtYXJnaW5TdHJpbmdGcm9tTWFyZ2luV2lkdGgoYm90dG9tTWFyZ2luV2lkdGgpO1xuXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGJvdHRvbU1hcmdpbkRlcHRoOyBpbmRleCsrKSB7XG4gICAgICB0aGlzLmxpbmVzLnB1c2goYm90dG9tTWFyZ2luU3RyaW5nKTtcbiAgICB9XG4gIH1cbiAgXG4gIHBvcExpbmUoKSB7IHJldHVybiB0aGlzLmxpbmVzLnBvcCgpOyB9XG4gIFxuICBzaGlmdExpbmUoKSB7IHJldHVybiB0aGlzLmxpbmVzLnNoaWZ0KCk7IH1cbiAgXG4gIHB1c2hMaW5lKGxpbmUpIHsgdGhpcy5saW5lcy5wdXNoKGxpbmUpOyB9XG4gIFxuICB1bnNoaWZ0TGluZShsaW5lKSB7IHRoaXMubGluZXMudW5zaGlmdChsaW5lKTsgfVxuXG4gIGFzU3RyaW5nKCkge1xuICAgIGNvbnN0IHN0cmluZyA9IHRoaXMubGluZXMucmVkdWNlKChzdHJpbmcsIGxpbmUpID0+IHtcbiAgICAgIHN0cmluZyArPSBsaW5lICsgTkVXX0xJTkVfQ0hBUkFDVEVSO1xuXG4gICAgICByZXR1cm4gc3RyaW5nO1xuICAgIH0sIEVNUFRZX1NUUklORyk7XG5cbiAgICByZXR1cm4gc3RyaW5nO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1hcmdpblN0cmluZ0Zyb21NYXJnaW5XaWR0aChtYXJnaW5XaWR0aCwgc3BhY2VDaGFyYWN0ZXIpIHtcbiAgc3BhY2VDaGFyYWN0ZXIgPSBzcGFjZUNoYXJhY3RlciB8fCBTUEFDRV9DSEFSQUNURVI7XG5cbiAgbGV0IG1hcmdpblN0cmluZyA9IEVNUFRZX1NUUklORztcblxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgbWFyZ2luV2lkdGg7IGluZGV4KyspIHtcbiAgICBtYXJnaW5TdHJpbmcgKz0gc3BhY2VDaGFyYWN0ZXI7XG4gIH1cblxuICByZXR1cm4gbWFyZ2luU3RyaW5nO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9uZWNlc3NhcnkgPSByZXF1aXJlKFwibmVjZXNzYXJ5XCIpO1xudmFyIF9wYXJzZVRyZWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9wYXJzZVRyZWVcIikpO1xudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzXCIpO1xuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7XG4gICAgICAgIF9nZXQgPSBSZWZsZWN0LmdldDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgICAgICAgICAgdmFyIGJhc2UgPSBfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmICghYmFzZSkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmIChkZXNjLmdldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkZXNjLnZhbHVlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpO1xufVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICAgIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgICAgICByZXR1cm4gY2FsbDtcbiAgICB9XG4gICAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgICB3aGlsZSghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKXtcbiAgICAgICAgb2JqZWN0ID0gX2dldFByb3RvdHlwZU9mKG9iamVjdCk7XG4gICAgICAgIGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgQkFSX0NIQVJBQ1RFUiA9IF9uZWNlc3NhcnkuY2hhcmFjdGVycy5CQVJfQ0hBUkFDVEVSO1xudmFyIFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihQYXJzZVRyZWUpIHtcbiAgICBfaW5oZXJpdHMoVmVydGljYWxCcmFuY2hQYXJzZVRyZWUsIFBhcnNlVHJlZSk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSk7XG4gICAgZnVuY3Rpb24gVmVydGljYWxCcmFuY2hQYXJzZVRyZWUobGluZXMsIHZlcnRpY2FsQnJhbmNoUG9zaXRpb24pIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlKTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGxpbmVzKTtcbiAgICAgICAgX3RoaXMudmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHZlcnRpY2FsQnJhbmNoUG9zaXRpb247XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgX2NyZWF0ZUNsYXNzKFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VmVydGljYWxCcmFuY2hQb3NpdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiYWRkTGVmdE1hcmdpblwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFkZExlZnRNYXJnaW4obGVmdE1hcmdpbldpZHRoKSB7XG4gICAgICAgICAgICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoVmVydGljYWxCcmFuY2hQYXJzZVRyZWUucHJvdG90eXBlKSwgXCJhZGRMZWZ0TWFyZ2luXCIsIHRoaXMpLmNhbGwodGhpcywgbGVmdE1hcmdpbldpZHRoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnZlcnRpY2FsQnJhbmNoUG9zaXRpb24gKz0gbGVmdE1hcmdpbldpZHRoOyAvLy9cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0sIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImZyb21XaWR0aFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21XaWR0aCh3aWR0aCkge1xuICAgICAgICAgICAgICAgIHZhciBzdHJpbmcgPSBCQVJfQ0hBUkFDVEVSLCB2ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uID0gMCwgdmVydGljYWxCcmFuY2hQYXJzZVRyZWUgPSBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5mcm9tU3RyaW5nQW5kVmVydGljYWxCcmFuY2hQb3NpdGlvbihWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSwgc3RyaW5nLCB2ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uKSwgbGVmdE1hcmdpbldpZHRoID0gTWF0aC5mbG9vcih3aWR0aCAvIDIpLCByaWdodE1hcmdpbldpZHRoID0gd2lkdGggLSBsZWZ0TWFyZ2luV2lkdGggLSAxO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmFkZExlZnRNYXJnaW4obGVmdE1hcmdpbldpZHRoKTtcbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5hZGRSaWdodE1hcmdpbihyaWdodE1hcmdpbldpZHRoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmVydGljYWxCcmFuY2hQYXJzZVRyZWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJmcm9tRGVwdGhBbmRWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbURlcHRoQW5kVmVydGljYWxCcmFuY2hQb3NpdGlvbihDbGFzcywgZGVwdGgsIHZlcnRpY2FsQnJhbmNoUG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgbGluZXMgPSBsaW5lc0Zyb21EZXB0aChkZXB0aCksIGFyZ3MgPSBbXG4gICAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVzLFxuICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uXG4gICAgICAgICAgICAgICAgXSwgdmVydGljYWxCcmFuY2hQYXJzZVRyZWUgPSBuZXcgKEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmFwcGx5KENsYXNzLCBhcmdzKSk7IC8vL1xuICAgICAgICAgICAgICAgIHJldHVybiB2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImZyb21TdHJpbmdBbmRWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbVN0cmluZ0FuZFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oQ2xhc3MsIHN0cmluZywgdmVydGljYWxCcmFuY2hQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIGlmICh2ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHN0cmluZzsgLy8vXG4gICAgICAgICAgICAgICAgICAgIHN0cmluZyA9IENsYXNzOyAvLy9cbiAgICAgICAgICAgICAgICAgICAgQ2xhc3MgPSBfcGFyc2VUcmVlLmRlZmF1bHQ7IC8vL1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgbGluZSA9IHN0cmluZywgbGluZXMgPSBbXG4gICAgICAgICAgICAgICAgICAgIGxpbmVcbiAgICAgICAgICAgICAgICBdLCBhcmdzID0gW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBsaW5lcyxcbiAgICAgICAgICAgICAgICAgICAgdmVydGljYWxCcmFuY2hQb3NpdGlvblxuICAgICAgICAgICAgICAgIF0sIHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlID0gbmV3IChGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseShDbGFzcywgYXJncykpOyAvLy9cbiAgICAgICAgICAgICAgICByZXR1cm4gdmVydGljYWxCcmFuY2hQYXJzZVRyZWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdKTtcbiAgICByZXR1cm4gVmVydGljYWxCcmFuY2hQYXJzZVRyZWU7XG59KF9wYXJzZVRyZWUuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZTtcbmZ1bmN0aW9uIGxpbmVzRnJvbURlcHRoKGRlcHRoKSB7XG4gICAgdmFyIGxpbmVzID0gW107XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB3aGlsZShpbmRleCA8IGRlcHRoKXtcbiAgICAgICAgbGluZXNbaW5kZXgrK10gPSBfY29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICB9XG4gICAgcmV0dXJuIGxpbmVzO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTl3WVhKelpWUnlaV1V2ZG1WeWRHbGpZV3hDY21GdVkyZ3Vhbk1pWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVhDSjFjMlVnYzNSeWFXTjBYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lHTm9ZWEpoWTNSbGNuTWdmU0JtY205dElGd2libVZqWlhOellYSjVYQ0k3WEc1Y2JtbHRjRzl5ZENCUVlYSnpaVlJ5WldVZ1puSnZiU0JjSWk0dUwzQmhjbk5sVkhKbFpWd2lPMXh1WEc1cGJYQnZjblFnZXlCRlRWQlVXVjlUVkZKSlRrY2dmU0JtY205dElGd2lMaTR2WTI5dWMzUmhiblJ6WENJN1hHNWNibU52Ym5OMElIc2dRa0ZTWDBOSVFWSkJRMVJGVWlCOUlEMGdZMmhoY21GamRHVnljenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJ4aGMzTWdWbVZ5ZEdsallXeENjbUZ1WTJoUVlYSnpaVlJ5WldVZ1pYaDBaVzVrY3lCUVlYSnpaVlJ5WldVZ2UxeHVJQ0JqYjI1emRISjFZM1J2Y2loc2FXNWxjeXdnZG1WeWRHbGpZV3hDY21GdVkyaFFiM05wZEdsdmJpa2dlMXh1SUNBZ0lITjFjR1Z5S0d4cGJtVnpLVHRjYmlBZ0lDQmNiaUFnSUNCMGFHbHpMblpsY25ScFkyRnNRbkpoYm1Ob1VHOXphWFJwYjI0Z1BTQjJaWEowYVdOaGJFSnlZVzVqYUZCdmMybDBhVzl1TzF4dUlDQjlYRzRnSUZ4dUlDQm5aWFJXWlhKMGFXTmhiRUp5WVc1amFGQnZjMmwwYVc5dUtDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMblpsY25ScFkyRnNRbkpoYm1Ob1VHOXphWFJwYjI0N1hHNGdJSDFjYmx4dUlDQmhaR1JNWldaMFRXRnlaMmx1S0d4bFpuUk5ZWEpuYVc1WGFXUjBhQ2tnZTF4dUlDQWdJSE4xY0dWeUxtRmtaRXhsWm5STllYSm5hVzRvYkdWbWRFMWhjbWRwYmxkcFpIUm9LVHRjYmx4dUlDQWdJSFJvYVhNdWRtVnlkR2xqWVd4Q2NtRnVZMmhRYjNOcGRHbHZiaUFyUFNCc1pXWjBUV0Z5WjJsdVYybGtkR2c3SUM4dkwxeHVJQ0I5WEc1Y2JpQWdjM1JoZEdsaklHWnliMjFYYVdSMGFDaDNhV1IwYUNrZ2UxeHVJQ0FnSUdOdmJuTjBJSE4wY21sdVp5QTlJRUpCVWw5RFNFRlNRVU5VUlZJc1hHNGdJQ0FnSUNBZ0lDQWdkbVZ5ZEdsallXeENjbUZ1WTJoUWIzTnBkR2x2YmlBOUlEQXNYRzRnSUNBZ0lDQWdJQ0FnZG1WeWRHbGpZV3hDY21GdVkyaFFZWEp6WlZSeVpXVWdQU0JXWlhKMGFXTmhiRUp5WVc1amFGQmhjbk5sVkhKbFpTNW1jbTl0VTNSeWFXNW5RVzVrVm1WeWRHbGpZV3hDY21GdVkyaFFiM05wZEdsdmJpaFdaWEowYVdOaGJFSnlZVzVqYUZCaGNuTmxWSEpsWlN3Z2MzUnlhVzVuTENCMlpYSjBhV05oYkVKeVlXNWphRkJ2YzJsMGFXOXVLU3hjYmlBZ0lDQWdJQ0FnSUNCc1pXWjBUV0Z5WjJsdVYybGtkR2dnUFNCTllYUm9MbVpzYjI5eUtIZHBaSFJvTHpJcExGeHVJQ0FnSUNBZ0lDQWdJSEpwWjJoMFRXRnlaMmx1VjJsa2RHZ2dQU0IzYVdSMGFDQXRJR3hsWm5STllYSm5hVzVYYVdSMGFDQXRJREU3WEc1Y2JpQWdJQ0IyWlhKMGFXTmhiRUp5WVc1amFGQmhjbk5sVkhKbFpTNWhaR1JNWldaMFRXRnlaMmx1S0d4bFpuUk5ZWEpuYVc1WGFXUjBhQ2s3WEc0Z0lDQWdkbVZ5ZEdsallXeENjbUZ1WTJoUVlYSnpaVlJ5WldVdVlXUmtVbWxuYUhSTllYSm5hVzRvY21sbmFIUk5ZWEpuYVc1WGFXUjBhQ2s3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdkbVZ5ZEdsallXeENjbUZ1WTJoUVlYSnpaVlJ5WldVN1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1puSnZiVVJsY0hSb1FXNWtWbVZ5ZEdsallXeENjbUZ1WTJoUWIzTnBkR2x2YmloRGJHRnpjeXdnWkdWd2RHZ3NJSFpsY25ScFkyRnNRbkpoYm1Ob1VHOXphWFJwYjI0cElIdGNiaUFnSUNCamIyNXpkQ0JzYVc1bGN5QTlJR3hwYm1WelJuSnZiVVJsY0hSb0tHUmxjSFJvS1N4Y2JpQWdJQ0FnSUNBZ0lDQmhjbWR6SUQwZ1cyNTFiR3dzSUd4cGJtVnpMQ0IyWlhKMGFXTmhiRUp5WVc1amFGQnZjMmwwYVc5dVhTeGNiaUFnSUNBZ0lDQWdJQ0IyWlhKMGFXTmhiRUp5WVc1amFGQmhjbk5sVkhKbFpTQTlJRzVsZHlBb1JuVnVZM1JwYjI0dWNISnZkRzkwZVhCbExtSnBibVF1WVhCd2JIa29RMnhoYzNNc0lHRnlaM01wS1RzZ0lDOHZMMXh1WEc0Z0lDQWdjbVYwZFhKdUlIWmxjblJwWTJGc1FuSmhibU5vVUdGeWMyVlVjbVZsTzF4dUlDQjlYRzVjYmlBZ2MzUmhkR2xqSUdaeWIyMVRkSEpwYm1kQmJtUldaWEowYVdOaGJFSnlZVzVqYUZCdmMybDBhVzl1S0VOc1lYTnpMQ0J6ZEhKcGJtY3NJSFpsY25ScFkyRnNRbkpoYm1Ob1VHOXphWFJwYjI0cElIdGNiaUFnSUNCcFppQW9kbVZ5ZEdsallXeENjbUZ1WTJoUWIzTnBkR2x2YmlBOVBUMGdkVzVrWldacGJtVmtLU0I3WEc0Z0lDQWdJQ0IyWlhKMGFXTmhiRUp5WVc1amFGQnZjMmwwYVc5dUlEMGdjM1J5YVc1bk95QWdMeTh2WEc0Z0lDQWdJQ0J6ZEhKcGJtY2dQU0JEYkdGemN6c2dMeTh2WEc0Z0lDQWdJQ0JEYkdGemN5QTlJRkJoY25ObFZISmxaVHNnSUM4dkwxeHVJQ0FnSUgxY2JpQWdJQ0JjYmlBZ0lDQmpiMjV6ZENCc2FXNWxJRDBnYzNSeWFXNW5MQ0F2THk5Y2JpQWdJQ0FnSUNBZ0lDQnNhVzVsY3lBOUlGdHNhVzVsWFN4Y2JpQWdJQ0FnSUNBZ0lDQmhjbWR6SUQwZ1cyNTFiR3dzSUd4cGJtVnpMQ0IyWlhKMGFXTmhiRUp5WVc1amFGQnZjMmwwYVc5dVhTeGNiaUFnSUNBZ0lDQWdJQ0IyWlhKMGFXTmhiRUp5WVc1amFGQmhjbk5sVkhKbFpTQTlJRzVsZHlBb1JuVnVZM1JwYjI0dWNISnZkRzkwZVhCbExtSnBibVF1WVhCd2JIa29RMnhoYzNNc0lHRnlaM01wS1RzZ0lDOHZMMXh1WEc0Z0lDQWdjbVYwZFhKdUlIWmxjblJwWTJGc1FuSmhibU5vVUdGeWMyVlVjbVZsTzF4dUlDQjlYRzU5WEc1Y2JtWjFibU4wYVc5dUlHeHBibVZ6Um5KdmJVUmxjSFJvS0dSbGNIUm9LU0I3WEc0Z0lHTnZibk4wSUd4cGJtVnpJRDBnVzEwN1hHNWNiaUFnYkdWMElHbHVaR1Y0SUQwZ01EdGNibHh1SUNCM2FHbHNaU0FvYVc1a1pYZ2dQQ0JrWlhCMGFDa2dlMXh1SUNBZ0lHeHBibVZ6VzJsdVpHVjRLeXRkSUQwZ1JVMVFWRmxmVTFSU1NVNUhPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJR3hwYm1Wek8xeHVmVnh1SWwwc0ltNWhiV1Z6SWpwYklrSkJVbDlEU0VGU1FVTlVSVklpTENKamFHRnlZV04wWlhKeklpd2lWbVZ5ZEdsallXeENjbUZ1WTJoUVlYSnpaVlJ5WldVaUxDSnNhVzVsY3lJc0luWmxjblJwWTJGc1FuSmhibU5vVUc5emFYUnBiMjRpTENKblpYUldaWEowYVdOaGJFSnlZVzVqYUZCdmMybDBhVzl1SWl3aVlXUmtUR1ZtZEUxaGNtZHBiaUlzSW14bFpuUk5ZWEpuYVc1WGFXUjBhQ0lzSW1aeWIyMVhhV1IwYUNJc0luZHBaSFJvSWl3aWMzUnlhVzVuSWl3aWRtVnlkR2xqWVd4Q2NtRnVZMmhRWVhKelpWUnlaV1VpTENKbWNtOXRVM1J5YVc1blFXNWtWbVZ5ZEdsallXeENjbUZ1WTJoUWIzTnBkR2x2YmlJc0lrMWhkR2dpTENKbWJHOXZjaUlzSW5KcFoyaDBUV0Z5WjJsdVYybGtkR2dpTENKaFpHUlNhV2RvZEUxaGNtZHBiaUlzSW1aeWIyMUVaWEIwYUVGdVpGWmxjblJwWTJGc1FuSmhibU5vVUc5emFYUnBiMjRpTENKRGJHRnpjeUlzSW1SbGNIUm9JaXdpYkdsdVpYTkdjbTl0UkdWd2RHZ2lMQ0poY21keklpd2lSblZ1WTNScGIyNGlMQ0p3Y205MGIzUjVjR1VpTENKaWFXNWtJaXdpWVhCd2JIa2lMQ0oxYm1SbFptbHVaV1FpTENKUVlYSnpaVlJ5WldVaUxDSnNhVzVsSWl3aWFXNWtaWGdpTENKRlRWQlVXVjlUVkZKSlRrY2lYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRU5CUVZrc1YwRkJRU3hEUVVGRE96czdSVUZCWWp0M1FrRkJRVHRCUVVVeVFpeEhRVUZYTEVOQlFWZ3NWVUZCVnp0QlFVVm9RaXhIUVVGakxFTkJRV1FzVlVGQll6dEJRVVZRTEVkQlFXTXNRMEZCWkN4VlFVRmpPenM3T3pzN096czdPenM3T3pzN09FUkJUak5ETzNORFFVRkJPelpFUVVGQk8ybEZRVUZCT3pzN08zZEZRVUZCTzJkRlFVRkJPenM3T3pzd1FrRkJRVHM3T3pzN096czdPenRUUVVGQk96czdPenM3TzB0QlFVRTdPenM3T3pzN096czdPenM3VFVGQlFUdDVSRUZCUVRzN096czdPenM3T3pzN096czdPM1ZDUVVGQk96dExRVUZCT3pzN096dDNRMEZCUVRzN096czdPekpDUVVGQk96czdPenM3T3p0eFJrRkJRVHM3T3pzN096czdPenM3TzIxRlFVRkJPenRwUkVGQlFUczdPenM3UVVGUlFTeEhRVUZMTEVOQlFVZEJMR0ZCUVdFc1IwRkJTME1zVlVGQlZTeFpRVUUxUWtRc1lVRkJZVHRCUVVWT0xFZEJRVXNzUTBGQlEwVXNkVUpCUVhWQ0xHbENRVUUzUWl4UlFVRlJPMmxFUVZaMlFqczdZVUZWY1VKQkxIVkNRVUYxUWl4RFFVTTVRa01zUzBGQlN5eEZRVUZGUXl4elFrRkJjMEk3YzBSQldETkRPenRyUTBGWlZVUXNTMEZCU3l4RFExcG1MRU5FV1dsQ08yTkJSVkpETEhOQ1FVRnpRaXhIUVVGSFFTeHpRa0ZCYzBJc1EwRkJRenM3T3pzN1dVRkhka1JETEVkQlFYbENMRVZCUVhwQ1FTeERRVUY1UWp0dFFrRkJla0pCTEZGQlFWRXNRMEZCVWtFc2VVSkJRWGxDTEVkQlFVY3NRMEZCUXp0blFrRkRNMElzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUTBRc2MwSkJRWE5DTzFsQlEzQkRMRU5CUVVNN096dFpRVVZFUlN4SFFVRmhMRVZCUVdKQkxFTkJRV0U3YlVKQlFXSkJMRkZCUVZFc1EwRkJVa0VzWVVGQllTeERRVUZEUXl4bFFVRmxMRVZCUVVVc1EwRkJRenR4UTBGWVlrd3NkVUpCUVhWQ0xHRkJXV3hEU1N4RFFVRmhMR2RDUVVGdVFpeEpRVUZMTEdGQlFXVkRMR1ZCUVdVc1EwTjBRblpETEVORWMwSjVRenRuUWtGRmNrTXNTVUZCU1N4RFFVRkRTQ3h6UWtGQmMwSXNTVUZCU1Vjc1pVRkJaU3hEUVVGRExFTkJRVU1zUlVGQlJ5eEJRVUZJTEVOQlFVYzdXVUZEY2tRc1EwRkJRenM3T3p0WlFVVk5ReXhIUVVGVExFVkJRVlJCTEVOQlFWTTdiVUpCUVdoQ0xGRkJRVkVzUTBGQlJFRXNVMEZCVXl4RFFVRkRReXhMUVVGTExFVkJRVVVzUTBGQlF6dG5Ra0ZEZGtJc1IwRkJTeXhEUVVGRFF5eE5RVUZOTEVkQlFVZFdMR0ZCUVdFc1JVRkRkRUpKTEhOQ1FVRnpRaXhIUVVGSExFTkJRVU1zUlVGRE1VSlBMSFZDUVVGMVFpeEhRVUZIVkN4MVFrRkJkVUlzUTBGQlExVXNiVU5CUVcxRExFTkJRVU5XTEhWQ1FVRjFRaXhGUVVGRlVTeE5RVUZOTEVWQlFVVk9MSE5DUVVGelFpeEhRVU0zU1Vjc1pVRkJaU3hIUVVGSFRTeEpRVUZKTEVOQlFVTkRMRXRCUVVzc1EwRkJRMHdzUzBGQlN5eEhRVUZETEVOQlFVTXNSMEZEY0VOTkxHZENRVUZuUWl4SFFVRkhUaXhMUVVGTExFZEJRVWRHTEdWQlFXVXNSMEZCUnl4RFFVRkRPMmRDUVVWd1JFa3NkVUpCUVhWQ0xFTkJRVU5NTEdGQlFXRXNRMEZCUTBNc1pVRkJaU3hEUVVGRExFTkJRVU03WjBKQlEzWkVTU3gxUWtGQmRVSXNRMEZCUTBzc1kwRkJZeXhEUVVGRFJDeG5Ra0ZCWjBJc1EwRkJReXhEUVVGRE8yZENRVVY2UkN4TlFVRk5MRU5CUVVOS0xIVkNRVUYxUWp0WlFVTm9ReXhEUVVGRE96czdXVUZGVFUwc1IwRkJhME1zUlVGQmJFTkJMRU5CUVd0RE8yMUNRVUY2UXl4UlFVRlJMRU5CUVVSQkxHdERRVUZyUXl4RFFVRkRReXhMUVVGTExFVkJRVVZETEV0QlFVc3NSVUZCUldZc2MwSkJRWE5DTEVWQlFVVXNRMEZCUXp0blFrRkRMMFVzUjBGQlN5eERRVUZEUkN4TFFVRkxMRWRCUVVkcFFpeGpRVUZqTEVOQlFVTkVMRXRCUVVzc1IwRkROVUpGTEVsQlFVa3NSMEZCUnl4RFFVRkRPMjlDUVVGQkxFbEJRVWs3YjBKQlFVVnNRaXhMUVVGTE8yOUNRVUZGUXl4elFrRkJjMEk3WjBKQlFVRXNRMEZCUXl4RlFVTTFRMDhzZFVKQlFYVkNMRWRCUVVjc1IwRkJSeXhGUVVGRlZ5eFJRVUZSTEVOQlFVTkRMRk5CUVZNc1EwRkJRME1zU1VGQlNTeERRVUZEUXl4TFFVRkxMRU5CUVVOUUxFdEJRVXNzUlVGQlJVY3NTVUZCU1N4SlFVRkxMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVYwUml4TlFVRk5MRU5CUVVOV0xIVkNRVUYxUWp0WlFVTm9ReXhEUVVGRE96czdXVUZGVFVNc1IwRkJiVU1zUlVGQmJrTkJMRU5CUVcxRE8yMUNRVUV4UXl4UlFVRlJMRU5CUVVSQkxHMURRVUZ0UXl4RFFVRkRUU3hMUVVGTExFVkJRVVZTTEUxQlFVMHNSVUZCUlU0c2MwSkJRWE5DTEVWQlFVVXNRMEZCUXp0blFrRkRha1lzUlVGQlJTeEZRVUZGUVN4elFrRkJjMElzUzBGQlMzTkNMRk5CUVZNc1JVRkJSU3hEUVVGRE8yOUNRVU42UTNSQ0xITkNRVUZ6UWl4SFFVRkhUU3hOUVVGTkxFTkJRVU1zUTBGQlJTeEZRVUZITEVGQlFVZ3NRMEZCUnp0dlFrRkRja05CTEUxQlFVMHNSMEZCUjFFc1MwRkJTeXhEUVVGRExFTkJRVU1zUlVGQlJ5eEJRVUZJTEVOQlFVYzdiMEpCUTI1Q1FTeExRVUZMTEVkQlFVZFRMRlZCUVZNc1VVRkJRU3hEUVVGRExFTkJRVVVzUlVGQlJ5eEJRVUZJTEVOQlFVYzdaMEpCUTNwQ0xFTkJRVU03WjBKQlJVUXNSMEZCU3l4RFFVRkRReXhKUVVGSkxFZEJRVWRzUWl4TlFVRk5MRVZCUTJKUUxFdEJRVXNzUjBGQlJ5eERRVUZEZVVJN2IwSkJRVUZCTEVsQlFVazdaMEpCUVVFc1EwRkJReXhGUVVOa1VDeEpRVUZKTEVkQlFVY3NRMEZCUXp0dlFrRkJRU3hKUVVGSk8yOUNRVUZGYkVJc1MwRkJTenR2UWtGQlJVTXNjMEpCUVhOQ08yZENRVUZCTEVOQlFVTXNSVUZETlVOUExIVkNRVUYxUWl4SFFVRkhMRWRCUVVjc1JVRkJSVmNzVVVGQlVTeERRVUZEUXl4VFFVRlRMRU5CUVVORExFbEJRVWtzUTBGQlEwTXNTMEZCU3l4RFFVRkRVQ3hMUVVGTExFVkJRVVZITEVsQlFVa3NTVUZCU3l4RlFVRkhMRUZCUVVnc1EwRkJSenRuUWtGRmRFWXNUVUZCVFN4RFFVRkRWaXgxUWtGQmRVSTdXVUZEYUVNc1EwRkJRenM3VFVFM1JFZzdPMFZCVlhGRVowSXNWVUZCVXp0clFrRkJla042UWl4MVFrRkJkVUlzUVVGV05VTTdVMEZuUlZOclFpeGpRVUZqTEVOQlFVTkVMRXRCUVVzc1JVRkJSU3hEUVVGRE8wbEJRemxDTEVkQlFVc3NRMEZCUTJoQ0xFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTTdTVUZGYUVJc1IwRkJSeXhEUVVGRE1FSXNTMEZCU3l4SFFVRkhMRU5CUVVNN1ZVRkZUa0VzUzBGQlN5eEhRVUZIVml4TFFVRkxMRU5CUVVVc1EwRkJRenRSUVVOeVFtaENMRXRCUVVzc1EwRkJRekJDTEV0QlFVc3NUVUZCVFVNc1ZVRkJXU3hoUVVGQkxFTkJRVU03U1VGRGFFTXNRMEZCUXp0SlFVVkVMRTFCUVUwc1EwRkJRek5DTEV0QlFVczdRVUZEWkN4RFFVRkRJbjA9IiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgVmVydGljYWxCcmFuY2hQYXJzZVRyZWUgZnJvbSBcIi4vdmVydGljYWxCcmFuY2hcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUnVsZU5hbWVQYXJzZVRyZWUgZXh0ZW5kcyBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSB7XG4gIHN0YXRpYyBmcm9tTm9uVGVybWluYWxOb2RlQW5kVG9rZW5zKG5vblRlcm1pbmFsTm9kZSwgdG9rZW5zKSB7XG4gICAgY29uc3QgcnVsZU5hbWUgPSBub25UZXJtaW5hbE5vZGUuZ2V0UnVsZU5hbWUoKSxcbiAgICAgICAgICB0b2tlbkluZGV4ZXMgPSB0b2tlbkluZGV4ZXNGcm9tTm9uVGVybWluYWxOb2RlQW5kVG9rZW5zKG5vblRlcm1pbmFsTm9kZSwgdG9rZW5zKSxcbiAgICAgICAgICBzdHJpbmcgPSBgJHtydWxlTmFtZX0ke3Rva2VuSW5kZXhlc31gLFxuICAgICAgICAgIHN0cmluZ0xlbmd0aCA9IHN0cmluZy5sZW5ndGgsXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQYXJzZVRyZWVXaWR0aCA9IHN0cmluZ0xlbmd0aCwgLy8vXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQYXJzZVRyZWUgPSBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5mcm9tV2lkdGgodmVydGljYWxCcmFuY2hQYXJzZVRyZWVXaWR0aCksXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmdldFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oKSxcbiAgICAgICAgICBydWxlTmFtZVBhcnNlVHJlZSA9IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmZyb21TdHJpbmdBbmRWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uKFJ1bGVOYW1lUGFyc2VUcmVlLCBzdHJpbmcsIHZlcnRpY2FsQnJhbmNoUG9zaXRpb24pO1xuXG4gICAgcnVsZU5hbWVQYXJzZVRyZWUuYXBwZW5kVG9Ub3AodmVydGljYWxCcmFuY2hQYXJzZVRyZWUpO1xuXG4gICAgcmV0dXJuIHJ1bGVOYW1lUGFyc2VUcmVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRva2VuSW5kZXhlc0Zyb21Ob25UZXJtaW5hbE5vZGVBbmRUb2tlbnMobm9uVGVybWluYWxOb2RlLCB0b2tlbnMpIHtcbiAgY29uc3QgZmlyc3RTaWduaWZpY2FudFRva2VuID0gbm9uVGVybWluYWxOb2RlLmdldEZpcnN0U2lnbmlmaWNhbnRUb2tlbigpLFxuICAgICAgICBsYXN0U2lnbmlmaWNhbnRUb2tlbiA9IG5vblRlcm1pbmFsTm9kZS5nZXRMYXN0U2lnbmlmaWNhbnRUb2tlbigpLFxuICAgICAgICBmaXJzdFNpZ25pZmljYW50VG9rZW5JbmRleCA9IHRva2Vucy5pbmRleE9mKGZpcnN0U2lnbmlmaWNhbnRUb2tlbiksXG4gICAgICAgIGxhc3RTaWduaWZpY2FudFRva2VuSW5kZXggPSB0b2tlbnMuaW5kZXhPZihsYXN0U2lnbmlmaWNhbnRUb2tlbiksXG4gICAgICAgIHRva2VuSW5kZXhlcyA9IChmaXJzdFNpZ25pZmljYW50VG9rZW5JbmRleCAhPT0gbGFzdFNpZ25pZmljYW50VG9rZW5JbmRleCkgP1xuICAgICAgICAgICAgICAgICAgICAgICAgYCgke2ZpcnN0U2lnbmlmaWNhbnRUb2tlbkluZGV4fS0ke2xhc3RTaWduaWZpY2FudFRva2VuSW5kZXh9KWAgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICBgKCR7Zmlyc3RTaWduaWZpY2FudFRva2VuSW5kZXh9KWA7XG5cbiAgcmV0dXJuIHRva2VuSW5kZXhlcztcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgY2hhcmFjdGVycyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IFBhcnNlVHJlZSBmcm9tIFwiLi4vcGFyc2VUcmVlXCI7XG5cbmltcG9ydCB7IEVNUFRZX1NUUklORyB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuY29uc3QgeyBEQVNIX0NIQVJBQ1RFUiB9ID0gY2hhcmFjdGVycztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSG9yaXpvbnRhbEJyYW5jaFBhcnNlVHJlZSBleHRlbmRzIFBhcnNlVHJlZSB7XG4gIHN0YXRpYyBmcm9tV2lkdGgod2lkdGgpIHtcbiAgICBjb25zdCBzdHJpbmcgPSBzdHJpbmdGcm9tQ2hhcmFjdGVyc1dpZHRoKHdpZHRoLCBEQVNIX0NIQVJBQ1RFUiksXG4gICAgICAgICAgbGluZSA9IHN0cmluZywgLy8vXG4gICAgICAgICAgbGluZXMgPSBbbGluZV0sXG4gICAgICAgICAgaG9yaXpvbnRhbEJyYW5jaFBhcnNlVHJlZSA9IG5ldyBIb3Jpem9udGFsQnJhbmNoUGFyc2VUcmVlKGxpbmVzKTtcblxuICAgIHJldHVybiBob3Jpem9udGFsQnJhbmNoUGFyc2VUcmVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIHN0cmluZ0Zyb21DaGFyYWN0ZXJzV2lkdGgoY2hhcmFjdGVyc1dpZHRoLCBjaGFyYWN0ZXIpIHtcbiAgbGV0IHN0cmluZyA9IEVNUFRZX1NUUklORztcblxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY2hhcmFjdGVyc1dpZHRoOyBpbmRleCsrKSB7XG4gICAgc3RyaW5nICs9IGNoYXJhY3RlcjtcbiAgfVxuXG4gIHJldHVybiBzdHJpbmc7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSBmcm9tIFwiLi92ZXJ0aWNhbEJyYW5jaFwiO1xuaW1wb3J0IEhvcml6b250YWxCcmFuY2hQYXJzZVRyZWUgZnJvbSBcIi4vaG9yaXpvbnRhbEJyYW5jaFwiO1xuXG5pbXBvcnQgeyBmaXJzdCB9IGZyb20gXCIuLi91dGlsaXRpZXMvYXJyYXlcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hpbGROb2Rlc1BhcnNlVHJlZSBleHRlbmRzIFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlIHtcbiAgc3RhdGljIGZyb21DaGlsZE5vZGVzQW5kVG9rZW5zKGNoaWxkTm9kZXMsIHRva2Vucykge1xuICAgIGxldCBjaGlsZE5vZGVzUGFyc2VUcmVlO1xuXG4gICAgY29uc3QgY2hpbGROb2RlUGFyc2VUcmVlcyA9IGNoaWxkTm9kZXMucmVkdWNlKChjaGlsZE5vZGVQYXJzZVRyZWVzLCBjaGlsZE5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkTm9kZVBhcnNlVHJlZSA9IGNoaWxkTm9kZS5hc1BhcnNlVHJlZSh0b2tlbnMpO1xuXG4gICAgICAgICAgICBjaGlsZE5vZGVQYXJzZVRyZWVzLnB1c2goY2hpbGROb2RlUGFyc2VUcmVlKTtcblxuICAgICAgICAgICAgcmV0dXJuIGNoaWxkTm9kZVBhcnNlVHJlZXM7XG4gICAgICAgICAgfSwgW10pLFxuICAgICAgICAgIGNoaWxkTm9kZVBhcnNlVHJlZXNMZW5ndGggPSBjaGlsZE5vZGVQYXJzZVRyZWVzLmxlbmd0aDtcblxuICAgIGlmIChjaGlsZE5vZGVQYXJzZVRyZWVzTGVuZ3RoID09PSAxKSB7XG4gICAgICBjb25zdCBmaXJzdENoaWxkTm9kZVBhcnNlVHJlZSA9IGZpcnN0KGNoaWxkTm9kZVBhcnNlVHJlZXMpO1xuXG4gICAgICBjaGlsZE5vZGVzUGFyc2VUcmVlID0gZmlyc3RDaGlsZE5vZGVQYXJzZVRyZWU7ICAvLy9cbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IGZpcnN0VmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHVuZGVmaW5lZCxcbiAgICAgICAgICBsYXN0VmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IDAsXG4gICAgICAgICAgY2hpbGROb2RlUGFyc2VUcmVlc1dpZHRoID0gMCxcbiAgICAgICAgICBjaGlsZE5vZGVQYXJzZVRyZWVzRGVwdGggPSAwO1xuXG4gICAgICBjaGlsZE5vZGVQYXJzZVRyZWVzLmZvckVhY2goKGNoaWxkTm9kZVBhcnNlVHJlZSwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgY2hpbGROb2RlUGFyc2VUcmVlV2lkdGggPSBjaGlsZE5vZGVQYXJzZVRyZWUuZ2V0V2lkdGgoKSxcbiAgICAgICAgICAgICAgY2hpbGROb2RlUGFyc2VUcmVlRGVwdGggPSBjaGlsZE5vZGVQYXJzZVRyZWUuZ2V0RGVwdGgoKTtcblxuICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICBjb25zdCBmaXJzdENoaWxkTm9kZVBhcnNlVHJlZSA9IGNoaWxkTm9kZVBhcnNlVHJlZSxcbiAgICAgICAgICAgICAgICBmaXJzdENoaWxkTm9kZVBhcnNlVHJlZVZlcnRpY2FsQnJhbmNoUG9zaXRpb24gPSBmaXJzdENoaWxkTm9kZVBhcnNlVHJlZS5nZXRWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uKCk7XG5cbiAgICAgICAgICBmaXJzdFZlcnRpY2FsQnJhbmNoUG9zaXRpb24gPSBmaXJzdENoaWxkTm9kZVBhcnNlVHJlZVZlcnRpY2FsQnJhbmNoUG9zaXRpb247XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggPT09IGNoaWxkTm9kZVBhcnNlVHJlZXNMZW5ndGggLSAxKSB7XG4gICAgICAgICAgY29uc3QgbGFzdENoaWxkTm9kZVBhcnNlVHJlZSA9IGNoaWxkTm9kZVBhcnNlVHJlZSxcbiAgICAgICAgICAgICAgICBsYXN0Q2hpbGROb2RlUGFyc2VUcmVlVmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IGxhc3RDaGlsZE5vZGVQYXJzZVRyZWUuZ2V0VmVydGljYWxCcmFuY2hQb3NpdGlvbigpO1xuXG4gICAgICAgICAgbGFzdFZlcnRpY2FsQnJhbmNoUG9zaXRpb24gKz0gbGFzdENoaWxkTm9kZVBhcnNlVHJlZVZlcnRpY2FsQnJhbmNoUG9zaXRpb247XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggPCBjaGlsZE5vZGVQYXJzZVRyZWVzTGVuZ3RoIC0gMSkge1xuICAgICAgICAgIGxhc3RWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uICs9IGNoaWxkTm9kZVBhcnNlVHJlZVdpZHRoO1xuICAgICAgICAgIGxhc3RWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uICs9IDE7XG5cbiAgICAgICAgICBjaGlsZE5vZGVQYXJzZVRyZWVzV2lkdGggKz0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNoaWxkTm9kZVBhcnNlVHJlZXNXaWR0aCArPSBjaGlsZE5vZGVQYXJzZVRyZWVXaWR0aDtcbiAgICAgICAgY2hpbGROb2RlUGFyc2VUcmVlc0RlcHRoID0gTWF0aC5tYXgoY2hpbGROb2RlUGFyc2VUcmVlc0RlcHRoLCBjaGlsZE5vZGVQYXJzZVRyZWVEZXB0aCk7XG4gICAgICB9KTtcblxuICAgICAgY29uc3Qgd2lkdGggPSBsYXN0VmVydGljYWxCcmFuY2hQb3NpdGlvbiAtIGZpcnN0VmVydGljYWxCcmFuY2hQb3NpdGlvbiArIDEsXG4gICAgICAgICAgICB2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSA9IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmZyb21XaWR0aCh3aWR0aCksXG4gICAgICAgICAgICBob3Jpem9udGFsQnJhbmNoUGFyc2VUcmVlID0gSG9yaXpvbnRhbEJyYW5jaFBhcnNlVHJlZS5mcm9tV2lkdGgod2lkdGgpLFxuICAgICAgICAgICAgbGVmdE1hcmdpbldpZHRoID0gZmlyc3RWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uLFxuICAgICAgICAgICAgcmlnaHRNYXJnaW5XaWR0aCA9IGNoaWxkTm9kZVBhcnNlVHJlZXNXaWR0aCAtIHdpZHRoIC0gbGVmdE1hcmdpbldpZHRoO1xuXG4gICAgICB2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5hZGRMZWZ0TWFyZ2luKGxlZnRNYXJnaW5XaWR0aCk7XG4gICAgICB2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5hZGRSaWdodE1hcmdpbihyaWdodE1hcmdpbldpZHRoKTtcbiAgICAgIGhvcml6b250YWxCcmFuY2hQYXJzZVRyZWUuYWRkTGVmdE1hcmdpbihsZWZ0TWFyZ2luV2lkdGgpO1xuICAgICAgaG9yaXpvbnRhbEJyYW5jaFBhcnNlVHJlZS5hZGRSaWdodE1hcmdpbihyaWdodE1hcmdpbldpZHRoKTtcblxuICAgICAgY29uc3QgdmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmdldFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oKTtcblxuICAgICAgY2hpbGROb2Rlc1BhcnNlVHJlZSA9IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmZyb21EZXB0aEFuZFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oQ2hpbGROb2Rlc1BhcnNlVHJlZSwgY2hpbGROb2RlUGFyc2VUcmVlc0RlcHRoLCB2ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uKTtcblxuICAgICAgY2hpbGROb2RlUGFyc2VUcmVlcy5mb3JFYWNoKChjaGlsZE5vZGVQYXJzZVRyZWUsIGluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IGNoaWxkTm9kZVBhcnNlVHJlZURlcHRoID0gY2hpbGROb2RlUGFyc2VUcmVlLmdldERlcHRoKCksXG4gICAgICAgICAgICAgIGNsb25lZENoaWxkTm9kZVBhcnNlVHJlZSA9IGNoaWxkTm9kZVBhcnNlVHJlZS5jbG9uZSgpO1xuXG4gICAgICAgIGlmIChpbmRleCA8IGNoaWxkTm9kZVBhcnNlVHJlZXNMZW5ndGggLSAxKSB7XG4gICAgICAgICAgY29uc3QgcmlnaHRNYXJnaW5XaWR0aCA9IDE7XG5cbiAgICAgICAgICBjbG9uZWRDaGlsZE5vZGVQYXJzZVRyZWUuYWRkUmlnaHRNYXJnaW4ocmlnaHRNYXJnaW5XaWR0aCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGROb2RlUGFyc2VUcmVlRGVwdGggPCBjaGlsZE5vZGVQYXJzZVRyZWVzRGVwdGgpIHtcbiAgICAgICAgICBjb25zdCBib3R0b21NYXJnaW5EZXB0aCA9IGNoaWxkTm9kZVBhcnNlVHJlZXNEZXB0aCAtIGNoaWxkTm9kZVBhcnNlVHJlZURlcHRoO1xuXG4gICAgICAgICAgY2xvbmVkQ2hpbGROb2RlUGFyc2VUcmVlLmFkZEJvdHRvbU1hcmdpbihib3R0b21NYXJnaW5EZXB0aCk7XG4gICAgICAgIH1cblxuICAgICAgICBjaGlsZE5vZGVzUGFyc2VUcmVlLmFwcGVuZFRvUmlnaHQoY2xvbmVkQ2hpbGROb2RlUGFyc2VUcmVlKTtcbiAgICAgIH0pO1xuXG4gICAgICBjaGlsZE5vZGVzUGFyc2VUcmVlLmFwcGVuZFRvVG9wKGhvcml6b250YWxCcmFuY2hQYXJzZVRyZWUpO1xuICAgICAgY2hpbGROb2Rlc1BhcnNlVHJlZS5hcHBlbmRUb1RvcCh2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBjaGlsZE5vZGVzUGFyc2VUcmVlO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBSdWxlTmFtZVBhcnNlVHJlZSBmcm9tIFwiLi9ydWxlTmFtZVwiO1xuaW1wb3J0IENoaWxkTm9kZXNQYXJzZVRyZWUgZnJvbSBcIi4vY2hpbGROb2Rlc1wiO1xuaW1wb3J0IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlIGZyb20gXCIuL3ZlcnRpY2FsQnJhbmNoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vblRlcm1pbmFsTm9kZVBhcnNlVHJlZSBleHRlbmRzIFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlIHtcbiAgc3RhdGljIGZyb21Ob25UZXJtaW5hbE5vZGVBbmRUb2tlbnMobm9uVGVybWluYWxOb2RlLCB0b2tlbnMpIHtcbiAgICBjb25zdCBjaGlsZE5vZGVzID0gbm9uVGVybWluYWxOb2RlLmdldENoaWxkTm9kZXMoKSxcbiAgICAgICAgICBydWxlTmFtZVBhcnNlVHJlZSA9IFJ1bGVOYW1lUGFyc2VUcmVlLmZyb21Ob25UZXJtaW5hbE5vZGVBbmRUb2tlbnMobm9uVGVybWluYWxOb2RlLCB0b2tlbnMpLFxuICAgICAgICAgIGNoaWxkTm9kZXNQYXJzZVRyZWUgPSBDaGlsZE5vZGVzUGFyc2VUcmVlLmZyb21DaGlsZE5vZGVzQW5kVG9rZW5zKGNoaWxkTm9kZXMsIHRva2Vucyk7XG4gICAgXG4gICAgbGV0IHJ1bGVOYW1lUGFyc2VUcmVlVmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHJ1bGVOYW1lUGFyc2VUcmVlLmdldFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oKTtcbiAgICBcbiAgICBjb25zdCBjaGlsZE5vZGVzUGFyc2VUcmVlVmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IGNoaWxkTm9kZXNQYXJzZVRyZWUuZ2V0VmVydGljYWxCcmFuY2hQb3NpdGlvbigpLFxuICAgICAgICAgIHZlcnRpY2FsQnJhbmNoUG9zaXRpb25zRGlmZmVyZW5jZSA9IHJ1bGVOYW1lUGFyc2VUcmVlVmVydGljYWxCcmFuY2hQb3NpdGlvbiAtIGNoaWxkTm9kZXNQYXJzZVRyZWVWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uO1xuICAgIFxuICAgIGxldCBsZWZ0TWFyZ2luV2lkdGggPSB1bmRlZmluZWQ7XG5cbiAgICBpZiAoZmFsc2UpIHtcbiAgICAgIC8vL1xuICAgIH0gZWxzZSBpZiAodmVydGljYWxCcmFuY2hQb3NpdGlvbnNEaWZmZXJlbmNlIDwgMCkge1xuICAgICAgbGVmdE1hcmdpbldpZHRoID0gLXZlcnRpY2FsQnJhbmNoUG9zaXRpb25zRGlmZmVyZW5jZTtcblxuICAgICAgcnVsZU5hbWVQYXJzZVRyZWUuYWRkTGVmdE1hcmdpbihsZWZ0TWFyZ2luV2lkdGgpO1xuICAgIH0gZWxzZSBpZiAodmVydGljYWxCcmFuY2hQb3NpdGlvbnNEaWZmZXJlbmNlID4gMCkge1xuICAgICAgbGVmdE1hcmdpbldpZHRoID0gK3ZlcnRpY2FsQnJhbmNoUG9zaXRpb25zRGlmZmVyZW5jZTtcblxuICAgICAgY2hpbGROb2Rlc1BhcnNlVHJlZS5hZGRMZWZ0TWFyZ2luKGxlZnRNYXJnaW5XaWR0aCk7XG4gICAgfVxuXG4gICAgY29uc3QgcnVsZU5hbWVQYXJzZVRyZWVXaWR0aCA9IHJ1bGVOYW1lUGFyc2VUcmVlLmdldFdpZHRoKCksXG4gICAgICAgICAgY2hpbGROb2Rlc1BhcnNlVHJlZVdpZHRoID0gY2hpbGROb2Rlc1BhcnNlVHJlZS5nZXRXaWR0aCgpLFxuICAgICAgICAgIHdpZHRoc0RpZmZlcmVuY2UgPSBydWxlTmFtZVBhcnNlVHJlZVdpZHRoIC0gY2hpbGROb2Rlc1BhcnNlVHJlZVdpZHRoO1xuICAgIFxuICAgIGxldCByaWdodE1hcmdpbldpZHRoID0gdW5kZWZpbmVkO1xuXG4gICAgaWYgKGZhbHNlKSB7XG4gICAgICAvLy9cbiAgICB9IGVsc2UgaWYgKHdpZHRoc0RpZmZlcmVuY2UgPCAwKSB7XG4gICAgICByaWdodE1hcmdpbldpZHRoID0gLXdpZHRoc0RpZmZlcmVuY2U7XG4gICAgICBcbiAgICAgIHJ1bGVOYW1lUGFyc2VUcmVlLmFkZFJpZ2h0TWFyZ2luKHJpZ2h0TWFyZ2luV2lkdGgpO1xuICAgIH0gZWxzZSBpZiAod2lkdGhzRGlmZmVyZW5jZSA+IDApIHtcbiAgICAgIHJpZ2h0TWFyZ2luV2lkdGggPSArd2lkdGhzRGlmZmVyZW5jZTtcblxuICAgICAgY2hpbGROb2Rlc1BhcnNlVHJlZS5hZGRSaWdodE1hcmdpbihyaWdodE1hcmdpbldpZHRoKTtcbiAgICB9XG5cbiAgICBydWxlTmFtZVBhcnNlVHJlZVZlcnRpY2FsQnJhbmNoUG9zaXRpb24gPSBydWxlTmFtZVBhcnNlVHJlZS5nZXRWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uKCk7XG5cbiAgICBjb25zdCBydWxlTmFtZVBhcnNlVHJlZURlcHRoID0gcnVsZU5hbWVQYXJzZVRyZWUuZ2V0RGVwdGgoKSxcbiAgICAgICAgICBub25UZXJtaW5hbE5vZGVQYXJzZVRyZWVEZXB0aCA9IHJ1bGVOYW1lUGFyc2VUcmVlRGVwdGgsIC8vL1xuICAgICAgICAgIHZlcnRpY2FsQnJhbmNoUG9zaXRpb24gPSBydWxlTmFtZVBhcnNlVHJlZVZlcnRpY2FsQnJhbmNoUG9zaXRpb24sIC8vL1xuICAgICAgICAgIG5vblRlcm1pbmFsTm9kZVBhcnNlVHJlZSA9IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmZyb21EZXB0aEFuZFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oTm9uVGVybWluYWxOb2RlUGFyc2VUcmVlLCBub25UZXJtaW5hbE5vZGVQYXJzZVRyZWVEZXB0aCwgdmVydGljYWxCcmFuY2hQb3NpdGlvbik7XG5cbiAgICBub25UZXJtaW5hbE5vZGVQYXJzZVRyZWUuYXBwZW5kVG9SaWdodChydWxlTmFtZVBhcnNlVHJlZSk7XG4gICAgbm9uVGVybWluYWxOb2RlUGFyc2VUcmVlLmFwcGVuZFRvQm90dG9tKGNoaWxkTm9kZXNQYXJzZVRyZWUpO1xuXG4gICAgcmV0dXJuIG5vblRlcm1pbmFsTm9kZVBhcnNlVHJlZTtcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uVGVybWluYWxOb2RlUGFyc2VUcmVlIGZyb20gXCIuLi9wYXJzZVRyZWUvbm9uVGVybWluYWxOb2RlXCI7XG5cbmltcG9ydCB7IGZvcndhcmRzU29tZSwgYmFja3dhcmRzU29tZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvYXJyYXlcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9uVGVybWluYWxOb2RlIHtcbiAgY29uc3RydWN0b3IocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHtcbiAgICB0aGlzLnJ1bGVOYW1lID0gcnVsZU5hbWU7XG4gICAgdGhpcy5jaGlsZE5vZGVzID0gY2hpbGROb2RlcztcbiAgfVxuXG4gIGlzVGVybWluYWxOb2RlKCkge1xuICAgIGNvbnN0IHRlcm1pbmFsTm9kZSA9IGZhbHNlO1xuXG4gICAgcmV0dXJuIHRlcm1pbmFsTm9kZTtcbiAgfVxuXG4gIGlzTm9uVGVybWluYWxOb2RlKCkge1xuICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IHRydWU7XG5cbiAgICByZXR1cm4gbm9uVGVybWluYWxOb2RlO1xuICB9XG5cbiAgZ2V0UnVsZU5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZU5hbWU7XG4gIH1cblxuICBnZXRDaGlsZE5vZGVzKCkge1xuICAgIHJldHVybiB0aGlzLmNoaWxkTm9kZXM7XG4gIH1cblxuICBnZXRGaXJzdFNpZ25pZmljYW50VG9rZW4oKSB7XG4gICAgbGV0IGZpcnN0U2lnbmlmaWNhbnRUb2tlbiA9IG51bGw7XG5cbiAgICBmb3J3YXJkc1NvbWUodGhpcy5jaGlsZE5vZGVzLCAoY2hpbGROb2RlKSA9PiB7XG4gICAgICBmaXJzdFNpZ25pZmljYW50VG9rZW4gPSBjaGlsZE5vZGUuZ2V0Rmlyc3RTaWduaWZpY2FudFRva2VuKCk7XG5cbiAgICAgIGlmIChmaXJzdFNpZ25pZmljYW50VG9rZW4gIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZmlyc3RTaWduaWZpY2FudFRva2VuO1xuICB9XG5cbiAgZ2V0TGFzdFNpZ25pZmljYW50VG9rZW4oKSB7XG4gICAgbGV0IGxhc3RTaWduaWZpY2FudFRva2VuID0gbnVsbDtcblxuICAgIGJhY2t3YXJkc1NvbWUodGhpcy5jaGlsZE5vZGVzLCAoY2hpbGROb2RlKSA9PiB7XG4gICAgICBsYXN0U2lnbmlmaWNhbnRUb2tlbiA9IGNoaWxkTm9kZS5nZXRMYXN0U2lnbmlmaWNhbnRUb2tlbigpO1xuXG4gICAgICBpZiAobGFzdFNpZ25pZmljYW50VG9rZW4gIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbGFzdFNpZ25pZmljYW50VG9rZW47XG4gIH1cbiAgXG4gIHNldFJ1bGVOYW1lKHJ1bGVOYW1lKSB7XG4gICAgdGhpcy5ydWxlTmFtZSA9IHJ1bGVOYW1lO1xuICB9XG5cbiAgc2V0Q2hpbGROb2RlcyhjaGlsZE5vZGVzKSB7XG4gICAgdGhpcy5jaGlsZE5vZGVzID0gY2hpbGROb2RlcztcbiAgfVxuICBcbiAgYXNQYXJzZVRyZWUodG9rZW5zKSB7XG4gICAgY29uc3Qgbm9uVGVybWluYWxOb2RlID0gdGhpcywgIC8vL1xuICAgICAgICAgIG5vblRlcm1pbmFsTm9kZVBhcnNlVHJlZSA9IE5vblRlcm1pbmFsTm9kZVBhcnNlVHJlZS5mcm9tTm9uVGVybWluYWxOb2RlQW5kVG9rZW5zKG5vblRlcm1pbmFsTm9kZSwgdG9rZW5zKSxcbiAgICAgICAgICBwYXJzZVRyZWUgPSBub25UZXJtaW5hbE5vZGVQYXJzZVRyZWU7ICAvLy9cblxuICAgIHJldHVybiBwYXJzZVRyZWU7XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhDbGFzcywgcnVsZU5hbWUsIGNoaWxkTm9kZXMpIHtcbiAgICBpZiAoY2hpbGROb2RlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjaGlsZE5vZGVzID0gcnVsZU5hbWU7ICAvLy9cbiAgICAgIHJ1bGVOYW1lID0gQ2xhc3M7IC8vL1xuICAgICAgQ2xhc3MgPSBOb25UZXJtaW5hbE5vZGU7ICAvLy9cbiAgICB9XG5cbiAgICBjb25zdCBjaGlsZE5vZGVzTGVuZ3RoID0gY2hpbGROb2Rlcy5sZW5ndGg7XG5cbiAgICBpZiAoY2hpbGROb2Rlc0xlbmd0aCA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGVyZSBhcmUgbm8gY2hpbGQgbm9kZXMgYXQgcnVsZSAnJHtydWxlTmFtZX0nLmApO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBub25UZXJtaW5hbE5vZGUgPSBuZXcgQ2xhc3MocnVsZU5hbWUsIGNoaWxkTm9kZXMpO1xuXG4gICAgcmV0dXJuIG5vblRlcm1pbmFsTm9kZTtcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uVGVybWluYWxOb2RlIGZyb20gXCIuLi8uLi9ub2RlL25vblRlcm1pbmFsXCI7XG5cbmltcG9ydCB7IGZpcnN0IH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9hcnJheVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYW1lQk5GTm9kZSBleHRlbmRzIE5vblRlcm1pbmFsTm9kZSB7XG4gIGdldE5hbWUoKSB7XG4gICAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLFxuICAgICAgICAgIGZpcnN0Q2hpbGROb2RlID0gZmlyc3QoY2hpbGROb2RlcyksXG4gICAgICAgICAgdGVybWluYWxOb2RlID0gZmlyc3RDaGlsZE5vZGUsICAvLy9cbiAgICAgICAgICB0ZXJtaW5hbE5vZGVDb250ZW50ID0gdGVybWluYWxOb2RlLmdldENvbnRlbnQoKSxcbiAgICAgICAgICBuYW1lID0gdGVybWluYWxOb2RlQ29udGVudDsgLy8vXG4gICAgXG4gICAgcmV0dXJuIG5hbWU7XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhydWxlTmFtZSwgY2hpbGROb2RlcykgeyByZXR1cm4gTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoTmFtZUJORk5vZGUsIHJ1bGVOYW1lLCBjaGlsZE5vZGVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNQYXJ0UnVsZU5hbWVQYXJ0V2l0aExvb2tBaGVhZChwYXJ0KSB7XG4gIGxldCBwYXJ0UnVsZU5hbWVQYXJ0V2l0aExvb2tBaGVhZCA9IGZhbHNlO1xuXG4gIGNvbnN0IHBhcnRSdWxlTmFtZVBhcnQgPSBpc1BhcnRSdWxlTmFtZVBhcnQocGFydCk7XG5cbiAgaWYgKHBhcnRSdWxlTmFtZVBhcnQpIHtcbiAgICBjb25zdCBydWxlTmFtZVBhcnQgPSBwYXJ0LCAgLy8vXG4gICAgICAgICAgbG9va0FoZWFkID0gcnVsZU5hbWVQYXJ0LmlzTG9va0FoZWFkKCk7XG5cbiAgICBpZiAobG9va0FoZWFkKSB7XG4gICAgICBwYXJ0UnVsZU5hbWVQYXJ0V2l0aExvb2tBaGVhZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcnRSdWxlTmFtZVBhcnRXaXRoTG9va0FoZWFkO1xufVxuXG5mdW5jdGlvbiBpc1BhcnRSdWxlTmFtZVBhcnQocGFydCkge1xuICBsZXQgcGFydFJ1bGVOYW1lUGFydCA9IGZhbHNlO1xuXG4gIGNvbnN0IHBhcnRUZXJtaW5hbFBhcnQgPSBwYXJ0LmlzVGVybWluYWxQYXJ0KCksXG4gICAgICAgIHBhcnROb25UZXJtaW5hbFBhcnQgPSAhcGFydFRlcm1pbmFsUGFydDtcblxuICBpZiAocGFydE5vblRlcm1pbmFsUGFydCkge1xuICAgIGNvbnN0IG5vblRlcm1pbmFsUGFydCA9IHBhcnQsXG4gICAgICAgICAgbm9uVGVybWluYWxQYXJ0UnVsZU5hbWVQYXJ0ID0gbm9uVGVybWluYWxQYXJ0LmlzUnVsZU5hbWVQYXJ0KCk7XG5cbiAgICBwYXJ0UnVsZU5hbWVQYXJ0ID0gbm9uVGVybWluYWxQYXJ0UnVsZU5hbWVQYXJ0OyAvLy9cbiAgfVxuXG4gIHJldHVybiBwYXJ0UnVsZU5hbWVQYXJ0O1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBwdXNoIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9hcnJheVwiO1xuaW1wb3J0IHsgaXNQYXJ0UnVsZU5hbWVQYXJ0V2l0aExvb2tBaGVhZCB9IGZyb20gXCIuL3BhcnRcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUGFydHMocGFydHMsIG5vZGVzLCBpbmRleCwgc3RhdGUsIGNhbGxiYWNrKSB7XG4gIGxldCBwYXJzZWQ7XG5cbiAgY29uc3QgcGFydHNMZW5ndGggPSBwYXJ0cy5sZW5ndGg7XG5cbiAgaWYgKGluZGV4ID09PSBwYXJ0c0xlbmd0aCkge1xuICAgIHBhcnNlZCA9IChjYWxsYmFjayAhPT0gbnVsbCkgP1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKCkgOlxuICAgICAgICAgICAgICAgICAgdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBwYXJ0ID0gcGFydHNbaW5kZXhdO1xuXG4gICAgcGFyc2VkID0gcGFyc2VQYXJ0T2ZQYXJ0cyhwYXJ0LCBwYXJ0cywgbm9kZXMsIGluZGV4LCBzdGF0ZSwgY2FsbGJhY2spO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn1cblxuZnVuY3Rpb24gcGFyc2VQYXJ0T2ZQYXJ0cyhwYXJ0LCBwYXJ0cywgbm9kZXMsIGluZGV4LCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgbGV0IHBhcnNlZDtcblxuICBpZiAoY2FsbGJhY2sgIT09IG51bGwpIHtcbiAgICBjb25zdCBwYXJ0c05vZGVzID0gW107XG5cbiAgICBpbmRleCsrO1xuXG4gICAgcGFyc2VkID0gcGFydC5wYXJzZShub2Rlcywgc3RhdGUsICgpID0+IHBhcnNlUGFydHMocGFydHMsIHBhcnRzTm9kZXMsIGluZGV4LCBzdGF0ZSwgY2FsbGJhY2spKTtcblxuICAgIGlmIChwYXJzZWQpIHtcbiAgICAgIHB1c2gobm9kZXMsIHBhcnRzTm9kZXMpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBjb25zdCBwYXJ0UnVsZU5hbWVQYXJ0V2l0aExvb2tBaGVhZCA9IGlzUGFydFJ1bGVOYW1lUGFydFdpdGhMb29rQWhlYWQocGFydCk7XG5cbiAgICBpZiAocGFydFJ1bGVOYW1lUGFydFdpdGhMb29rQWhlYWQpIHtcbiAgICAgIGNvbnN0IHJ1bGVOYW1lUGFydCA9IHBhcnQsIC8vL1xuICAgICAgICAgICAgcGFydHNOb2RlcyA9IFtdO1xuXG4gICAgICBpbmRleCsrO1xuXG4gICAgICBwYXJzZWQgPSBydWxlTmFtZVBhcnQucGFyc2Uobm9kZXMsIHN0YXRlLCAoKSA9PiBwYXJzZVBhcnRzKHBhcnRzLCBwYXJ0c05vZGVzLCBpbmRleCwgc3RhdGUsIGNhbGxiYWNrKSk7XG5cbiAgICAgIGlmIChwYXJzZWQpIHtcbiAgICAgICAgcHVzaChub2RlcywgcGFydHNOb2Rlcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcnNlZCA9IHBhcnQucGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG5cbiAgICAgIGlmIChwYXJzZWQpIHtcbiAgICAgICAgaW5kZXgrKztcblxuICAgICAgICBwYXJzZWQgPSBwYXJzZVBhcnRzKHBhcnRzLCBub2RlcywgaW5kZXgsIHN0YXRlLCBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcGFyc2VQYXJ0cyB9IGZyb20gXCIuL3V0aWxpdGllcy9sb29rQWhlYWRcIjtcbmltcG9ydCB7IEVNUFRZX1NUUklORyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZmlyc3QsIGFsbEJ1dEZpcnN0IH0gZnJvbSBcIi4vdXRpbGl0aWVzL2FycmF5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvcihwYXJ0cykge1xuICAgIHRoaXMucGFydHMgPSBwYXJ0cztcbiAgfVxuXG4gIGdldFBhcnRzKCkge1xuICAgIHJldHVybiB0aGlzLnBhcnRzO1xuICB9XG5cbiAgZ2V0Rmlyc3RQYXJ0KCkge1xuICAgIGNvbnN0IGZpcnN0UGFydCA9IGZpcnN0KHRoaXMucGFydHMpO1xuXG4gICAgcmV0dXJuIGZpcnN0UGFydDtcbiAgfVxuXG4gIGdldFBhcnRzTGVuZ3RoKCkge1xuICAgIGNvbnN0IHBhcnRzTGVuZ3RoID0gdGhpcy5wYXJ0cy5sZW5ndGg7XG5cbiAgICByZXR1cm4gcGFydHNMZW5ndGg7XG4gIH1cblxuICBnZXRBbGxCdXRGaXJzdFBhcnRzKCkge1xuICAgIGNvbnN0IGFsbEJ1dEZpcnN0UGFydHMgPSBhbGxCdXRGaXJzdCh0aGlzLnBhcnRzKTtcblxuICAgIHJldHVybiBhbGxCdXRGaXJzdFBhcnRzO1xuICB9XG5cbiAgYWRkUGFydChwYXJ0KSB7XG4gICAgdGhpcy5wYXJ0cy5wdXNoKHBhcnQpO1xuICB9XG5cbiAgcGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjaykge1xuICAgIGxldCBwYXJzZWQ7XG5cbiAgICBjb25zdCBpbmRleCA9IDA7XG5cbiAgICBwYXJzZWQgPSBwYXJzZVBhcnRzKHRoaXMucGFydHMsIG5vZGVzLCBpbmRleCwgc3RhdGUsIGNhbGxiYWNrKTtcblxuICAgIHJldHVybiBwYXJzZWQ7XG4gIH1cblxuICBhc1N0cmluZygpIHtcbiAgICBjb25zdCBwYXJ0c1N0cmluZyA9IHRoaXMucGFydHMucmVkdWNlKChwYXJ0c1N0cmluZywgcGFydCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHBhcnRTdHJpbmcgPSBwYXJ0LmFzU3RyaW5nKCk7XG5cbiAgICAgICAgICBpZiAocGFydHNTdHJpbmcgPT09IEVNUFRZX1NUUklORykge1xuICAgICAgICAgICAgcGFydHNTdHJpbmcgPSBwYXJ0U3RyaW5nOyAvLy9cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFydHNTdHJpbmcgPSBgJHtwYXJ0c1N0cmluZ30gJHtwYXJ0U3RyaW5nfWA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHBhcnRzU3RyaW5nO1xuICAgICAgICB9LCBFTVBUWV9TVFJJTkcpLFxuICAgICAgICBzdHJpbmcgPSBwYXJ0c1N0cmluZzsgLy8vXG5cbiAgICByZXR1cm4gc3RyaW5nO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICAgIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuICAgIGZvcih2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKWFycjJbaV0gPSBhcnJbaV07XG4gICAgcmV0dXJuIGFycjI7XG59XG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbigpIHt9KSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgIGlmIChpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkge1xuICAgICAgICBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgICAgICAgICAgdmFyIGEgPSBbXG4gICAgICAgICAgICAgICAgbnVsbFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGEucHVzaC5hcHBseShhLCBhcmdzKTtcbiAgICAgICAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuICAgICAgICAgICAgaWYgKENsYXNzKSBfc2V0UHJvdG90eXBlT2YoaW5zdGFuY2UsIENsYXNzLnByb3RvdHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICAgIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufVxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXFxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpO1xufVxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICAgIGlmICghbykgcmV0dXJuO1xuICAgIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gICAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICAgIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obik7XG4gICAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxudmFyIFRlcm1pbmFsUGFydCA9IC8qI19fUFVSRV9fKi8gZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gVGVybWluYWxQYXJ0KCkge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGVybWluYWxQYXJ0KTtcbiAgICB9XG4gICAgX2NyZWF0ZUNsYXNzKFRlcm1pbmFsUGFydCwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiaXNOb25UZXJtaW5hbFBhcnRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpc05vblRlcm1pbmFsUGFydCgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbm9uVGVybWluYWxQYXJ0ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vblRlcm1pbmFsUGFydDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImlzVGVybWluYWxQYXJ0XCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaXNUZXJtaW5hbFBhcnQoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRlcm1pbmFsUGFydCA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRlcm1pbmFsUGFydDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImlzTm9XaGl0ZXNwYWNlUGFydFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGlzTm9XaGl0ZXNwYWNlUGFydCgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbm9XaGl0ZXNwYWNlUGFydCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBub1doaXRlc3BhY2VQYXJ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiY2xvbmVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZShQYXJ0KSB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcmVtYWluaW5nQXJndW1lbnRzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5Kyspe1xuICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdBcmd1bWVudHNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnN0cnVjdChQYXJ0LCBfdG9Db25zdW1hYmxlQXJyYXkocmVtYWluaW5nQXJndW1lbnRzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdKTtcbiAgICByZXR1cm4gVGVybWluYWxQYXJ0O1xufSgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gVGVybWluYWxQYXJ0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTl3WVhKMEwzUmxjbTFwYm1Gc0xtcHpJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWx3aWRYTmxJSE4wY21samRGd2lPMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JqYkdGemN5QlVaWEp0YVc1aGJGQmhjblFnZTF4dUlDQnBjMDV2YmxSbGNtMXBibUZzVUdGeWRDZ3BJSHRjYmlBZ0lDQmpiMjV6ZENCdWIyNVVaWEp0YVc1aGJGQmhjblFnUFNCbVlXeHpaVHRjYmx4dUlDQWdJSEpsZEhWeWJpQnViMjVVWlhKdGFXNWhiRkJoY25RN1hHNGdJSDFjYmx4dUlDQnBjMVJsY20xcGJtRnNVR0Z5ZENncElIdGNiaUFnSUNCamIyNXpkQ0IwWlhKdGFXNWhiRkJoY25RZ1BTQjBjblZsTzF4dUlDQWdJRnh1SUNBZ0lISmxkSFZ5YmlCMFpYSnRhVzVoYkZCaGNuUTdYRzRnSUgxY2JseHVJQ0JwYzA1dlYyaHBkR1Z6Y0dGalpWQmhjblFvS1NCN1hHNGdJQ0FnWTI5dWMzUWdibTlYYUdsMFpYTndZV05sVUdGeWRDQTlJR1poYkhObE8xeHVYRzRnSUNBZ2NtVjBkWEp1SUc1dlYyaHBkR1Z6Y0dGalpWQmhjblE3WEc0Z0lIMWNibHh1SUNCamJHOXVaU2hRWVhKMExDQXVMaTV5WlcxaGFXNXBibWRCY21kMWJXVnVkSE1wSUhzZ2NtVjBkWEp1SUc1bGR5QlFZWEowS0M0dUxuSmxiV0ZwYm1sdVowRnlaM1Z0Wlc1MGN5azdJSDFjYm4xY2JpSmRMQ0p1WVcxbGN5STZXeUpVWlhKdGFXNWhiRkJoY25RaUxDSnBjMDV2YmxSbGNtMXBibUZzVUdGeWRDSXNJbTV2YmxSbGNtMXBibUZzVUdGeWRDSXNJbWx6VkdWeWJXbHVZV3hRWVhKMElpd2lkR1Z5YldsdVlXeFFZWEowSWl3aWFYTk9iMWRvYVhSbGMzQmhZMlZRWVhKMElpd2libTlYYUdsMFpYTndZV05sVUdGeWRDSXNJbU5zYjI1bElpd2lVR0Z5ZENJc0luSmxiV0ZwYm1sdVowRnlaM1Z0Wlc1MGN5SmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNRMEZCV1N4WFFVRkJMRU5CUVVNN096dEZRVUZpTzNkQ1FVRkJPenQ1UkVGQlFUdDFSVUZCUVRzN096czdPenM3T3pzN096czdPenRuUmtGQlFUczdPenM3T3pzN2MwTkJRVUU3T3pzN096dHBRMEZCUVRzN08ybEZRVUZCT3p0VFFVRkJPenM3T3pzN096aEVRVUZCTzNORFFVRkJPelpFUVVGQk8ybEZRVUZCT3pzN08zZEZRVUZCTzJkRlFVRkJPenM3T3pzN096czdPenQxUWtGQlFUczdTMEZCUVRzN096czdPenM3T3pzclJFRkJRVHM3T3p0QlFVVmxMRWRCUVVzc1EwRkJRMEVzV1VGQldTeHBRa0ZCYkVJc1VVRkJVVHRoUVVGR1FTeFpRVUZaT3pKRFFVWnFRenM3T3p0WlFVZEZReXhIUVVGcFFpeEZRVUZxUWtFc1EwRkJhVUk3YlVKQlFXcENRU3hSUVVGUkxFTkJRVkpCTEdsQ1FVRnBRaXhIUVVGSExFTkJRVU03WjBKQlEyNUNMRWRCUVVzc1EwRkJRME1zWlVGQlpTeEhRVUZITEV0QlFVczdaMEpCUlRkQ0xFMUJRVTBzUTBGQlEwRXNaVUZCWlR0WlFVTjRRaXhEUVVGRE96czdXVUZGUkVNc1IwRkJZeXhGUVVGa1FTeERRVUZqTzIxQ1FVRmtRU3hSUVVGUkxFTkJRVkpCTEdOQlFXTXNSMEZCUnl4RFFVRkRPMmRDUVVOb1FpeEhRVUZMTEVOQlFVTkRMRmxCUVZrc1IwRkJSeXhKUVVGSk8yZENRVVY2UWl4TlFVRk5MRU5CUVVOQkxGbEJRVms3V1VGRGNrSXNRMEZCUXpzN08xbEJSVVJETEVkQlFXdENMRVZCUVd4Q1FTeERRVUZyUWp0dFFrRkJiRUpCTEZGQlFWRXNRMEZCVWtFc2EwSkJRV3RDTEVkQlFVY3NRMEZCUXp0blFrRkRjRUlzUjBGQlN5eERRVUZEUXl4blFrRkJaMElzUjBGQlJ5eExRVUZMTzJkQ1FVVTVRaXhOUVVGTkxFTkJRVU5CTEdkQ1FVRm5RanRaUVVONlFpeERRVUZET3pzN1dVRkZSRU1zUjBGQlN5eEZRVUZNUVN4RFFVRkxPMjFDUVVGTVFTeFJRVUZSTEVOQlFWSkJMRXRCUVVzc1EwRkJRME1zU1VGQlNTeEZRVUY1UWl4RFFVRkRPMmRDUVVGNFFpeEhRVUZIUXl4RFFVRklMRWRCUVhGQ0xFTkJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xGTkJRWEZDTEVOQlFYSkNMRTFCUVhGQ0xFVkJRV3hDUVN4clFrRkJhMElzUjBGQmNrSXNSMEZCY1VJc1QwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzUjBGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQmNVSXNUMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNRMEZCY1VJc1JVRkJja0lzU1VGQmNVSXNSMEZCY2tJc1NVRkJjVUlzUlVGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQlF6dHZRa0ZCUlVFc2EwSkJRV3RDTEVOQlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVOQlFYRkNMRWxCUVhKQ0xGTkJRWEZDTEVOQlFYSkNMRWxCUVhGQ0xFTkRja0p1UXl4RFJIRkNiVU03WjBKQlFVUXNRMEZCUXp0blFrRkJTU3hOUVVGTkxGbEJRVXRFTEVsQlFVa3NjVUpCUVVsRExHdENRVUZyUWp0WlFVRkhMRU5CUVVNN08wMUJja0pvUmpzN08ydENRVVZ4UWxRc1dVRkJXU3hCUVVacVF5SjkiLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSBmcm9tIFwiLi92ZXJ0aWNhbEJyYW5jaFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXJtaW5hbE5vZGVQYXJzZVRyZWUgZXh0ZW5kcyBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSB7XG4gIHN0YXRpYyBmcm9tVGVybWluYWxOb2RlQW5kVG9rZW5zKHRlcm1pbmFsTm9kZSwgdG9rZW5zKSB7XG4gICAgY29uc3Qgc2lnbmlmaWNhbnRUb2tlbiA9IHRlcm1pbmFsTm9kZS5nZXRTaWduaWZpY2FudFRva2VuKCksXG4gICAgICAgICAgY29udGVudCA9IHRlcm1pbmFsTm9kZS5nZXRDb250ZW50KCksXG4gICAgICAgICAgdHlwZSA9IHNpZ25pZmljYW50VG9rZW4uZ2V0VHlwZSgpLFxuICAgICAgICAgIHRva2VuSW5kZXggPSB0b2tlbnMuaW5kZXhPZihzaWduaWZpY2FudFRva2VuKSxcbiAgICAgICAgICBzdHJpbmcgPSBgJHtjb250ZW50fVske3R5cGV9XSgke3Rva2VuSW5kZXh9KWAsXG4gICAgICAgICAgc3RyaW5nTGVuZ3RoID0gc3RyaW5nLmxlbmd0aCxcbiAgICAgICAgICB2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZVdpZHRoID0gc3RyaW5nTGVuZ3RoLCAvLy9cbiAgICAgICAgICB2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSA9IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmZyb21XaWR0aCh2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZVdpZHRoKSxcbiAgICAgICAgICB2ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uID0gdmVydGljYWxCcmFuY2hQYXJzZVRyZWUuZ2V0VmVydGljYWxCcmFuY2hQb3NpdGlvbigpLFxuICAgICAgICAgIHRlcm1pbmFsTm9kZVBhcnNlVHJlZSA9IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmZyb21TdHJpbmdBbmRWZXJ0aWNhbEJyYW5jaFBvc2l0aW9uKFRlcm1pbmFsTm9kZVBhcnNlVHJlZSwgc3RyaW5nLCB2ZXJ0aWNhbEJyYW5jaFBvc2l0aW9uKTtcblxuICAgIHRlcm1pbmFsTm9kZVBhcnNlVHJlZS5hcHBlbmRUb1RvcCh2ZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZSk7XG5cbiAgICByZXR1cm4gdGVybWluYWxOb2RlUGFyc2VUcmVlO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBUZXJtaW5hbE5vZGVQYXJzZVRyZWUgZnJvbSBcIi4uL3BhcnNlVHJlZS90ZXJtaW5hbE5vZGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVybWluYWxOb2RlIHtcbiAgY29uc3RydWN0b3Ioc2lnbmlmaWNhbnRUb2tlbikge1xuICAgIHRoaXMuc2lnbmlmaWNhbnRUb2tlbiA9IHNpZ25pZmljYW50VG9rZW47XG4gIH1cblxuICBnZXRTaWduaWZpY2FudFRva2VuKCkge1xuICAgIHJldHVybiB0aGlzLnNpZ25pZmljYW50VG9rZW47XG4gIH1cblxuICBnZXRGaXJzdFNpZ25pZmljYW50VG9rZW4oKSB7XG4gICAgY29uc3QgZmlyc3RTaWduaWZpY2FudFRva2VuID0gdGhpcy5zaWduaWZpY2FudFRva2VuOyAgLy8vXG5cbiAgICByZXR1cm4gZmlyc3RTaWduaWZpY2FudFRva2VuO1xuICB9XG5cbiAgZ2V0TGFzdFNpZ25pZmljYW50VG9rZW4oKSB7XG4gICAgY29uc3QgbGFzdFNpZ25pZmljYW50VG9rZW4gPSB0aGlzLnNpZ25pZmljYW50VG9rZW47ICAvLy9cblxuICAgIHJldHVybiBsYXN0U2lnbmlmaWNhbnRUb2tlbjtcbiAgfVxuXG4gIGlzTm9XaGl0ZXNwYWNlTm9kZSgpIHtcbiAgICBjb25zdCBub1doaXRlc3BhY2VOb2RlID0gZmFsc2U7XG5cbiAgICByZXR1cm4gbm9XaGl0ZXNwYWNlTm9kZTtcbiAgfVxuXG4gIGlzVGVybWluYWxOb2RlKCkge1xuICAgIGNvbnN0IHRlcm1pbmFsTm9kZSA9IHRydWU7XG4gICAgXG4gICAgcmV0dXJuIHRlcm1pbmFsTm9kZTtcbiAgfVxuXG4gIGlzTm9uVGVybWluYWxOb2RlKCkge1xuICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IGZhbHNlO1xuXG4gICAgcmV0dXJuIG5vblRlcm1pbmFsTm9kZTtcbiAgfVxuXG4gIGdldFR5cGUoKSB7IHJldHVybiB0aGlzLnNpZ25pZmljYW50VG9rZW4uZ2V0VHlwZSgpOyB9XG5cbiAgZ2V0Q29udGVudCgpIHsgcmV0dXJuIHRoaXMuc2lnbmlmaWNhbnRUb2tlbi5nZXRDb250ZW50KCk7IH1cblxuICBzZXRTaWduaWZpY2FudFRva2VuKHNpZ25pZmljYW50VG9rZW4pIHtcbiAgICB0aGlzLnNpZ25pZmljYW50VG9rZW4gPSBzaWduaWZpY2FudFRva2VuO1xuICB9XG5cbiAgYXNQYXJzZVRyZWUodG9rZW5zKSB7XG4gICAgY29uc3QgdGVybWluYWxOb2RlID0gdGhpcywgIC8vL1xuICAgICAgICAgIHRlcm1pbmFsTm9kZVBhcnNlVHJlZSA9IFRlcm1pbmFsTm9kZVBhcnNlVHJlZS5mcm9tVGVybWluYWxOb2RlQW5kVG9rZW5zKHRlcm1pbmFsTm9kZSwgdG9rZW5zKSxcbiAgICAgICAgICBwYXJzZVRyZWUgPSB0ZXJtaW5hbE5vZGVQYXJzZVRyZWU7ICAvLy9cblxuICAgIHJldHVybiBwYXJzZVRyZWU7XG4gIH1cblxuICBzdGF0aWMgZnJvbVNpZ25pZmljYW50VG9rZW4oQ2xhc3MsIHNpZ25pZmljYW50VG9rZW4pIHtcbiAgICBpZiAoc2lnbmlmaWNhbnRUb2tlbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBzaWduaWZpY2FudFRva2VuID0gQ2xhc3M7IC8vL1xuICAgICAgQ2xhc3MgPSBUZXJtaW5hbE5vZGU7IC8vL1xuICAgIH1cblxuICAgIGNvbnN0IHRlcm1pbmFsTm9kZSA9IG5ldyBDbGFzcyhzaWduaWZpY2FudFRva2VuKTtcbiAgICBcbiAgICByZXR1cm4gdGVybWluYWxOb2RlO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3Rlcm1pbmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vcGFydC90ZXJtaW5hbFwiKSk7XG52YXIgX3Rlcm1pbmFsMSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL25vZGUvdGVybWluYWxcIikpO1xuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7XG4gICAgICAgIF9nZXQgPSBSZWZsZWN0LmdldDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgICAgICAgICAgdmFyIGJhc2UgPSBfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmICghYmFzZSkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmIChkZXNjLmdldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkZXNjLnZhbHVlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpO1xufVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICAgIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgICAgICByZXR1cm4gY2FsbDtcbiAgICB9XG4gICAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgICB3aGlsZSghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKXtcbiAgICAgICAgb2JqZWN0ID0gX2dldFByb3RvdHlwZU9mKG9iamVjdCk7XG4gICAgICAgIGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0ID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihUZXJtaW5hbFBhcnQpIHtcbiAgICBfaW5oZXJpdHMoU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0LCBUZXJtaW5hbFBhcnQpO1xuICAgIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0KTtcbiAgICBmdW5jdGlvbiBTaWduaWZpY2FudFRva2VuVHlwZVBhcnQoc2lnbmlmaWNhbnRUb2tlblR5cGUpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNpZ25pZmljYW50VG9rZW5UeXBlUGFydCk7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKTtcbiAgICAgICAgX3RoaXMuc2lnbmlmaWNhbnRUb2tlblR5cGUgPSBzaWduaWZpY2FudFRva2VuVHlwZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0LCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJwYXJzZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlKG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyc2VkO1xuICAgICAgICAgICAgICAgIHZhciB0ZXJtaW5hbE5vZGUgPSBudWxsO1xuICAgICAgICAgICAgICAgIHZhciBzYXZlZEluZGV4ID0gc3RhdGUuZ2V0U2F2ZWRJbmRleCgpLCBuZXh0U2lnbmlmaWNhbnRUb2tlbiA9IHN0YXRlLmdldE5leHRTaWduaWZpY2FudFRva2VuKCksIHNpZ25pZmljYW50VG9rZW4gPSBuZXh0U2lnbmlmaWNhbnRUb2tlbjsgLy8vXG4gICAgICAgICAgICAgICAgaWYgKHNpZ25pZmljYW50VG9rZW4gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNpZ25pZmljYW50VG9rZW5UeXBlID0gc2lnbmlmaWNhbnRUb2tlbi5nZXRUeXBlKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzaWduaWZpY2FudFRva2VuVHlwZSA9PT0gdGhpcy5zaWduaWZpY2FudFRva2VuVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVybWluYWxOb2RlID0gX3Rlcm1pbmFsMS5kZWZhdWx0LmZyb21TaWduaWZpY2FudFRva2VuKHNpZ25pZmljYW50VG9rZW4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBhcnNlZCA9IHRlcm1pbmFsTm9kZSAhPT0gbnVsbDtcbiAgICAgICAgICAgICAgICBpZiAocGFyc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzLnB1c2godGVybWluYWxOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWQgPSBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2Rlcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgICAgICAgICAgICAgICBzdGF0ZS5iYWNrdHJhY2soc2F2ZWRJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJhc1N0cmluZ1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFzU3RyaW5nKCkge1xuICAgICAgICAgICAgICAgIHZhciBzdHJpbmcgPSBcIltcIi5jb25jYXQodGhpcy5zaWduaWZpY2FudFRva2VuVHlwZSwgXCJdXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjbG9uZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0KF9nZXRQcm90b3R5cGVPZihTaWduaWZpY2FudFRva2VuVHlwZVBhcnQucHJvdG90eXBlKSwgXCJjbG9uZVwiLCB0aGlzKS5jYWxsKHRoaXMsIFNpZ25pZmljYW50VG9rZW5UeXBlUGFydCwgdGhpcy5zaWduaWZpY2FudFRva2VuVHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdKTtcbiAgICByZXR1cm4gU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0O1xufShfdGVybWluYWwuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBTaWduaWZpY2FudFRva2VuVHlwZVBhcnQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwzTnlZeTl3WVhKMEwzUmxjbTFwYm1Gc0wzTnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxMbXB6SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklsd2lkWE5sSUhOMGNtbGpkRndpTzF4dVhHNXBiWEJ2Y25RZ1ZHVnliV2x1WVd4UVlYSjBJR1p5YjIwZ1hDSXVMaTh1TGk5d1lYSjBMM1JsY20xcGJtRnNYQ0k3WEc1cGJYQnZjblFnVkdWeWJXbHVZV3hPYjJSbElHWnliMjBnWENJdUxpOHVMaTl1YjJSbEwzUmxjbTFwYm1Gc1hDSTdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR05zWVhOeklGTnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxVR0Z5ZENCbGVIUmxibVJ6SUZSbGNtMXBibUZzVUdGeWRDQjdYRzRnSUdOdmJuTjBjblZqZEc5eUtITnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxLU0I3WEc0Z0lDQWdjM1Z3WlhJb0tUdGNiaUFnSUNCY2JpQWdJQ0IwYUdsekxuTnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxJRDBnYzJsbmJtbG1hV05oYm5SVWIydGxibFI1Y0dVN1hHNGdJSDFjYmx4dUlDQndZWEp6WlNodWIyUmxjeXdnYzNSaGRHVXNJR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdiR1YwSUhCaGNuTmxaRHRjYmx4dUlDQWdJR3hsZENCMFpYSnRhVzVoYkU1dlpHVWdQU0J1ZFd4c08xeHVJQ0FnSUZ4dUlDQWdJR052Ym5OMElITmhkbVZrU1c1a1pYZ2dQU0J6ZEdGMFpTNW5aWFJUWVhabFpFbHVaR1Y0S0Nrc1hHNWNkRngwSUNBZ0lDQWdibVY0ZEZOcFoyNXBabWxqWVc1MFZHOXJaVzRnUFNCemRHRjBaUzVuWlhST1pYaDBVMmxuYm1sbWFXTmhiblJVYjJ0bGJpZ3BMRnh1WEhSY2RGeDBYSFJjZEhOcFoyNXBabWxqWVc1MFZHOXJaVzRnUFNCdVpYaDBVMmxuYm1sbWFXTmhiblJVYjJ0bGJqc2dMeTh2WEc1Y2JpQWdJQ0JwWmlBb2MybG5ibWxtYVdOaGJuUlViMnRsYmlBaFBUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnYzJsbmJtbG1hV05oYm5SVWIydGxibFI1Y0dVZ1BTQnphV2R1YVdacFkyRnVkRlJ2YTJWdUxtZGxkRlI1Y0dVb0tUdGNibHh1SUNBZ0lDQWdhV1lnS0hOcFoyNXBabWxqWVc1MFZHOXJaVzVVZVhCbElEMDlQU0IwYUdsekxuTnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxLU0I3WEc0Z0lDQWdJQ0FnSUhSbGNtMXBibUZzVG05a1pTQTlJRlJsY20xcGJtRnNUbTlrWlM1bWNtOXRVMmxuYm1sbWFXTmhiblJVYjJ0bGJpaHphV2R1YVdacFkyRnVkRlJ2YTJWdUtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCd1lYSnpaV1FnUFNBb2RHVnliV2x1WVd4T2IyUmxJQ0U5UFNCdWRXeHNLVHRjYmx4dUlDQWdJR2xtSUNod1lYSnpaV1FwSUh0Y2JpQWdJQ0FnSUc1dlpHVnpMbkIxYzJnb2RHVnliV2x1WVd4T2IyUmxLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tHTmhiR3hpWVdOcklDRTlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQWdJSEJoY25ObFpDQTlJR05oYkd4aVlXTnJLQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0Z3WVhKelpXUXBJSHRjYmlBZ0lDQWdJQ0FnSUNCdWIyUmxjeTV3YjNBb0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2doY0dGeWMyVmtLU0I3WEc0Z0lDQWdJQ0J6ZEdGMFpTNWlZV05yZEhKaFkyc29jMkYyWldSSmJtUmxlQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlIQmhjbk5sWkR0Y2JpQWdmVnh1WEc0Z0lHRnpVM1J5YVc1bktDa2dlMXh1SUNBZ0lHTnZibk4wSUhOMGNtbHVaeUE5SUdCYkpIdDBhR2x6TG5OcFoyNXBabWxqWVc1MFZHOXJaVzVVZVhCbGZWMWdPMXh1SUNBZ0lGeHVJQ0FnSUhKbGRIVnliaUJ6ZEhKcGJtYzdYRzRnSUgxY2JseHVJQ0JqYkc5dVpTZ3BJSHNnY21WMGRYSnVJSE4xY0dWeUxtTnNiMjVsS0ZOcFoyNXBabWxqWVc1MFZHOXJaVzVVZVhCbFVHRnlkQ3dnZEdocGN5NXphV2R1YVdacFkyRnVkRlJ2YTJWdVZIbHdaU2s3SUgxY2JuMWNiaUpkTENKdVlXMWxjeUk2V3lKVGFXZHVhV1pwWTJGdWRGUnZhMlZ1Vkhsd1pWQmhjblFpTENKemFXZHVhV1pwWTJGdWRGUnZhMlZ1Vkhsd1pTSXNJbkJoY25ObElpd2libTlrWlhNaUxDSnpkR0YwWlNJc0ltTmhiR3hpWVdOcklpd2ljR0Z5YzJWa0lpd2lkR1Z5YldsdVlXeE9iMlJsSWl3aWMyRjJaV1JKYm1SbGVDSXNJbWRsZEZOaGRtVmtTVzVrWlhnaUxDSnVaWGgwVTJsbmJtbG1hV05oYm5SVWIydGxiaUlzSW1kbGRFNWxlSFJUYVdkdWFXWnBZMkZ1ZEZSdmEyVnVJaXdpYzJsbmJtbG1hV05oYm5SVWIydGxiaUlzSW1kbGRGUjVjR1VpTENKVVpYSnRhVzVoYkU1dlpHVWlMQ0ptY205dFUybG5ibWxtYVdOaGJuUlViMnRsYmlJc0luQjFjMmdpTENKd2IzQWlMQ0ppWVdOcmRISmhZMnNpTENKaGMxTjBjbWx1WnlJc0luTjBjbWx1WnlJc0ltTnNiMjVsSWl3aVZHVnliV2x1WVd4UVlYSjBJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hEUVVGWkxGZEJRVUVzUTBGQlF6czdPMFZCUVdJN2QwSkJRVUU3UVVGRmVVSXNSMEZCY1VJc1EwRkJja0lzVTBGQmNVSTdRVUZEY2tJc1IwRkJjVUlzUTBGQmNrSXNWVUZCY1VJN096czdPenM3T3pzN096czdPenM0UkVGSU9VTTdjME5CUVVFN05rUkJRVUU3YVVWQlFVRTdPenM3ZDBWQlFVRTdaMFZCUVVFN096czdPekJDUVVGQk96czdPenM3T3pzN08xTkJRVUU3T3pzN096czdTMEZCUVRzN096czdPenM3T3pzN096dE5RVUZCTzNsRVFVRkJPenM3T3pzN096czdPenM3T3pzN2RVSkJRVUU3TzB0QlFVRTdPenM3TzNkRFFVRkJPenM3T3pzN01rSkJRVUU3T3pzN096czdPM0ZHUVVGQk96czdPenM3T3pzN096czdiVVZCUVVFN08ybEVRVUZCT3pzN096dEJRVXRsTEVkQlFVc3NRMEZCUTBFc2QwSkJRWGRDTEdsQ1FVRTVRaXhSUVVGUk8zRkVRVXgyUWpzN1lVRkxjVUpCTEhkQ1FVRjNRaXhEUVVNdlFrTXNiMEpCUVc5Q08zVkVRVTVzUXpzN2FVTkRRVUVzUTBSUFdUdGpRVVZJUVN4dlFrRkJiMElzUjBGQlIwRXNiMEpCUVc5Q0xFTkJRVU03T3pzN08xbEJSMjVFUXl4SFFVRkxMRVZCUVV4QkxFTkJRVXM3YlVKQlFVeEJMRkZCUVZFc1EwRkJVa0VzUzBGQlN5eERRVUZEUXl4TFFVRkxMRVZCUVVWRExFdEJRVXNzUlVGQlJVTXNVVUZCVVN4RlFVRkZMRU5CUVVNN1owSkJRemRDTEVkQlFVY3NRMEZCUTBNc1RVRkJUVHRuUWtGRlZpeEhRVUZITEVOQlFVTkRMRmxCUVZrc1IwRkJSeXhKUVVGSk8yZENRVVYyUWl4SFFVRkxMRU5CUVVORExGVkJRVlVzUjBGQlIwb3NTMEZCU3l4RFFVRkRTeXhoUVVGaExFbEJRMnhEUXl4dlFrRkJiMElzUjBGQlIwNHNTMEZCU3l4RFFVRkRUeXgxUWtGQmRVSXNTVUZEZGtSRExHZENRVUZuUWl4SFFVRkhSaXh2UWtGQmIwSXNSVUZCUlN4RlFVRkhMRUZCUVVnc1EwRkJSenRuUWtGRk4wTXNSVUZCUlN4RlFVRkZSU3huUWtGQlowSXNTMEZCU3l4SlFVRkpMRVZCUVVVc1EwRkJRenR2UWtGRE9VSXNSMEZCU3l4RFFVRkRXQ3h2UWtGQmIwSXNSMEZCUjFjc1owSkJRV2RDTEVOQlFVTkRMRTlCUVU4N2IwSkJSWEpFTEVWQlFVVXNSVUZCUlZvc2IwSkJRVzlDTEV0QlFVc3NTVUZCU1N4RFFVRkRRU3h2UWtGQmIwSXNSVUZCUlN4RFFVRkRPM2RDUVVOMlJFMHNXVUZCV1N4SFFVRkhUeXhWUVVGWkxGTkJRVU5ETEc5Q1FVRnZRaXhEUVVGRFNDeG5Ra0ZCWjBJc1EwRkJReXhEUVVGRE8yOUNRVU55UlN4RFFVRkRPMmRDUVVOSUxFTkJRVU03WjBKQlJVUk9MRTFCUVUwc1IwRkJTVU1zV1VGQldTeExRVUZMTEVsQlFVa3NRVUZCUXl4RFFVRkRPMmRDUVVWcVF5eEZRVUZGTEVWQlFVVkVMRTFCUVUwc1JVRkJSU3hEUVVGRE8yOUNRVU5ZU0N4TFFVRkxMRU5CUVVOaExFbEJRVWtzUTBGQlExUXNXVUZCV1N4RFFVRkRMRU5CUVVNN2IwSkJSWHBDTEVWQlFVVXNSVUZCUlVZc1VVRkJVU3hMUVVGTExFbEJRVWtzUlVGQlJTeERRVUZETzNkQ1FVTjBRa01zVFVGQlRTeEhRVUZIUkN4UlFVRlJMRVZCUVVVc1EwRkJRenQzUWtGRmNFSXNSVUZCUlN4SFFVRkhReXhOUVVGTkxFVkJRVVVzUTBGQlF6czBRa0ZEV2tnc1MwRkJTeXhEUVVGRFl5eEhRVUZITEVWQlFVVXNRMEZCUXp0M1FrRkRaQ3hEUVVGRE8yOUNRVU5JTEVOQlFVTTdaMEpCUTBnc1EwRkJRenRuUWtGRlJDeEZRVUZGTEVkQlFVZFlMRTFCUVUwc1JVRkJSU3hEUVVGRE8yOUNRVU5hUml4TFFVRkxMRU5CUVVOakxGTkJRVk1zUTBGQlExWXNWVUZCVlN4RFFVRkRMRU5CUVVNN1owSkJRemxDTEVOQlFVTTdaMEpCUlVRc1RVRkJUU3hEUVVGRFJpeE5RVUZOTzFsQlEyWXNRMEZCUXpzN08xbEJSVVJoTEVkQlFWRXNSVUZCVWtFc1EwRkJVVHR0UWtGQlVrRXNVVUZCVVN4RFFVRlNRU3hSUVVGUkxFZEJRVWNzUTBGQlF6dG5Ra0ZEVml4SFFVRkxMRU5CUVVORExFMUJRVTBzUjBGQlNTeERRVUZETEVkQlFUUkNMRTFCUVVNc1EwRkJNMElzU1VGQlNTeERRVUZEYmtJc2IwSkJRVzlDTEVWQlFVTXNRMEZCUXp0blFrRkZPVU1zVFVGQlRTeERRVUZEYlVJc1RVRkJUVHRaUVVObUxFTkJRVU03T3p0WlFVVkVReXhIUVVGTExFVkJRVXhCTEVOQlFVczdiVUpCUVV4QkxGRkJRVkVzUTBGQlVrRXNTMEZCU3l4SFFVRkhMRU5CUVVNN1owSkJRVU1zVFVGQlRTeHpRa0Z1UkVkeVFpeDNRa0ZCZDBJc1lVRnRSSEJDY1VJc1EwRkJTeXhSUVVGWUxFbEJRVXNzWVVGQlQzSkNMSGRDUVVGM1FpeEZRVUZGTEVsQlFVa3NRMEZCUTBNc2IwSkJRVzlDTzFsQlFVY3NRMEZCUXpzN1RVRjRSSFJHT3p0RlFVdHpSSEZDTEZOQlFWazdhMEpCUVRkRGRFSXNkMEpCUVhkQ0xFRkJURGRESW4wPSIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgdHlwZXMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0IGZyb20gXCIuLi9wYXJ0L3Rlcm1pbmFsL3NpZ25pZmljYW50VG9rZW5UeXBlXCI7XG5cbmNvbnN0IHsgbmFtZVR5cGUgfSA9IHR5cGVzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYW1lRGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBuYW1lU2lnbmlmaWNhbnRUb2tlblR5cGUgPSBuYW1lVHlwZSwgIC8vL1xuICAgICAgICAgIG5hbWVTaWduaWZpY2FudFRva2VuVHlwZVBhcnQgPSBuZXcgU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0KG5hbWVTaWduaWZpY2FudFRva2VuVHlwZSksXG4gICAgICAgICAgcGFydHMgPSBbXG4gICAgICAgICAgICBuYW1lU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0XG4gICAgICAgICAgXTtcblxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBOYW1lUnVsZU5hbWUgPSBcIm5hbWVcIjtcbmV4cG9ydCBjb25zdCBQYXJ0UnVsZU5hbWUgPSBcInBhcnRcIjtcbmV4cG9ydCBjb25zdCBSdWxlUnVsZU5hbWUgPSBcInJ1bGVcIjtcbmV4cG9ydCBjb25zdCBFcnJvclJ1bGVOYW1lID0gXCJlcnJvclwiO1xuZXhwb3J0IGNvbnN0IFJ1bGVOYW1lUnVsZU5hbWUgPSBcInJ1bGVOYW1lXCI7XG5leHBvcnQgY29uc3QgRG9jdW1lbnRSdWxlTmFtZSA9IFwiZG9jdW1lbnRcIjtcbmV4cG9ydCBjb25zdCBXaWxkY2FyZFJ1bGVOYW1lID0gXCJ3aWxkY2FyZFwiO1xuZXhwb3J0IGNvbnN0IEVuZE9mTGluZVJ1bGVOYW1lID0gXCJlbmRPZkxpbmVcIjtcbmV4cG9ydCBjb25zdCBEZWZpbml0aW9uUnVsZU5hbWUgPSBcImRlZmluaXRpb25cIjtcbmV4cG9ydCBjb25zdCBRdWFudGlmaWVyUnVsZU5hbWUgPSBcInF1YW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBEZWZpbml0aW9uc1J1bGVOYW1lID0gXCJkZWZpbml0aW9uc1wiO1xuZXhwb3J0IGNvbnN0IFRlcm1pbmFsUGFydFJ1bGVOYW1lID0gXCJ0ZXJtaW5hbFBhcnRcIjtcbmV4cG9ydCBjb25zdCBDaG9pY2VPZlBhcnRzUnVsZU5hbWUgPSBcImNob2ljZU9mUGFydHNcIjtcbmV4cG9ydCBjb25zdCBUZXJtaW5hbFN5bWJvbFJ1bGVOYW1lID0gXCJ0ZXJtaW5hbFN5bWJvbFwiO1xuZXhwb3J0IGNvbnN0IE5vblRlcm1pbmFsUGFydFJ1bGVOYW1lID0gXCJub25UZXJtaW5hbFBhcnRcIjtcbmV4cG9ydCBjb25zdCBTZXF1ZW5jZU9mUGFydHNSdWxlTmFtZSA9IFwic2VxdWVuY2VPZlBhcnRzXCI7XG5leHBvcnQgY29uc3QgTm9XaGl0ZXNwYWNlUGFydFJ1bGVOYW1lID0gXCJub1doaXRlc3BhY2VQYXJ0XCI7XG5leHBvcnQgY29uc3QgTG9va0FoZWFkTW9kaWZpZXJSdWxlTmFtZSA9IFwibG9va0FoZWFkTW9kaWZpZXJcIjtcbmV4cG9ydCBjb25zdCBSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lID0gXCJyZWd1bGFyRXhwcmVzc2lvblwiO1xuZXhwb3J0IGNvbnN0IE9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lID0gXCJvcHRpb25hbFF1YW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBPbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWUgPSBcIm9uZU9yTW9yZVF1YW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBaZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lID0gXCJ6ZXJvT3JNb3JlUXVhbnRpZmllclwiO1xuZXhwb3J0IGNvbnN0IFNpZ25pZmljYW50VG9rZW5UeXBlUnVsZU5hbWUgPSBcInNpZ25pZmljYW50VG9rZW5UeXBlXCI7XG5cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFJ1bGUgZnJvbSBcIi4uL3J1bGVcIjtcbmltcG9ydCBOYW1lQk5GTm9kZSBmcm9tIFwiLi4vbm9kZS9ibmYvbmFtZVwiO1xuaW1wb3J0IE5hbWVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL25hbWVcIjtcblxuaW1wb3J0IHsgTmFtZVJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYW1lUnVsZSBleHRlbmRzIFJ1bGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBuYW1lRGVmaW5pdGlvbiA9IG5ldyBOYW1lRGVmaW5pdGlvbigpLFxuICAgICAgICAgIG5hbWUgPSBOYW1lUnVsZU5hbWUsXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBuYW1lRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IE5hbWVCTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICAgIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuICAgIGZvcih2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKWFycjJbaV0gPSBhcnJbaV07XG4gICAgcmV0dXJuIGFycjI7XG59XG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbigpIHt9KSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgIGlmIChpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkge1xuICAgICAgICBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgICAgICAgICAgdmFyIGEgPSBbXG4gICAgICAgICAgICAgICAgbnVsbFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGEucHVzaC5hcHBseShhLCBhcmdzKTtcbiAgICAgICAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuICAgICAgICAgICAgaWYgKENsYXNzKSBfc2V0UHJvdG90eXBlT2YoaW5zdGFuY2UsIENsYXNzLnByb3RvdHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICAgIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufVxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXFxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpO1xufVxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICAgIGlmICghbykgcmV0dXJuO1xuICAgIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gICAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICAgIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obik7XG4gICAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxudmFyIE5vblRlcm1pbmFsUGFydCA9IC8qI19fUFVSRV9fKi8gZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gTm9uVGVybWluYWxQYXJ0KHR5cGUpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5vblRlcm1pbmFsUGFydCk7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgfVxuICAgIF9jcmVhdGVDbGFzcyhOb25UZXJtaW5hbFBhcnQsIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImdldFR5cGVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUeXBlKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnR5cGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJpc05vblRlcm1pbmFsUGFydFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGlzTm9uVGVybWluYWxQYXJ0KCkge1xuICAgICAgICAgICAgICAgIHZhciBub25UZXJtaW5hbFBhcnQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBub25UZXJtaW5hbFBhcnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJpc1Rlcm1pbmFsUGFydFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGlzVGVybWluYWxQYXJ0KCkge1xuICAgICAgICAgICAgICAgIHZhciB0ZXJtaW5hbFBhcnQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGVybWluYWxQYXJ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiaXNSdWxlTmFtZVBhcnRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpc1J1bGVOYW1lUGFydCgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcnVsZU5hbWVQYXJ0ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJ1bGVOYW1lUGFydDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImNsb25lXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY2xvbmUoUGFydCkge1xuICAgICAgICAgICAgICAgIGZvcih2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHJlbWFpbmluZ0FyZ3VtZW50cyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKXtcbiAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nQXJndW1lbnRzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb25zdHJ1Y3QoUGFydCwgX3RvQ29uc3VtYWJsZUFycmF5KHJlbWFpbmluZ0FyZ3VtZW50cykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIE5vblRlcm1pbmFsUGFydDtcbn0oKTtcbmV4cG9ydHMuZGVmYXVsdCA9IE5vblRlcm1pbmFsUGFydDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMM055WXk5d1lYSjBMMjV2YmxSbGNtMXBibUZzTG1weklsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQmpiR0Z6Y3lCT2IyNVVaWEp0YVc1aGJGQmhjblFnZTF4dUlDQmpiMjV6ZEhKMVkzUnZjaWgwZVhCbEtTQjdYRzRnSUNBZ2RHaHBjeTUwZVhCbElEMGdkSGx3WlRzZ0lGeHVJQ0I5WEc0Z0lGeHVJQ0JuWlhSVWVYQmxLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG5SNWNHVTdYRzRnSUgxY2JseHVJQ0JwYzA1dmJsUmxjbTFwYm1Gc1VHRnlkQ2dwSUh0Y2JpQWdJQ0JqYjI1emRDQnViMjVVWlhKdGFXNWhiRkJoY25RZ1BTQjBjblZsTzF4dVhHNGdJQ0FnY21WMGRYSnVJRzV2YmxSbGNtMXBibUZzVUdGeWREdGNiaUFnZlZ4dVhHNGdJR2x6VkdWeWJXbHVZV3hRWVhKMEtDa2dlMXh1SUNBZ0lHTnZibk4wSUhSbGNtMXBibUZzVUdGeWRDQTlJR1poYkhObE8xeHVJQ0FnSUZ4dUlDQWdJSEpsZEhWeWJpQjBaWEp0YVc1aGJGQmhjblE3WEc0Z0lIMWNibHh1SUNCcGMxSjFiR1ZPWVcxbFVHRnlkQ2dwSUh0Y2JpQWdJQ0JqYjI1emRDQnlkV3hsVG1GdFpWQmhjblFnUFNCbVlXeHpaVHRjYmx4dUlDQWdJSEpsZEhWeWJpQnlkV3hsVG1GdFpWQmhjblE3WEc0Z0lIMWNibHh1SUNCamJHOXVaU2hRWVhKMExDQXVMaTV5WlcxaGFXNXBibWRCY21kMWJXVnVkSE1wSUhzZ2NtVjBkWEp1SUc1bGR5QlFZWEowS0M0dUxuSmxiV0ZwYm1sdVowRnlaM1Z0Wlc1MGN5azdJSDFjYm4xY2JpSmRMQ0p1WVcxbGN5STZXeUpPYjI1VVpYSnRhVzVoYkZCaGNuUWlMQ0owZVhCbElpd2laMlYwVkhsd1pTSXNJbWx6VG05dVZHVnliV2x1WVd4UVlYSjBJaXdpYm05dVZHVnliV2x1WVd4UVlYSjBJaXdpYVhOVVpYSnRhVzVoYkZCaGNuUWlMQ0owWlhKdGFXNWhiRkJoY25RaUxDSnBjMUoxYkdWT1lXMWxVR0Z5ZENJc0luSjFiR1ZPWVcxbFVHRnlkQ0lzSW1Oc2IyNWxJaXdpVUdGeWRDSXNJbkpsYldGcGJtbHVaMEZ5WjNWdFpXNTBjeUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzUTBGQldTeFhRVUZCTEVOQlFVTTdPenRGUVVGaU8zZENRVUZCT3p0NVJFRkJRVHQxUlVGQlFUczdPenM3T3pzN096czdPenM3T3p0blJrRkJRVHM3T3pzN096czdjME5CUVVFN096czdPenRwUTBGQlFUczdPMmxGUVVGQk96dFRRVUZCT3pzN096czdPemhFUVVGQk8zTkRRVUZCT3paRVFVRkJPMmxGUVVGQk96czdPM2RGUVVGQk8yZEZRVUZCT3pzN096czdPenM3T3p0MVFrRkJRVHM3UzBGQlFUczdPenM3T3pzN096c3JSRUZCUVRzN096dEJRVVZsTEVkQlFVc3NRMEZCUTBFc1pVRkJaU3hwUWtGQmNrSXNVVUZCVVR0aFFVRkdRU3hsUVVGbExFTkJRM1JDUXl4SlFVRkpPemhEUVVoc1FqdFJRVWxKTEVsQlFVa3NRMEZCUTBFc1NVRkJTU3hIUVVGSFFTeEpRVUZKTEVOQlFVTTdPenM3V1VGSGJrSkRMRWRCUVU4c1JVRkJVRUVzUTBGQlR6dHRRa0ZCVUVFc1VVRkJVU3hEUVVGU1FTeFBRVUZQTEVkQlFVY3NRMEZCUXp0blFrRkRWQ3hOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZEUkN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU03T3p0WlFVVkVSU3hIUVVGcFFpeEZRVUZxUWtFc1EwRkJhVUk3YlVKQlFXcENRU3hSUVVGUkxFTkJRVkpCTEdsQ1FVRnBRaXhIUVVGSExFTkJRVU03WjBKQlEyNUNMRWRCUVVzc1EwRkJRME1zWlVGQlpTeEhRVUZITEVsQlFVazdaMEpCUlRWQ0xFMUJRVTBzUTBGQlEwRXNaVUZCWlR0WlFVTjRRaXhEUVVGRE96czdXVUZGUkVNc1IwRkJZeXhGUVVGa1FTeERRVUZqTzIxQ1FVRmtRU3hSUVVGUkxFTkJRVkpCTEdOQlFXTXNSMEZCUnl4RFFVRkRPMmRDUVVOb1FpeEhRVUZMTEVOQlFVTkRMRmxCUVZrc1IwRkJSeXhMUVVGTE8yZENRVVV4UWl4TlFVRk5MRU5CUVVOQkxGbEJRVms3V1VGRGNrSXNRMEZCUXpzN08xbEJSVVJETEVkQlFXTXNSVUZCWkVFc1EwRkJZenR0UWtGQlpFRXNVVUZCVVN4RFFVRlNRU3hqUVVGakxFZEJRVWNzUTBGQlF6dG5Ra0ZEYUVJc1IwRkJTeXhEUVVGRFF5eFpRVUZaTEVkQlFVY3NTMEZCU3p0blFrRkZNVUlzVFVGQlRTeERRVUZEUVN4WlFVRlpPMWxCUTNKQ0xFTkJRVU03T3p0WlFVVkVReXhIUVVGTExFVkJRVXhCTEVOQlFVczdiVUpCUVV4QkxGRkJRVkVzUTBGQlVrRXNTMEZCU3l4RFFVRkRReXhKUVVGSkxFVkJRWGxDTEVOQlFVTTdaMEpCUVhoQ0xFZEJRVWRETEVOQlFVZ3NSMEZCY1VJc1EwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1UwRkJjVUlzUTBGQmNrSXNUVUZCY1VJc1JVRkJiRUpCTEd0Q1FVRnJRaXhIUVVGeVFpeEhRVUZ4UWl4UFFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRnhRaXhIUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhEUVVGeFFpeFBRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeERRVUZ4UWl4RlFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4SlFVRnhRaXhGUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhEUVVGRE8yOUNRVUZGUVN4clFrRkJhMElzUTBGQmNrSXNTVUZCY1VJc1IwRkJja0lzUTBGQmNVSXNTVUZCY2tJc1UwRkJjVUlzUTBGQmNrSXNTVUZCY1VJc1EwTTNRbTVETEVORU5rSnRRenRuUWtGQlJDeERRVUZETzJkQ1FVRkpMRTFCUVUwc1dVRkJTMFFzU1VGQlNTeHhRa0ZCU1VNc2EwSkJRV3RDTzFsQlFVY3NRMEZCUXpzN1RVRTNRbWhHT3pzN2EwSkJSWEZDV0N4bFFVRmxMRUZCUm5CREluMD0iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBSdWxlTmFtZVBhcnRUeXBlID0gXCJydWxlTmFtZVBhcnRcIjtcbmV4cG9ydCBjb25zdCBPcHRpb25hbFBhcnRQYXJ0VHlwZSA9IFwib3B0aW9uYWxQYXJ0XCI7XG5leHBvcnQgY29uc3QgQ2hvaWNlT2ZQYXJ0c1BhcnRUeXBlID0gXCJjaG9pY2VPZlBhcnRzXCI7XG5leHBvcnQgY29uc3QgT25lT3JNb3JlUGFydHNQYXJ0VHlwZSA9IFwib25lT3JNb3JlUGFydHNcIjtcbmV4cG9ydCBjb25zdCBaZXJvT3JNb3JlUGFydHNQYXJ0VHlwZSA9IFwiemVyb09yTW9yZVBhcnRzXCI7XG5leHBvcnQgY29uc3QgU2VxdWVuY2VPZlBhcnRzUGFydFR5cGUgPSBcInNlcXVlbmNlT2ZQYXJ0c1wiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFJ1bGVOYW1lUGFydFR5cGUsXG4gIE9wdGlvbmFsUGFydFBhcnRUeXBlLFxuICBDaG9pY2VPZlBhcnRzUGFydFR5cGUsXG4gIE9uZU9yTW9yZVBhcnRzUGFydFR5cGUsXG4gIFplcm9Pck1vcmVQYXJ0c1BhcnRUeXBlLFxuICBTZXF1ZW5jZU9mUGFydHNQYXJ0VHlwZVxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfb2NjYW1MZXhlcnMgPSByZXF1aXJlKFwib2NjYW0tbGV4ZXJzXCIpO1xudmFyIF9ub25UZXJtaW5hbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL3BhcnQvbm9uVGVybWluYWxcIikpO1xudmFyIF9hcnJheSA9IHJlcXVpcmUoXCIuLi8uLi91dGlsaXRpZXMvYXJyYXlcIik7XG52YXIgX3BhcnRUeXBlcyA9IHJlcXVpcmUoXCIuLi8uLi9wYXJ0VHlwZXNcIik7XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgIT09IFwidW5kZWZpbmVkXCIgJiYgUmVmbGVjdC5nZXQpIHtcbiAgICAgICAgX2dldCA9IFJlZmxlY3QuZ2V0O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIF9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICB2YXIgYmFzZSA9IF9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpO1xuICAgICAgICAgICAgaWYgKCFiYXNlKSByZXR1cm47XG4gICAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgaWYgKGRlc2MuZ2V0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRlc2MudmFsdWU7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyIHx8IHRhcmdldCk7XG59XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gICAgfTtcbiAgICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufVxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICAgIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgICAgIHJldHVybiBjYWxsO1xuICAgIH1cbiAgICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxuZnVuY3Rpb24gX3N1cGVyUHJvcEJhc2Uob2JqZWN0LCBwcm9wZXJ0eSkge1xuICAgIHdoaWxlKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpe1xuICAgICAgICBvYmplY3QgPSBfZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTtcbiAgICAgICAgaWYgKG9iamVjdCA9PT0gbnVsbCkgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3Q7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBxdWVzdGlvbk1hcmsgPSBfb2NjYW1MZXhlcnMuc3BlY2lhbFN5bWJvbHMucXVlc3Rpb25NYXJrO1xudmFyIE9wdGlvbmFsUGFydFBhcnQgPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKE5vblRlcm1pbmFsUGFydCkge1xuICAgIF9pbmhlcml0cyhPcHRpb25hbFBhcnRQYXJ0LCBOb25UZXJtaW5hbFBhcnQpO1xuICAgIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoT3B0aW9uYWxQYXJ0UGFydCk7XG4gICAgZnVuY3Rpb24gT3B0aW9uYWxQYXJ0UGFydChwYXJ0KSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPcHRpb25hbFBhcnRQYXJ0KTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICB2YXIgdHlwZSA9IF9wYXJ0VHlwZXMuT3B0aW9uYWxQYXJ0UGFydFR5cGU7IC8vL1xuICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHR5cGUpO1xuICAgICAgICBfdGhpcy5wYXJ0ID0gcGFydDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoT3B0aW9uYWxQYXJ0UGFydCwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0UGFydFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBhcnQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFydDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcInBhcnNlXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIHZhciBwYXJzZWQ7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnQgPSB0aGlzLmdldFBhcnQoKSwgcGFydE5vZGVzID0gW10sIHNhdmVkSW5kZXggPSBzdGF0ZS5nZXRTYXZlZEluZGV4KCk7XG4gICAgICAgICAgICAgICAgcGFyc2VkID0gcGFyc2VQYXJ0KHBhcnQsIHBhcnROb2Rlcywgc3RhdGUsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICBpZiAocGFyc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICgwLCBfYXJyYXkpLnB1c2gobm9kZXMsIHBhcnROb2Rlcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghcGFyc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLmJhY2t0cmFjayhzYXZlZEluZGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImFzU3RyaW5nXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gYXNTdHJpbmcoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG9wZXJhdG9yU3RyaW5nID0gcXVlc3Rpb25NYXJrLCBwYXJ0U3RyaW5nID0gdGhpcy5wYXJ0LmFzU3RyaW5nKCksIHN0cmluZyA9IFwiXCIuY29uY2F0KHBhcnRTdHJpbmcpLmNvbmNhdChvcGVyYXRvclN0cmluZyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0cmluZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImNsb25lXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9nZXQoX2dldFByb3RvdHlwZU9mKE9wdGlvbmFsUGFydFBhcnQucHJvdG90eXBlKSwgXCJjbG9uZVwiLCB0aGlzKS5jYWxsKHRoaXMsIE9wdGlvbmFsUGFydFBhcnQsIHRoaXMucGFydCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdKTtcbiAgICByZXR1cm4gT3B0aW9uYWxQYXJ0UGFydDtcbn0oX25vblRlcm1pbmFsLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gT3B0aW9uYWxQYXJ0UGFydDtcbmZ1bmN0aW9uIHBhcnNlUGFydChwYXJ0LCBub2Rlcywgc3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIHBhcnNlZDtcbiAgICBpZiAoY2FsbGJhY2sgIT09IG51bGwpIHtcbiAgICAgICAgcGFyc2VkID0gY2FsbGJhY2soKTtcbiAgICAgICAgaWYgKCFwYXJzZWQpIHtcbiAgICAgICAgICAgIHBhcnNlZCA9IHBhcnQucGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBwYXJ0LnBhcnNlKG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spO1xuICAgICAgICBwYXJzZWQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gcGFyc2VkO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMM055WXk5d1lYSjBMMjV2YmxSbGNtMXBibUZzTDI5d2RHbHZibUZzVUdGeWRDNXFjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dWFXMXdiM0owSUhzZ2MzQmxZMmxoYkZONWJXSnZiSE1nZlNCbWNtOXRJRndpYjJOallXMHRiR1Y0WlhKelhDSTdYRzVjYm1sdGNHOXlkQ0JPYjI1VVpYSnRhVzVoYkZCaGNuUWdabkp2YlNCY0lpNHVMeTR1TDNCaGNuUXZibTl1VkdWeWJXbHVZV3hjSWp0Y2JseHVhVzF3YjNKMElIc2djSFZ6YUNCOUlHWnliMjBnWENJdUxpOHVMaTkxZEdsc2FYUnBaWE12WVhKeVlYbGNJanRjYm1sdGNHOXlkQ0I3SUU5d2RHbHZibUZzVUdGeWRGQmhjblJVZVhCbElIMGdabkp2YlNCY0lpNHVMeTR1TDNCaGNuUlVlWEJsYzF3aU8xeHVYRzVqYjI1emRDQjdJSEYxWlhOMGFXOXVUV0Z5YXlCOUlEMGdjM0JsWTJsaGJGTjViV0p2YkhNN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHTnNZWE56SUU5d2RHbHZibUZzVUdGeWRGQmhjblFnWlhoMFpXNWtjeUJPYjI1VVpYSnRhVzVoYkZCaGNuUWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaHdZWEowS1NCN1hHNGdJQ0FnWTI5dWMzUWdkSGx3WlNBOUlFOXdkR2x2Ym1Gc1VHRnlkRkJoY25SVWVYQmxPeUF2THk5Y2JseHVJQ0FnSUhOMWNHVnlLSFI1Y0dVcE8xeHVYRzRnSUNBZ2RHaHBjeTV3WVhKMElEMGdjR0Z5ZER0Y2JpQWdmVnh1WEc0Z0lHZGxkRkJoY25Rb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR0Z5ZER0Y2JpQWdmVnh1WEc0Z0lIQmhjbk5sS0c1dlpHVnpMQ0J6ZEdGMFpTd2dZMkZzYkdKaFkyc3BJSHRjYmlBZ0lDQnNaWFFnY0dGeWMyVmtPMXh1WEc0Z0lDQWdZMjl1YzNRZ2NHRnlkQ0E5SUhSb2FYTXVaMlYwVUdGeWRDZ3BMRnh1SUNBZ0lDQWdJQ0FnSUhCaGNuUk9iMlJsY3lBOUlGdGRMRnh1SUNBZ0lDQWdJQ0FnSUhOaGRtVmtTVzVrWlhnZ1BTQnpkR0YwWlM1blpYUlRZWFpsWkVsdVpHVjRLQ2s3WEc1Y2JpQWdJQ0J3WVhKelpXUWdQU0J3WVhKelpWQmhjblFvY0dGeWRDd2djR0Z5ZEU1dlpHVnpMQ0J6ZEdGMFpTd2dZMkZzYkdKaFkyc3BPMXh1WEc0Z0lDQWdhV1lnS0hCaGNuTmxaQ2tnZTF4dUlDQWdJQ0FnY0hWemFDaHViMlJsY3l3Z2NHRnlkRTV2WkdWektUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9JWEJoY25ObFpDa2dlMXh1SUNBZ0lDQWdjM1JoZEdVdVltRmphM1J5WVdOcktITmhkbVZrU1c1a1pYZ3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCd1lYSnpaV1E3WEc0Z0lIMWNibHh1SUNCaGMxTjBjbWx1WnlncElIdGNiaUFnSUNCamIyNXpkQ0J2Y0dWeVlYUnZjbE4wY21sdVp5QTlJSEYxWlhOMGFXOXVUV0Z5YXl3Z0lDOHZMMXh1SUNBZ0lDQWdJQ0FnSUhCaGNuUlRkSEpwYm1jZ1BTQjBhR2x6TG5CaGNuUXVZWE5UZEhKcGJtY29LU3hjYmlBZ0lDQWdJQ0FnSUNCemRISnBibWNnUFNCZ0pIdHdZWEowVTNSeWFXNW5mU1I3YjNCbGNtRjBiM0pUZEhKcGJtZDlZRHRjYmx4dUlDQWdJSEpsZEhWeWJpQnpkSEpwYm1jN1hHNGdJSDFjYmx4dUlDQmpiRzl1WlNncElIc2djbVYwZFhKdUlITjFjR1Z5TG1Oc2IyNWxLRTl3ZEdsdmJtRnNVR0Z5ZEZCaGNuUXNJSFJvYVhNdWNHRnlkQ2s3SUgxY2JuMWNibHh1Wm5WdVkzUnBiMjRnY0dGeWMyVlFZWEowS0hCaGNuUXNJRzV2WkdWekxDQnpkR0YwWlN3Z1kyRnNiR0poWTJzcElIdGNiaUFnYkdWMElIQmhjbk5sWkR0Y2JseHVJQ0JwWmlBb1kyRnNiR0poWTJzZ0lUMDlJRzUxYkd3cElIdGNiaUFnSUNCd1lYSnpaV1FnUFNCallXeHNZbUZqYXlncE8xeHVYRzRnSUNBZ2FXWWdLQ0Z3WVhKelpXUXBJSHRjYmlBZ0lDQWdJSEJoY25ObFpDQTlJSEJoY25RdWNHRnljMlVvYm05a1pYTXNJSE4wWVhSbExDQmpZV3hzWW1GamF5azdYRzRnSUNBZ2ZWeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lIQmhjblF1Y0dGeWMyVW9ibTlrWlhNc0lITjBZWFJsTENCallXeHNZbUZqYXlrN1hHNWNiaUFnSUNCd1lYSnpaV1FnUFNCMGNuVmxPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJSEJoY25ObFpEdGNibjFjYmlKZExDSnVZVzFsY3lJNld5SnhkV1Z6ZEdsdmJrMWhjbXNpTENKemNHVmphV0ZzVTNsdFltOXNjeUlzSWs5d2RHbHZibUZzVUdGeWRGQmhjblFpTENKd1lYSjBJaXdpZEhsd1pTSXNJazl3ZEdsdmJtRnNVR0Z5ZEZCaGNuUlVlWEJsSWl3aVoyVjBVR0Z5ZENJc0luQmhjbk5sSWl3aWJtOWtaWE1pTENKemRHRjBaU0lzSW1OaGJHeGlZV05ySWl3aWNHRnljMlZrSWl3aWNHRnlkRTV2WkdWeklpd2ljMkYyWldSSmJtUmxlQ0lzSW1kbGRGTmhkbVZrU1c1a1pYZ2lMQ0p3WVhKelpWQmhjblFpTENKd2RYTm9JaXdpWW1GamEzUnlZV05ySWl3aVlYTlRkSEpwYm1jaUxDSnZjR1Z5WVhSdmNsTjBjbWx1WnlJc0luQmhjblJUZEhKcGJtY2lMQ0p6ZEhKcGJtY2lMQ0pqYkc5dVpTSXNJazV2YmxSbGNtMXBibUZzVUdGeWRDSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNRMEZCV1N4WFFVRkJMRU5CUVVNN096dEZRVUZpTzNkQ1FVRkJPMEZCUlN0Q0xFZEJRV01zUTBGQlpDeFpRVUZqTzBGQlJXcENMRWRCUVhkQ0xFTkJRWGhDTEZsQlFYZENPMEZCUlM5Q0xFZEJRWFZDTEVOQlFYWkNMRTFCUVhWQ08wRkJRMUFzUjBGQmFVSXNRMEZCYWtJc1ZVRkJhVUk3T3pzN096czdPenM3T3pzN096czRSRUZRZEVRN2MwTkJRVUU3TmtSQlFVRTdhVVZCUVVFN096czdkMFZCUVVFN1owVkJRVUU3T3pzN096QkNRVUZCT3pzN096czdPenM3TzFOQlFVRTdPenM3T3pzN1MwRkJRVHM3T3pzN096czdPenM3T3p0TlFVRkJPM2xFUVVGQk96czdPenM3T3pzN096czdPenM3ZFVKQlFVRTdPMHRCUVVFN096czdPM2REUVVGQk96czdPenM3TWtKQlFVRTdPenM3T3pzN08zRkdRVUZCT3pzN096czdPenM3T3pzN2JVVkJRVUU3TzJsRVFVRkJPenM3T3p0QlFWTkJMRWRCUVVzc1EwRkJSMEVzV1VGQldTeEhRVUZMUXl4WlFVRmpMR2RDUVVFdlFrUXNXVUZCV1R0QlFVVk1MRWRCUVVzc1EwRkJRMFVzWjBKQlFXZENMR2xDUVVGMFFpeFJRVUZSTzJkRVFWaDJRanM3WVVGWGNVSkJMR2RDUVVGblFpeERRVU4yUWtNc1NVRkJTVHNyUTBGYWJFSTdPMUZCWVVrc1IwRkJTeXhEUVVGRFF5eEpRVUZKTEVkQlFVZERMRlZCUVc5Q0xIVkNRVUZGTEVWQlFVY3NRVUZCU0N4RFFVRkhPMnREUVVWb1EwUXNTVUZCU1N4RFEyWmtMRU5FWldkQ08yTkJSVkJFTEVsQlFVa3NSMEZCUjBFc1NVRkJTU3hEUVVGRE96czdPenRaUVVkdVFrY3NSMEZCVHl4RlFVRlFRU3hEUVVGUE8yMUNRVUZRUVN4UlFVRlJMRU5CUVZKQkxFOUJRVThzUjBGQlJ5eERRVUZETzJkQ1FVTlVMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU5JTEVsQlFVazdXVUZEYkVJc1EwRkJRenM3TzFsQlJVUkpMRWRCUVVzc1JVRkJURUVzUTBGQlN6dHRRa0ZCVEVFc1VVRkJVU3hEUVVGU1FTeExRVUZMTEVOQlFVTkRMRXRCUVVzc1JVRkJSVU1zUzBGQlN5eEZRVUZGUXl4UlFVRlJMRVZCUVVVc1EwRkJRenRuUWtGRE4wSXNSMEZCUnl4RFFVRkRReXhOUVVGTk8yZENRVVZXTEVkQlFVc3NRMEZCUTFJc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlEwY3NUMEZCVHl4SlFVTnVRazBzVTBGQlV5eEhRVUZITEVOQlFVTXNRMEZCUXl4RlFVTmtReXhWUVVGVkxFZEJRVWRLTEV0QlFVc3NRMEZCUTBzc1lVRkJZVHRuUWtGRmRFTklMRTFCUVUwc1IwRkJSMGtzVTBGQlV5eERRVUZEV2l4SlFVRkpMRVZCUVVWVExGTkJRVk1zUlVGQlJVZ3NTMEZCU3l4RlFVRkZReXhSUVVGUkxFTkJRVU1zUTBGQlF6dG5Ra0ZGY2tRc1JVRkJSU3hGUVVGRlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0M1FrRkRXRXNzVFVGQlNTeFBRVUZEVWl4TFFVRkxMRVZCUVVWSkxGTkJRVk1zUTBGQlF5eERRVUZETzJkQ1FVTjZRaXhEUVVGRE8yZENRVVZFTEVWQlFVVXNSMEZCUjBRc1RVRkJUU3hGUVVGRkxFTkJRVU03YjBKQlExcEdMRXRCUVVzc1EwRkJRMUVzVTBGQlV5eERRVUZEU2l4VlFVRlZMRU5CUVVNc1EwRkJRenRuUWtGRE9VSXNRMEZCUXp0blFrRkZSQ3hOUVVGTkxFTkJRVU5HTEUxQlFVMDdXVUZEWml4RFFVRkRPenM3V1VGRlJFOHNSMEZCVVN4RlFVRlNRU3hEUVVGUk8yMUNRVUZTUVN4UlFVRlJMRU5CUVZKQkxGRkJRVkVzUjBGQlJ5eERRVUZETzJkQ1FVTldMRWRCUVVzc1EwRkJRME1zWTBGQll5eEhRVUZIYmtJc1dVRkJXU3hGUVVNM1FtOUNMRlZCUVZVc1IwRkJSeXhKUVVGSkxFTkJRVU5xUWl4SlFVRkpMRU5CUVVObExGRkJRVkVzU1VGREwwSkhMRTFCUVUwc1IwRkJTU3hEUVVGQkxFVkJRV1ZHTEUxQlFXTXNRMEZCTTBKRExGVkJRVlVzUlVGQmEwSXNUVUZCUVN4RFFVRm1SQ3hqUVVGak8yZENRVVUzUXl4TlFVRk5MRU5CUVVORkxFMUJRVTA3V1VGRFppeERRVUZET3pzN1dVRkZSRU1zUjBGQlN5eEZRVUZNUVN4RFFVRkxPMjFDUVVGTVFTeFJRVUZSTEVOQlFWSkJMRXRCUVVzc1IwRkJSeXhEUVVGRE8yZENRVUZETEUxQlFVMHNjMEpCZWtOSGNFSXNaMEpCUVdkQ0xHRkJlVU5hYjBJc1EwRkJTeXhSUVVGWUxFbEJRVXNzWVVGQlQzQkNMR2RDUVVGblFpeEZRVUZGTEVsQlFVa3NRMEZCUTBNc1NVRkJTVHRaUVVGSExFTkJRVU03TzAxQmNFUTVSRHM3UlVGWE9FTnZRaXhaUVVGbE8ydENRVUY0UTNKQ0xHZENRVUZuUWl4QlFWaHlRenRUUVhWRVUyRXNVMEZCVXl4RFFVRkRXaXhKUVVGSkxFVkJRVVZMTEV0QlFVc3NSVUZCUlVNc1MwRkJTeXhGUVVGRlF5eFJRVUZSTEVWQlFVVXNRMEZCUXp0SlFVTm9SQ3hIUVVGSExFTkJRVU5ETEUxQlFVMDdTVUZGVml4RlFVRkZMRVZCUVVWRUxGRkJRVkVzUzBGQlN5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTjBRa01zVFVGQlRTeEhRVUZIUkN4UlFVRlJMRVZCUVVVc1EwRkJRenRSUVVWd1FpeEZRVUZGTEVkQlFVZERMRTFCUVUwc1JVRkJSU3hEUVVGRE8xbEJRMXBCTEUxQlFVMHNSMEZCUjFJc1NVRkJTU3hEUVVGRFNTeExRVUZMTEVOQlFVTkRMRXRCUVVzc1JVRkJSVU1zUzBGQlN5eEZRVUZGUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRSUVVNNVF5eERRVUZETzBsQlEwZ3NRMEZCUXl4TlFVRk5MRU5CUVVNN1VVRkRUbEFzU1VGQlNTeERRVUZEU1N4TFFVRkxMRU5CUVVORExFdEJRVXNzUlVGQlJVTXNTMEZCU3l4RlFVRkZReXhSUVVGUkxFTkJRVU1zUTBGQlF6dFJRVVZ1UTBNc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF6dEpRVU5vUWl4RFFVRkRPMGxCUlVRc1RVRkJUU3hEUVVGRFFTeE5RVUZOTzBGQlEyWXNRMEZCUXlKOSIsICJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfbm9uVGVybWluYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9wYXJ0L25vblRlcm1pbmFsXCIpKTtcbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICAgIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gc2VsZjtcbn1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspe1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBSZWZsZWN0LmdldCkge1xuICAgICAgICBfZ2V0ID0gUmVmbGVjdC5nZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgX2dldCA9IGZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgIHZhciBiYXNlID0gX3N1cGVyUHJvcEJhc2UodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICBpZiAoIWJhc2UpIHJldHVybjtcbiAgICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihiYXNlLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICBpZiAoZGVzYy5nZXQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGVzYy5nZXQuY2FsbChyZWNlaXZlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5mdW5jdGlvbiBfc3VwZXJQcm9wQmFzZShvYmplY3QsIHByb3BlcnR5KSB7XG4gICAgd2hpbGUoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSl7XG4gICAgICAgIG9iamVjdCA9IF9nZXRQcm90b3R5cGVPZihvYmplY3QpO1xuICAgICAgICBpZiAob2JqZWN0ID09PSBudWxsKSBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbn1cbnZhciBfdHlwZW9mID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgXCJAc3djL2hlbHBlcnMgLSB0eXBlb2ZcIjtcbiAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG4gICAgdHJ5IHtcbiAgICAgICAgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbigpIHt9KSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7XG4gICAgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkge1xuICAgICAgICB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDtcbiAgICAgICAgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHtcbiAgICAgICAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7XG4gICAgICAgICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTtcbiAgICB9O1xufVxudmFyIENvbGxlY3Rpb25PZlBhcnRzUGFydCA9IC8qI19fUFVSRV9fKi8gZnVuY3Rpb24oTm9uVGVybWluYWxQYXJ0KSB7XG4gICAgX2luaGVyaXRzKENvbGxlY3Rpb25PZlBhcnRzUGFydCwgTm9uVGVybWluYWxQYXJ0KTtcbiAgICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENvbGxlY3Rpb25PZlBhcnRzUGFydCk7XG4gICAgZnVuY3Rpb24gQ29sbGVjdGlvbk9mUGFydHNQYXJ0KHR5cGUsIHBhcnQpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbGxlY3Rpb25PZlBhcnRzUGFydCk7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0eXBlKTtcbiAgICAgICAgX3RoaXMucGFydCA9IHBhcnQ7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgX2NyZWF0ZUNsYXNzKENvbGxlY3Rpb25PZlBhcnRzUGFydCwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0UGFydFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBhcnQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFydDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImFzU3RyaW5nXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gYXNTdHJpbmcob3BlcmF0b3JTdHJpbmcpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFydFN0cmluZyA9IHRoaXMucGFydC5hc1N0cmluZygpLCBzdHJpbmcgPSBcIlwiLmNvbmNhdChwYXJ0U3RyaW5nKS5jb25jYXQob3BlcmF0b3JTdHJpbmcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjbG9uZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lKFBhcnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2dldChfZ2V0UHJvdG90eXBlT2YoQ29sbGVjdGlvbk9mUGFydHNQYXJ0LnByb3RvdHlwZSksIFwiY2xvbmVcIiwgdGhpcykuY2FsbCh0aGlzLCBQYXJ0LCB0aGlzLnBhcnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIENvbGxlY3Rpb25PZlBhcnRzUGFydDtcbn0oX25vblRlcm1pbmFsLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gQ29sbGVjdGlvbk9mUGFydHNQYXJ0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMM055WXk5d1lYSjBMMjV2YmxSbGNtMXBibUZzTDJOdmJHeGxZM1JwYjI1UFpsQmhjblJ6TG1weklsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzVwYlhCdmNuUWdUbTl1VkdWeWJXbHVZV3hRWVhKMElHWnliMjBnWENJdUxpOHVMaTl3WVhKMEwyNXZibFJsY20xcGJtRnNYQ0k3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdOc1lYTnpJRU52Ykd4bFkzUnBiMjVQWmxCaGNuUnpVR0Z5ZENCbGVIUmxibVJ6SUU1dmJsUmxjbTFwYm1Gc1VHRnlkQ0I3WEc0Z0lHTnZibk4wY25WamRHOXlLSFI1Y0dVc0lIQmhjblFwSUh0Y2JpQWdJQ0J6ZFhCbGNpaDBlWEJsS1R0Y2JseHVJQ0FnSUhSb2FYTXVjR0Z5ZENBOUlIQmhjblE3WEc0Z0lIMWNibHh1SUNCblpYUlFZWEowS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhjblE3WEc0Z0lIMWNiaUFnWEc0Z0lHRnpVM1J5YVc1bktHOXdaWEpoZEc5eVUzUnlhVzVuS1NCN1hHNGdJQ0FnWTI5dWMzUWdjR0Z5ZEZOMGNtbHVaeUE5SUhSb2FYTXVjR0Z5ZEM1aGMxTjBjbWx1WnlncExGeHVJQ0FnSUNBZ0lDQWdJSE4wY21sdVp5QTlJR0FrZTNCaGNuUlRkSEpwYm1kOUpIdHZjR1Z5WVhSdmNsTjBjbWx1WjMxZ08xeHVYRzRnSUNBZ2NtVjBkWEp1SUhOMGNtbHVaenRjYmlBZ2ZWeHVYRzRnSUdOc2IyNWxLRkJoY25RcElIc2djbVYwZFhKdUlITjFjR1Z5TG1Oc2IyNWxLRkJoY25Rc0lIUm9hWE11Y0dGeWRDazdJSDFjYm4xY2JpSmRMQ0p1WVcxbGN5STZXeUpEYjJ4c1pXTjBhVzl1VDJaUVlYSjBjMUJoY25RaUxDSjBlWEJsSWl3aWNHRnlkQ0lzSW1kbGRGQmhjblFpTENKaGMxTjBjbWx1WnlJc0ltOXdaWEpoZEc5eVUzUnlhVzVuSWl3aWNHRnlkRk4wY21sdVp5SXNJbk4wY21sdVp5SXNJbU5zYjI1bElpd2lVR0Z5ZENJc0lrNXZibFJsY20xcGJtRnNVR0Z5ZENKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1EwRkJXU3hYUVVGQkxFTkJRVU03T3p0RlFVRmlPM2RDUVVGQk8wRkJSVFJDTEVkQlFYZENMRU5CUVhoQ0xGbEJRWGRDT3pzN096czdPenM3T3pzN096czdPRVJCUm5CRU8zTkRRVUZCT3paRVFVRkJPMmxGUVVGQk96czdPM2RGUVVGQk8yZEZRVUZCT3pzN096c3dRa0ZCUVRzN096czdPenM3T3p0VFFVRkJPenM3T3pzN08wdEJRVUU3T3pzN096czdPenM3T3pzN1RVRkJRVHQ1UkVGQlFUczdPenM3T3pzN096czdPenM3TzNWQ1FVRkJPenRMUVVGQk96czdPenQzUTBGQlFUczdPenM3T3pKQ1FVRkJPenM3T3pzN096dHhSa0ZCUVRzN096czdPenM3T3pzN08yMUZRVUZCT3p0cFJFRkJRVHM3T3pzN1FVRkpaU3hIUVVGTExFTkJRVU5CTEhGQ1FVRnhRaXhwUWtGQk0wSXNVVUZCVVR0eFJFRktka0k3TzJGQlNYRkNRU3h4UWtGQmNVSXNRMEZETlVKRExFbEJRVWtzUlVGQlJVTXNTVUZCU1R0dlJFRk1lRUk3TzJ0RFFVMVZSQ3hKUVVGSkxFTkRUbVFzUTBSTlowSTdZMEZGVUVNc1NVRkJTU3hIUVVGSFFTeEpRVUZKTEVOQlFVTTdPenM3TzFsQlIyNUNReXhIUVVGUExFVkJRVkJCTEVOQlFVODdiVUpCUVZCQkxGRkJRVkVzUTBGQlVrRXNUMEZCVHl4SFFVRkhMRU5CUVVNN1owSkJRMVFzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUTBRc1NVRkJTVHRaUVVOc1FpeERRVUZET3pzN1dVRkZSRVVzUjBGQlVTeEZRVUZTUVN4RFFVRlJPMjFDUVVGU1FTeFJRVUZSTEVOQlFWSkJMRkZCUVZFc1EwRkJRME1zWTBGQll5eEZRVUZGTEVOQlFVTTdaMEpCUTNoQ0xFZEJRVXNzUTBGQlEwTXNWVUZCVlN4SFFVRkhMRWxCUVVrc1EwRkJRMG9zU1VGQlNTeERRVUZEUlN4UlFVRlJMRWxCUXk5Q1J5eE5RVUZOTEVkQlFVa3NRMEZCUVN4RlFVRmxSaXhOUVVGakxFTkJRVE5DUXl4VlFVRlZMRVZCUVd0Q0xFMUJRVUVzUTBGQlprUXNZMEZCWXp0blFrRkZOME1zVFVGQlRTeERRVUZEUlN4TlFVRk5PMWxCUTJZc1EwRkJRenM3TzFsQlJVUkRMRWRCUVVzc1JVRkJURUVzUTBGQlN6dHRRa0ZCVEVFc1VVRkJVU3hEUVVGU1FTeExRVUZMTEVOQlFVTkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8yZENRVUZETEUxQlFVMHNjMEpCYkVKRVZDeHhRa0ZCY1VJc1lVRnJRbUpSTEVOQlFVc3NVVUZCV0N4SlFVRkxMR0ZCUVU5RExFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTlFMRWxCUVVrN1dVRkJSeXhEUVVGRE96dE5RWFJDZEVRN08wVkJTVzFFVVN4WlFVRmxPMnRDUVVFM1ExWXNjVUpCUVhGQ0xFRkJTakZESW4wPSIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgc3BlY2lhbFN5bWJvbHMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBDb2xsZWN0aW9uT2ZQYXJ0c1BhcnQgZnJvbSBcIi4vY29sbGVjdGlvbk9mUGFydHNcIjtcblxuaW1wb3J0IHsgcHVzaCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvYXJyYXlcIjtcbmltcG9ydCB7IE9uZU9yTW9yZVBhcnRzUGFydFR5cGUgfSBmcm9tIFwiLi4vLi4vcGFydFR5cGVzXCI7XG5cbmNvbnN0IHsgcGx1cyB9ID0gc3BlY2lhbFN5bWJvbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9uZU9yTW9yZVBhcnRzUGFydCBleHRlbmRzIENvbGxlY3Rpb25PZlBhcnRzUGFydCB7XG4gIGNvbnN0cnVjdG9yKHBhcnQpIHtcbiAgICBjb25zdCB0eXBlID0gT25lT3JNb3JlUGFydHNQYXJ0VHlwZTsgLy8vXG5cbiAgICBzdXBlcih0eXBlLCBwYXJ0KTtcbiAgfVxuXG4gIHBhcnNlKG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICBsZXQgcGFyc2VkO1xuXG4gICAgY29uc3QgcGFydCA9IHRoaXMuZ2V0UGFydCgpLFxuICAgICAgICAgIHBhcnROb2RlcyA9IFtdLFxuICAgICAgICAgIHNhdmVkSW5kZXggPSBzdGF0ZS5nZXRTYXZlZEluZGV4KCk7XG5cbiAgICBwYXJzZWQgPSBwYXJzZVBhcnQocGFydCwgcGFydE5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spO1xuXG4gICAgaWYgKHBhcnNlZCkge1xuICAgICAgcHVzaChub2RlcywgcGFydE5vZGVzKTtcbiAgICB9XG5cbiAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgc3RhdGUuYmFja3RyYWNrKHNhdmVkSW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJzZWQ7XG4gIH1cblxuICBhc1N0cmluZygpIHtcbiAgICBjb25zdCBvcGVyYXRvclN0cmluZyA9IHBsdXMsICAvLy9cbiAgICAgICAgICBzdHJpbmcgPSBzdXBlci5hc1N0cmluZyhvcGVyYXRvclN0cmluZyk7XG5cbiAgICByZXR1cm4gc3RyaW5nO1xuICB9XG5cbiAgY2xvbmUoKSB7IHJldHVybiBzdXBlci5jbG9uZShPbmVPck1vcmVQYXJ0c1BhcnQpOyB9XG59XG5cbmZ1bmN0aW9uIHBhcnNlUGFydChwYXJ0LCBub2Rlcywgc3RhdGUsIGNhbGxiYWNrKSB7XG4gIGxldCBwYXJzZWQ7XG5cbiAgaWYgKGNhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgcGFyc2VkID0gcGFydC5wYXJzZShub2Rlcywgc3RhdGUsICgpID0+IHtcbiAgICAgIGxldCBwYXJzZWQgPSBjYWxsYmFjaygpO1xuXG4gICAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgICBwYXJzZWQgPSBwYXJzZVBhcnQocGFydCwgbm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwYXJzZWQ7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgcGFyc2VkID0gcGFydC5wYXJzZShub2Rlcywgc3RhdGUsIGNhbGxiYWNrKTtcblxuICAgIGlmIChwYXJzZWQpIHtcbiAgICAgIHBhcnNlUGFydChwYXJ0LCBub2Rlcywgc3RhdGUsIGNhbGxiYWNrKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJzZWQ7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNwZWNpYWxTeW1ib2xzIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xuXG5pbXBvcnQgQ29sbGVjdGlvbk9mUGFydHNQYXJ0IGZyb20gXCIuL2NvbGxlY3Rpb25PZlBhcnRzXCI7XG5cbmltcG9ydCB7IHB1c2ggfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2FycmF5XCI7XG5pbXBvcnQgeyBaZXJvT3JNb3JlUGFydHNQYXJ0VHlwZSB9IGZyb20gXCIuLi8uLi9wYXJ0VHlwZXNcIjtcblxuY29uc3QgeyBhc3RlcmlzayB9ID0gc3BlY2lhbFN5bWJvbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFplcm9Pck1vcmVQYXJ0c1BhcnQgZXh0ZW5kcyBDb2xsZWN0aW9uT2ZQYXJ0c1BhcnQge1xuICBjb25zdHJ1Y3RvcihwYXJ0KSB7XG4gICAgY29uc3QgdHlwZSA9IFplcm9Pck1vcmVQYXJ0c1BhcnRUeXBlOyAvLy9cblxuICAgIHN1cGVyKHR5cGUsIHBhcnQpO1xuICB9XG5cbiAgcGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjaykge1xuICAgIGxldCBwYXJzZWQ7XG5cbiAgICBjb25zdCBwYXJ0ID0gdGhpcy5nZXRQYXJ0KCksXG4gICAgICAgICAgcGFydE5vZGVzID0gW10sXG4gICAgICAgICAgc2F2ZWRJbmRleCA9IHN0YXRlLmdldFNhdmVkSW5kZXgoKTtcblxuICAgIHBhcnNlZCA9IHBhcnNlUGFydChwYXJ0LCBwYXJ0Tm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG5cbiAgICBpZiAocGFyc2VkKSB7XG4gICAgICBwdXNoKG5vZGVzLCBwYXJ0Tm9kZXMpO1xuICAgIH1cblxuICAgIGlmICghcGFyc2VkKSB7XG4gICAgICBzdGF0ZS5iYWNrdHJhY2soc2F2ZWRJbmRleCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcnNlZDtcbiAgfVxuXG4gIGFzU3RyaW5nKCkge1xuICAgIGNvbnN0IG9wZXJhdG9yU3RyaW5nID0gYXN0ZXJpc2ssICAvLy9cbiAgICAgICAgICBzdHJpbmcgPSBzdXBlci5hc1N0cmluZyhvcGVyYXRvclN0cmluZyk7XG5cbiAgICByZXR1cm4gc3RyaW5nO1xuICB9XG5cbiAgY2xvbmUoKSB7IHJldHVybiBzdXBlci5jbG9uZShaZXJvT3JNb3JlUGFydHNQYXJ0KTsgfVxufVxuXG5mdW5jdGlvbiBwYXJzZVBhcnQocGFydCwgbm9kZXMsIHN0YXRlLCBjYWxsYmFjaykge1xuICBsZXQgcGFyc2VkO1xuXG4gIGlmIChjYWxsYmFjayAhPT0gbnVsbCkge1xuICAgIHBhcnNlZCA9IGNhbGxiYWNrKCk7XG5cbiAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgcGFyc2VkID0gcGFydC5wYXJzZShub2Rlcywgc3RhdGUsICgpID0+IHBhcnNlUGFydChwYXJ0LCBub2Rlcywgc3RhdGUsIGNhbGxiYWNrKSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHBhcnNlZCA9IHBhcnQucGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG5cbiAgICBpZiAocGFyc2VkKSB7XG4gICAgICBwYXJzZVBhcnQocGFydCwgbm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG4gICAgfVxuXG4gICAgcGFyc2VkID0gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZWQ7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGZpcnN0IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9hcnJheVwiO1xuaW1wb3J0IHsgTG9va0FoZWFkTW9kaWZpZXJSdWxlTmFtZSwgUXVhbnRpZmllclJ1bGVOYW1lLCBSdWxlTmFtZVJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNOb2RlQ2hvaWNlTm9kZShub2RlKSB7XG4gIGxldCBub2RlTm9DaG9pY2VOb2RlID0gZmFsc2U7XG5cbiAgY29uc3Qgbm9kZVRlcm1pbmFsTm9kZSA9IG5vZGUuaXNUZXJtaW5hbE5vZGUoKTtcblxuICBpZiAobm9kZVRlcm1pbmFsTm9kZSkge1xuICAgIGNvbnN0IHRlcm1pbmFsTm9kZSA9IG5vZGUsICAvLy9cbiAgICAgICAgICB0ZXJtaW5hbE5vZGVDb250ZW50ID0gdGVybWluYWxOb2RlLmdldENvbnRlbnQoKTtcblxuICAgIG5vZGVOb0Nob2ljZU5vZGUgPSAodGVybWluYWxOb2RlQ29udGVudCA9PT0gXCJ8XCIpO1xuICB9XG5cbiAgcmV0dXJuIG5vZGVOb0Nob2ljZU5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc05vZGVSdWxlTmFtZU5vZGUobm9kZSkge1xuICBsZXQgbm9kZVJ1bGVOYW1lTm9kZSA9IGZhbHNlO1xuXG4gIGNvbnN0IG5vZGVUZXJtaW5hbE5vZGUgPSBub2RlLmlzVGVybWluYWxOb2RlKCksXG4gICAgICAgIG5vZGVOb25UZXJtaW5hbE5vZGUgPSAhbm9kZVRlcm1pbmFsTm9kZTtcblxuICBpZiAobm9kZU5vblRlcm1pbmFsTm9kZSkge1xuICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IG5vZGUsIC8vL1xuICAgICAgICAgIG5vblRlcm1pbmFsTm9kZVJ1bGVOYW1lID0gbm9uVGVybWluYWxOb2RlLmdldFJ1bGVOYW1lKCk7XG5cbiAgICBub2RlUnVsZU5hbWVOb2RlID0gKG5vblRlcm1pbmFsTm9kZVJ1bGVOYW1lID09PSBSdWxlTmFtZVJ1bGVOYW1lKTtcbiAgfVxuXG4gIHJldHVybiBub2RlUnVsZU5hbWVOb2RlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNOb2RlUXVhbnRpZmllck5vZGUobm9kZSkge1xuICBsZXQgbm9kZVF1YW50aWZpZXJOb2RlID0gZmFsc2U7XG5cbiAgY29uc3Qgbm9kZU5vblRlcm1pbmFsTm9kZSA9IG5vZGUuaXNOb25UZXJtaW5hbE5vZGUoKTtcblxuICBpZiAobm9kZU5vblRlcm1pbmFsTm9kZSkge1xuICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IG5vZGUsIC8vL1xuICAgICAgICAgIHJ1bGVOYW1lID0gbm9uVGVybWluYWxOb2RlLmdldFJ1bGVOYW1lKCksXG4gICAgICAgICAgcnVsZU5hbWVRdWFudGlmaWVyUnVsZU5hbWUgPSAocnVsZU5hbWUgPT09IFF1YW50aWZpZXJSdWxlTmFtZSk7XG5cbiAgICBub2RlUXVhbnRpZmllck5vZGUgPSBydWxlTmFtZVF1YW50aWZpZXJSdWxlTmFtZTsgIC8vL1xuICB9XG5cbiAgcmV0dXJuIG5vZGVRdWFudGlmaWVyTm9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTm9kZUxvb2tBaGVhZE1vZGlmaWVyTm9kZShub2RlKSB7XG4gIGxldCBub2RlTG9va0FoZWFkTW9kaWZpZXJOb2RlID0gZmFsc2U7XG5cbiAgY29uc3Qgbm9kZU5vblRlcm1pbmFsTm9kZSA9IG5vZGUuaXNOb25UZXJtaW5hbE5vZGUoKTtcblxuICBpZiAobm9kZU5vblRlcm1pbmFsTm9kZSkge1xuICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IG5vZGUsIC8vL1xuICAgICAgICAgIHJ1bGVOYW1lID0gbm9uVGVybWluYWxOb2RlLmdldFJ1bGVOYW1lKCksXG4gICAgICAgICAgcnVsZU5hbWVMb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lID0gKHJ1bGVOYW1lID09PSBMb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lKTtcblxuICAgIG5vZGVMb29rQWhlYWRNb2RpZmllck5vZGUgPSBydWxlTmFtZUxvb2tBaGVhZE1vZGlmaWVyUnVsZU5hbWU7ICAvLy9cbiAgfVxuXG4gIHJldHVybiBub2RlTG9va0FoZWFkTW9kaWZpZXJOb2RlO1xuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTmFtZUZyb21RdWFudGlmaWVyTm9kZShxdWFudGlmaWVyTm9kZSkge1xuICBsZXQgbm9uVGVybWluYWxOb2RlO1xuXG4gIG5vblRlcm1pbmFsTm9kZSA9IHF1YW50aWZpZXJOb2RlOyAvLy9cblxuICBjb25zdCBjaGlsZE5vZGVzID0gbm9uVGVybWluYWxOb2RlLmdldENoaWxkTm9kZXMoKSxcbiAgICAgICAgZmlyc3RDaGlsZE5vZGUgPSBmaXJzdChjaGlsZE5vZGVzKTtcblxuICBub25UZXJtaW5hbE5vZGUgPSBmaXJzdENoaWxkTm9kZTsgIC8vL1xuXG4gIGNvbnN0IHJ1bGVOYW1lID0gbm9uVGVybWluYWxOb2RlLmdldFJ1bGVOYW1lKCk7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uVGVybWluYWxOb2RlIGZyb20gXCIuLi8uLi9ub2RlL25vblRlcm1pbmFsXCI7XG5pbXBvcnQgT3B0aW9uYWxQYXJ0UGFydCBmcm9tIFwiLi4vLi4vcGFydC9ub25UZXJtaW5hbC9vcHRpb25hbFBhcnRcIjtcbmltcG9ydCBPbmVPck1vcmVQYXJ0c1BhcnQgZnJvbSBcIi4uLy4uL3BhcnQvbm9uVGVybWluYWwvb25lT3JNb3JlUGFydHNcIjtcbmltcG9ydCBaZXJvT3JNb3JlUGFydHNQYXJ0IGZyb20gXCIuLi8uLi9wYXJ0L25vblRlcm1pbmFsL3plcm9Pck1vcmVQYXJ0c1wiO1xuXG5pbXBvcnQgeyBsYXN0IH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9hcnJheVwiO1xuaW1wb3J0IHsgaXNOb2RlUXVhbnRpZmllck5vZGUsIHJ1bGVOYW1lRnJvbVF1YW50aWZpZXJOb2RlIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9ibmZcIjtcbmltcG9ydCB7IE9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lLCBPbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWUsIFplcm9Pck1vcmVRdWFudGlmaWVyUnVsZU5hbWUgfSBmcm9tIFwiLi4vLi4vcnVsZU5hbWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhcnRCTkZOb2RlIGV4dGVuZHMgTm9uVGVybWluYWxOb2RlIHtcbiAgZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCkge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSB0aGlzLmdldENoaWxkTm9kZXMoKSxcbiAgICAgICAgICBub2RlcyA9IGNoaWxkTm9kZXMuc2xpY2UoKSxcbiAgICAgICAgICBwYXJ0ID0gcGFydEZyb21Ob2Rlcyhub2Rlcyk7XG5cbiAgICByZXR1cm4gcGFydDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKHJ1bGVOYW1lLCBjaGlsZE5vZGVzKSB7IHJldHVybiBOb25UZXJtaW5hbE5vZGUuZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhQYXJ0Qk5GTm9kZSwgcnVsZU5hbWUsIGNoaWxkTm9kZXMpOyB9XG59XG5cbmZ1bmN0aW9uIHBhcnRGcm9tTm9kZXMobm9kZXMpIHtcbiAgbGV0IHBhcnQgPSBudWxsO1xuXG4gIGNvbnN0IG5vZGVzTGVuZ3RoID0gbm9kZXMubGVuZ3RoO1xuXG4gIGlmIChub2Rlc0xlbmd0aCA9PT0gMSkge1xuICAgIGNvbnN0IG5vZGUgPSBub2Rlcy5wb3AoKSxcbiAgICAgICAgICBsb29rQWhlYWQgPSBmYWxzZTtcblxuICAgIHBhcnQgPSBub2RlLmdlbmVyYXRlUGFydChsb29rQWhlYWQpO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGxhc3ROb2RlUXVhbnRpZmllck5vZGUgPSBpc0xhc3ROb2RlUXVhbnRpZmllck5vZGUobm9kZXMpO1xuXG4gICAgaWYgKGxhc3ROb2RlUXVhbnRpZmllck5vZGUpIHtcbiAgICAgIGNvbnN0IG5vZGUgPSBub2Rlcy5wb3AoKSxcbiAgICAgICAgICAgIHF1YW50aWZpZXJOb2RlID0gbm9kZTsgIC8vL1xuXG4gICAgICBwYXJ0ID0gcGFydEZyb21Ob2Rlcyhub2Rlcyk7XG5cbiAgICAgIGNvbnN0IHJ1bGVOYW1lID0gcnVsZU5hbWVGcm9tUXVhbnRpZmllck5vZGUocXVhbnRpZmllck5vZGUpLFxuICAgICAgICAgICAgY29sbGVjdGlvbk9mUGFydHNQYXJ0ID0gY29sbGVjdGlvbk9mUGFydHNQYXJ0RnJvbVBhcnRBbmRSdWxlTmFtZShwYXJ0LCBydWxlTmFtZSk7XG5cbiAgICAgIHBhcnQgPSBjb2xsZWN0aW9uT2ZQYXJ0c1BhcnQ7IC8vL1xuICAgIH0gZWxzZSB7XG4gICAgICBub2Rlcy5zaGlmdCgpO1xuXG4gICAgICBwYXJ0ID0gcGFydEZyb21Ob2Rlcyhub2Rlcyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcnQ7XG59XG5cbmZ1bmN0aW9uIGlzTGFzdE5vZGVRdWFudGlmaWVyTm9kZShub2Rlcykge1xuICBjb25zdCBsYXN0Tm9kZSA9IGxhc3Qobm9kZXMpLFxuICAgICAgICBsYXN0Tm9kZVF1YW50aWZpZXJOb2RlID0gaXNOb2RlUXVhbnRpZmllck5vZGUobGFzdE5vZGUpO1xuXG4gIHJldHVybiBsYXN0Tm9kZVF1YW50aWZpZXJOb2RlO1xufVxuXG5mdW5jdGlvbiBjb2xsZWN0aW9uT2ZQYXJ0c1BhcnRGcm9tUGFydEFuZFJ1bGVOYW1lKHBhcnQsIHJ1bGVOYW1lKSB7XG4gIGxldCBjb2xsZWN0aW9uT2ZQYXJ0c1BhcnQ7XG5cbiAgc3dpdGNoIChydWxlTmFtZSkge1xuICAgIGNhc2UgT3B0aW9uYWxRdWFudGlmaWVyUnVsZU5hbWUgOlxuICAgICAgY29uc3Qgb3B0aW9uYWxQYXJ0UGFydCA9IG5ldyBPcHRpb25hbFBhcnRQYXJ0KHBhcnQpO1xuXG4gICAgICBjb2xsZWN0aW9uT2ZQYXJ0c1BhcnQgPSBvcHRpb25hbFBhcnRQYXJ0OyAvLy9cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBPbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWUgOlxuICAgICAgY29uc3Qgb25lT3JNb3JlUGFydHNQYXJ0ID0gbmV3IE9uZU9yTW9yZVBhcnRzUGFydChwYXJ0KTtcblxuICAgICAgY29sbGVjdGlvbk9mUGFydHNQYXJ0ID0gb25lT3JNb3JlUGFydHNQYXJ0OyAvLy9cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBaZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lIDpcbiAgICAgIGNvbnN0IHplcm9Pck1vcmVQYXJ0c1BhcnQgPSBuZXcgWmVyb09yTW9yZVBhcnRzUGFydChwYXJ0KTtcblxuICAgICAgY29sbGVjdGlvbk9mUGFydHNQYXJ0ID0gemVyb09yTW9yZVBhcnRzUGFydDsgIC8vL1xuICAgICAgYnJlYWs7XG4gIH1cblxuICByZXR1cm4gY29sbGVjdGlvbk9mUGFydHNQYXJ0O1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9vY2NhbUxleGVycyA9IHJlcXVpcmUoXCJvY2NhbS1sZXhlcnNcIik7XG52YXIgX25vblRlcm1pbmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vcGFydC9ub25UZXJtaW5hbFwiKSk7XG52YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoXCIuLi8uLi9jb25zdGFudHNcIik7XG52YXIgX3BhcnRUeXBlcyA9IHJlcXVpcmUoXCIuLi8uLi9wYXJ0VHlwZXNcIik7XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgIT09IFwidW5kZWZpbmVkXCIgJiYgUmVmbGVjdC5nZXQpIHtcbiAgICAgICAgX2dldCA9IFJlZmxlY3QuZ2V0O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIF9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICB2YXIgYmFzZSA9IF9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpO1xuICAgICAgICAgICAgaWYgKCFiYXNlKSByZXR1cm47XG4gICAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgaWYgKGRlc2MuZ2V0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRlc2MudmFsdWU7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyIHx8IHRhcmdldCk7XG59XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gICAgfTtcbiAgICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufVxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICAgIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgICAgIHJldHVybiBjYWxsO1xuICAgIH1cbiAgICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxuZnVuY3Rpb24gX3N1cGVyUHJvcEJhc2Uob2JqZWN0LCBwcm9wZXJ0eSkge1xuICAgIHdoaWxlKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpe1xuICAgICAgICBvYmplY3QgPSBfZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTtcbiAgICAgICAgaWYgKG9iamVjdCA9PT0gbnVsbCkgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3Q7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBleGNsYW1hdGlvbk1hcmsgPSBfb2NjYW1MZXhlcnMuc3BlY2lhbFN5bWJvbHMuZXhjbGFtYXRpb25NYXJrO1xudmFyIFJ1bGVOYW1lUGFydCA9IC8qI19fUFVSRV9fKi8gZnVuY3Rpb24oTm9uVGVybWluYWxQYXJ0KSB7XG4gICAgX2luaGVyaXRzKFJ1bGVOYW1lUGFydCwgTm9uVGVybWluYWxQYXJ0KTtcbiAgICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFJ1bGVOYW1lUGFydCk7XG4gICAgZnVuY3Rpb24gUnVsZU5hbWVQYXJ0KHJ1bGVOYW1lKSB7XG4gICAgICAgIHZhciBsb29rQWhlYWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHZvaWQgMCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUnVsZU5hbWVQYXJ0KTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICB2YXIgdHlwZSA9IF9wYXJ0VHlwZXMuUnVsZU5hbWVQYXJ0VHlwZTsgLy8vXG4gICAgICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdHlwZSk7XG4gICAgICAgIF90aGlzLnJ1bGVOYW1lID0gcnVsZU5hbWU7XG4gICAgICAgIF90aGlzLmxvb2tBaGVhZCA9IGxvb2tBaGVhZDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoUnVsZU5hbWVQYXJ0LCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRSdWxlTmFtZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJ1bGVOYW1lKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJ1bGVOYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiaXNMb29rQWhlYWRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpc0xvb2tBaGVhZCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5sb29rQWhlYWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJpc1J1bGVOYW1lUGFydFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGlzUnVsZU5hbWVQYXJ0KCkge1xuICAgICAgICAgICAgICAgIHZhciBydWxlTmFtZVBhcnQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBydWxlTmFtZVBhcnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJzZXRMb29rQWhlYWRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRMb29rQWhlYWQobG9va0FoZWFkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb29rQWhlYWQgPSBsb29rQWhlYWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJmaW5kUnVsZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZpbmRSdWxlKHN0YXRlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJ1bGVNYXAgPSBzdGF0ZS5nZXRSdWxlTWFwKCksIHJ1bGUgPSBydWxlTWFwW3RoaXMucnVsZU5hbWVdIHx8IG51bGw7IC8vL1xuICAgICAgICAgICAgICAgIHJldHVybiBydWxlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwicGFyc2VcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBwYXJzZShub2Rlcywgc3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnNlZDtcbiAgICAgICAgICAgICAgICB2YXIgcnVsZSA9IHRoaXMuZmluZFJ1bGUoc3RhdGUpO1xuICAgICAgICAgICAgICAgIGlmIChydWxlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBydWxlTm9kZSA9IHJ1bGUucGFyc2Uoc3RhdGUsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkID0gcnVsZU5vZGUgIT09IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVzLnB1c2gocnVsZU5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJhc1N0cmluZ1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFzU3RyaW5nKCkge1xuICAgICAgICAgICAgICAgIHZhciBsb29rQWhlYWRTdHJpbmcgPSB0aGlzLmxvb2tBaGVhZCA/IGV4Y2xhbWF0aW9uTWFyayA6IF9jb25zdGFudHMuRU1QVFlfU1RSSU5HLCBzdHJpbmcgPSBcIlwiLmNvbmNhdCh0aGlzLnJ1bGVOYW1lKS5jb25jYXQobG9va0FoZWFkU3RyaW5nKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiY2xvbmVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2dldChfZ2V0UHJvdG90eXBlT2YoUnVsZU5hbWVQYXJ0LnByb3RvdHlwZSksIFwiY2xvbmVcIiwgdGhpcykuY2FsbCh0aGlzLCBSdWxlTmFtZVBhcnQsIHRoaXMucnVsZU5hbWUsIHRoaXMubG9va0FoZWFkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0pO1xuICAgIHJldHVybiBSdWxlTmFtZVBhcnQ7XG59KF9ub25UZXJtaW5hbC5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJ1bGVOYW1lUGFydDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OXdZWEowTDI1dmJsUmxjbTFwYm1Gc0wzSjFiR1ZPWVcxbExtcHpJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWx3aWRYTmxJSE4wY21samRGd2lPMXh1WEc1cGJYQnZjblFnZXlCemNHVmphV0ZzVTNsdFltOXNjeUI5SUdaeWIyMGdYQ0p2WTJOaGJTMXNaWGhsY25OY0lqdGNibHh1YVcxd2IzSjBJRTV2YmxSbGNtMXBibUZzVUdGeWRDQm1jbTl0SUZ3aUxpNHZMaTR2Y0dGeWRDOXViMjVVWlhKdGFXNWhiRndpTzF4dVhHNXBiWEJ2Y25RZ2V5QkZUVkJVV1Y5VFZGSkpUa2NnZlNCbWNtOXRJRndpTGk0dkxpNHZZMjl1YzNSaGJuUnpYQ0k3WEc1cGJYQnZjblFnZXlCU2RXeGxUbUZ0WlZCaGNuUlVlWEJsSUgwZ1puSnZiU0JjSWk0dUx5NHVMM0JoY25SVWVYQmxjMXdpTzF4dVhHNWpiMjV6ZENCN0lHVjRZMnhoYldGMGFXOXVUV0Z5YXlCOUlEMGdjM0JsWTJsaGJGTjViV0p2YkhNN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHTnNZWE56SUZKMWJHVk9ZVzFsVUdGeWRDQmxlSFJsYm1SeklFNXZibFJsY20xcGJtRnNVR0Z5ZENCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0hKMWJHVk9ZVzFsTENCc2IyOXJRV2hsWVdRZ1BTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUdOdmJuTjBJSFI1Y0dVZ1BTQlNkV3hsVG1GdFpWQmhjblJVZVhCbE95QXZMeTljYmx4dUlDQWdJSE4xY0dWeUtIUjVjR1VwTzF4dVhHNGdJQ0FnZEdocGN5NXlkV3hsVG1GdFpTQTlJSEoxYkdWT1lXMWxPMXh1WEc0Z0lDQWdkR2hwY3k1c2IyOXJRV2hsWVdRZ1BTQnNiMjlyUVdobFlXUTdYRzRnSUgxY2JpQWdYRzRnSUdkbGRGSjFiR1ZPWVcxbEtDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkoxYkdWT1lXMWxPMXh1SUNCOVhHNWNiaUFnYVhOTWIyOXJRV2hsWVdRb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXViRzl2YTBGb1pXRmtPMXh1SUNCOVhHNWNiaUFnYVhOU2RXeGxUbUZ0WlZCaGNuUW9LU0I3WEc0Z0lDQWdZMjl1YzNRZ2NuVnNaVTVoYldWUVlYSjBJRDBnZEhKMVpUdGNibHh1SUNBZ0lISmxkSFZ5YmlCeWRXeGxUbUZ0WlZCaGNuUTdYRzRnSUgxY2JseHVJQ0J6WlhSTWIyOXJRV2hsWVdRb2JHOXZhMEZvWldGa0tTQjdYRzRnSUNBZ2RHaHBjeTVzYjI5clFXaGxZV1FnUFNCc2IyOXJRV2hsWVdRN1hHNGdJSDFjYmx4dUlDQm1hVzVrVW5Wc1pTaHpkR0YwWlNrZ2UxeHVJQ0FnSUdOdmJuTjBJSEoxYkdWTllYQWdQU0J6ZEdGMFpTNW5aWFJTZFd4bFRXRndLQ2tzWEc0Z0lDQWdJQ0FnSUNBZ2NuVnNaU0E5SUhKMWJHVk5ZWEJiZEdocGN5NXlkV3hsVG1GdFpWMGdmSHdnYm5Wc2JEc2dJQzh2TDF4dVhHNGdJQ0FnY21WMGRYSnVJSEoxYkdVN1hHNGdJSDFjYmx4dUlDQndZWEp6WlNodWIyUmxjeXdnYzNSaGRHVXNJR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdiR1YwSUhCaGNuTmxaRHRjYmx4dUlDQWdJR052Ym5OMElISjFiR1VnUFNCMGFHbHpMbVpwYm1SU2RXeGxLSE4wWVhSbEtUdGNibHh1SUNBZ0lHbG1JQ2h5ZFd4bElEMDlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQndZWEp6WldRZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdZMjl1YzNRZ2NuVnNaVTV2WkdVZ1BTQnlkV3hsTG5CaGNuTmxLSE4wWVhSbExDQmpZV3hzWW1GamF5azdYRzVjYmlBZ0lDQWdJSEJoY25ObFpDQTlJQ2h5ZFd4bFRtOWtaU0FoUFQwZ2JuVnNiQ2s3WEc1Y2JpQWdJQ0FnSUdsbUlDaHdZWEp6WldRcElIdGNiaUFnSUNBZ0lDQWdibTlrWlhNdWNIVnphQ2h5ZFd4bFRtOWtaU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlIQmhjbk5sWkR0Y2JpQWdmVnh1WEc0Z0lHRnpVM1J5YVc1bktDa2dlMXh1SUNBZ0lHTnZibk4wSUd4dmIydEJhR1ZoWkZOMGNtbHVaeUE5SUhSb2FYTXViRzl2YTBGb1pXRmtJRDljYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVjRZMnhoYldGMGFXOXVUV0Z5YXlBNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVWTlVGUlpYMU5VVWtsT1J5eGNiaUFnSUNBZ0lDQWdJQ0J6ZEhKcGJtY2dQU0JnSkh0MGFHbHpMbkoxYkdWT1lXMWxmU1I3Ykc5dmEwRm9aV0ZrVTNSeWFXNW5mV0E3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdjM1J5YVc1bk8xeHVJQ0I5WEc1Y2JpQWdZMnh2Ym1Vb0tTQjdJSEpsZEhWeWJpQnpkWEJsY2k1amJHOXVaU2hTZFd4bFRtRnRaVkJoY25Rc0lIUm9hWE11Y25Wc1pVNWhiV1VzSUhSb2FYTXViRzl2YTBGb1pXRmtLVHNnZlZ4dWZWeHVJbDBzSW01aGJXVnpJanBiSW1WNFkyeGhiV0YwYVc5dVRXRnlheUlzSW5Od1pXTnBZV3hUZVcxaWIyeHpJaXdpVW5Wc1pVNWhiV1ZRWVhKMElpd2ljblZzWlU1aGJXVWlMQ0pzYjI5clFXaGxZV1FpTENKMGVYQmxJaXdpVW5Wc1pVNWhiV1ZRWVhKMFZIbHdaU0lzSW1kbGRGSjFiR1ZPWVcxbElpd2lhWE5NYjI5clFXaGxZV1FpTENKcGMxSjFiR1ZPWVcxbFVHRnlkQ0lzSW5KMWJHVk9ZVzFsVUdGeWRDSXNJbk5sZEV4dmIydEJhR1ZoWkNJc0ltWnBibVJTZFd4bElpd2ljM1JoZEdVaUxDSnlkV3hsVFdGd0lpd2laMlYwVW5Wc1pVMWhjQ0lzSW5KMWJHVWlMQ0p3WVhKelpTSXNJbTV2WkdWeklpd2lZMkZzYkdKaFkyc2lMQ0p3WVhKelpXUWlMQ0p5ZFd4bFRtOWtaU0lzSW5CMWMyZ2lMQ0poYzFOMGNtbHVaeUlzSW14dmIydEJhR1ZoWkZOMGNtbHVaeUlzSWtWTlVGUlpYMU5VVWtsT1J5SXNJbk4wY21sdVp5SXNJbU5zYjI1bElpd2lUbTl1VkdWeWJXbHVZV3hRWVhKMElsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeERRVUZaTEZkQlFVRXNRMEZCUXpzN08wVkJRV0k3ZDBKQlFVRTdRVUZGSzBJc1IwRkJZeXhEUVVGa0xGbEJRV003UVVGRmFrSXNSMEZCZDBJc1EwRkJlRUlzV1VGQmQwSTdRVUZGZGtJc1IwRkJhVUlzUTBGQmFrSXNWVUZCYVVJN1FVRkRZaXhIUVVGcFFpeERRVUZxUWl4VlFVRnBRanM3T3pzN096czdPenM3T3pzN096aEVRVkJzUkR0elEwRkJRVHMyUkVGQlFUdHBSVUZCUVRzN096dDNSVUZCUVR0blJVRkJRVHM3T3pzN01FSkJRVUU3T3pzN096czdPenM3VTBGQlFUczdPenM3T3p0TFFVRkJPenM3T3pzN096czdPenM3TzAxQlFVRTdlVVJCUVVFN096czdPenM3T3pzN096czdPenQxUWtGQlFUczdTMEZCUVRzN096czdkME5CUVVFN096czdPenN5UWtGQlFUczdPenM3T3pzN2NVWkJRVUU3T3pzN096czdPenM3T3p0dFJVRkJRVHM3YVVSQlFVRTdPenM3TzBGQlUwRXNSMEZCU3l4RFFVRkhRU3hsUVVGbExFZEJRVXRETEZsQlFXTXNaMEpCUVd4RFJDeGxRVUZsTzBGQlJWSXNSMEZCU3l4RFFVRkRSU3haUVVGWkxHbENRVUZzUWl4UlFVRlJPelJEUVZoMlFqczdZVUZYY1VKQkxGbEJRVmtzUTBGRGJrSkRMRkZCUVZFN1dVRkJSVU1zVTBGQlV5eHZSVUZCUnl4TFFVRkxPekpEUVZwNlF6czdVVUZoU1N4SFFVRkxMRU5CUVVORExFbEJRVWtzUjBGQlIwTXNWVUZCWjBJc2JVSkJRVVVzUlVGQlJ5eEJRVUZJTEVOQlFVYzdhME5CUlRWQ1JDeEpRVUZKTEVORFptUXNRMFJsWjBJN1kwRkZVRVlzVVVGQlVTeEhRVUZIUVN4UlFVRlJMRU5CUVVNN1kwRkZjRUpETEZOQlFWTXNSMEZCUjBFc1UwRkJVeXhEUVVGRE96czdPenRaUVVjM1FrY3NSMEZCVnl4RlFVRllRU3hEUVVGWE8yMUNRVUZZUVN4UlFVRlJMRU5CUVZKQkxGZEJRVmNzUjBGQlJ5eERRVUZETzJkQ1FVTmlMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU5LTEZGQlFWRTdXVUZEZEVJc1EwRkJRenM3TzFsQlJVUkxMRWRCUVZjc1JVRkJXRUVzUTBGQlZ6dHRRa0ZCV0VFc1VVRkJVU3hEUVVGU1FTeFhRVUZYTEVkQlFVY3NRMEZCUXp0blFrRkRZaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZEU2l4VFFVRlRPMWxCUTNaQ0xFTkJRVU03T3p0WlFVVkVTeXhIUVVGakxFVkJRV1JCTEVOQlFXTTdiVUpCUVdSQkxGRkJRVkVzUTBGQlVrRXNZMEZCWXl4SFFVRkhMRU5CUVVNN1owSkJRMmhDTEVkQlFVc3NRMEZCUTBNc1dVRkJXU3hIUVVGSExFbEJRVWs3WjBKQlJYcENMRTFCUVUwc1EwRkJRMEVzV1VGQldUdFpRVU55UWl4RFFVRkRPenM3V1VGRlJFTXNSMEZCV1N4RlFVRmFRU3hEUVVGWk8yMUNRVUZhUVN4UlFVRlJMRU5CUVZKQkxGbEJRVmtzUTBGQlExQXNVMEZCVXl4RlFVRkZMRU5CUVVNN1owSkJRM1pDTEVsQlFVa3NRMEZCUTBFc1UwRkJVeXhIUVVGSFFTeFRRVUZUTEVOQlFVTTdXVUZETjBJc1EwRkJRenM3TzFsQlJVUlJMRWRCUVZFc1JVRkJVa0VzUTBGQlVUdHRRa0ZCVWtFc1VVRkJVU3hEUVVGU1FTeFJRVUZSTEVOQlFVTkRMRXRCUVVzc1JVRkJSU3hEUVVGRE8yZENRVU5tTEVkQlFVc3NRMEZCUTBNc1QwRkJUeXhIUVVGSFJDeExRVUZMTEVOQlFVTkZMRlZCUVZVc1NVRkRNVUpETEVsQlFVa3NSMEZCUjBZc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlExZ3NVVUZCVVN4TFFVRkxMRWxCUVVrc1JVRkJSeXhGUVVGSExFRkJRVWdzUTBGQlJ6dG5Ra0ZGYWtRc1RVRkJUU3hEUVVGRFlTeEpRVUZKTzFsQlEySXNRMEZCUXpzN08xbEJSVVJETEVkQlFVc3NSVUZCVEVFc1EwRkJTenR0UWtGQlRFRXNVVUZCVVN4RFFVRlNRU3hMUVVGTExFTkJRVU5ETEV0QlFVc3NSVUZCUlV3c1MwRkJTeXhGUVVGRlRTeFJRVUZSTEVWQlFVVXNRMEZCUXp0blFrRkROMElzUjBGQlJ5eERRVUZEUXl4TlFVRk5PMmRDUVVWV0xFZEJRVXNzUTBGQlEwb3NTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJRMG9zVVVGQlVTeERRVUZEUXl4TFFVRkxPMmRDUVVWb1F5eEZRVUZGTEVWQlFVVkhMRWxCUVVrc1MwRkJTeXhKUVVGSkxFVkJRVVVzUTBGQlF6dHZRa0ZEYkVKSkxFMUJRVTBzUjBGQlJ5eExRVUZMTEVOQlFVTTdaMEpCUTJwQ0xFTkJRVU1zVFVGQlRTeERRVUZETzI5Q1FVTk9MRWRCUVVzc1EwRkJRME1zVVVGQlVTeEhRVUZIVEN4SlFVRkpMRU5CUVVORExFdEJRVXNzUTBGQlEwb3NTMEZCU3l4RlFVRkZUU3hSUVVGUk8yOUNRVVV6UTBNc1RVRkJUU3hIUVVGSlF5eFJRVUZSTEV0QlFVc3NTVUZCU1N4QlFVRkRMRU5CUVVNN2IwSkJSVGRDTEVWQlFVVXNSVUZCUlVRc1RVRkJUU3hGUVVGRkxFTkJRVU03ZDBKQlExaEdMRXRCUVVzc1EwRkJRMGtzU1VGQlNTeERRVUZEUkN4UlFVRlJMRU5CUVVNc1EwRkJRenR2UWtGRGRrSXNRMEZCUXp0blFrRkRTQ3hEUVVGRE8yZENRVVZFTEUxQlFVMHNRMEZCUTBRc1RVRkJUVHRaUVVObUxFTkJRVU03T3p0WlFVVkVSeXhIUVVGUkxFVkJRVkpCTEVOQlFWRTdiVUpCUVZKQkxGRkJRVkVzUTBGQlVrRXNVVUZCVVN4SFFVRkhMRU5CUVVNN1owSkJRMVlzUjBGQlN5eERRVUZEUXl4bFFVRmxMRWRCUVVjc1NVRkJTU3hEUVVGRGNFSXNVMEZCVXl4SFFVTmFTaXhsUVVGbExFZEJRMko1UWl4VlFVRlpMR1ZCUTJ4RFF5eE5RVUZOTEVkQlFVa3NRMEZCUVN4RlFVRnJRa1lzVFVGQlpTeERRVUV2UWl4SlFVRkpMRU5CUVVOeVFpeFJRVUZSTEVWQlFXMUNMRTFCUVVFc1EwRkJhRUp4UWl4bFFVRmxPMmRDUVVWcVJDeE5RVUZOTEVOQlFVTkZMRTFCUVUwN1dVRkRaaXhEUVVGRE96czdXVUZGUkVNc1IwRkJTeXhGUVVGTVFTeERRVUZMTzIxQ1FVRk1RU3hSUVVGUkxFTkJRVkpCTEV0QlFVc3NSMEZCUnl4RFFVRkRPMmRDUVVGRExFMUJRVTBzYzBKQmFrVkhla0lzV1VGQldTeGhRV2xGVW5sQ0xFTkJRVXNzVVVGQldDeEpRVUZMTEdGQlFVOTZRaXhaUVVGWkxFVkJRVVVzU1VGQlNTeERRVUZEUXl4UlFVRlJMRVZCUVVVc1NVRkJTU3hEUVVGRFF5eFRRVUZUTzFsQlFVY3NRMEZCUXpzN1RVRTFSVGxGT3p0RlFWY3dRM2RDTEZsQlFXVTdhMEpCUVhCRE1VSXNXVUZCV1N4QlFWaHFReUo5IiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvblwiO1xuaW1wb3J0IFJ1bGVOYW1lUGFydCBmcm9tIFwiLi4vcGFydC9ub25UZXJtaW5hbC9ydWxlTmFtZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlTmFtZURlZmluaXRpb24gZXh0ZW5kcyBEZWZpbml0aW9uIHtcbiAgY29uc3RydWN0b3IocnVsZU5hbWUpIHtcbiAgICBjb25zdCBydWxlTmFtZVJ1bGVOYW1lUGFydCA9IG5ldyBSdWxlTmFtZVBhcnQocnVsZU5hbWUpLFxuICAgICAgICAgIHBhcnRzID0gW1xuICAgICAgICAgICAgcnVsZU5hbWVSdWxlTmFtZVBhcnRcbiAgICAgICAgICBdO1xuICAgIFxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi8uLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgUnVsZU5hbWVQYXJ0IGZyb20gXCIuLi8uLi9wYXJ0L25vblRlcm1pbmFsL3J1bGVOYW1lXCI7XG5pbXBvcnQgWmVyb09yTW9yZVBhcnRzUGFydCBmcm9tIFwiLi4vLi4vcGFydC9ub25UZXJtaW5hbC96ZXJvT3JNb3JlUGFydHNcIjtcblxuaW1wb3J0IHsgUXVhbnRpZmllclJ1bGVOYW1lLCBUZXJtaW5hbFBhcnRSdWxlTmFtZSB9IGZyb20gXCIuLi8uLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVybWluYWxQYXJ0UnVsZURlZmluaXRpb24gZXh0ZW5kcyBEZWZpbml0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgcXVhbnRpZmllclJ1bGVOYW1lID0gUXVhbnRpZmllclJ1bGVOYW1lLFxuICAgICAgICAgIHRlcm1pbmFsUGFydFJ1bGVOYW1lID0gVGVybWluYWxQYXJ0UnVsZU5hbWUsXG4gICAgICAgICAgcXVhbnRpZmllclJ1bGVOYW1lUGFydCA9IG5ldyBSdWxlTmFtZVBhcnQocXVhbnRpZmllclJ1bGVOYW1lKSxcbiAgICAgICAgICB0ZXJtaW5hbFBhcnRSdWxlTmFtZVBhcnQgPSBuZXcgUnVsZU5hbWVQYXJ0KHRlcm1pbmFsUGFydFJ1bGVOYW1lKSxcbiAgICAgICAgICB6ZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lUGFydHNQYXJ0ID0gbmV3IFplcm9Pck1vcmVQYXJ0c1BhcnQocXVhbnRpZmllclJ1bGVOYW1lUGFydCksXG4gICAgICAgICAgcGFydHMgPSBbXG4gICAgICAgICAgICB0ZXJtaW5hbFBhcnRSdWxlTmFtZVBhcnQsXG4gICAgICAgICAgICB6ZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lUGFydHNQYXJ0XG4gICAgICAgICAgXTtcbiAgICBcbiAgICBzdXBlcihwYXJ0cylcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRGVmaW5pdGlvbiBmcm9tIFwiLi4vLi4vZGVmaW5pdGlvblwiO1xuaW1wb3J0IFJ1bGVOYW1lUGFydCBmcm9tIFwiLi4vLi4vcGFydC9ub25UZXJtaW5hbC9ydWxlTmFtZVwiO1xuaW1wb3J0IFplcm9Pck1vcmVQYXJ0c1BhcnQgZnJvbSBcIi4uLy4uL3BhcnQvbm9uVGVybWluYWwvemVyb09yTW9yZVBhcnRzXCI7XG5cbmltcG9ydCB7IFF1YW50aWZpZXJSdWxlTmFtZSwgTm9uVGVybWluYWxQYXJ0UnVsZU5hbWUgfSBmcm9tIFwiLi4vLi4vcnVsZU5hbWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vblRlcm1pbmFsUGFydFJ1bGVEZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHF1YW50aWZpZXJSdWxlTmFtZSA9IFF1YW50aWZpZXJSdWxlTmFtZSxcbiAgICAgICAgICBub25UZXJtaW5hbFBhcnRSdWxlTmFtZSA9IE5vblRlcm1pbmFsUGFydFJ1bGVOYW1lLFxuICAgICAgICAgIHF1YW50aWZpZXJSdWxlTmFtZVBhcnQgPSBuZXcgUnVsZU5hbWVQYXJ0KHF1YW50aWZpZXJSdWxlTmFtZSksXG4gICAgICAgICAgbm9uVGVybWluYWxQYXJ0UnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChub25UZXJtaW5hbFBhcnRSdWxlTmFtZSksXG4gICAgICAgICAgemVyb09yTW9yZVF1YW50aWZpZXJSdWxlTmFtZVBhcnRzUGFydCA9IG5ldyBaZXJvT3JNb3JlUGFydHNQYXJ0KHF1YW50aWZpZXJSdWxlTmFtZVBhcnQpLFxuICAgICAgICAgIHBhcnRzID0gW1xuICAgICAgICAgICAgbm9uVGVybWluYWxQYXJ0UnVsZU5hbWVQYXJ0LFxuICAgICAgICAgICAgemVyb09yTW9yZVF1YW50aWZpZXJSdWxlTmFtZVBhcnRzUGFydFxuICAgICAgICAgIF07XG4gICAgXG4gICAgc3VwZXIocGFydHMpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFJ1bGUgZnJvbSBcIi4uL3J1bGVcIjtcbmltcG9ydCBQYXJ0Qk5GTm9kZSBmcm9tIFwiLi4vbm9kZS9ibmYvcGFydFwiO1xuaW1wb3J0IFJ1bGVOYW1lRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9ydWxlTmFtZVwiO1xuaW1wb3J0IFRlcm1pbmFsUGFydFJ1bGVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3BhcnRSdWxlL3Rlcm1pbmFsXCI7XG5pbXBvcnQgTm9uVGVybWluYWxQYXJ0UnVsZURlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb24vcGFydFJ1bGUvbm9uVGVybWluYWxcIjtcblxuaW1wb3J0IHsgUGFydFJ1bGVOYW1lLCBOb1doaXRlc3BhY2VQYXJ0UnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhcnRSdWxlIGV4dGVuZHMgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IG5hbWUgPSBQYXJ0UnVsZU5hbWUsXG4gICAgICAgICAgdGVybWluYWxQYXJ0UnVsZURlZmluaXRpb24gPSBuZXcgVGVybWluYWxQYXJ0UnVsZURlZmluaXRpb24oKSxcbiAgICAgICAgICBub25UZXJtaW5hbFBhcnRSdWxlRGVmaW5pdGlvbiA9IG5ldyBOb25UZXJtaW5hbFBhcnRSdWxlRGVmaW5pdGlvbigpLFxuICAgICAgICAgIG5vV2hpdGVzcGFjZVBhcnRSdWxlTmFtZURlZmluaXRpb24gPSBuZXcgUnVsZU5hbWVEZWZpbml0aW9uKE5vV2hpdGVzcGFjZVBhcnRSdWxlTmFtZSksXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBub25UZXJtaW5hbFBhcnRSdWxlRGVmaW5pdGlvbixcbiAgICAgICAgICAgIHRlcm1pbmFsUGFydFJ1bGVEZWZpbml0aW9uLFxuICAgICAgICAgICAgbm9XaGl0ZXNwYWNlUGFydFJ1bGVOYW1lRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IFBhcnRCTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBOb25UZXJtaW5hbE5vZGUgZnJvbSBcIi4uLy4uL25vZGUvbm9uVGVybWluYWxcIjtcblxuaW1wb3J0IHsgZmlyc3QsIHRoaXJkIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9hcnJheVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlQk5GTm9kZSBleHRlbmRzIE5vblRlcm1pbmFsTm9kZSB7XG4gIGdlbmVyYXRlUnVsZShSdWxlKSB7XG4gICAgY29uc3QgbmFtZSA9IHRoaXMuZ2V0TmFtZSgpLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gdGhpcy5nZW5lcmF0ZURlZmluaXRpb25zKCksXG4gICAgICAgICAgTm9kZSA9IE5vblRlcm1pbmFsTm9kZSxcbiAgICAgICAgICBydWxlID0gbmV3IFJ1bGUobmFtZSwgZGVmaW5pdGlvbnMsIE5vZGUpO1xuXG4gICAgcmV0dXJuIHJ1bGU7XG4gIH1cblxuICBnZXROYW1lKCkge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSB0aGlzLmdldENoaWxkTm9kZXMoKSxcbiAgICAgICAgICBmaXJzdENoaWxkTm9kZSA9IGZpcnN0KGNoaWxkTm9kZXMpLFxuICAgICAgICAgIG5hbWVCTkZOb2RlID0gZmlyc3RDaGlsZE5vZGUsICAvLy9cbiAgICAgICAgICBuYW1lID0gbmFtZUJORk5vZGUuZ2V0TmFtZSgpO1xuICAgIFxuICAgIHJldHVybiBuYW1lO1xuICB9XG4gIFxuICBnZW5lcmF0ZURlZmluaXRpb25zKCkge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSB0aGlzLmdldENoaWxkTm9kZXMoKSxcbiAgICAgICAgICB0aGlyZENoaWxkTm9kZSA9IHRoaXJkKGNoaWxkTm9kZXMpLFxuICAgICAgICAgIGRlZmluaXRpb25zTm9kZSA9IHRoaXJkQ2hpbGROb2RlLCAgLy8vXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBkZWZpbml0aW9uc05vZGUuZ2VuZXJhdGVEZWZpbml0aW9ucygpO1xuICAgIFxuICAgIHJldHVybiBkZWZpbml0aW9ucztcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKHJ1bGVOYW1lLCBjaGlsZE5vZGVzKSB7IHJldHVybiBOb25UZXJtaW5hbE5vZGUuZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhSdWxlQk5GTm9kZSwgcnVsZU5hbWUsIGNoaWxkTm9kZXMpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3Rlcm1pbmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vcGFydC90ZXJtaW5hbFwiKSk7XG52YXIgX3Rlcm1pbmFsMSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL25vZGUvdGVybWluYWxcIikpO1xuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7XG4gICAgICAgIF9nZXQgPSBSZWZsZWN0LmdldDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgICAgICAgICAgdmFyIGJhc2UgPSBfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmICghYmFzZSkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmIChkZXNjLmdldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkZXNjLnZhbHVlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpO1xufVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICAgIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgICAgICByZXR1cm4gY2FsbDtcbiAgICB9XG4gICAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgICB3aGlsZSghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKXtcbiAgICAgICAgb2JqZWN0ID0gX2dldFByb3RvdHlwZU9mKG9iamVjdCk7XG4gICAgICAgIGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgVGVybWluYWxTeW1ib2xQYXJ0ID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihUZXJtaW5hbFBhcnQpIHtcbiAgICBfaW5oZXJpdHMoVGVybWluYWxTeW1ib2xQYXJ0LCBUZXJtaW5hbFBhcnQpO1xuICAgIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoVGVybWluYWxTeW1ib2xQYXJ0KTtcbiAgICBmdW5jdGlvbiBUZXJtaW5hbFN5bWJvbFBhcnQoY29udGVudCkge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGVybWluYWxTeW1ib2xQYXJ0KTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpO1xuICAgICAgICBfdGhpcy5jb250ZW50ID0gY29udGVudDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoVGVybWluYWxTeW1ib2xQYXJ0LCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJwYXJzZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlKG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyc2VkO1xuICAgICAgICAgICAgICAgIHZhciB0ZXJtaW5hbE5vZGUgPSBudWxsO1xuICAgICAgICAgICAgICAgIHZhciBzYXZlZEluZGV4ID0gc3RhdGUuZ2V0U2F2ZWRJbmRleCgpLCBuZXh0U2lnbmlmaWNhbnRUb2tlbiA9IHN0YXRlLmdldE5leHRTaWduaWZpY2FudFRva2VuKCksIHNpZ25pZmljYW50VG9rZW4gPSBuZXh0U2lnbmlmaWNhbnRUb2tlbjsgLy8vXG4gICAgICAgICAgICAgICAgaWYgKHNpZ25pZmljYW50VG9rZW4gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBzaWduaWZpY2FudFRva2VuLmdldENvbnRlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgPT09IHRoaXMuY29udGVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVybWluYWxOb2RlID0gX3Rlcm1pbmFsMS5kZWZhdWx0LmZyb21TaWduaWZpY2FudFRva2VuKHNpZ25pZmljYW50VG9rZW4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBhcnNlZCA9IHRlcm1pbmFsTm9kZSAhPT0gbnVsbDtcbiAgICAgICAgICAgICAgICBpZiAocGFyc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzLnB1c2godGVybWluYWxOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWQgPSBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2Rlcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgICAgICAgICAgICAgICBzdGF0ZS5iYWNrdHJhY2soc2F2ZWRJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJhc1N0cmluZ1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFzU3RyaW5nKCkge1xuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gdGhpcy5jb250ZW50LnJlcGxhY2UoL1xcXFwvLCBcIlxcXFxcXFxcXCIpLCBzdHJpbmcgPSBcIlxcXCJcIi5jb25jYXQoY29udGVudCwgXCJcXFwiXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjbG9uZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0KF9nZXRQcm90b3R5cGVPZihUZXJtaW5hbFN5bWJvbFBhcnQucHJvdG90eXBlKSwgXCJjbG9uZVwiLCB0aGlzKS5jYWxsKHRoaXMsIFRlcm1pbmFsU3ltYm9sUGFydCwgdGhpcy5jb250ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0pO1xuICAgIHJldHVybiBUZXJtaW5hbFN5bWJvbFBhcnQ7XG59KF90ZXJtaW5hbC5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFRlcm1pbmFsU3ltYm9sUGFydDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OXdZWEowTDNSbGNtMXBibUZzTDNSbGNtMXBibUZzVTNsdFltOXNMbXB6SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklsd2lkWE5sSUhOMGNtbGpkRndpTzF4dVhHNXBiWEJ2Y25RZ1ZHVnliV2x1WVd4UVlYSjBJR1p5YjIwZ1hDSXVMaTh1TGk5d1lYSjBMM1JsY20xcGJtRnNYQ0k3WEc1cGJYQnZjblFnVkdWeWJXbHVZV3hPYjJSbElHWnliMjBnWENJdUxpOHVMaTl1YjJSbEwzUmxjbTFwYm1Gc1hDSTdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR05zWVhOeklGUmxjbTFwYm1Gc1UzbHRZbTlzVUdGeWRDQmxlSFJsYm1SeklGUmxjbTFwYm1Gc1VHRnlkQ0I3WEc0Z0lHTnZibk4wY25WamRHOXlLR052Ym5SbGJuUXBJSHRjYmlBZ0lDQnpkWEJsY2lncE8xeHVJQ0FnSUZ4dUlDQWdJSFJvYVhNdVkyOXVkR1Z1ZENBOUlHTnZiblJsYm5RN1hHNGdJSDFjYmx4dUlDQndZWEp6WlNodWIyUmxjeXdnYzNSaGRHVXNJR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdiR1YwSUhCaGNuTmxaRHRjYmx4dUlDQWdJR3hsZENCMFpYSnRhVzVoYkU1dlpHVWdQU0J1ZFd4c08xeHVJQ0FnSUZ4dUlDQWdJR052Ym5OMElITmhkbVZrU1c1a1pYZ2dQU0J6ZEdGMFpTNW5aWFJUWVhabFpFbHVaR1Y0S0Nrc1hHNWNkRngwSUNBZ0lDQWdibVY0ZEZOcFoyNXBabWxqWVc1MFZHOXJaVzRnUFNCemRHRjBaUzVuWlhST1pYaDBVMmxuYm1sbWFXTmhiblJVYjJ0bGJpZ3BMRnh1WEhSY2RGeDBYSFJjZEhOcFoyNXBabWxqWVc1MFZHOXJaVzRnUFNCdVpYaDBVMmxuYm1sbWFXTmhiblJVYjJ0bGJqc2dMeTh2WEc1Y2JpQWdJQ0JwWmlBb2MybG5ibWxtYVdOaGJuUlViMnRsYmlBaFBUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnWTI5dWRHVnVkQ0E5SUhOcFoyNXBabWxqWVc1MFZHOXJaVzR1WjJWMFEyOXVkR1Z1ZENncE8xeHVYRzRnSUNBZ0lDQnBaaUFvWTI5dWRHVnVkQ0E5UFQwZ2RHaHBjeTVqYjI1MFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhSbGNtMXBibUZzVG05a1pTQTlJRlJsY20xcGJtRnNUbTlrWlM1bWNtOXRVMmxuYm1sbWFXTmhiblJVYjJ0bGJpaHphV2R1YVdacFkyRnVkRlJ2YTJWdUtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCd1lYSnpaV1FnUFNBb2RHVnliV2x1WVd4T2IyUmxJQ0U5UFNCdWRXeHNLVHRjYmx4dUlDQWdJR2xtSUNod1lYSnpaV1FwSUh0Y2JpQWdJQ0FnSUc1dlpHVnpMbkIxYzJnb2RHVnliV2x1WVd4T2IyUmxLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tHTmhiR3hpWVdOcklDRTlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQWdJSEJoY25ObFpDQTlJR05oYkd4aVlXTnJLQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0Z3WVhKelpXUXBJSHRjYmlBZ0lDQWdJQ0FnSUNCdWIyUmxjeTV3YjNBb0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2doY0dGeWMyVmtLU0I3WEc0Z0lDQWdJQ0J6ZEdGMFpTNWlZV05yZEhKaFkyc29jMkYyWldSSmJtUmxlQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlIQmhjbk5sWkR0Y2JpQWdmVnh1SUNCY2JpQWdZWE5UZEhKcGJtY29LU0I3WEc0Z0lDQWdZMjl1YzNRZ1kyOXVkR1Z1ZENBOUlIUm9hWE11WTI5dWRHVnVkQzV5WlhCc1lXTmxLQzljWEZ4Y0x5d2dYQ0pjWEZ4Y1hGeGNYRndpS1N4Y2JpQWdJQ0FnSUNBZ0lDQnpkSEpwYm1jZ1BTQmdYQ0lrZTJOdmJuUmxiblI5WENKZ08xeHVJQ0FnSUZ4dUlDQWdJSEpsZEhWeWJpQnpkSEpwYm1jN1hHNGdJSDFjYmx4dUlDQmpiRzl1WlNncElIc2djbVYwZFhKdUlITjFjR1Z5TG1Oc2IyNWxLRlJsY20xcGJtRnNVM2x0WW05c1VHRnlkQ3dnZEdocGN5NWpiMjUwWlc1MEtUc2dmVnh1ZlZ4dUlsMHNJbTVoYldWeklqcGJJbFJsY20xcGJtRnNVM2x0WW05c1VHRnlkQ0lzSW1OdmJuUmxiblFpTENKd1lYSnpaU0lzSW01dlpHVnpJaXdpYzNSaGRHVWlMQ0pqWVd4c1ltRmpheUlzSW5CaGNuTmxaQ0lzSW5SbGNtMXBibUZzVG05a1pTSXNJbk5oZG1Wa1NXNWtaWGdpTENKblpYUlRZWFpsWkVsdVpHVjRJaXdpYm1WNGRGTnBaMjVwWm1sallXNTBWRzlyWlc0aUxDSm5aWFJPWlhoMFUybG5ibWxtYVdOaGJuUlViMnRsYmlJc0luTnBaMjVwWm1sallXNTBWRzlyWlc0aUxDSm5aWFJEYjI1MFpXNTBJaXdpVkdWeWJXbHVZV3hPYjJSbElpd2labkp2YlZOcFoyNXBabWxqWVc1MFZHOXJaVzRpTENKd2RYTm9JaXdpY0c5d0lpd2lZbUZqYTNSeVlXTnJJaXdpWVhOVGRISnBibWNpTENKeVpYQnNZV05sSWl3aWMzUnlhVzVuSWl3aVkyeHZibVVpTENKVVpYSnRhVzVoYkZCaGNuUWlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRU5CUVZrc1YwRkJRU3hEUVVGRE96czdSVUZCWWp0M1FrRkJRVHRCUVVWNVFpeEhRVUZ4UWl4RFFVRnlRaXhUUVVGeFFqdEJRVU55UWl4SFFVRnhRaXhEUVVGeVFpeFZRVUZ4UWpzN096czdPenM3T3pzN096czdPemhFUVVnNVF6dHpRMEZCUVRzMlJFRkJRVHRwUlVGQlFUczdPenQzUlVGQlFUdG5SVUZCUVRzN096czdNRUpCUVVFN096czdPenM3T3pzN1UwRkJRVHM3T3pzN096dExRVUZCT3pzN096czdPenM3T3pzN08wMUJRVUU3ZVVSQlFVRTdPenM3T3pzN096czdPenM3T3p0MVFrRkJRVHM3UzBGQlFUczdPenM3ZDBOQlFVRTdPenM3T3pzeVFrRkJRVHM3T3pzN096czdjVVpCUVVFN096czdPenM3T3pzN096dHRSVUZCUVRzN2FVUkJRVUU3T3pzN08wRkJTMlVzUjBGQlN5eERRVUZEUVN4clFrRkJhMElzYVVKQlFYaENMRkZCUVZFN0swTkJUSFpDT3p0aFFVdHhRa0VzYTBKQlFXdENMRU5CUTNwQ1F5eFBRVUZQTzJsRVFVNXlRanM3YVVORFFVRXNRMFJQV1R0alFVVklRU3hQUVVGUExFZEJRVWRCTEU5QlFVOHNRMEZCUXpzN096czdXVUZIZWtKRExFZEJRVXNzUlVGQlRFRXNRMEZCU3p0dFFrRkJURUVzVVVGQlVTeERRVUZTUVN4TFFVRkxMRU5CUVVORExFdEJRVXNzUlVGQlJVTXNTMEZCU3l4RlFVRkZReXhSUVVGUkxFVkJRVVVzUTBGQlF6dG5Ra0ZETjBJc1IwRkJSeXhEUVVGRFF5eE5RVUZOTzJkQ1FVVldMRWRCUVVjc1EwRkJRME1zV1VGQldTeEhRVUZITEVsQlFVazdaMEpCUlhaQ0xFZEJRVXNzUTBGQlEwTXNWVUZCVlN4SFFVRkhTaXhMUVVGTExFTkJRVU5MTEdGQlFXRXNTVUZEYkVORExHOUNRVUZ2UWl4SFFVRkhUaXhMUVVGTExFTkJRVU5QTEhWQ1FVRjFRaXhKUVVOMlJFTXNaMEpCUVdkQ0xFZEJRVWRHTEc5Q1FVRnZRaXhGUVVGRkxFVkJRVWNzUVVGQlNDeERRVUZITzJkQ1FVVTNReXhGUVVGRkxFVkJRVVZGTEdkQ1FVRm5RaXhMUVVGTExFbEJRVWtzUlVGQlJTeERRVUZETzI5Q1FVTTVRaXhIUVVGTExFTkJRVU5ZTEU5QlFVOHNSMEZCUjFjc1owSkJRV2RDTEVOQlFVTkRMRlZCUVZVN2IwSkJSVE5ETEVWQlFVVXNSVUZCUlZvc1QwRkJUeXhMUVVGTExFbEJRVWtzUTBGQlEwRXNUMEZCVHl4RlFVRkZMRU5CUVVNN2QwSkJRemRDVFN4WlFVRlpMRWRCUVVkUExGVkJRVmtzVTBGQlEwTXNiMEpCUVc5Q0xFTkJRVU5JTEdkQ1FVRm5RaXhEUVVGRExFTkJRVU03YjBKQlEzSkZMRU5CUVVNN1owSkJRMGdzUTBGQlF6dG5Ra0ZGUkU0c1RVRkJUU3hIUVVGSlF5eFpRVUZaTEV0QlFVc3NTVUZCU1N4QlFVRkRMRU5CUVVNN1owSkJSV3BETEVWQlFVVXNSVUZCUlVRc1RVRkJUU3hGUVVGRkxFTkJRVU03YjBKQlExaElMRXRCUVVzc1EwRkJRMkVzU1VGQlNTeERRVUZEVkN4WlFVRlpMRU5CUVVNc1EwRkJRenR2UWtGRmVrSXNSVUZCUlN4RlFVRkZSaXhSUVVGUkxFdEJRVXNzU1VGQlNTeEZRVUZGTEVOQlFVTTdkMEpCUTNSQ1F5eE5RVUZOTEVkQlFVZEVMRkZCUVZFc1JVRkJSU3hEUVVGRE8zZENRVVZ3UWl4RlFVRkZMRWRCUVVkRExFMUJRVTBzUlVGQlJTeERRVUZET3pSQ1FVTmFTQ3hMUVVGTExFTkJRVU5qTEVkQlFVY3NSVUZCUlN4RFFVRkRPM2RDUVVOa0xFTkJRVU03YjBKQlEwZ3NRMEZCUXp0blFrRkRTQ3hEUVVGRE8yZENRVVZFTEVWQlFVVXNSMEZCUjFnc1RVRkJUU3hGUVVGRkxFTkJRVU03YjBKQlExcEdMRXRCUVVzc1EwRkJRMk1zVTBGQlV5eERRVUZEVml4VlFVRlZMRU5CUVVNc1EwRkJRenRuUWtGRE9VSXNRMEZCUXp0blFrRkZSQ3hOUVVGTkxFTkJRVU5HTEUxQlFVMDdXVUZEWml4RFFVRkRPenM3V1VGRlJHRXNSMEZCVVN4RlFVRlNRU3hEUVVGUk8yMUNRVUZTUVN4UlFVRlJMRU5CUVZKQkxGRkJRVkVzUjBGQlJ5eERRVUZETzJkQ1FVTldMRWRCUVVzc1EwRkJRMnhDTEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVOQkxFOUJRVThzUTBGQlEyMUNMRTlCUVU4c1QwRkJUeXhEUVVGTkxGRkJRek5EUXl4TlFVRk5MRWRCUVVrc1EwRkJReXhKUVVGVkxFMUJRVU1zUTBGQlZIQkNMRTlCUVU4c1JVRkJReXhEUVVGRE8yZENRVVUxUWl4TlFVRk5MRU5CUVVOdlFpeE5RVUZOTzFsQlEyWXNRMEZCUXpzN08xbEJSVVJETEVkQlFVc3NSVUZCVEVFc1EwRkJTenR0UWtGQlRFRXNVVUZCVVN4RFFVRlNRU3hMUVVGTExFZEJRVWNzUTBGQlF6dG5Ra0ZCUXl4TlFVRk5MSE5DUVhCRVIzUkNMR3RDUVVGclFpeGhRVzlFWkhOQ0xFTkJRVXNzVVVGQldDeEpRVUZMTEdGQlFVOTBRaXhyUWtGQmEwSXNSVUZCUlN4SlFVRkpMRU5CUVVORExFOUJRVTg3V1VGQlJ5eERRVUZET3p0TlFYcEVia1U3TzBWQlMyZEVjMElzVTBGQldUdHJRa0ZCZGtOMlFpeHJRa0ZCYTBJc1FVRk1ka01pZlE9PSIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgc3BlY2lhbFN5bWJvbHMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgUnVsZU5hbWVQYXJ0IGZyb20gXCIuLi9wYXJ0L25vblRlcm1pbmFsL3J1bGVOYW1lXCI7XG5pbXBvcnQgVGVybWluYWxTeW1ib2xQYXJ0IGZyb20gXCIuLi9wYXJ0L3Rlcm1pbmFsL3Rlcm1pbmFsU3ltYm9sXCI7XG5cbmltcG9ydCB7IE5hbWVSdWxlTmFtZSwgRGVmaW5pdGlvbnNSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuY29uc3QgeyBzZXBhcmF0b3IsIHRlcm1pbmF0b3IgfSA9IHNwZWNpYWxTeW1ib2xzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlRGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBzZXBhcmF0b3JUZXJtaW5hbFN5bWJvbENvbnRlbnQgPSBzZXBhcmF0b3IsXG4gICAgICAgICAgdGVybWluYXRvclRlcm1pbmFsU3ltYm9sQ29udGVudCA9IHRlcm1pbmF0b3IsXG4gICAgICAgICAgbmFtZVJ1bGVOYW1lID0gTmFtZVJ1bGVOYW1lLFxuICAgICAgICAgIGRlZmluaXRpb25zUnVsZU5hbWUgPSBEZWZpbml0aW9uc1J1bGVOYW1lLFxuICAgICAgICAgIG5hbWVSdWxlTmFtZVBhcnQgPSBuZXcgUnVsZU5hbWVQYXJ0KG5hbWVSdWxlTmFtZSksXG4gICAgICAgICAgc2VwYXJhdG9yVGVybWluYWxTeW1ib2xQYXJ0ID0gbmV3IFRlcm1pbmFsU3ltYm9sUGFydChzZXBhcmF0b3JUZXJtaW5hbFN5bWJvbENvbnRlbnQpLFxuICAgICAgICAgIGRlZmluaXRpb25zUnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChkZWZpbml0aW9uc1J1bGVOYW1lKSxcbiAgICAgICAgICB0ZXJtaW5hdG9yVGVybWluYWxTeW1ib2xQYXJ0ID0gbmV3IFRlcm1pbmFsU3ltYm9sUGFydCh0ZXJtaW5hdG9yVGVybWluYWxTeW1ib2xDb250ZW50KSxcbiAgICAgICAgICBwYXJ0cyA9IFtcbiAgICAgICAgICAgIG5hbWVSdWxlTmFtZVBhcnQsXG4gICAgICAgICAgICBzZXBhcmF0b3JUZXJtaW5hbFN5bWJvbFBhcnQsXG4gICAgICAgICAgICBkZWZpbml0aW9uc1J1bGVOYW1lUGFydCxcbiAgICAgICAgICAgIHRlcm1pbmF0b3JUZXJtaW5hbFN5bWJvbFBhcnRcbiAgICAgICAgICBdO1xuICAgIFxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgUnVsZUJORk5vZGUgZnJvbSBcIi4uL25vZGUvYm5mL3J1bGVcIjtcbmltcG9ydCBSdWxlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9ydWxlXCI7XG5cbmltcG9ydCB7IFJ1bGVSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUnVsZVJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgcnVsZURlZmluaXRpb24gPSBuZXcgUnVsZURlZmluaXRpb24oKSxcbiAgICAgICAgICBuYW1lID0gUnVsZVJ1bGVOYW1lLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgcnVsZURlZmluaXRpb25cbiAgICAgICAgICBdLFxuICAgICAgICAgIE5vZGUgPSBSdWxlQk5GTm9kZTtcbiAgICBcbiAgICBzdXBlcihuYW1lLCBkZWZpbml0aW9ucywgTm9kZSk7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IE5vblRlcm1pbmFsTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9ub25UZXJtaW5hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFcnJvckJORk5vZGUgZXh0ZW5kcyBOb25UZXJtaW5hbE5vZGUge1xuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhydWxlTmFtZSwgY2hpbGROb2RlcykgeyByZXR1cm4gTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoRXJyb3JCTkZOb2RlLCBydWxlTmFtZSwgY2hpbGROb2Rlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgc3BlY2lhbFN5bWJvbHMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBUZXJtaW5hbFBhcnQgZnJvbSBcIi4uLy4uL3BhcnQvdGVybWluYWxcIjtcbmltcG9ydCBUZXJtaW5hbE5vZGUgZnJvbSBcIi4uLy4uL25vZGUvdGVybWluYWxcIjtcblxuY29uc3QgeyB3aWxkY2FyZCB9ID0gc3BlY2lhbFN5bWJvbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdpbGRjYXJkUGFydCBleHRlbmRzIFRlcm1pbmFsUGFydCB7XG4gIHBhcnNlKG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICBsZXQgcGFyc2VkO1xuXG4gICAgbGV0IHRlcm1pbmFsTm9kZSA9IG51bGw7XG4gICAgXG4gICAgY29uc3Qgc2F2ZWRJbmRleCA9IHN0YXRlLmdldFNhdmVkSW5kZXgoKSxcblx0XHQgICAgICBuZXh0U2lnbmlmaWNhbnRUb2tlbiA9IHN0YXRlLmdldE5leHRTaWduaWZpY2FudFRva2VuKCksXG5cdFx0XHRcdFx0c2lnbmlmaWNhbnRUb2tlbiA9IG5leHRTaWduaWZpY2FudFRva2VuOyAvLy9cblxuICAgIGlmIChzaWduaWZpY2FudFRva2VuICE9PSBudWxsKSB7XG4gICAgICB0ZXJtaW5hbE5vZGUgPSBUZXJtaW5hbE5vZGUuZnJvbVNpZ25pZmljYW50VG9rZW4oc2lnbmlmaWNhbnRUb2tlbik7XG4gICAgfVxuXG4gICAgcGFyc2VkID0gKHRlcm1pbmFsTm9kZSAhPT0gbnVsbCk7XG5cbiAgICBpZiAocGFyc2VkKSB7XG4gICAgICBub2Rlcy5wdXNoKHRlcm1pbmFsTm9kZSk7XG5cbiAgICAgIGlmIChjYWxsYmFjayAhPT0gbnVsbCkge1xuICAgICAgICBwYXJzZWQgPSBjYWxsYmFjaygpO1xuXG4gICAgICAgIGlmICghcGFyc2VkKSB7XG4gICAgICAgICAgbm9kZXMucG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgc3RhdGUuYmFja3RyYWNrKHNhdmVkSW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJzZWQ7XG4gIH1cblxuICBhc1N0cmluZygpIHtcbiAgICBjb25zdCBzdHJpbmcgPSB3aWxkY2FyZDsgIC8vL1xuXG4gICAgcmV0dXJuIHN0cmluZztcbiAgfVxuXG4gIGNsb25lKCkgeyByZXR1cm4gc3VwZXIuY2xvbmUoV2lsZGNhcmRQYXJ0KTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvblwiO1xuaW1wb3J0IFdpbGRjYXJkUGFydCBmcm9tIFwiLi4vcGFydC90ZXJtaW5hbC93aWxkY2FyZFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFcnJvckRlZmluaXRpb24gZXh0ZW5kcyBEZWZpbml0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3Qgd2lsZGNhcmRQYXJ0ID0gbmV3IFdpbGRjYXJkUGFydCgpLFxuICAgICAgICAgIHBhcnRzID0gW1xuICAgICAgICAgICAgd2lsZGNhcmRQYXJ0XG4gICAgICAgICAgXTtcblxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgRXJyb3JCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9lcnJvclwiO1xuaW1wb3J0IEVycm9yRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9lcnJvclwiO1xuXG5pbXBvcnQgeyBFcnJvclJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFcnJvclJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgZXJyb3JEZWZpbml0aW9uID0gbmV3IEVycm9yRGVmaW5pdGlvbigpLFxuICAgICAgICAgIG5hbWUgPSBFcnJvclJ1bGVOYW1lLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgZXJyb3JEZWZpbml0aW9uXG4gICAgICAgICAgXSxcbiAgICAgICAgICBOb2RlID0gRXJyb3JCTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKTtcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uVGVybWluYWxOb2RlIGZyb21cIi4uLy4uL25vZGUvbm9uVGVybWluYWxcIjtcblxuaW1wb3J0IHsgUnVsZVJ1bGVOYW1lIH0gZnJvbSBcIi4uLy4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb2N1bWVudEJORk5vZGUgZXh0ZW5kcyBOb25UZXJtaW5hbE5vZGUge1xuICBnZW5lcmF0ZVJ1bGVzKFJ1bGUpIHtcbiAgICBjb25zdCBjaGlsZE5vZGVzID0gdGhpcy5nZXRDaGlsZE5vZGVzKCksXG4gICAgICAgICAgcnVsZU5vZGVzID0gY2hpbGROb2Rlcy5yZWR1Y2UoKHJ1bGVOb2RlcywgY2hpbGROb2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjaGlsZE5vZGVOb25UZXJtaW5hbE5vZGUgPSBjaGlsZE5vZGUuaXNOb25UZXJtaW5hbE5vZGUoKTtcblxuICAgICAgICAgICAgaWYgKGNoaWxkTm9kZU5vblRlcm1pbmFsTm9kZSkge1xuICAgICAgICAgICAgICBjb25zdCBub25UZXJtaW5hbE5vZGUgPSBjaGlsZE5vZGUsICAvLy9cbiAgICAgICAgICAgICAgICAgICAgcnVsZU5hbWUgPSBjaGlsZE5vZGUuZ2V0UnVsZU5hbWUoKSxcbiAgICAgICAgICAgICAgICAgICAgcnVsZU5hbWVSdWxlUnVsZU5hbWUgPSAocnVsZU5hbWUgPT09IFJ1bGVSdWxlTmFtZSksXG4gICAgICAgICAgICAgICAgICAgIG5vblRlcm1pbmFsTm9kZVJ1bGVOb2RlID0gcnVsZU5hbWVSdWxlUnVsZU5hbWU7ICAvLy9cblxuICAgICAgICAgICAgICBpZiAobm9uVGVybWluYWxOb2RlUnVsZU5vZGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBydWxlTm9kZSA9IG5vblRlcm1pbmFsTm9kZTsgLy8vXG5cbiAgICAgICAgICAgICAgICBydWxlTm9kZXMucHVzaChydWxlTm9kZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJ1bGVOb2RlcztcbiAgICAgICAgICB9LCBbXSksXG4gICAgICAgICAgcnVsZXMgPSBydWxlTm9kZXMubWFwKChydWxlTm9kZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcnVsZSA9IHJ1bGVOb2RlLmdlbmVyYXRlUnVsZShSdWxlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgICAgICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHJ1bGVzO1xuICB9XG5cbiAgc3RhdGljIGZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHsgcmV0dXJuIE5vblRlcm1pbmFsTm9kZS5mcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKERvY3VtZW50Qk5GTm9kZSwgcnVsZU5hbWUsIGNoaWxkTm9kZXMpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX25vblRlcm1pbmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vcGFydC9ub25UZXJtaW5hbFwiKSk7XG52YXIgX3BhcnRUeXBlcyA9IHJlcXVpcmUoXCIuLi8uLi9wYXJ0VHlwZXNcIik7XG52YXIgX2FycmF5ID0gcmVxdWlyZShcIi4uLy4uL3V0aWxpdGllcy9hcnJheVwiKTtcbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICAgIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gc2VsZjtcbn1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspe1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBSZWZsZWN0LmdldCkge1xuICAgICAgICBfZ2V0ID0gUmVmbGVjdC5nZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgX2dldCA9IGZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgIHZhciBiYXNlID0gX3N1cGVyUHJvcEJhc2UodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICBpZiAoIWJhc2UpIHJldHVybjtcbiAgICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihiYXNlLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICBpZiAoZGVzYy5nZXQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGVzYy5nZXQuY2FsbChyZWNlaXZlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5mdW5jdGlvbiBfc3VwZXJQcm9wQmFzZShvYmplY3QsIHByb3BlcnR5KSB7XG4gICAgd2hpbGUoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSl7XG4gICAgICAgIG9iamVjdCA9IF9nZXRQcm90b3R5cGVPZihvYmplY3QpO1xuICAgICAgICBpZiAob2JqZWN0ID09PSBudWxsKSBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbn1cbnZhciBfdHlwZW9mID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgXCJAc3djL2hlbHBlcnMgLSB0eXBlb2ZcIjtcbiAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG4gICAgdHJ5IHtcbiAgICAgICAgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbigpIHt9KSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7XG4gICAgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkge1xuICAgICAgICB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDtcbiAgICAgICAgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHtcbiAgICAgICAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7XG4gICAgICAgICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTtcbiAgICB9O1xufVxudmFyIENob2ljZU9mUGFydHNQYXJ0ID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihOb25UZXJtaW5hbFBhcnQpIHtcbiAgICBfaW5oZXJpdHMoQ2hvaWNlT2ZQYXJ0c1BhcnQsIE5vblRlcm1pbmFsUGFydCk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDaG9pY2VPZlBhcnRzUGFydCk7XG4gICAgZnVuY3Rpb24gQ2hvaWNlT2ZQYXJ0c1BhcnQocGFydHMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENob2ljZU9mUGFydHNQYXJ0KTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICB2YXIgdHlwZSA9IF9wYXJ0VHlwZXMuQ2hvaWNlT2ZQYXJ0c1BhcnRUeXBlOyAvLy9cbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0eXBlKTtcbiAgICAgICAgX3RoaXMucGFydHMgPSBwYXJ0cztcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoQ2hvaWNlT2ZQYXJ0c1BhcnQsIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImdldFBhcnRzXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UGFydHMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFydHM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJwYXJzZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlKG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyc2VkO1xuICAgICAgICAgICAgICAgIHRoaXMucGFydHMuc29tZShmdW5jdGlvbihwYXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZCA9IHBhcnQucGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImFzU3RyaW5nXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gYXNTdHJpbmcoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnRzU3RyaW5nMSA9IHRoaXMucGFydHMucmVkdWNlKGZ1bmN0aW9uKHBhcnRzU3RyaW5nLCBwYXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJ0U3RyaW5nID0gcGFydC5hc1N0cmluZygpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocGFydHNTdHJpbmcgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRzU3RyaW5nID0gcGFydFN0cmluZztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRzU3RyaW5nID0gXCJcIi5jb25jYXQocGFydHNTdHJpbmcsIFwiIHwgXCIpLmNvbmNhdChwYXJ0U3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGFydHNTdHJpbmc7XG4gICAgICAgICAgICAgICAgfSwgbnVsbCksIHN0cmluZyA9IFwiKCBcIi5jb25jYXQocGFydHNTdHJpbmcxLCBcIiApXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjbG9uZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0KF9nZXRQcm90b3R5cGVPZihDaG9pY2VPZlBhcnRzUGFydC5wcm90b3R5cGUpLCBcImNsb25lXCIsIHRoaXMpLmNhbGwodGhpcywgQ2hvaWNlT2ZQYXJ0c1BhcnQsIHRoaXMucGFydHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbU5vZGVzXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbU5vZGVzKG5vZGVzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFsbEJ1dEZpcnN0QW5kTGFzdE5vZGVzID0gKDAsIF9hcnJheSkuYWxsQnV0Rmlyc3RBbmRMYXN0KG5vZGVzKTtcbiAgICAgICAgICAgICAgICBub2RlcyA9IGFsbEJ1dEZpcnN0QW5kTGFzdE5vZGVzOyAvLy9cbiAgICAgICAgICAgICAgICB2YXIgZXZlbk5vZGVzID0gKDAsIF9hcnJheSkuZXZlbihub2Rlcyk7XG4gICAgICAgICAgICAgICAgbm9kZXMgPSBldmVuTm9kZXM7IC8vL1xuICAgICAgICAgICAgICAgIHZhciBsb29rQWhlYWQgPSBmYWxzZSwgcGFydHMgPSBub2Rlcy5tYXAoZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFydCA9IG5vZGUuZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJ0O1xuICAgICAgICAgICAgICAgIH0pLCBjaG9pY2VPZlBhcnRzUGFydCA9IG5ldyBDaG9pY2VPZlBhcnRzUGFydChwYXJ0cyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNob2ljZU9mUGFydHNQYXJ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIENob2ljZU9mUGFydHNQYXJ0O1xufShfbm9uVGVybWluYWwuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBDaG9pY2VPZlBhcnRzUGFydDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OXdZWEowTDI1dmJsUmxjbTFwYm1Gc0wyTm9iMmxqWlU5bVVHRnlkSE11YW5NaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lYQ0oxYzJVZ2MzUnlhV04wWENJN1hHNWNibWx0Y0c5eWRDQk9iMjVVWlhKdGFXNWhiRkJoY25RZ1puSnZiU0JjSWk0dUx5NHVMM0JoY25RdmJtOXVWR1Z5YldsdVlXeGNJanRjYmx4dWFXMXdiM0owSUhzZ1EyaHZhV05sVDJaUVlYSjBjMUJoY25SVWVYQmxJSDBnWm5KdmJTQmNJaTR1THk0dUwzQmhjblJVZVhCbGMxd2lPMXh1YVcxd2IzSjBJSHNnWlhabGJpd2dZV3hzUW5WMFJtbHljM1JCYm1STVlYTjBJSDBnWm5KdmJTQmNJaTR1THk0dUwzVjBhV3hwZEdsbGN5OWhjbkpoZVZ3aU8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQmpiR0Z6Y3lCRGFHOXBZMlZQWmxCaGNuUnpVR0Z5ZENCbGVIUmxibVJ6SUU1dmJsUmxjbTFwYm1Gc1VHRnlkQ0I3WEc0Z0lHTnZibk4wY25WamRHOXlLSEJoY25SektTQjdYRzRnSUNBZ1kyOXVjM1FnZEhsd1pTQTlJRU5vYjJsalpVOW1VR0Z5ZEhOUVlYSjBWSGx3WlRzZ0x5OHZYRzVjYmlBZ0lDQnpkWEJsY2loMGVYQmxLVHRjYmlBZ0lDQmNiaUFnSUNCMGFHbHpMbkJoY25SeklEMGdjR0Z5ZEhNN1hHNGdJSDFjYmlBZ1hHNGdJR2RsZEZCaGNuUnpLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGNuUnpPMXh1SUNCOVhHNWNiaUFnY0dGeWMyVW9ibTlrWlhNc0lITjBZWFJsTENCallXeHNZbUZqYXlrZ2UxeHVJQ0FnSUd4bGRDQndZWEp6WldRN1hHNWNiaUFnSUNCMGFHbHpMbkJoY25SekxuTnZiV1VvS0hCaGNuUXBJRDArSUh0Y2JpQWdJQ0FnSUhCaGNuTmxaQ0E5SUhCaGNuUXVjR0Z5YzJVb2JtOWtaWE1zSUhOMFlYUmxMQ0JqWVd4c1ltRmpheWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaHdZWEp6WldRcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU2s3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdjR0Z5YzJWa08xeHVJQ0I5WEc1Y2JpQWdZWE5UZEhKcGJtY29LU0I3WEc0Z0lDQWdZMjl1YzNRZ2NHRnlkSE5UZEhKcGJtY2dQU0IwYUdsekxuQmhjblJ6TG5KbFpIVmpaU2dvY0dGeWRITlRkSEpwYm1jc0lIQmhjblFwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSEJoY25SVGRISnBibWNnUFNCd1lYSjBMbUZ6VTNSeWFXNW5LQ2s3WEc0Z0lDQWdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jR0Z5ZEhOVGRISnBibWNnUFQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGeWRITlRkSEpwYm1jZ1BTQndZWEowVTNSeWFXNW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGeWRITlRkSEpwYm1jZ1BTQmdKSHR3WVhKMGMxTjBjbWx1WjMwZ2ZDQWtlM0JoY25SVGRISnBibWQ5WUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ3WVhKMGMxTjBjbWx1Wnp0Y2JpQWdJQ0FnSUNBZ0lDQjlMQ0J1ZFd4c0tTeGNiaUFnSUNBZ0lDQWdJQ0J6ZEhKcGJtY2dQU0JnS0NBa2UzQmhjblJ6VTNSeWFXNW5mU0FwWUR0Y2JpQWdJQ0JjYmlBZ0lDQnlaWFIxY200Z2MzUnlhVzVuTzF4dUlDQjlYRzVjYmlBZ1kyeHZibVVvS1NCN0lISmxkSFZ5YmlCemRYQmxjaTVqYkc5dVpTaERhRzlwWTJWUFpsQmhjblJ6VUdGeWRDd2dkR2hwY3k1d1lYSjBjeWs3SUgxY2JseHVJQ0J6ZEdGMGFXTWdabkp2YlU1dlpHVnpLRzV2WkdWektTQjdYRzRnSUNBZ1kyOXVjM1FnWVd4c1FuVjBSbWx5YzNSQmJtUk1ZWE4wVG05a1pYTWdQU0JoYkd4Q2RYUkdhWEp6ZEVGdVpFeGhjM1FvYm05a1pYTXBPMXh1WEc0Z0lDQWdibTlrWlhNZ1BTQmhiR3hDZFhSR2FYSnpkRUZ1WkV4aGMzUk9iMlJsY3pzZ0lDOHZMMXh1SUNBZ0lGeHVJQ0FnSUdOdmJuTjBJR1YyWlc1T2IyUmxjeUE5SUdWMlpXNG9ibTlrWlhNcE8xeHVYRzRnSUNBZ2JtOWtaWE1nUFNCbGRtVnVUbTlrWlhNN0lDQXZMeTljYmx4dUlDQWdJR052Ym5OMElHeHZiMnRCYUdWaFpDQTlJR1poYkhObExGeHVJQ0FnSUNBZ0lDQWdJSEJoY25SeklEMGdibTlrWlhNdWJXRndLQ2h1YjJSbEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCd1lYSjBJRDBnYm05a1pTNW5aVzVsY21GMFpWQmhjblFvYkc5dmEwRm9aV0ZrS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSEJoY25RN1hHNGdJQ0FnSUNBZ0lDQWdmU2tzWEc0Z0lDQWdJQ0FnSUNBZ1kyaHZhV05sVDJaUVlYSjBjMUJoY25RZ1BTQnVaWGNnUTJodmFXTmxUMlpRWVhKMGMxQmhjblFvY0dGeWRITXBPMXh1WEc0Z0lDQWdjbVYwZFhKdUlHTm9iMmxqWlU5bVVHRnlkSE5RWVhKME8xeHVJQ0I5WEc1OVhHNGlYU3dpYm1GdFpYTWlPbHNpUTJodmFXTmxUMlpRWVhKMGMxQmhjblFpTENKd1lYSjBjeUlzSW5SNWNHVWlMQ0pEYUc5cFkyVlBabEJoY25SelVHRnlkRlI1Y0dVaUxDSm5aWFJRWVhKMGN5SXNJbkJoY25ObElpd2libTlrWlhNaUxDSnpkR0YwWlNJc0ltTmhiR3hpWVdOcklpd2ljR0Z5YzJWa0lpd2ljMjl0WlNJc0luQmhjblFpTENKaGMxTjBjbWx1WnlJc0luQmhjblJ6VTNSeWFXNW5JaXdpY21Wa2RXTmxJaXdpY0dGeWRGTjBjbWx1WnlJc0luTjBjbWx1WnlJc0ltTnNiMjVsSWl3aVpuSnZiVTV2WkdWeklpd2lZV3hzUW5WMFJtbHljM1JCYm1STVlYTjBUbTlrWlhNaUxDSmhiR3hDZFhSR2FYSnpkRUZ1WkV4aGMzUWlMQ0psZG1WdVRtOWtaWE1pTENKbGRtVnVJaXdpYkc5dmEwRm9aV0ZrSWl3aWJXRndJaXdpYm05a1pTSXNJbWRsYm1WeVlYUmxVR0Z5ZENJc0ltTm9iMmxqWlU5bVVHRnlkSE5RWVhKMElpd2lUbTl1VkdWeWJXbHVZV3hRWVhKMElsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeERRVUZaTEZkQlFVRXNRMEZCUXpzN08wVkJRV0k3ZDBKQlFVRTdRVUZGTkVJc1IwRkJkMElzUTBGQmVFSXNXVUZCZDBJN1FVRkZaQ3hIUVVGcFFpeERRVUZxUWl4VlFVRnBRanRCUVVOa0xFZEJRWFZDTEVOQlFYWkNMRTFCUVhWQ096czdPenM3T3pzN096czdPenM3T0VSQlRHaEZPM05EUVVGQk96WkVRVUZCTzJsRlFVRkJPenM3TzNkRlFVRkJPMmRGUVVGQk96czdPenN3UWtGQlFUczdPenM3T3pzN096dFRRVUZCT3pzN096czdPMHRCUVVFN096czdPenM3T3pzN096czdUVUZCUVR0NVJFRkJRVHM3T3pzN096czdPenM3T3pzN08zVkNRVUZCT3p0TFFVRkJPenM3T3p0M1EwRkJRVHM3T3pzN096SkNRVUZCT3pzN096czdPenR4UmtGQlFUczdPenM3T3pzN096czdPMjFGUVVGQk96dHBSRUZCUVRzN096czdRVUZQWlN4SFFVRkxMRU5CUVVOQkxHbENRVUZwUWl4cFFrRkJka0lzVVVGQlVUdHBSRUZRZGtJN08yRkJUM0ZDUVN4cFFrRkJhVUlzUTBGRGVFSkRMRXRCUVVzN1owUkJVbTVDT3p0UlFWTkpMRWRCUVVzc1EwRkJRME1zU1VGQlNTeEhRVUZIUXl4VlFVRnhRaXgzUWtGQlJTeEZRVUZITEVGQlFVZ3NRMEZCUnp0clEwRkZha05FTEVsQlFVa3NRME5ZWkN4RFJGZG5RanRqUVVWUVJDeExRVUZMTEVkQlFVZEJMRXRCUVVzc1EwRkJRenM3T3pzN1dVRkhja0pITEVkQlFWRXNSVUZCVWtFc1EwRkJVVHR0UWtGQlVrRXNVVUZCVVN4RFFVRlNRU3hSUVVGUkxFZEJRVWNzUTBGQlF6dG5Ra0ZEVml4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRFNDeExRVUZMTzFsQlEyNUNMRU5CUVVNN096dFpRVVZFU1N4SFFVRkxMRVZCUVV4QkxFTkJRVXM3YlVKQlFVeEJMRkZCUVZFc1EwRkJVa0VzUzBGQlN5eERRVUZEUXl4TFFVRkxMRVZCUVVWRExFdEJRVXNzUlVGQlJVTXNVVUZCVVN4RlFVRkZMRU5CUVVNN1owSkJRemRDTEVkQlFVY3NRMEZCUTBNc1RVRkJUVHRuUWtGRlZpeEpRVUZKTEVOQlFVTlNMRXRCUVVzc1EwRkJRMU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCVUVNc1NVRkJTU3hGUVVGTExFTkJRVU03YjBKQlEzcENSaXhOUVVGTkxFZEJRVWRGTEVsQlFVa3NRMEZCUTA0c1MwRkJTeXhEUVVGRFF5eExRVUZMTEVWQlFVVkRMRXRCUVVzc1JVRkJSVU1zVVVGQlVTeERRVUZETEVOQlFVTTdiMEpCUlRWRExFVkJRVVVzUlVGQlJVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN2QwSkJRMWdzVFVGQlRTeERRVUZETEVsQlFVazdiMEpCUTJJc1EwRkJRenRuUWtGRFNDeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkZTQ3hOUVVGTkxFTkJRVU5CTEUxQlFVMDdXVUZEWml4RFFVRkRPenM3V1VGRlJFY3NSMEZCVVN4RlFVRlNRU3hEUVVGUk8yMUNRVUZTUVN4UlFVRlJMRU5CUVZKQkxGRkJRVkVzUjBGQlJ5eERRVUZETzJkQ1FVTldMRWRCUVVzc1EwRkJRME1zV1VGQlZ5eEhRVUZITEVsQlFVa3NRMEZCUTFvc1MwRkJTeXhEUVVGRFlTeE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRlFSQ3hYUVVGWExFVkJRVVZHTEVsQlFVa3NSVUZCU3l4RFFVRkRPMjlDUVVOMFJDeEhRVUZMTEVOQlFVTkpMRlZCUVZVc1IwRkJSMG9zU1VGQlNTeERRVUZEUXl4UlFVRlJPMjlDUVVWb1F5eEZRVUZGTEVWQlFVVkRMRmRCUVZjc1MwRkJTeXhKUVVGSkxFVkJRVVVzUTBGQlF6dDNRa0ZEZWtKQkxGZEJRVmNzUjBGQlIwVXNWVUZCVlN4RFFVRkRPMjlDUVVNelFpeERRVUZETEUxQlFVMHNRMEZCUXp0M1FrRkRUa1lzVjBGQlZ5eEhRVUZKTEVOQlFVRXNSVUZCYlVKRkxFMUJRVlVzUTBGQk0wSkdMRmRCUVZjc1JVRkJReXhEUVVGSExFMUJRV0VzVFVGQlFTeERRVUZZUlN4VlFVRlZMRU5CUVVVc1EwRkJRenR2UWtGRGFrUXNRMEZCUXp0dlFrRkZSQ3hOUVVGTkxFTkJRVU5HTEZkQlFWYzdaMEpCUTNCQ0xFTkJRVU1zUlVGQlJTeEpRVUZKTEVkQlExQkhMRTFCUVUwc1IwRkJTU3hEUVVGRkxFbEJRV01zVFVGQlJTeERRVUZrU0N4WlFVRlhMRVZCUVVNc1EwRkJSVHRuUWtGRmJFTXNUVUZCVFN4RFFVRkRSeXhOUVVGTk8xbEJRMllzUTBGQlF6czdPMWxCUlVSRExFZEJRVXNzUlVGQlRFRXNRMEZCU3p0dFFrRkJURUVzVVVGQlVTeERRVUZTUVN4TFFVRkxMRWRCUVVjc1EwRkJRenRuUWtGQlF5eE5RVUZOTEhOQ1FUVkRSMnBDTEdsQ1FVRnBRaXhoUVRSRFltbENMRU5CUVVzc1VVRkJXQ3hKUVVGTExHRkJRVTlxUWl4cFFrRkJhVUlzUlVGQlJTeEpRVUZKTEVOQlFVTkRMRXRCUVVzN1dVRkJSeXhEUVVGRE96czdPMWxCUlhaRWFVSXNSMEZCVXl4RlFVRlVRU3hEUVVGVE8yMUNRVUZvUWl4UlFVRlJMRU5CUVVSQkxGTkJRVk1zUTBGQlExb3NTMEZCU3l4RlFVRkZMRU5CUVVNN1owSkJRM1pDTEVkQlFVc3NRMEZCUTJFc2RVSkJRWFZDTEU5QlFVZERMRTFCUVd0Q0xIRkNRVUZEWkN4TFFVRkxPMmRDUVVWNFJFRXNTMEZCU3l4SFFVRkhZU3gxUWtGQmRVSXNRMEZCUXl4RFFVRkZMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVZ5UXl4SFFVRkxMRU5CUVVORkxGTkJRVk1zVDBGQlIwTXNUVUZCU1N4UFFVRkRhRUlzUzBGQlN6dG5Ra0ZGTlVKQkxFdEJRVXNzUjBGQlIyVXNVMEZCVXl4RFFVRkRMRU5CUVVVc1JVRkJSeXhCUVVGSUxFTkJRVWM3WjBKQlJYWkNMRWRCUVVzc1EwRkJRMFVzVTBGQlV5eEhRVUZITEV0QlFVc3NSVUZEYWtKMFFpeExRVUZMTEVkQlFVZExMRXRCUVVzc1EwRkJRMnRDTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVZCRExFbEJRVWtzUlVGQlN5eERRVUZETzI5Q1FVTXpRaXhIUVVGTExFTkJRVU5rTEVsQlFVa3NSMEZCUjJNc1NVRkJTU3hEUVVGRFF5eFpRVUZaTEVOQlFVTklMRk5CUVZNN2IwSkJSWGhETEUxQlFVMHNRMEZCUTFvc1NVRkJTVHRuUWtGRFlpeERRVUZETEVkQlEwUm5RaXhwUWtGQmFVSXNSMEZCUnl4SFFVRkhMRU5CUVVNelFpeHBRa0ZCYVVJc1EwRkJRME1zUzBGQlN6dG5Ra0ZGY2tRc1RVRkJUU3hEUVVGRE1FSXNhVUpCUVdsQ08xbEJRekZDTEVOQlFVTTdPMDFCZGtWSU96dEZRVThyUTBNc1dVRkJaVHRyUWtGQmVrTTFRaXhwUWtGQmFVSXNRVUZRZEVNaWZRPT0iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgUnVsZU5hbWVQYXJ0IGZyb20gXCIuLi9wYXJ0L25vblRlcm1pbmFsL3J1bGVOYW1lXCI7XG5pbXBvcnQgQ2hvaWNlT2ZQYXJ0c1BhcnQgZnJvbSBcIi4uL3BhcnQvbm9uVGVybWluYWwvY2hvaWNlT2ZQYXJ0c1wiO1xuaW1wb3J0IE9uZU9yTW9yZVBhcnRzUGFydCBmcm9tIFwiLi4vcGFydC9ub25UZXJtaW5hbC9vbmVPck1vcmVQYXJ0c1wiO1xuXG5pbXBvcnQgeyBSdWxlUnVsZU5hbWUsIEVycm9yUnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERvY3VtZW50RGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBydWxlUnVsZU5hbWUgPSBSdWxlUnVsZU5hbWUsXG4gICAgICAgICAgZXJyb3JSdWxlTmFtZSA9IEVycm9yUnVsZU5hbWUsXG4gICAgICAgICAgcnVsZVJ1bGVOYW1lUGFydCA9IG5ldyBSdWxlTmFtZVBhcnQocnVsZVJ1bGVOYW1lKSxcbiAgICAgICAgICBlcnJvclJ1bGVOYW1lUGFydCA9IG5ldyBSdWxlTmFtZVBhcnQoZXJyb3JSdWxlTmFtZSksXG4gICAgICAgICAgcnVsZVJ1bGVOYW1lQW5kRXJyb3JSdWxlTmFtZVBhcnRzID0gW1xuICAgICAgICAgICAgcnVsZVJ1bGVOYW1lUGFydCxcbiAgICAgICAgICAgIGVycm9yUnVsZU5hbWVQYXJ0XG4gICAgICAgICAgXSxcbiAgICAgICAgICBjaG9pY2VPZlJ1bGVSdWxlTmFtZUFuZEVycm9yUnVsZU5hbWVQYXJ0c1BhcnQgPSBuZXcgQ2hvaWNlT2ZQYXJ0c1BhcnQocnVsZVJ1bGVOYW1lQW5kRXJyb3JSdWxlTmFtZVBhcnRzKSxcbiAgICAgICAgICBvbmVPck1vcmVDaG9pY2VPZlJ1bGVSdWxlTmFtZUFuZEVycm9yUnVsZU5hbWVQYXJ0c1BhcnRzUGFydCA9IG5ldyBPbmVPck1vcmVQYXJ0c1BhcnQoY2hvaWNlT2ZSdWxlUnVsZU5hbWVBbmRFcnJvclJ1bGVOYW1lUGFydHNQYXJ0KSxcbiAgICAgICAgICBwYXJ0cyA9IFtcbiAgICAgICAgICAgIG9uZU9yTW9yZUNob2ljZU9mUnVsZVJ1bGVOYW1lQW5kRXJyb3JSdWxlTmFtZVBhcnRzUGFydHNQYXJ0XG4gICAgICAgICAgXTtcbiAgICBcbiAgICBzdXBlcihwYXJ0cylcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IERvY3VtZW50Qk5GTm9kZSBmcm9tIFwiLi4vbm9kZS9ibmYvZG9jdW1lbnRcIjtcbmltcG9ydCBEb2N1bWVudERlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb24vZG9jdW1lbnRcIjtcblxuaW1wb3J0IHsgRG9jdW1lbnRSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRG9jdW1lbnRSdWxlIGV4dGVuZHMgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IGRvY3VtZW50RGVmaW5pdGlvbiA9IG5ldyBEb2N1bWVudERlZmluaXRpb24oKSxcbiAgICAgICAgICBuYW1lID0gRG9jdW1lbnRSdWxlTmFtZSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIGRvY3VtZW50RGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IERvY3VtZW50Qk5GTm9kZTtcbiAgICBcbiAgICBzdXBlcihuYW1lLCBkZWZpbml0aW9ucywgTm9kZSlcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgUnVsZU5hbWVQYXJ0IGZyb20gXCIuLi8uLi9wYXJ0L25vblRlcm1pbmFsL3J1bGVOYW1lXCI7XG5pbXBvcnQgTm9uVGVybWluYWxOb2RlIGZyb20gXCIuLi8uLi9ub2RlL25vblRlcm1pbmFsXCI7XG5cbmltcG9ydCB7IGZpcnN0IH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9hcnJheVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlTmFtZUJORk5vZGUgZXh0ZW5kcyBOb25UZXJtaW5hbE5vZGUge1xuICBnZW5lcmF0ZVBhcnQobG9va0FoZWFkKSB7XG4gICAgY29uc3QgcnVsZU5hbWUgPSB0aGlzLmdldFJ1bGVOYW1lKCksXG4gICAgICAgICAgcnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChydWxlTmFtZSwgbG9va0FoZWFkKTtcblxuICAgIHJldHVybiBydWxlTmFtZVBhcnQ7XG4gIH1cblxuICBnZXRSdWxlTmFtZSgpIHtcbiAgICBjb25zdCBjaGlsZE5vZGVzID0gdGhpcy5nZXRDaGlsZE5vZGVzKCksXG4gICAgICAgICAgZmlyc3RDaGlsZE5vZGUgPSBmaXJzdChjaGlsZE5vZGVzKSxcbiAgICAgICAgICB0ZXJtaW5hbE5vZGUgPSBmaXJzdENoaWxkTm9kZSwgIC8vL1xuICAgICAgICAgIHRlcm1pbmFsTm9kZUNvbnRlbnQgPSB0ZXJtaW5hbE5vZGUuZ2V0Q29udGVudCgpLFxuICAgICAgICAgIHJ1bGVOYW1lID0gdGVybWluYWxOb2RlQ29udGVudDsgLy8vXG4gICAgXG4gICAgcmV0dXJuIHJ1bGVOYW1lO1xuICB9XG5cbiAgc3RhdGljIGZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHsgcmV0dXJuIE5vblRlcm1pbmFsTm9kZS5mcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKFJ1bGVOYW1lQk5GTm9kZSwgcnVsZU5hbWUsIGNoaWxkTm9kZXMpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgTmFtZURlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb24vbmFtZVwiO1xuaW1wb3J0IFJ1bGVOYW1lQk5GTm9kZSBmcm9tIFwiLi4vbm9kZS9ibmYvcnVsZU5hbWVcIjtcblxuaW1wb3J0IHsgUnVsZU5hbWVSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUnVsZU5hbWVSdWxlIGV4dGVuZHMgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IG5hbWVEZWZpbml0aW9uID0gbmV3IE5hbWVEZWZpbml0aW9uKCksXG4gICAgICAgICAgbmFtZSA9IFJ1bGVOYW1lUnVsZU5hbWUsXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBuYW1lRGVmaW5pdGlvbiAgLy8vXG4gICAgICAgICAgXSxcbiAgICAgICAgICBOb2RlID0gUnVsZU5hbWVCTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBXaWxkY2FyZFBhcnQgZnJvbSBcIi4uLy4uL3BhcnQvdGVybWluYWwvd2lsZGNhcmRcIjtcbmltcG9ydCBOb25UZXJtaW5hbE5vZGUgZnJvbSBcIi4uLy4uL25vZGUvbm9uVGVybWluYWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2lsZGNhcmRCTkZOb2RlIGV4dGVuZHMgTm9uVGVybWluYWxOb2RlIHtcbiAgZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCkge1xuICAgIGNvbnN0IHdpbGRjYXJkUGFydCA9IG5ldyBXaWxkY2FyZFBhcnQoKTtcblxuICAgIHJldHVybiB3aWxkY2FyZFBhcnQ7XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhydWxlTmFtZSwgY2hpbGROb2RlcykgeyByZXR1cm4gTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoV2lsZGNhcmRCTkZOb2RlLCBydWxlTmFtZSwgY2hpbGROb2Rlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IERlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb25cIjtcbmltcG9ydCBUZXJtaW5hbFN5bWJvbFBhcnQgZnJvbSBcIi4uL3BhcnQvdGVybWluYWwvdGVybWluYWxTeW1ib2xcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVybWluYWxTeW1ib2xEZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIGNvbnN0cnVjdG9yKGNvbnRlbnQpIHtcbiAgICBjb25zdCB0ZXJtaW5hbFN5bWJvbFBhcnQgPSBuZXcgVGVybWluYWxTeW1ib2xQYXJ0KGNvbnRlbnQpLFxuICAgICAgICAgIHBhcnRzID0gW1xuICAgICAgICAgICAgdGVybWluYWxTeW1ib2xQYXJ0XG4gICAgICAgICAgXTtcbiAgICBcbiAgICBzdXBlcihwYXJ0cylcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzcGVjaWFsU3ltYm9scyB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcblxuaW1wb3J0IFJ1bGUgZnJvbSBcIi4uL3J1bGVcIjtcbmltcG9ydCBXaWxkY2FyZEJORk5vZGUgZnJvbSBcIi4uL25vZGUvYm5mL3dpbGRjYXJkXCI7XG5pbXBvcnQgVGVybWluYWxTeW1ib2xEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3Rlcm1pbmFsU3ltYm9sXCI7XG5cbmltcG9ydCB7IFdpbGRjYXJkUnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmNvbnN0IHsgd2lsZGNhcmQgfSA9IHNwZWNpYWxTeW1ib2xzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXaWxkY2FyZFJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3Qgd2lsZGNhcmRUZXJtaW5hbFN5bWJvbENvbnRlbnQgPSB3aWxkY2FyZCxcbiAgICAgICAgICB3aWxkY2FyZFRlcm1pbmFsU3ltYm9sRGVmaW5pdGlvbiA9IG5ldyBUZXJtaW5hbFN5bWJvbERlZmluaXRpb24od2lsZGNhcmRUZXJtaW5hbFN5bWJvbENvbnRlbnQpLFxuICAgICAgICAgIG5hbWUgPSBXaWxkY2FyZFJ1bGVOYW1lLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgd2lsZGNhcmRUZXJtaW5hbFN5bWJvbERlZmluaXRpb25cbiAgICAgICAgICBdLFxuICAgICAgICAgIE5vZGUgPSBXaWxkY2FyZEJORk5vZGU7XG5cbiAgICBzdXBlcihuYW1lLCBkZWZpbml0aW9ucywgTm9kZSlcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzcGVjaWFsU3ltYm9scyB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcblxuaW1wb3J0IFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlIGZyb20gXCIuL3ZlcnRpY2FsQnJhbmNoXCI7XG5cbmNvbnN0IHsgRU5EX09GX0xJTkUgfSA9IHNwZWNpYWxTeW1ib2xzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmRPZkxpbmVCTkZOb2RlUGFyc2VUcmVlIGV4dGVuZHMgVmVydGljYWxCcmFuY2hQYXJzZVRyZWUge1xuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7XG4gICAgY29uc3Qgc3RyaW5nID0gRU5EX09GX0xJTkUsIC8vL1xuICAgICAgICAgIHN0cmluZ0xlbmd0aCA9IHN0cmluZy5sZW5ndGgsXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQYXJzZVRyZWVXaWR0aCA9IHN0cmluZ0xlbmd0aCwgLy8vXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQYXJzZVRyZWUgPSBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5mcm9tV2lkdGgodmVydGljYWxCcmFuY2hQYXJzZVRyZWVXaWR0aCksXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmdldFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oKSxcbiAgICAgICAgICB0ZXJtaW5hbE5vZGVQYXJzZVRyZWUgPSBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5mcm9tU3RyaW5nQW5kVmVydGljYWxCcmFuY2hQb3NpdGlvbihFbmRPZkxpbmVCTkZOb2RlUGFyc2VUcmVlLCBzdHJpbmcsIHZlcnRpY2FsQnJhbmNoUG9zaXRpb24pO1xuXG4gICAgdGVybWluYWxOb2RlUGFyc2VUcmVlLmFwcGVuZFRvVG9wKHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlKTtcblxuICAgIGNvbnN0IGVuZE9mTGluZUJORk5vZGVQYXJzZVRyZWUgPSB0ZXJtaW5hbE5vZGVQYXJzZVRyZWU7IC8vL1xuXG4gICAgcmV0dXJuIGVuZE9mTGluZUJORk5vZGVQYXJzZVRyZWU7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRlcm1pbmFsTm9kZSBmcm9tIFwiLi4vdGVybWluYWxcIjtcbmltcG9ydCBFbmRPZkxpbmVCTkZOb2RlUGFyc2VUcmVlIGZyb20gXCIuLi8uLi9wYXJzZVRyZWUvZW5kT2ZMaW5lTm9kZVwiO1xuXG5pbXBvcnQgeyBFTVBUWV9TVFJJTkcgfSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZE9mTGluZUJORk5vZGUgZXh0ZW5kcyBUZXJtaW5hbE5vZGUge1xuICBnZXRDb250ZW50KCkge1xuICAgIGNvbnN0IGNvbnRlbnQgPSBFTVBUWV9TVFJJTkc7XG5cbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGFzUGFyc2VUcmVlKHRva2Vucykge1xuICAgIGNvbnN0IGVuZE9mTGluZUJORk5vZGVQYXJzZVRyZWUgPSBFbmRPZkxpbmVCTkZOb2RlUGFyc2VUcmVlLmZyb21Ob3RoaW5nKCksXG4gICAgICAgICAgcGFyc2VUcmVlID0gZW5kT2ZMaW5lQk5GTm9kZVBhcnNlVHJlZTsgIC8vL1xuXG4gICAgcmV0dXJuIHBhcnNlVHJlZTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tU2lnbmlmaWNhbnRUb2tlbihzaWduaWZpY2FudFRva2VuKSB7IHJldHVybiBUZXJtaW5hbE5vZGUuZnJvbVNpZ25pZmljYW50VG9rZW4oRW5kT2ZMaW5lQk5GTm9kZSwgc2lnbmlmaWNhbnRUb2tlbik7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgc3BlY2lhbFN5bWJvbHMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBUZXJtaW5hbFBhcnQgZnJvbSBcIi4uLy4uL3BhcnQvdGVybWluYWxcIjtcbmltcG9ydCBFbmRPZkxpbmVCTkZOb2RlIGZyb20gXCIuLi8uLi9ub2RlL3Rlcm1pbmFsL2VuZE9mTGluZVwiO1xuXG5jb25zdCB7IEVORF9PRl9MSU5FIH0gPSBzcGVjaWFsU3ltYm9scztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW5kT2ZMaW5lUGFydCBleHRlbmRzIFRlcm1pbmFsUGFydCB7XG4gIHBhcnNlKG5vZGVzLCBzdGF0ZSwgY2FsbGJhY2spIHtcbiAgICBsZXQgcGFyc2VkO1xuXG4gICAgbGV0IGVuZE9mTGluZUJORk5vZGUgPSBudWxsO1xuICAgIFxuICAgIGNvbnN0IHNhdmVkSW5kZXggPSBzdGF0ZS5nZXRTYXZlZEluZGV4KCksXG5cdFx0ICAgICAgbmV4dFNpZ25pZmljYW50VG9rZW4gPSBzdGF0ZS5nZXROZXh0U2lnbmlmaWNhbnRUb2tlbigpLFxuICAgICAgICAgIHNpZ25pZmljYW50VG9rZW4gPSBuZXh0U2lnbmlmaWNhbnRUb2tlbjsgLy8vXG5cbiAgICBpZiAoc2lnbmlmaWNhbnRUb2tlbiAhPT0gbnVsbCkge1xuICAgICAgY29uc3Qgc2lnbmlmaWNhbnRUb2tlbkVuZE9mTGluZVRva2VuID0gc2lnbmlmaWNhbnRUb2tlbi5pc0VuZE9mTGluZVRva2VuKCk7XG5cbiAgICAgIGlmIChzaWduaWZpY2FudFRva2VuRW5kT2ZMaW5lVG9rZW4pIHtcbiAgICAgICAgZW5kT2ZMaW5lQk5GTm9kZSA9IEVuZE9mTGluZUJORk5vZGUuZnJvbVNpZ25pZmljYW50VG9rZW4oc2lnbmlmaWNhbnRUb2tlbik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcGFyc2VkID0gKGVuZE9mTGluZUJORk5vZGUgIT09IG51bGwpO1xuXG4gICAgaWYgKHBhcnNlZCkge1xuICAgICAgbm9kZXMucHVzaChlbmRPZkxpbmVCTkZOb2RlKTtcblxuICAgICAgaWYgKGNhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICAgIHBhcnNlZCA9IGNhbGxiYWNrKCk7XG5cbiAgICAgICAgaWYgKCFwYXJzZWQpIHtcbiAgICAgICAgICBub2Rlcy5wb3AoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghcGFyc2VkKSB7XG4gICAgICBzdGF0ZS5iYWNrdHJhY2soc2F2ZWRJbmRleCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcnNlZDtcbiAgfVxuXG4gIGFzU3RyaW5nKCkge1xuICAgIGNvbnN0IHN0cmluZyA9IEVORF9PRl9MSU5FOyAvLy9cblxuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cblxuICBjbG9uZSgpIHsgcmV0dXJuIHN1cGVyLmNsb25lKEVuZE9mTGluZVBhcnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBFbmRPZkxpbmVQYXJ0IGZyb20gXCIuLi8uLi9wYXJ0L3Rlcm1pbmFsL2VuZE9mTGluZVwiO1xuaW1wb3J0IE5vblRlcm1pbmFsTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9ub25UZXJtaW5hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmRPZkxpbmVCTkZOb2RlIGV4dGVuZHMgTm9uVGVybWluYWxOb2RlIHtcbiAgZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCkge1xuICAgIGNvbnN0IGVuZE9mTGluZVBhcnQgPSBuZXcgRW5kT2ZMaW5lUGFydCgpO1xuXG4gICAgcmV0dXJuIGVuZE9mTGluZVBhcnQ7XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhydWxlTmFtZSwgY2hpbGROb2RlcykgeyByZXR1cm4gTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoRW5kT2ZMaW5lQk5GTm9kZSwgcnVsZU5hbWUsIGNoaWxkTm9kZXMpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNwZWNpYWxTeW1ib2xzIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IEVuZE9mTGluZUJORk5vZGUgZnJvbSBcIi4uL25vZGUvYm5mL2VuZE9mTGluZVwiO1xuaW1wb3J0IFRlcm1pbmFsU3ltYm9sRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi90ZXJtaW5hbFN5bWJvbFwiO1xuXG5pbXBvcnQgeyBFbmRPZkxpbmVSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuY29uc3QgeyBFTkRfT0ZfTElORSB9ID0gc3BlY2lhbFN5bWJvbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZE9mTGluZVJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgZW5kT2ZMaW5lVGVybWluYWxTeW1ib2xDb250ZW50ID0gRU5EX09GX0xJTkUsXG4gICAgICAgICAgZW5kT2ZMaW5lVGVybWluYWxTeW1ib2xEZWZpbml0aW9uID0gbmV3IFRlcm1pbmFsU3ltYm9sRGVmaW5pdGlvbihlbmRPZkxpbmVUZXJtaW5hbFN5bWJvbENvbnRlbnQpLFxuICAgICAgICAgIG5hbWUgPSBFbmRPZkxpbmVSdWxlTmFtZSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIGVuZE9mTGluZVRlcm1pbmFsU3ltYm9sRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IEVuZE9mTGluZUJORk5vZGU7XG5cbiAgICBzdXBlcihuYW1lLCBkZWZpbml0aW9ucywgTm9kZSlcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IFBhcnRCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9wYXJ0XCI7XG5pbXBvcnQgUnVsZU5hbWVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3J1bGVOYW1lXCI7XG5cbmltcG9ydCB7IFF1YW50aWZpZXJSdWxlTmFtZSwgT3B0aW9uYWxRdWFudGlmaWVyUnVsZU5hbWUsIE9uZU9yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSwgWmVyb09yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUXVhbnRpZmllclJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgbmFtZSA9IFF1YW50aWZpZXJSdWxlTmFtZSxcbiAgICAgICAgICBvcHRpb25hbFF1YW50aWZpZXJSdWxlTmFtZSA9IE9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lLFxuICAgICAgICAgIG9uZU9yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSA9IE9uZU9yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSxcbiAgICAgICAgICB6ZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lID0gWmVyb09yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSxcbiAgICAgICAgICBvcHRpb25hbFF1YW50aWZpZXJSdWxlTmFtZURlZmluaXRpb24gPSBuZXcgUnVsZU5hbWVEZWZpbml0aW9uKG9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lKSxcbiAgICAgICAgICBvbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbihvbmVPck1vcmVRdWFudGlmaWVyUnVsZU5hbWUpLFxuICAgICAgICAgIHplcm9Pck1vcmVRdWFudGlmaWVyUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbih6ZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lKSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIG9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lRGVmaW5pdGlvbixcbiAgICAgICAgICAgIG9uZU9yTW9yZVF1YW50aWZpZXJSdWxlTmFtZURlZmluaXRpb24sXG4gICAgICAgICAgICB6ZXJvT3JNb3JlUXVhbnRpZmllclJ1bGVOYW1lRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IFBhcnRCTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi8uLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgTm9uVGVybWluYWxOb2RlIGZyb20gXCIuLi8uLi9ub2RlL25vblRlcm1pbmFsXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlZmluaXRpb25CTkZOb2RlIGV4dGVuZHMgTm9uVGVybWluYWxOb2RlIHtcbiAgZ2VuZXJhdGVEZWZpbml0aW9uKCkge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSB0aGlzLmdldENoaWxkTm9kZXMoKSxcbiAgICAgICAgICBwYXJ0Tm9kZXMgPSBjaGlsZE5vZGVzLCAvLy9cbiAgICAgICAgICBsb29rQWhlYWQgPSBmYWxzZSwgIC8vL1xuICAgICAgICAgIHBhcnRzID0gcGFydE5vZGVzLm1hcCgocGFydE5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnQgPSBwYXJ0Tm9kZS5nZW5lcmF0ZVBhcnQobG9va0FoZWFkKTtcbiAgXG4gICAgICAgICAgICByZXR1cm4gcGFydDtcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBkZWZpbml0aW9uID0gbmV3IERlZmluaXRpb24ocGFydHMpO1xuXG4gICAgcmV0dXJuIGRlZmluaXRpb247XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhydWxlTmFtZSwgY2hpbGROb2RlcykgeyByZXR1cm4gTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoRGVmaW5pdGlvbkJORk5vZGUsIHJ1bGVOYW1lLCBjaGlsZE5vZGVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvblwiO1xuaW1wb3J0IFJ1bGVOYW1lUGFydCBmcm9tIFwiLi4vcGFydC9ub25UZXJtaW5hbC9ydWxlTmFtZVwiO1xuaW1wb3J0IE9uZU9yTW9yZVBhcnRzUGFydCBmcm9tIFwiLi4vcGFydC9ub25UZXJtaW5hbC9vbmVPck1vcmVQYXJ0c1wiO1xuXG5pbXBvcnQgeyBQYXJ0UnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlZmluaXRpb25EZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHBhcnRSdWxlTmFtZSA9IFBhcnRSdWxlTmFtZSxcbiAgICAgICAgICBwYXJ0UnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChwYXJ0UnVsZU5hbWUpLFxuICAgICAgICAgIG9uZU9yTW9yZVJ1bGVOYW1lUGFydHNQYXJ0ID0gbmV3IE9uZU9yTW9yZVBhcnRzUGFydChwYXJ0UnVsZU5hbWVQYXJ0KSxcbiAgICAgICAgICBwYXJ0cyA9IFtcbiAgICAgICAgICAgIG9uZU9yTW9yZVJ1bGVOYW1lUGFydHNQYXJ0XG4gICAgICAgICAgXTtcblxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgRGVmaW5pdGlvbkJORk5vZGUgZnJvbSBcIi4uL25vZGUvYm5mL2RlZmluaXRpb25cIjtcbmltcG9ydCBEZWZpbml0aW9uRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9kZWZpbml0aW9uXCI7XG5cbmltcG9ydCB7IERlZmluaXRpb25SdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGVmaW5pdGlvblJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgbmFtZSA9IERlZmluaXRpb25SdWxlTmFtZSxcbiAgICAgICAgICBkZWZpbml0aW9uRGVmaW5pdGlvbiA9IG5ldyBEZWZpbml0aW9uRGVmaW5pdGlvbigpLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgZGVmaW5pdGlvbkRlZmluaXRpb25cbiAgICAgICAgICBdLFxuICAgICAgICAgIE5vZGUgPSBEZWZpbml0aW9uQk5GTm9kZTtcbiAgICBcbiAgICBzdXBlcihuYW1lLCBkZWZpbml0aW9ucywgTm9kZSlcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uVGVybWluYWxOb2RlIGZyb20gXCIuLi8uLi9ub2RlL25vblRlcm1pbmFsXCI7XG5cbmltcG9ydCB7IGV2ZW4gfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2FycmF5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlZmluaXRpb25zQk5GTm9kZSBleHRlbmRzIE5vblRlcm1pbmFsTm9kZSB7XG4gIGdlbmVyYXRlRGVmaW5pdGlvbnMoKSB7XG4gICAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLFxuICAgICAgICAgIGV2ZW5DaGlsZE5vZGVzID0gZXZlbihjaGlsZE5vZGVzKSwgIC8vL1xuICAgICAgICAgIGRlZmluaXRpb25Ob2RlcyA9IGV2ZW5DaGlsZE5vZGVzLCAvLy9cbiAgICAgICAgICBkZWZpbml0aW9ucyA9IGRlZmluaXRpb25Ob2Rlcy5tYXAoKGRlZmluaXRpb25Ob2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWZpbml0aW9uID0gZGVmaW5pdGlvbk5vZGUuZ2VuZXJhdGVEZWZpbml0aW9uKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBkZWZpbml0aW9uO1xuICAgICAgICAgIH0pO1xuICAgIFxuICAgIHJldHVybiBkZWZpbml0aW9ucztcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKHJ1bGVOYW1lLCBjaGlsZE5vZGVzKSB7IHJldHVybiBOb25UZXJtaW5hbE5vZGUuZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhEZWZpbml0aW9uc0JORk5vZGUsIHJ1bGVOYW1lLCBjaGlsZE5vZGVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9ub25UZXJtaW5hbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL3BhcnQvbm9uVGVybWluYWxcIikpO1xudmFyIF9hcnJheSA9IHJlcXVpcmUoXCIuLi8uLi91dGlsaXRpZXMvYXJyYXlcIik7XG52YXIgX2xvb2tBaGVhZCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsaXRpZXMvbG9va0FoZWFkXCIpO1xudmFyIF9wYXJ0VHlwZXMgPSByZXF1aXJlKFwiLi4vLi4vcGFydFR5cGVzXCIpO1xuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7XG4gICAgICAgIF9nZXQgPSBSZWZsZWN0LmdldDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgICAgICAgICAgdmFyIGJhc2UgPSBfc3VwZXJQcm9wQmFzZSh0YXJnZXQsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmICghYmFzZSkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGlmIChkZXNjLmdldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkZXNjLnZhbHVlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpO1xufVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICAgIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgICAgICByZXR1cm4gY2FsbDtcbiAgICB9XG4gICAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgICB3aGlsZSghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKXtcbiAgICAgICAgb2JqZWN0ID0gX2dldFByb3RvdHlwZU9mKG9iamVjdCk7XG4gICAgICAgIGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgU2VxdWVuY2VPZlBhcnRzUGFydCA9IC8qI19fUFVSRV9fKi8gZnVuY3Rpb24oTm9uVGVybWluYWxQYXJ0KSB7XG4gICAgX2luaGVyaXRzKFNlcXVlbmNlT2ZQYXJ0c1BhcnQsIE5vblRlcm1pbmFsUGFydCk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihTZXF1ZW5jZU9mUGFydHNQYXJ0KTtcbiAgICBmdW5jdGlvbiBTZXF1ZW5jZU9mUGFydHNQYXJ0KHBhcnRzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZXF1ZW5jZU9mUGFydHNQYXJ0KTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICB2YXIgdHlwZSA9IF9wYXJ0VHlwZXMuU2VxdWVuY2VPZlBhcnRzUGFydFR5cGU7IC8vL1xuICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHR5cGUpO1xuICAgICAgICBfdGhpcy5wYXJ0cyA9IHBhcnRzO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIF9jcmVhdGVDbGFzcyhTZXF1ZW5jZU9mUGFydHNQYXJ0LCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRQYXJ0c1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBhcnRzKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnBhcnRzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwicGFyc2VcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBwYXJzZShub2Rlcywgc3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnNlZDtcbiAgICAgICAgICAgICAgICB2YXIgc2F2ZWRJbmRleCA9IHN0YXRlLmdldFNhdmVkSW5kZXgoKSwgcGFydHNOb2RlcyA9IFtdLCBpbmRleCA9IDA7XG4gICAgICAgICAgICAgICAgcGFyc2VkID0gKDAsIF9sb29rQWhlYWQpLnBhcnNlUGFydHModGhpcy5wYXJ0cywgcGFydHNOb2RlcywgaW5kZXgsIHN0YXRlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlZCkge1xuICAgICAgICAgICAgICAgICAgICAoMCwgX2FycmF5KS5wdXNoKG5vZGVzLCBwYXJ0c05vZGVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFwYXJzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGUuYmFja3RyYWNrKHNhdmVkSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiYXNTdHJpbmdcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBhc1N0cmluZygpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFydHNTdHJpbmcxID0gdGhpcy5wYXJ0cy5yZWR1Y2UoZnVuY3Rpb24ocGFydHNTdHJpbmcsIHBhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnRTdHJpbmcgPSBwYXJ0LmFzU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0c1N0cmluZyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFydHNTdHJpbmcgPSBwYXJ0U3RyaW5nO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFydHNTdHJpbmcgPSBcIlwiLmNvbmNhdChwYXJ0c1N0cmluZywgXCIgXCIpLmNvbmNhdChwYXJ0U3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGFydHNTdHJpbmc7XG4gICAgICAgICAgICAgICAgfSwgbnVsbCksIHN0cmluZyA9IFwiKCBcIi5jb25jYXQocGFydHNTdHJpbmcxLCBcIiApXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjbG9uZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0KF9nZXRQcm90b3R5cGVPZihTZXF1ZW5jZU9mUGFydHNQYXJ0LnByb3RvdHlwZSksIFwiY2xvbmVcIiwgdGhpcykuY2FsbCh0aGlzLCBTZXF1ZW5jZU9mUGFydHNQYXJ0LCB0aGlzLnBhcnRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0sIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImZyb21Ob2Rlc1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21Ob2Rlcyhub2Rlcykge1xuICAgICAgICAgICAgICAgIHZhciBhbGxCdXRGaXJzdEFuZExhc3ROb2RlcyA9ICgwLCBfYXJyYXkpLmFsbEJ1dEZpcnN0QW5kTGFzdChub2Rlcyk7XG4gICAgICAgICAgICAgICAgbm9kZXMgPSBhbGxCdXRGaXJzdEFuZExhc3ROb2RlczsgLy8vXG4gICAgICAgICAgICAgICAgdmFyIGxvb2tBaGVhZCA9IGZhbHNlLCBwYXJ0cyA9IG5vZGVzLm1hcChmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJ0ID0gbm9kZS5nZW5lcmF0ZVBhcnQobG9va0FoZWFkKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgICAgICAgICAgfSksIHNlcXVlbmNlT2ZQYXJ0c1BhcnQgPSBuZXcgU2VxdWVuY2VPZlBhcnRzUGFydChwYXJ0cyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlcXVlbmNlT2ZQYXJ0c1BhcnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdKTtcbiAgICByZXR1cm4gU2VxdWVuY2VPZlBhcnRzUGFydDtcbn0oX25vblRlcm1pbmFsLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gU2VxdWVuY2VPZlBhcnRzUGFydDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OXdZWEowTDI1dmJsUmxjbTFwYm1Gc0wzTmxjWFZsYm1ObFQyWlFZWEowY3k1cWN5SmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpjSW5WelpTQnpkSEpwWTNSY0lqdGNibHh1YVcxd2IzSjBJRTV2YmxSbGNtMXBibUZzVUdGeWRDQm1jbTl0SUZ3aUxpNHZMaTR2Y0dGeWRDOXViMjVVWlhKdGFXNWhiRndpTzF4dVhHNXBiWEJ2Y25RZ2V5QndkWE5vSUgwZ1puSnZiU0JjSWk0dUx5NHVMM1YwYVd4cGRHbGxjeTloY25KaGVWd2lPMXh1YVcxd2IzSjBJSHNnY0dGeWMyVlFZWEowY3lCOUlHWnliMjBnWENJdUxpOHVMaTkxZEdsc2FYUnBaWE12Ykc5dmEwRm9aV0ZrWENJN1hHNXBiWEJ2Y25RZ2V5QmhiR3hDZFhSR2FYSnpkRUZ1WkV4aGMzUWdmU0JtY205dElGd2lMaTR2TGk0dmRYUnBiR2wwYVdWekwyRnljbUY1WENJN1hHNXBiWEJ2Y25RZ2V5QlRaWEYxWlc1alpVOW1VR0Z5ZEhOUVlYSjBWSGx3WlNCOUlHWnliMjBnWENJdUxpOHVMaTl3WVhKMFZIbHdaWE5jSWp0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1kyeGhjM01nVTJWeGRXVnVZMlZQWmxCaGNuUnpVR0Z5ZENCbGVIUmxibVJ6SUU1dmJsUmxjbTFwYm1Gc1VHRnlkQ0I3WEc0Z0lHTnZibk4wY25WamRHOXlLSEJoY25SektTQjdYRzRnSUNBZ1kyOXVjM1FnZEhsd1pTQTlJRk5sY1hWbGJtTmxUMlpRWVhKMGMxQmhjblJVZVhCbE95QXZMeTljYmx4dUlDQWdJSE4xY0dWeUtIUjVjR1VwTzF4dVhHNGdJQ0FnZEdocGN5NXdZWEowY3lBOUlIQmhjblJ6TzF4dUlDQjlYRzVjYmlBZ1oyVjBVR0Z5ZEhNb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR0Z5ZEhNN1hHNGdJSDFjYmx4dUlDQndZWEp6WlNodWIyUmxjeXdnYzNSaGRHVXNJR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdiR1YwSUhCaGNuTmxaRHRjYmx4dUlDQWdJR052Ym5OMElITmhkbVZrU1c1a1pYZ2dQU0J6ZEdGMFpTNW5aWFJUWVhabFpFbHVaR1Y0S0Nrc1hHNGdJQ0FnSUNBZ0lDQWdjR0Z5ZEhOT2IyUmxjeUE5SUZ0ZExGeHVJQ0FnSUNBZ0lDQWdJR2x1WkdWNElEMGdNRHRjYmx4dUlDQWdJSEJoY25ObFpDQTlJSEJoY25ObFVHRnlkSE1vZEdocGN5NXdZWEowY3l3Z2NHRnlkSE5PYjJSbGN5d2dhVzVrWlhnc0lITjBZWFJsTENCallXeHNZbUZqYXlrN1hHNWNiaUFnSUNCcFppQW9jR0Z5YzJWa0tTQjdYRzRnSUNBZ0lDQndkWE5vS0c1dlpHVnpMQ0J3WVhKMGMwNXZaR1Z6S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb0lYQmhjbk5sWkNrZ2UxeHVJQ0FnSUNBZ2MzUmhkR1V1WW1GamEzUnlZV05yS0hOaGRtVmtTVzVrWlhncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ3WVhKelpXUTdYRzRnSUgxY2JseHVJQ0JoYzFOMGNtbHVaeWdwSUh0Y2JpQWdJQ0JqYjI1emRDQndZWEowYzFOMGNtbHVaeUE5SUhSb2FYTXVjR0Z5ZEhNdWNtVmtkV05sS0Nod1lYSjBjMU4wY21sdVp5d2djR0Z5ZENrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnY0dGeWRGTjBjbWx1WnlBOUlIQmhjblF1WVhOVGRISnBibWNvS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQmhjblJ6VTNSeWFXNW5JRDA5UFNCdWRXeHNLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSEJoY25SelUzUnlhVzVuSUQwZ2NHRnlkRk4wY21sdVp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSEJoY25SelUzUnlhVzVuSUQwZ1lDUjdjR0Z5ZEhOVGRISnBibWQ5SUNSN2NHRnlkRk4wY21sdVozMWdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0dGeWRITlRkSEpwYm1jN1hHNGdJQ0FnSUNBZ0lDQWdmU3dnYm5Wc2JDa3NYRzRnSUNBZ0lDQWdJQ0FnYzNSeWFXNW5JRDBnWUNnZ0pIdHdZWEowYzFOMGNtbHVaMzBnS1dBN1hHNWNiaUFnSUNCeVpYUjFjbTRnYzNSeWFXNW5PMXh1SUNCOVhHNWNiaUFnWTJ4dmJtVW9LU0I3SUhKbGRIVnliaUJ6ZFhCbGNpNWpiRzl1WlNoVFpYRjFaVzVqWlU5bVVHRnlkSE5RWVhKMExDQjBhR2x6TG5CaGNuUnpLVHNnZlZ4dVhHNGdJSE4wWVhScFl5Qm1jbTl0VG05a1pYTW9ibTlrWlhNcElIdGNiaUFnSUNCamIyNXpkQ0JoYkd4Q2RYUkdhWEp6ZEVGdVpFeGhjM1JPYjJSbGN5QTlJR0ZzYkVKMWRFWnBjbk4wUVc1a1RHRnpkQ2h1YjJSbGN5azdYRzVjYmlBZ0lDQnViMlJsY3lBOUlHRnNiRUoxZEVacGNuTjBRVzVrVEdGemRFNXZaR1Z6T3lBZ0x5OHZYRzVjYmlBZ0lDQmpiMjV6ZENCc2IyOXJRV2hsWVdRZ1BTQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQndZWEowY3lBOUlHNXZaR1Z6TG0xaGNDZ29ibTlrWlNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnY0dGeWRDQTlJRzV2WkdVdVoyVnVaWEpoZEdWUVlYSjBLR3h2YjJ0QmFHVmhaQ2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQndZWEowTzF4dUlDQWdJQ0FnSUNBZ0lIMHBMRnh1SUNBZ0lDQWdJQ0FnSUhObGNYVmxibU5sVDJaUVlYSjBjMUJoY25RZ1BTQnVaWGNnVTJWeGRXVnVZMlZQWmxCaGNuUnpVR0Z5ZENod1lYSjBjeWs3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdjMlZ4ZFdWdVkyVlBabEJoY25SelVHRnlkRHRjYmlBZ2ZWeHVmVnh1SWwwc0ltNWhiV1Z6SWpwYklsTmxjWFZsYm1ObFQyWlFZWEowYzFCaGNuUWlMQ0p3WVhKMGN5SXNJblI1Y0dVaUxDSlRaWEYxWlc1alpVOW1VR0Z5ZEhOUVlYSjBWSGx3WlNJc0ltZGxkRkJoY25Seklpd2ljR0Z5YzJVaUxDSnViMlJsY3lJc0luTjBZWFJsSWl3aVkyRnNiR0poWTJzaUxDSndZWEp6WldRaUxDSnpZWFpsWkVsdVpHVjRJaXdpWjJWMFUyRjJaV1JKYm1SbGVDSXNJbkJoY25SelRtOWtaWE1pTENKcGJtUmxlQ0lzSW5CaGNuTmxVR0Z5ZEhNaUxDSndkWE5vSWl3aVltRmphM1J5WVdOcklpd2lZWE5UZEhKcGJtY2lMQ0p3WVhKMGMxTjBjbWx1WnlJc0luSmxaSFZqWlNJc0luQmhjblFpTENKd1lYSjBVM1J5YVc1bklpd2ljM1J5YVc1bklpd2lZMnh2Ym1VaUxDSm1jbTl0VG05a1pYTWlMQ0poYkd4Q2RYUkdhWEp6ZEVGdVpFeGhjM1JPYjJSbGN5SXNJbUZzYkVKMWRFWnBjbk4wUVc1a1RHRnpkQ0lzSW14dmIydEJhR1ZoWkNJc0ltMWhjQ0lzSW01dlpHVWlMQ0puWlc1bGNtRjBaVkJoY25RaUxDSnpaWEYxWlc1alpVOW1VR0Z5ZEhOUVlYSjBJaXdpVG05dVZHVnliV2x1WVd4UVlYSjBJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hEUVVGWkxGZEJRVUVzUTBGQlF6czdPMFZCUVdJN2QwSkJRVUU3UVVGRk5FSXNSMEZCZDBJc1EwRkJlRUlzV1VGQmQwSTdRVUZGTDBJc1IwRkJkVUlzUTBGQmRrSXNUVUZCZFVJN1FVRkRha0lzUjBGQk1rSXNRMEZCTTBJc1ZVRkJNa0k3UVVGRlpDeEhRVUZwUWl4RFFVRnFRaXhWUVVGcFFqczdPenM3T3pzN096czdPenM3T3poRVFWQjZSRHR6UTBGQlFUczJSRUZCUVR0cFJVRkJRVHM3T3p0M1JVRkJRVHRuUlVGQlFUczdPenM3TUVKQlFVRTdPenM3T3pzN096czdVMEZCUVRzN096czdPenRMUVVGQk96czdPenM3T3pzN096czdPMDFCUVVFN2VVUkJRVUU3T3pzN096czdPenM3T3pzN096dDFRa0ZCUVRzN1MwRkJRVHM3T3pzN2QwTkJRVUU3T3pzN096c3lRa0ZCUVRzN096czdPenM3Y1VaQlFVRTdPenM3T3pzN096czdPenR0UlVGQlFUczdhVVJCUVVFN096czdPMEZCVTJVc1IwRkJTeXhEUVVGRFFTeHRRa0ZCYlVJc2FVSkJRWHBDTEZGQlFWRTdiVVJCVkhaQ096dGhRVk54UWtFc2JVSkJRVzFDTEVOQlF6RkNReXhMUVVGTE8ydEVRVlp1UWpzN1VVRlhTU3hIUVVGTExFTkJRVU5ETEVsQlFVa3NSMEZCUjBNc1ZVRkJkVUlzTUVKQlFVVXNSVUZCUnl4QlFVRklMRU5CUVVjN2EwTkJSVzVEUkN4SlFVRkpMRU5EWW1Rc1EwUmhaMEk3WTBGRlVFUXNTMEZCU3l4SFFVRkhRU3hMUVVGTExFTkJRVU03T3pzN08xbEJSM0pDUnl4SFFVRlJMRVZCUVZKQkxFTkJRVkU3YlVKQlFWSkJMRkZCUVZFc1EwRkJVa0VzVVVGQlVTeEhRVUZITEVOQlFVTTdaMEpCUTFZc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlEwZ3NTMEZCU3p0WlFVTnVRaXhEUVVGRE96czdXVUZGUkVrc1IwRkJTeXhGUVVGTVFTeERRVUZMTzIxQ1FVRk1RU3hSUVVGUkxFTkJRVkpCTEV0QlFVc3NRMEZCUTBNc1MwRkJTeXhGUVVGRlF5eExRVUZMTEVWQlFVVkRMRkZCUVZFc1JVRkJSU3hEUVVGRE8yZENRVU0zUWl4SFFVRkhMRU5CUVVORExFMUJRVTA3WjBKQlJWWXNSMEZCU3l4RFFVRkRReXhWUVVGVkxFZEJRVWRJTEV0QlFVc3NRMEZCUTBrc1lVRkJZU3hKUVVOb1EwTXNWVUZCVlN4SFFVRkhMRU5CUVVNc1EwRkJReXhGUVVObVF5eExRVUZMTEVkQlFVY3NRMEZCUXp0blFrRkZaa29zVFVGQlRTeFBRVUZIU3l4VlFVRlZMR0ZCUVVNc1NVRkJTU3hEUVVGRFlpeExRVUZMTEVWQlFVVlhMRlZCUVZVc1JVRkJSVU1zUzBGQlN5eEZRVUZGVGl4TFFVRkxMRVZCUVVWRExGRkJRVkVzUTBGQlF5eERRVUZETzJkQ1FVVndSU3hGUVVGRkxFVkJRVVZETEUxQlFVMHNSVUZCUlN4RFFVRkRPM2RDUVVOWVRTeE5RVUZKTEU5QlFVTlVMRXRCUVVzc1JVRkJSVTBzVlVGQlZTeERRVUZETEVOQlFVTTdaMEpCUXpGQ0xFTkJRVU03WjBKQlJVUXNSVUZCUlN4SFFVRkhTQ3hOUVVGTkxFVkJRVVVzUTBGQlF6dHZRa0ZEV2tZc1MwRkJTeXhEUVVGRFV5eFRRVUZUTEVOQlFVTk9MRlZCUVZVc1EwRkJReXhEUVVGRE8yZENRVU01UWl4RFFVRkRPMmRDUVVWRUxFMUJRVTBzUTBGQlEwUXNUVUZCVFR0WlFVTm1MRU5CUVVNN096dFpRVVZFVVN4SFFVRlJMRVZCUVZKQkxFTkJRVkU3YlVKQlFWSkJMRkZCUVZFc1EwRkJVa0VzVVVGQlVTeEhRVUZITEVOQlFVTTdaMEpCUTFZc1IwRkJTeXhEUVVGRFF5eFpRVUZYTEVkQlFVY3NTVUZCU1N4RFFVRkRha0lzUzBGQlN5eERRVUZEYTBJc1RVRkJUU3hEUVVGRExGRkJRVkVzUTBGQlVFUXNWMEZCVnl4RlFVRkZSU3hKUVVGSkxFVkJRVXNzUTBGQlF6dHZRa0ZEZEVRc1IwRkJTeXhEUVVGRFF5eFZRVUZWTEVkQlFVZEVMRWxCUVVrc1EwRkJRMGdzVVVGQlVUdHZRa0ZGYUVNc1JVRkJSU3hGUVVGRlF5eFhRVUZYTEV0QlFVc3NTVUZCU1N4RlFVRkZMRU5CUVVNN2QwSkJRM3BDUVN4WFFVRlhMRWRCUVVkSExGVkJRVlVzUTBGQlF6dHZRa0ZETTBJc1EwRkJReXhOUVVGTkxFTkJRVU03ZDBKQlEwNUlMRmRCUVZjc1IwRkJTU3hEUVVGQkxFVkJRV2xDUnl4TlFVRlZMRU5CUVhwQ1NDeFhRVUZYTEVWQlFVTXNRMEZCUXl4SlFVRmhMRTFCUVVFc1EwRkJXRWNzVlVGQlZTeERRVUZGTEVOQlFVTTdiMEpCUXk5RExFTkJRVU03YjBKQlJVUXNUVUZCVFN4RFFVRkRTQ3hYUVVGWE8yZENRVU53UWl4RFFVRkRMRVZCUVVVc1NVRkJTU3hIUVVOUVNTeE5RVUZOTEVkQlFVa3NRMEZCUlN4SlFVRmpMRTFCUVVVc1EwRkJaRW9zV1VGQlZ5eEZRVUZETEVOQlFVVTdaMEpCUld4RExFMUJRVTBzUTBGQlEwa3NUVUZCVFR0WlFVTm1MRU5CUVVNN096dFpRVVZFUXl4SFFVRkxMRVZCUVV4QkxFTkJRVXM3YlVKQlFVeEJMRkZCUVZFc1EwRkJVa0VzUzBGQlN5eEhRVUZITEVOQlFVTTdaMEpCUVVNc1RVRkJUU3h6UWtGc1JFZDJRaXh0UWtGQmJVSXNZVUZyUkdaMVFpeERRVUZMTEZGQlFWZ3NTVUZCU3l4aFFVRlBka0lzYlVKQlFXMUNMRVZCUVVVc1NVRkJTU3hEUVVGRFF5eExRVUZMTzFsQlFVY3NRMEZCUXpzN096dFpRVVY2UkhWQ0xFZEJRVk1zUlVGQlZFRXNRMEZCVXp0dFFrRkJhRUlzVVVGQlVTeERRVUZFUVN4VFFVRlRMRU5CUVVOc1FpeExRVUZMTEVWQlFVVXNRMEZCUXp0blFrRkRka0lzUjBGQlN5eERRVUZEYlVJc2RVSkJRWFZDTEU5QlFVZERMRTFCUVd0Q0xIRkNRVUZEY0VJc1MwRkJTenRuUWtGRmVFUkJMRXRCUVVzc1IwRkJSMjFDTEhWQ1FVRjFRaXhEUVVGRExFTkJRVVVzUlVGQlJ5eEJRVUZJTEVOQlFVYzdaMEpCUlhKRExFZEJRVXNzUTBGQlEwVXNVMEZCVXl4SFFVRkhMRXRCUVVzc1JVRkRha0l4UWl4TFFVRkxMRWRCUVVkTExFdEJRVXNzUTBGQlEzTkNMRWRCUVVjc1EwRkJReXhSUVVGUkxFTkJRVkJETEVsQlFVa3NSVUZCU3l4RFFVRkRPMjlDUVVNelFpeEhRVUZMTEVOQlFVTlVMRWxCUVVrc1IwRkJSMU1zU1VGQlNTeERRVUZEUXl4WlFVRlpMRU5CUVVOSUxGTkJRVk03YjBKQlJYaERMRTFCUVUwc1EwRkJRMUFzU1VGQlNUdG5Ra0ZEWWl4RFFVRkRMRWRCUTBSWExHMUNRVUZ0UWl4SFFVRkhMRWRCUVVjc1EwRkJReTlDTEcxQ1FVRnRRaXhEUVVGRFF5eExRVUZMTzJkQ1FVVjZSQ3hOUVVGTkxFTkJRVU00UWl4dFFrRkJiVUk3V1VGRE5VSXNRMEZCUXpzN1RVRXpSVWc3TzBWQlUybEVReXhaUVVGbE8ydENRVUV6UTJoRExHMUNRVUZ0UWl4QlFWUjRReUo5IiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzcGVjaWFsU3ltYm9scyB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcblxuaW1wb3J0IERlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb25cIjtcbmltcG9ydCBSdWxlTmFtZVBhcnQgZnJvbSBcIi4uL3BhcnQvbm9uVGVybWluYWwvcnVsZU5hbWVcIjtcbmltcG9ydCBUZXJtaW5hbFN5bWJvbFBhcnQgZnJvbSBcIi4uL3BhcnQvdGVybWluYWwvdGVybWluYWxTeW1ib2xcIjtcbmltcG9ydCBaZXJvT3JNb3JlUGFydHNQYXJ0IGZyb20gXCIuLi9wYXJ0L25vblRlcm1pbmFsL3plcm9Pck1vcmVQYXJ0c1wiO1xuaW1wb3J0IFNlcXVlbmNlT2ZQYXJ0c1BhcnQgZnJvbSBcIi4uL3BhcnQvbm9uVGVybWluYWwvc2VxdWVuY2VPZlBhcnRzXCI7XG5cbmltcG9ydCB7IERlZmluaXRpb25SdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuY29uc3QgeyB2ZXJ0aWNhbEJhciB9ID0gc3BlY2lhbFN5bWJvbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlZmluaXRpb25zRGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBkZWZpbml0aW9uUnVsZU5hbWUgPSBEZWZpbml0aW9uUnVsZU5hbWUsXG4gICAgICAgICAgdmVydGljYWxCYXJUZXJtaW5hbFN5bWJvbENvbnRlbnQgPSB2ZXJ0aWNhbEJhcixcbiAgICAgICAgICBkZWZpbml0aW9uUnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChkZWZpbml0aW9uUnVsZU5hbWUpLFxuICAgICAgICAgIHZlcnRpY2FsQmFyVGVybWluYWxTeW1ib2xQYXJ0ID0gbmV3IFRlcm1pbmFsU3ltYm9sUGFydCh2ZXJ0aWNhbEJhclRlcm1pbmFsU3ltYm9sQ29udGVudCksXG4gICAgICAgICAgdmVydGljYWxCYXJUZXJtaW5hbFN5bWJvbFRoZW5EZWZpbml0aW9uUnVsZU5hbWVQYXJ0cyA9IFtcbiAgICAgICAgICAgIHZlcnRpY2FsQmFyVGVybWluYWxTeW1ib2xQYXJ0LFxuICAgICAgICAgICAgZGVmaW5pdGlvblJ1bGVOYW1lUGFydFxuICAgICAgICAgIF0sXG4gICAgICAgICAgc2VxdWVuY2VPZlBhcnRzUGFydCA9IG5ldyBTZXF1ZW5jZU9mUGFydHNQYXJ0KHZlcnRpY2FsQmFyVGVybWluYWxTeW1ib2xUaGVuRGVmaW5pdGlvblJ1bGVOYW1lUGFydHMpLFxuICAgICAgICAgIHplcm9Pck1vcmVTZXF1ZW5jZU9mUGFydHNQYXJ0ID0gbmV3IFplcm9Pck1vcmVQYXJ0c1BhcnQoc2VxdWVuY2VPZlBhcnRzUGFydCksXG4gICAgICAgICAgcGFydHMgPSBbXG4gICAgICAgICAgICBkZWZpbml0aW9uUnVsZU5hbWVQYXJ0LFxuICAgICAgICAgICAgemVyb09yTW9yZVNlcXVlbmNlT2ZQYXJ0c1BhcnRcbiAgICAgICAgICBdO1xuICAgIFxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgRGVmaW5pdGlvbnNCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9kZWZpbml0aW9uc1wiO1xuaW1wb3J0IERlZmluaXRpb25zRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9kZWZpbml0aW9uc1wiO1xuXG5pbXBvcnQgeyBEZWZpbml0aW9uc1J1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZWZpbml0aW9uc1J1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgZGVmaW5pdGlvbnNEZWZpbml0aW9uID0gbmV3IERlZmluaXRpb25zRGVmaW5pdGlvbigpLFxuICAgICAgICAgIG5hbWUgPSBEZWZpbml0aW9uc1J1bGVOYW1lLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgZGVmaW5pdGlvbnNEZWZpbml0aW9uXG4gICAgICAgICAgXSxcbiAgICAgICAgICBOb2RlID0gRGVmaW5pdGlvbnNCTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBOb25UZXJtaW5hbE5vZGUgZnJvbSBcIi4uLy4uLy4uL25vZGUvbm9uVGVybWluYWxcIjtcblxuaW1wb3J0IHsgZmlyc3QgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbGl0aWVzL2FycmF5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlcm1pbmFsUGFydEJORk5vZGUgZXh0ZW5kcyBOb25UZXJtaW5hbE5vZGUge1xuICBnZW5lcmF0ZVBhcnQobG9va0FoZWFkKSB7XG4gICAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLFxuICAgICAgICAgIGZpcnN0Q2hpbGROb2RlID0gZmlyc3QoY2hpbGROb2RlcyksXG4gICAgICAgICAgbm9kZSA9IGZpcnN0Q2hpbGROb2RlLCAgLy8vXG4gICAgICAgICAgcGFydCA9IG5vZGUuZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCk7XG5cbiAgICByZXR1cm4gcGFydDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKHJ1bGVOYW1lLCBjaGlsZE5vZGVzKSB7IHJldHVybiBOb25UZXJtaW5hbE5vZGUuZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhUZXJtaW5hbFBhcnRCTkZOb2RlLCBydWxlTmFtZSwgY2hpbGROb2Rlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFJ1bGUgZnJvbSBcIi4uL3J1bGVcIjtcbmltcG9ydCBUZXJtaW5hbFBhcnRCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9wYXJ0L3Rlcm1pbmFsXCI7XG5pbXBvcnQgUnVsZU5hbWVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3J1bGVOYW1lXCI7XG5cbmltcG9ydCB7IFRlcm1pbmFsUGFydFJ1bGVOYW1lLCBSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lLCBTaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lLCBUZXJtaW5hbFN5bWJvbFJ1bGVOYW1lLCBFbmRPZkxpbmVSdWxlTmFtZSwgV2lsZGNhcmRSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVybWluYWxQYXJ0UnVsZSBleHRlbmRzIFJ1bGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBuYW1lID0gVGVybWluYWxQYXJ0UnVsZU5hbWUsXG4gICAgICAgICAgd2lsZGNhcmRSdWxlTmFtZSA9IFdpbGRjYXJkUnVsZU5hbWUsXG4gICAgICAgICAgZW5kT2ZMaW5lUnVsZU5hbWUgPSBFbmRPZkxpbmVSdWxlTmFtZSxcbiAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFJ1bGVOYW1lID0gVGVybWluYWxTeW1ib2xSdWxlTmFtZSxcbiAgICAgICAgICByZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lID0gUmVndWxhckV4cHJlc3Npb25SdWxlTmFtZSxcbiAgICAgICAgICBzaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lID0gU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZSxcbiAgICAgICAgICB3aWxkY2FyZFJ1bGVOYW1lRGVmaW5pdGlvbiA9IG5ldyBSdWxlTmFtZURlZmluaXRpb24od2lsZGNhcmRSdWxlTmFtZSksXG4gICAgICAgICAgZW5kT2ZMaW5lUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbihlbmRPZkxpbmVSdWxlTmFtZSksXG4gICAgICAgICAgdGVybWluYWxTeW1ib2xSdWxlTmFtZURlZmluaXRpb24gPSBuZXcgUnVsZU5hbWVEZWZpbml0aW9uKHRlcm1pbmFsU3ltYm9sUnVsZU5hbWUpLFxuICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbihyZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lKSxcbiAgICAgICAgICBzaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lRGVmaW5pdGlvbiA9IG5ldyBSdWxlTmFtZURlZmluaXRpb24oc2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZSksXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBzaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lRGVmaW5pdGlvbixcbiAgICAgICAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUnVsZU5hbWVEZWZpbml0aW9uLFxuICAgICAgICAgICAgdGVybWluYWxTeW1ib2xSdWxlTmFtZURlZmluaXRpb24sXG4gICAgICAgICAgICBlbmRPZkxpbmVSdWxlTmFtZURlZmluaXRpb24sXG4gICAgICAgICAgICB3aWxkY2FyZFJ1bGVOYW1lRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IFRlcm1pbmFsUGFydEJORk5vZGU7XG4gICAgXG4gICAgc3VwZXIobmFtZSwgZGVmaW5pdGlvbnMsIE5vZGUpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IE5vblRlcm1pbmFsTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9ub25UZXJtaW5hbFwiO1xuaW1wb3J0IENob2ljZU9mUGFydHNQYXJ0IGZyb20gXCIuLi8uLi9wYXJ0L25vblRlcm1pbmFsL2Nob2ljZU9mUGFydHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hvaWNlT2ZQYXJ0c0JORk5vZGUgZXh0ZW5kcyBOb25UZXJtaW5hbE5vZGUge1xuICBnZW5lcmF0ZVBhcnQobG9va0FoZWFkKSB7XG4gICAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLFxuICAgICAgICAgIG5vZGVzID0gY2hpbGROb2Rlcy5zbGljZSgpLFxuICAgICAgICAgIHBhcnQgPSBDaG9pY2VPZlBhcnRzUGFydC5mcm9tTm9kZXMobm9kZXMpO1xuXG4gICAgcmV0dXJuIHBhcnQ7XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhydWxlTmFtZSwgY2hpbGROb2RlcykgeyByZXR1cm4gTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoQ2hvaWNlT2ZQYXJ0c0JORk5vZGUsIHJ1bGVOYW1lLCBjaGlsZE5vZGVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzcGVjaWFsU3ltYm9scyB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcblxuaW1wb3J0IERlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb25cIjtcbmltcG9ydCBSdWxlTmFtZVBhcnQgZnJvbSBcIi4uL3BhcnQvbm9uVGVybWluYWwvcnVsZU5hbWVcIjtcbmltcG9ydCBPbmVPck1vcmVQYXJ0c1BhcnQgZnJvbSBcIi4uL3BhcnQvbm9uVGVybWluYWwvb25lT3JNb3JlUGFydHNcIjtcbmltcG9ydCBUZXJtaW5hbFN5bWJvbFBhcnQgZnJvbSBcIi4uL3BhcnQvdGVybWluYWwvdGVybWluYWxTeW1ib2xcIjtcbmltcG9ydCBTZXF1ZW5jZU9mUGFydHNQYXJ0IGZyb20gXCIuLi9wYXJ0L25vblRlcm1pbmFsL3NlcXVlbmNlT2ZQYXJ0c1wiO1xuXG5pbXBvcnQgeyBQYXJ0UnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmNvbnN0IHsgdmVydGljYWxCYXIsIG9wZW5CcmFja2V0LCBjbG9zZUJyYWNrZXQgfSA9IHNwZWNpYWxTeW1ib2xzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaG9pY2VPZlBhcnRzRGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBwYXJ0UnVsZU5hbWUgPSBQYXJ0UnVsZU5hbWUsXG4gICAgICAgICAgdmVydGljYWxCYXJUZXJtaW5hbFN5bWJvbENvbnRlbnQgPSB2ZXJ0aWNhbEJhciwgLy8vXG4gICAgICAgICAgb3BlbkJyYWNrZXRUZXJtaW5hbFN5bWJvbENvbnRlbnQgPSBvcGVuQnJhY2tldCwgLy8vXG4gICAgICAgICAgY2xvc2VCcmFja2V0VGVybWluYWxTeW1ib2xDb250ZW50ID0gY2xvc2VCcmFja2V0LCAvLy9cbiAgICAgICAgICBwYXJ0UnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChwYXJ0UnVsZU5hbWUpLFxuICAgICAgICAgIHZlcnRpY2FsQmFyVGVybWluYWxTeW1ib2xQYXJ0ID0gbmV3IFRlcm1pbmFsU3ltYm9sUGFydCh2ZXJ0aWNhbEJhclRlcm1pbmFsU3ltYm9sQ29udGVudCksXG4gICAgICAgICAgb3BlbkJyYWNrZXRUZXJtaW5hbFN5bWJvbFBhcnQgPSBuZXcgVGVybWluYWxTeW1ib2xQYXJ0KG9wZW5CcmFja2V0VGVybWluYWxTeW1ib2xDb250ZW50KSxcbiAgICAgICAgICBjbG9zZUJyYWNrZXRUZXJtaW5hbFN5bWJvbFBhcnQgPSBuZXcgVGVybWluYWxTeW1ib2xQYXJ0KGNsb3NlQnJhY2tldFRlcm1pbmFsU3ltYm9sQ29udGVudCksXG4gICAgICAgICAgdmVydGljYWxCYXJUZXJtaW5hbFN5bWJvbFRoZW5QYXJ0UnVsZU5hbWVQYXJ0cyA9IFtcbiAgICAgICAgICAgIHZlcnRpY2FsQmFyVGVybWluYWxTeW1ib2xQYXJ0LFxuICAgICAgICAgICAgcGFydFJ1bGVOYW1lUGFydFxuICAgICAgICAgIF0sXG4gICAgICAgICAgc2VxdWVuY2VPZlBhcnRzUGFydCA9IG5ldyBTZXF1ZW5jZU9mUGFydHNQYXJ0KHZlcnRpY2FsQmFyVGVybWluYWxTeW1ib2xUaGVuUGFydFJ1bGVOYW1lUGFydHMpLFxuICAgICAgICAgIG9uZU9yTW9yZVNlcXVlbmNlT2ZQYXJ0c1BhcnQgPSBuZXcgT25lT3JNb3JlUGFydHNQYXJ0KHNlcXVlbmNlT2ZQYXJ0c1BhcnQpLFxuICAgICAgICAgIHBhcnRzID0gW1xuICAgICAgICAgICAgb3BlbkJyYWNrZXRUZXJtaW5hbFN5bWJvbFBhcnQsXG4gICAgICAgICAgICBwYXJ0UnVsZU5hbWVQYXJ0LFxuICAgICAgICAgICAgb25lT3JNb3JlU2VxdWVuY2VPZlBhcnRzUGFydCxcbiAgICAgICAgICAgIGNsb3NlQnJhY2tldFRlcm1pbmFsU3ltYm9sUGFydFxuICAgICAgICAgIF07XG5cbiAgICBzdXBlcihwYXJ0cylcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IENob2ljZU9mUGFydHNCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9jaG9pY2VPZlBhcnRzXCI7XG5pbXBvcnQgQ2hvaWNlT2ZQYXJ0c0RlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb24vY2hvaWNlT2ZQYXJ0c1wiO1xuXG5pbXBvcnQgeyBDaG9pY2VPZlBhcnRzUnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENob2ljZU9mUGFydHNSdWxlIGV4dGVuZHMgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IG5hbWUgPSBDaG9pY2VPZlBhcnRzUnVsZU5hbWUsXG4gICAgICAgICAgY2hvaWNlT2ZQYXJ0c0RlZmluaXRpb24gPSBuZXcgQ2hvaWNlT2ZQYXJ0c0RlZmluaXRpb24oKSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIGNob2ljZU9mUGFydHNEZWZpbml0aW9uXG4gICAgICAgICAgXSxcbiAgICAgICAgICBOb2RlID0gQ2hvaWNlT2ZQYXJ0c0JORk5vZGU7XG4gICAgXG4gICAgc3VwZXIobmFtZSwgZGVmaW5pdGlvbnMsIE5vZGUpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfbm9uVGVybWluYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9ub2RlL25vblRlcm1pbmFsXCIpKTtcbnZhciBfdGVybWluYWxTeW1ib2wgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9wYXJ0L3Rlcm1pbmFsL3Rlcm1pbmFsU3ltYm9sXCIpKTtcbnZhciBfYXJyYXkgPSByZXF1aXJlKFwiLi4vLi4vdXRpbGl0aWVzL2FycmF5XCIpO1xuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBUZXJtaW5hbFN5bWJvbEJORk5vZGUgPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKE5vblRlcm1pbmFsTm9kZSkge1xuICAgIF9pbmhlcml0cyhUZXJtaW5hbFN5bWJvbEJORk5vZGUsIE5vblRlcm1pbmFsTm9kZSk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihUZXJtaW5hbFN5bWJvbEJORk5vZGUpO1xuICAgIGZ1bmN0aW9uIFRlcm1pbmFsU3ltYm9sQk5GTm9kZSgpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRlcm1pbmFsU3ltYm9sQk5GTm9kZSk7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInJlZ3VsYXJFeHByZXNzaW9uXCIsIC9eXCIoKD86XFxcXC58W15cIlxcXFxdKSopXCIkLyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgX2NyZWF0ZUNsYXNzKFRlcm1pbmFsU3ltYm9sQk5GTm9kZSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2VuZXJhdGVQYXJ0XCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCkge1xuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gdGhpcy5nZXRDb250ZW50KCksIHRlcm1pbmFsU3ltYm9sUGFydCA9IG5ldyBfdGVybWluYWxTeW1ib2wuZGVmYXVsdChjb250ZW50KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGVybWluYWxTeW1ib2xQYXJ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0Q29udGVudFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvbnRlbnQoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoaWxkTm9kZXMgPSB0aGlzLmdldENoaWxkTm9kZXMoKSwgZmlyc3RDaGlsZE5vZGUgPSAoMCwgX2FycmF5KS5maXJzdChjaGlsZE5vZGVzKSwgdGVybWluYWxOb2RlID0gZmlyc3RDaGlsZE5vZGUsIHRlcm1pbmFsTm9kZUNvbnRlbnQgPSB0ZXJtaW5hbE5vZGUuZ2V0Q29udGVudCgpLCBtYXRjaGVzID0gdGVybWluYWxOb2RlQ29udGVudC5tYXRjaCh0aGlzLnJlZ3VsYXJFeHByZXNzaW9uKSwgc2Vjb25kTWF0Y2ggPSAoMCwgX2FycmF5KS5zZWNvbmQobWF0Y2hlcyksIGNvbnRlbnQgPSBzZWNvbmRNYXRjaC5yZXBsYWNlKC9cXFxcXFxcXC9nLCBcIlxcXFxcIikucmVwbGFjZSgvXFxcXFwiL2csIFwiXFxcIlwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0sIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXNcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBmcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKHJ1bGVOYW1lLCBjaGlsZE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9ub25UZXJtaW5hbC5kZWZhdWx0LmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoVGVybWluYWxTeW1ib2xCTkZOb2RlLCBydWxlTmFtZSwgY2hpbGROb2Rlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdKTtcbiAgICByZXR1cm4gVGVybWluYWxTeW1ib2xCTkZOb2RlO1xufShfbm9uVGVybWluYWwuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBUZXJtaW5hbFN5bWJvbEJORk5vZGU7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwzTnlZeTl1YjJSbEwySnVaaTkwWlhKdGFXNWhiRk41YldKdmJDNXFjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dWFXMXdiM0owSUU1dmJsUmxjbTFwYm1Gc1RtOWtaU0JtY205dElGd2lMaTR2TGk0dmJtOWtaUzl1YjI1VVpYSnRhVzVoYkZ3aU8xeHVhVzF3YjNKMElGUmxjbTFwYm1Gc1UzbHRZbTlzVUdGeWRDQm1jbTl0SUZ3aUxpNHZMaTR2Y0dGeWRDOTBaWEp0YVc1aGJDOTBaWEp0YVc1aGJGTjViV0p2YkZ3aU8xeHVYRzVwYlhCdmNuUWdleUJtYVhKemRDd2djMlZqYjI1a0lIMGdabkp2YlNCY0lpNHVMeTR1TDNWMGFXeHBkR2xsY3k5aGNuSmhlVndpTzF4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCamJHRnpjeUJVWlhKdGFXNWhiRk41YldKdmJFSk9SazV2WkdVZ1pYaDBaVzVrY3lCT2IyNVVaWEp0YVc1aGJFNXZaR1VnZTF4dUlDQnlaV2QxYkdGeVJYaHdjbVZ6YzJsdmJpQTlJQzllWENJb0tEODZYRnhjWEM1OFcxNWNJbHhjWEZ4ZEtTb3BYQ0lrTHp0Y2JseHVJQ0JuWlc1bGNtRjBaVkJoY25Rb2JHOXZhMEZvWldGa0tTQjdYRzRnSUNBZ1kyOXVjM1FnWTI5dWRHVnVkQ0E5SUhSb2FYTXVaMlYwUTI5dWRHVnVkQ2dwTEZ4dUlDQWdJQ0FnSUNBZ0lIUmxjbTFwYm1Gc1UzbHRZbTlzVUdGeWRDQTlJRzVsZHlCVVpYSnRhVzVoYkZONWJXSnZiRkJoY25Rb1kyOXVkR1Z1ZENrN1hHNWNiaUFnSUNCeVpYUjFjbTRnZEdWeWJXbHVZV3hUZVcxaWIyeFFZWEowTzF4dUlDQjlYRzVjYmlBZ1oyVjBRMjl1ZEdWdWRDZ3BJSHRjYmlBZ0lDQmpiMjV6ZENCamFHbHNaRTV2WkdWeklEMGdkR2hwY3k1blpYUkRhR2xzWkU1dlpHVnpLQ2tzWEc0Z0lDQWdJQ0FnSUNBZ1ptbHljM1JEYUdsc1pFNXZaR1VnUFNCbWFYSnpkQ2hqYUdsc1pFNXZaR1Z6S1N4Y2JpQWdJQ0FnSUNBZ0lDQjBaWEp0YVc1aGJFNXZaR1VnUFNCbWFYSnpkRU5vYVd4a1RtOWtaU3dnSUM4dkwxeHVJQ0FnSUNBZ0lDQWdJSFJsY20xcGJtRnNUbTlrWlVOdmJuUmxiblFnUFNCMFpYSnRhVzVoYkU1dlpHVXVaMlYwUTI5dWRHVnVkQ2dwTEZ4dUlDQWdJQ0FnSUNBZ0lHMWhkR05vWlhNZ1BTQjBaWEp0YVc1aGJFNXZaR1ZEYjI1MFpXNTBMbTFoZEdOb0tIUm9hWE11Y21WbmRXeGhja1Y0Y0hKbGMzTnBiMjRwTEZ4dUlDQWdJQ0FnSUNBZ0lITmxZMjl1WkUxaGRHTm9JRDBnYzJWamIyNWtLRzFoZEdOb1pYTXBMRnh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblFnUFNCelpXTnZibVJOWVhSamFDNXlaWEJzWVdObEtDOWNYRnhjWEZ4Y1hDOW5MQ0JjSWx4Y1hGeGNJaWt1Y21Wd2JHRmpaU2d2WEZ4Y1hGd2lMMmNzSUZ3aVhGeGNJbHdpS1R0Y2JseHVJQ0FnSUhKbGRIVnliaUJqYjI1MFpXNTBPMXh1SUNCOVhHNWNiaUFnYzNSaGRHbGpJR1p5YjIxU2RXeGxUbUZ0WlVGdVpFTm9hV3hrVG05a1pYTW9jblZzWlU1aGJXVXNJR05vYVd4a1RtOWtaWE1wSUhzZ2NtVjBkWEp1SUU1dmJsUmxjbTFwYm1Gc1RtOWtaUzVtY205dFVuVnNaVTVoYldWQmJtUkRhR2xzWkU1dlpHVnpLRlJsY20xcGJtRnNVM2x0WW05c1FrNUdUbTlrWlN3Z2NuVnNaVTVoYldVc0lHTm9hV3hrVG05a1pYTXBPeUI5WEc1OVhHNWNiaUpkTENKdVlXMWxjeUk2V3lKVVpYSnRhVzVoYkZONWJXSnZiRUpPUms1dlpHVWlMQ0p5WldkMWJHRnlSWGh3Y21WemMybHZiaUlzSW1kbGJtVnlZWFJsVUdGeWRDSXNJbXh2YjJ0QmFHVmhaQ0lzSW1OdmJuUmxiblFpTENKblpYUkRiMjUwWlc1MElpd2lkR1Z5YldsdVlXeFRlVzFpYjJ4UVlYSjBJaXdpVkdWeWJXbHVZV3hUZVcxaWIyeFFZWEowSWl3aVkyaHBiR1JPYjJSbGN5SXNJbWRsZEVOb2FXeGtUbTlrWlhNaUxDSm1hWEp6ZEVOb2FXeGtUbTlrWlNJc0ltWnBjbk4wSWl3aWRHVnliV2x1WVd4T2IyUmxJaXdpZEdWeWJXbHVZV3hPYjJSbFEyOXVkR1Z1ZENJc0ltMWhkR05vWlhNaUxDSnRZWFJqYUNJc0luTmxZMjl1WkUxaGRHTm9JaXdpYzJWamIyNWtJaXdpY21Wd2JHRmpaU0lzSW1aeWIyMVNkV3hsVG1GdFpVRnVaRU5vYVd4a1RtOWtaWE1pTENKeWRXeGxUbUZ0WlNJc0lrNXZibFJsY20xcGJtRnNUbTlrWlNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1EwRkJXU3hYUVVGQkxFTkJRVU03T3p0RlFVRmlPM2RDUVVGQk8wRkJSVFJDTEVkQlFYZENMRU5CUVhoQ0xGbEJRWGRDTzBGQlEzSkNMRWRCUVc5RExFTkJRWEJETEdWQlFXOURPMEZCUlhKRExFZEJRWFZDTEVOQlFYWkNMRTFCUVhWQ096czdPenM3T3pzN096czdPenM3T0VSQlRISkVPM05EUVVGQk96WkVRVUZCTzJsRlFVRkJPenM3TzNkRlFVRkJPMmRGUVVGQk96czdPenM3T3pzN08xVkJRVUU3TzNkQ1FVRkJPenM3T3pzN08wdEJRVUU3T3pzN096czdPenM3T3pzN1RVRkJRVHQ1UkVGQlFUczdPenM3T3pzN096czdPenM3TzNWQ1FVRkJPenRMUVVGQk96czdPekpDUVVGQk96czdPenM3T3p0eFJrRkJRVHM3T3pzN096czdPenM3TzIxRlFVRkJPenRwUkVGQlFUczdPenM3UVVGUFpTeEhRVUZMTEVOQlFVTkJMSEZDUVVGeFFpeHBRa0ZCTTBJc1VVRkJVVHR4UkVGUWRrSTdPMkZCVDNGQ1FTeHhRa0ZCY1VJN2IwUkJVREZET3pzMlEwRkJRVHQxUkVGUlJVTXNRMEZCYVVJc05FTkRVbTVDTEVORVVUaERPenM3T3p0WlFVVTFRME1zUjBGQldTeEZRVUZhUVN4RFFVRlpPMjFDUVVGYVFTeFJRVUZSTEVOQlFWSkJMRmxCUVZrc1EwRkJRME1zVTBGQlV5eEZRVUZGTEVOQlFVTTdaMEpCUTNaQ0xFZEJRVXNzUTBGQlEwTXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJRME1zVlVGQlZTeEpRVU42UWtNc2EwSkJRV3RDTEVkQlFVY3NSMEZCUnl4RFFVRkRReXhsUVVGclFpeFRRVUZEU0N4UFFVRlBPMmRDUVVWNlJDeE5RVUZOTEVOQlFVTkZMR3RDUVVGclFqdFpRVU16UWl4RFFVRkRPenM3V1VGRlJFUXNSMEZCVlN4RlFVRldRU3hEUVVGVk8yMUNRVUZXUVN4UlFVRlJMRU5CUVZKQkxGVkJRVlVzUjBGQlJ5eERRVUZETzJkQ1FVTmFMRWRCUVVzc1EwRkJRMGNzVlVGQlZTeEhRVUZITEVsQlFVa3NRMEZCUTBNc1lVRkJZU3hKUVVNdlFrTXNZMEZCWXl4UFFVRkhReXhOUVVGTExGRkJRVU5JTEZWQlFWVXNSMEZEYWtOSkxGbEJRVmtzUjBGQlIwWXNZMEZCWXl4RlFVTTNRa2NzYlVKQlFXMUNMRWRCUVVkRUxGbEJRVmtzUTBGQlExQXNWVUZCVlN4SlFVTTNRMU1zVDBGQlR5eEhRVUZIUkN4dFFrRkJiVUlzUTBGQlEwVXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJRMlFzYVVKQlFXbENMRWRCUXpGRVpTeFhRVUZYTEU5QlFVZERMRTFCUVUwc1UwRkJRMGdzVDBGQlR5eEhRVU0xUWxZc1QwRkJUeXhIUVVGSFdTeFhRVUZYTEVOQlFVTkZMRTlCUVU4c1ZVRkJWU3hEUVVGSkxFdEJRVVZCTEU5QlFVOHNVMEZCVXl4RFFVRkpPMmRDUVVWMlJTeE5RVUZOTEVOQlFVTmtMRTlCUVU4N1dVRkRhRUlzUTBGQlF6czdPenRaUVVWTlpTeEhRVUY1UWl4RlFVRjZRa0VzUTBGQmVVSTdiVUpCUVdoRExGRkJRVkVzUTBGQlJFRXNlVUpCUVhsQ0xFTkJRVU5ETEZGQlFWRXNSVUZCUlZvc1ZVRkJWU3hGUVVGRkxFTkJRVU03WjBKQlFVTXNUVUZCVFN4RFFVRkRZU3haUVVGbExGTkJRVU5HTEhsQ1FVRjVRaXhEUVVGRGJrSXNjVUpCUVhGQ0xFVkJRVVZ2UWl4UlFVRlJMRVZCUVVWYUxGVkJRVlU3V1VGQlJ5eERRVUZET3p0TlFUZENNMG83TzBWQlQyMUVZU3haUVVGbE8ydENRVUUzUTNKQ0xIRkNRVUZ4UWl4QlFWQXhReUo5IiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvblwiO1xuaW1wb3J0IFNpZ25pZmljYW50VG9rZW5UeXBlUGFydCBmcm9tIFwiLi4vcGFydC90ZXJtaW5hbC9zaWduaWZpY2FudFRva2VuVHlwZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTaWduaWZpY2FudFRva2VuVHlwZURlZmluaXRpb24gZXh0ZW5kcyBEZWZpbml0aW9uIHtcbiAgY29uc3RydWN0b3Ioc2lnbmlmaWNhbnRUb2tlblR5cGUpIHtcbiAgICBjb25zdCBzaWduaWZpY2FudFRva2VuVHlwZVBhcnQgPSBuZXcgU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0KHNpZ25pZmljYW50VG9rZW5UeXBlKSxcbiAgICAgICAgICBwYXJ0cyA9IFtcbiAgICAgICAgICAgIHNpZ25pZmljYW50VG9rZW5UeXBlUGFydFxuICAgICAgICAgIF07XG4gICAgXG4gICAgc3VwZXIocGFydHMpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgdHlwZXMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgVGVybWluYWxTeW1ib2xCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi90ZXJtaW5hbFN5bWJvbFwiO1xuaW1wb3J0IFNpZ25pZmljYW50VG9rZW5UeXBlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9zaWduaWZpY2FudFRva2VuVHlwZVwiO1xuXG5pbXBvcnQgeyBUZXJtaW5hbFN5bWJvbFJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5jb25zdCB7IHN0cmluZ0xpdGVyYWxUeXBlIH0gPSB0eXBlcztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVybWluYWxTeW1ib2xSdWxlIGV4dGVuZHMgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHN0cmluZ0xpdGVyYWxTaWduaWZpY2FudFRva2VuVHlwZSA9IHN0cmluZ0xpdGVyYWxUeXBlLCAgLy8vXG4gICAgICAgICAgc3RyaW5nTGl0ZXJhbFNpZ25pZmljYW50VG9rZW5UeXBlRGVmaW5pdGlvbiA9IG5ldyBTaWduaWZpY2FudFRva2VuVHlwZURlZmluaXRpb24oc3RyaW5nTGl0ZXJhbFNpZ25pZmljYW50VG9rZW5UeXBlKSxcbiAgICAgICAgICBuYW1lID0gVGVybWluYWxTeW1ib2xSdWxlTmFtZSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIHN0cmluZ0xpdGVyYWxTaWduaWZpY2FudFRva2VuVHlwZURlZmluaXRpb25cbiAgICAgICAgICBdLFxuICAgICAgICAgIE5vZGUgPSBUZXJtaW5hbFN5bWJvbEJORk5vZGU7XG5cbiAgICBzdXBlcihuYW1lLCBkZWZpbml0aW9ucywgTm9kZSlcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTm9uVGVybWluYWxOb2RlIGZyb20gXCIuLi8uLi8uLi9ub2RlL25vblRlcm1pbmFsXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vblRlcm1pbmFsUGFydEJORk5vZGUgZXh0ZW5kcyBOb25UZXJtaW5hbE5vZGUge1xuICBnZW5lcmF0ZVBhcnQobG9va0FoZWFkKSB7XG4gICAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLFxuICAgICAgICAgIG5vZGVzID0gY2hpbGROb2Rlcy5zbGljZSgpLFxuICAgICAgICAgIHBhcnQgPSBwYXJ0RnJvbU5vZGVzKG5vZGVzLCBsb29rQWhlYWQpO1xuXG4gICAgcmV0dXJuIHBhcnQ7XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhydWxlTmFtZSwgY2hpbGROb2RlcykgeyByZXR1cm4gTm9uVGVybWluYWxOb2RlLmZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMoTm9uVGVybWluYWxQYXJ0Qk5GTm9kZSwgcnVsZU5hbWUsIGNoaWxkTm9kZXMpOyB9XG59XG5cbmZ1bmN0aW9uIHBhcnRGcm9tTm9kZXMobm9kZXMsIGxvb2tBaGVhZCkge1xuICBsZXQgcGFydCA9IG51bGw7XG5cbiAgY29uc3Qgbm9kZXNMZW5ndGggPSBub2Rlcy5sZW5ndGg7XG5cbiAgaWYgKG5vZGVzTGVuZ3RoID09PSAxKSB7XG4gICAgY29uc3Qgbm9kZSA9IG5vZGVzLnBvcCgpO1xuXG4gICAgcGFydCA9IG5vZGUuZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCk7XG4gIH0gZWxzZSB7XG4gICAgbm9kZXMucG9wKCk7XG5cbiAgICBsb29rQWhlYWQgPSB0cnVlO1xuXG4gICAgcGFydCA9IHBhcnRGcm9tTm9kZXMobm9kZXMsIGxvb2tBaGVhZCk7XG4gIH1cblxuICByZXR1cm4gcGFydDtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IERlZmluaXRpb24gZnJvbSBcIi4uLy4uLy4uL2RlZmluaXRpb25cIjtcbmltcG9ydCBSdWxlTmFtZVBhcnQgZnJvbSBcIi4uLy4uLy4uL3BhcnQvbm9uVGVybWluYWwvcnVsZU5hbWVcIjtcbmltcG9ydCBPcHRpb25hbFBhcnRQYXJ0IGZyb20gXCIuLi8uLi8uLi9wYXJ0L25vblRlcm1pbmFsL29wdGlvbmFsUGFydFwiO1xuXG5pbXBvcnQgeyBSdWxlTmFtZVJ1bGVOYW1lLCBMb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lIH0gZnJvbSBcIi4uLy4uLy4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlTmFtZU5vblRlcm1pbmFsUGFydFJ1bGVEZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHJ1bGVOYW1lUnVsZU5hbWUgPSBSdWxlTmFtZVJ1bGVOYW1lLFxuICAgICAgICAgIGxvb2tBaGVhZE1vZGlmaWVyUnVsZU5hbWUgPSBMb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lLFxuICAgICAgICAgIHJ1bGVOYW1lUnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChydWxlTmFtZVJ1bGVOYW1lKSxcbiAgICAgICAgICBsb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lUGFydCA9IG5ldyBSdWxlTmFtZVBhcnQobG9va0FoZWFkTW9kaWZpZXJSdWxlTmFtZSksXG4gICAgICAgICAgb3B0aW9uYWxMb29rQWhlYWRSdWxlTmFtZVBhcnRQYXJ0ID0gbmV3IE9wdGlvbmFsUGFydFBhcnQobG9va0FoZWFkTW9kaWZpZXJSdWxlTmFtZVBhcnQpLFxuICAgICAgICAgIHBhcnRzID0gW1xuICAgICAgICAgICAgcnVsZU5hbWVSdWxlTmFtZVBhcnQsXG4gICAgICAgICAgICBvcHRpb25hbExvb2tBaGVhZFJ1bGVOYW1lUGFydFBhcnRcbiAgICAgICAgICBdO1xuICAgIFxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgUnVsZU5hbWVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3J1bGVOYW1lXCI7XG5pbXBvcnQgTm9uVGVybWluYWxQYXJ0Qk5GTm9kZSBmcm9tIFwiLi4vbm9kZS9ibmYvcGFydC9ub25UZXJtaW5hbFwiO1xuaW1wb3J0IFJ1bGVOYW1lTm9uVGVybWluYWxQYXJ0UnVsZURlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb24vcGFydFJ1bGUvbm9uVGVybWluYWwvcnVsZU5hbWVcIjtcblxuaW1wb3J0IHsgTm9uVGVybWluYWxQYXJ0UnVsZU5hbWUsIENob2ljZU9mUGFydHNSdWxlTmFtZSwgU2VxdWVuY2VPZlBhcnRzUnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vblRlcm1pbmFsUGFydFJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgbmFtZSA9IE5vblRlcm1pbmFsUGFydFJ1bGVOYW1lLFxuICAgICAgICAgIGNob2ljZU9mUGFydHNSdWxlTmFtZSA9IENob2ljZU9mUGFydHNSdWxlTmFtZSxcbiAgICAgICAgICBzZXF1ZW5jZU9mUGFydHNSdWxlTmFtZSA9IFNlcXVlbmNlT2ZQYXJ0c1J1bGVOYW1lLFxuICAgICAgICAgIGNob2ljZU9mUGFydHNSdWxlTmFtZURlZmluaXRpb24gPSBuZXcgUnVsZU5hbWVEZWZpbml0aW9uKGNob2ljZU9mUGFydHNSdWxlTmFtZSksXG4gICAgICAgICAgc2VxdWVuY2VPZlBhcnRzUnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbihzZXF1ZW5jZU9mUGFydHNSdWxlTmFtZSksXG4gICAgICAgICAgcnVsZU5hbWVOb25UZXJtaW5hbFBhcnRSdWxlRGVmaW5pdGlvbiA9IG5ldyBSdWxlTmFtZU5vblRlcm1pbmFsUGFydFJ1bGVEZWZpbml0aW9uKCksXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBjaG9pY2VPZlBhcnRzUnVsZU5hbWVEZWZpbml0aW9uLFxuICAgICAgICAgICAgc2VxdWVuY2VPZlBhcnRzUnVsZU5hbWVEZWZpbml0aW9uLFxuICAgICAgICAgICAgcnVsZU5hbWVOb25UZXJtaW5hbFBhcnRSdWxlRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IE5vblRlcm1pbmFsUGFydEJORk5vZGU7XG4gICAgXG4gICAgc3VwZXIobmFtZSwgZGVmaW5pdGlvbnMsIE5vZGUpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IE5vblRlcm1pbmFsTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9ub25UZXJtaW5hbFwiO1xuaW1wb3J0IFNlcXVlbmNlT2ZQYXJ0c1BhcnQgZnJvbSBcIi4uLy4uL3BhcnQvbm9uVGVybWluYWwvc2VxdWVuY2VPZlBhcnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlcXVlbmNlT2ZQYXJ0c0JORk5vZGUgZXh0ZW5kcyBOb25UZXJtaW5hbE5vZGUge1xuICBnZW5lcmF0ZVBhcnQobG9va0FoZWFkKSB7XG4gICAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLFxuICAgICAgICAgIG5vZGVzID0gY2hpbGROb2Rlcy5zbGljZSgpLFxuICAgICAgICAgIHBhcnQgPSBTZXF1ZW5jZU9mUGFydHNQYXJ0LmZyb21Ob2Rlcyhub2Rlcyk7XG5cbiAgICByZXR1cm4gcGFydDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKHJ1bGVOYW1lLCBjaGlsZE5vZGVzKSB7IHJldHVybiBOb25UZXJtaW5hbE5vZGUuZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhTZXF1ZW5jZU9mUGFydHNCTkZOb2RlLCBydWxlTmFtZSwgY2hpbGROb2Rlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgc3BlY2lhbFN5bWJvbHMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgUnVsZU5hbWVQYXJ0IGZyb20gXCIuLi9wYXJ0L25vblRlcm1pbmFsL3J1bGVOYW1lXCI7XG5pbXBvcnQgVGVybWluYWxTeW1ib2xQYXJ0IGZyb20gXCIuLi9wYXJ0L3Rlcm1pbmFsL3Rlcm1pbmFsU3ltYm9sXCI7XG5pbXBvcnQgT25lT3JNb3JlUGFydHNQYXJ0IGZyb20gXCIuLi9wYXJ0L25vblRlcm1pbmFsL29uZU9yTW9yZVBhcnRzXCI7XG5cbmltcG9ydCB7IFBhcnRSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuY29uc3QgeyBvcGVuQnJhY2tldCwgY2xvc2VCcmFja2V0IH0gPSBzcGVjaWFsU3ltYm9scztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VxdWVuY2VPZlBhcnRzRGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBwYXJ0UnVsZU5hbWUgPSBQYXJ0UnVsZU5hbWUsXG4gICAgICAgICAgb3BlbkJyYWNrZXRUZXJtaW5hbFN5bWJvbENvbnRlbnQgPSBvcGVuQnJhY2tldCwgLy8vXG4gICAgICAgICAgY2xvc2VCcmFja2V0VGVybWluYWxTeW1ib2xDb250ZW50ID0gY2xvc2VCcmFja2V0LCAvLy9cbiAgICAgICAgICBwYXJ0UnVsZU5hbWVQYXJ0ID0gbmV3IFJ1bGVOYW1lUGFydChwYXJ0UnVsZU5hbWUpLFxuICAgICAgICAgIG9wZW5CcmFja2V0VGVybWluYWxTeW1ib2xQYXJ0ID0gbmV3IFRlcm1pbmFsU3ltYm9sUGFydChvcGVuQnJhY2tldFRlcm1pbmFsU3ltYm9sQ29udGVudCksXG4gICAgICAgICAgY2xvc2VCcmFja2V0VGVybWluYWxTeW1ib2xQYXJ0ID0gbmV3IFRlcm1pbmFsU3ltYm9sUGFydChjbG9zZUJyYWNrZXRUZXJtaW5hbFN5bWJvbENvbnRlbnQpLFxuICAgICAgICAgIG9uZU9yTW9yZVBhcnRSdWxlTmFtZVBhcnRzUGFydCA9IG5ldyBPbmVPck1vcmVQYXJ0c1BhcnQocGFydFJ1bGVOYW1lUGFydCksXG4gICAgICAgICAgcGFydHMgPSBbXG4gICAgICAgICAgICBvcGVuQnJhY2tldFRlcm1pbmFsU3ltYm9sUGFydCxcbiAgICAgICAgICAgIHBhcnRSdWxlTmFtZVBhcnQsXG4gICAgICAgICAgICBvbmVPck1vcmVQYXJ0UnVsZU5hbWVQYXJ0c1BhcnQsXG4gICAgICAgICAgICBjbG9zZUJyYWNrZXRUZXJtaW5hbFN5bWJvbFBhcnRcbiAgICAgICAgICBdO1xuXG4gICAgc3VwZXIocGFydHMpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFJ1bGUgZnJvbSBcIi4uL3J1bGVcIjtcbmltcG9ydCBTZXF1ZW5jZU9mUGFydHNCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9zZXF1ZW5jZU9mUGFydHNcIjtcbmltcG9ydCBTZXF1ZW5jZU9mUGFydHNEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3NlcXVlbmNlT2ZQYXJ0c1wiO1xuXG5pbXBvcnQgeyBTZXF1ZW5jZU9mUGFydHNSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VxdWVuY2VPZlBhcnRzUnVsZSBleHRlbmRzIFJ1bGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBuYW1lID0gU2VxdWVuY2VPZlBhcnRzUnVsZU5hbWUsXG4gICAgICAgICAgc2VxdWVuY2VPZlBhcnRzRGVmaW5pdGlvbiA9IG5ldyBTZXF1ZW5jZU9mUGFydHNEZWZpbml0aW9uKCksXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBzZXF1ZW5jZU9mUGFydHNEZWZpbml0aW9uXG4gICAgICAgICAgXSxcbiAgICAgICAgICBOb2RlID0gU2VxdWVuY2VPZlBhcnRzQk5GTm9kZTtcblxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNwZWNpYWxTeW1ib2xzIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xuXG5pbXBvcnQgVmVydGljYWxCcmFuY2hQYXJzZVRyZWUgZnJvbSBcIi4vdmVydGljYWxCcmFuY2hcIjtcblxuY29uc3QgeyBOT19XSElURVNQQUNFIH0gPSBzcGVjaWFsU3ltYm9scztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9XaGl0ZXNwYWNlTm9kZVBhcnNlVHJlZSBleHRlbmRzIFZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlIHtcbiAgc3RhdGljIGZyb21Ob3RoaW5nKCkge1xuICAgIGNvbnN0IHN0cmluZyA9IE5PX1dISVRFU1BBQ0UsIC8vL1xuICAgICAgICAgIHN0cmluZ0xlbmd0aCA9IHN0cmluZy5sZW5ndGgsXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQYXJzZVRyZWVXaWR0aCA9IHN0cmluZ0xlbmd0aCwgLy8vXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQYXJzZVRyZWUgPSBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5mcm9tV2lkdGgodmVydGljYWxCcmFuY2hQYXJzZVRyZWVXaWR0aCksXG4gICAgICAgICAgdmVydGljYWxCcmFuY2hQb3NpdGlvbiA9IHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlLmdldFZlcnRpY2FsQnJhbmNoUG9zaXRpb24oKSxcbiAgICAgICAgICB0ZXJtaW5hbE5vZGVQYXJzZVRyZWUgPSBWZXJ0aWNhbEJyYW5jaFBhcnNlVHJlZS5mcm9tU3RyaW5nQW5kVmVydGljYWxCcmFuY2hQb3NpdGlvbihOb1doaXRlc3BhY2VOb2RlUGFyc2VUcmVlLCBzdHJpbmcsIHZlcnRpY2FsQnJhbmNoUG9zaXRpb24pO1xuXG4gICAgdGVybWluYWxOb2RlUGFyc2VUcmVlLmFwcGVuZFRvVG9wKHZlcnRpY2FsQnJhbmNoUGFyc2VUcmVlKTtcblxuICAgIGNvbnN0IG5vV2hpdGVzcGFjZU5vZGVQYXJzZVRyZWUgPSB0ZXJtaW5hbE5vZGVQYXJzZVRyZWU7IC8vL1xuXG4gICAgcmV0dXJuIG5vV2hpdGVzcGFjZU5vZGVQYXJzZVRyZWU7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRlcm1pbmFsTm9kZSBmcm9tIFwiLi4vdGVybWluYWxcIjtcbmltcG9ydCBOb1doaXRlc3BhY2VOb2RlUGFyc2VUcmVlIGZyb20gXCIuLi8uLi9wYXJzZVRyZWUvbm9XaGl0ZXNwYWNlTm9kZVwiO1xuXG5pbXBvcnQgeyBFTVBUWV9TVFJJTkcgfSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vV2hpdGVzcGFjZU5vZGUgZXh0ZW5kcyBUZXJtaW5hbE5vZGUge1xuICBnZXRUeXBlKCkge1xuICAgIGNvbnN0IHR5cGUgPSBudWxsOyAgLy8vXG5cbiAgICByZXR1cm4gdHlwZTtcbiAgfVxuXG4gIGdldENvbnRlbnQoKSB7XG4gICAgY29uc3QgY29udGVudCA9IEVNUFRZX1NUUklORztcblxuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaXNOb1doaXRlc3BhY2VOb2RlKCkge1xuICAgIGNvbnN0IG5vV2hpdGVzcGFjZU5vZGUgPSB0cnVlO1xuXG4gICAgcmV0dXJuIG5vV2hpdGVzcGFjZU5vZGU7XG4gIH1cblxuICBhc1BhcnNlVHJlZSh0b2tlbnMpIHtcbiAgICBjb25zdCBub1doaXRlc3BhY2VOb2RlUGFyc2VUcmVlID0gTm9XaGl0ZXNwYWNlTm9kZVBhcnNlVHJlZS5mcm9tTm90aGluZygpLFxuICAgICAgICAgIHBhcnNlVHJlZSA9IG5vV2hpdGVzcGFjZU5vZGVQYXJzZVRyZWU7ICAvLy9cblxuICAgIHJldHVybiBwYXJzZVRyZWU7XG4gIH1cblxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7XG4gICAgY29uc3Qgc2lnbmlmaWNhbnRUb2tlbiA9IG51bGwsXG4gICAgICAgICAgbm9XaGl0ZXNwYWNlTm9kZSA9IFRlcm1pbmFsTm9kZS5mcm9tU2lnbmlmaWNhbnRUb2tlbihOb1doaXRlc3BhY2VOb2RlLCBzaWduaWZpY2FudFRva2VuKTtcblxuICAgIHJldHVybiBub1doaXRlc3BhY2VOb2RlO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNwZWNpYWxTeW1ib2xzIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xuXG5pbXBvcnQgVGVybWluYWxQYXJ0IGZyb20gXCIuLi8uLi9wYXJ0L3Rlcm1pbmFsXCI7XG5pbXBvcnQgTm9XaGl0ZXNwYWNlTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS90ZXJtaW5hbC9ub1doaXRlc3BhY2VcIjtcblxuY29uc3QgeyBOT19XSElURVNQQUNFIH0gPSBzcGVjaWFsU3ltYm9scztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9XaGl0ZXNwYWNlUGFydCBleHRlbmRzIFRlcm1pbmFsUGFydCB7XG4gIGlzTm9XaGl0ZXNwYWNlUGFydCgpIHtcbiAgICBjb25zdCBub1doaXRlc3BhY2VQYXJ0ID0gdHJ1ZTtcblxuICAgIHJldHVybiBub1doaXRlc3BhY2VQYXJ0O1xuICB9XG5cbiAgcGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjaykge1xuICAgIGxldCBwYXJzZWQ7XG5cbiAgICBsZXQgbm9XaGl0ZXNwYWNlTm9kZSA9IG51bGw7XG5cbiAgICBjb25zdCBzYXZlZEluZGV4ID0gc3RhdGUuZ2V0U2F2ZWRJbmRleCgpLFxuICAgICAgICAgIG5leHRUb2tlbldoaXRlc3BhY2VUb2tlbiA9IHN0YXRlLmlzTmV4dFRva2VuV2hpdGVzcGFjZVRva2VuKCk7XG5cbiAgICBpZiAoIW5leHRUb2tlbldoaXRlc3BhY2VUb2tlbikge1xuICAgICAgbm9XaGl0ZXNwYWNlTm9kZSA9IE5vV2hpdGVzcGFjZU5vZGUuZnJvbU5vdGhpbmcoKTtcbiAgICB9XG5cbiAgICBwYXJzZWQgPSAobm9XaGl0ZXNwYWNlTm9kZSAhPT0gbnVsbClcblxuICAgIGlmIChwYXJzZWQpIHtcbiAgICAgIG5vZGVzLnB1c2gobm9XaGl0ZXNwYWNlTm9kZSk7XG5cbiAgICAgIGlmIChjYWxsYmFjayAhPT0gbnVsbCkge1xuICAgICAgICBwYXJzZWQgPSBjYWxsYmFjaygpO1xuXG4gICAgICAgIGlmICghcGFyc2VkKSB7XG4gICAgICAgICAgbm9kZXMucG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXBhcnNlZCkge1xuICAgICAgc3RhdGUuYmFja3RyYWNrKHNhdmVkSW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJzZWQ7XG4gIH1cblxuICBhc1N0cmluZygpIHtcbiAgICBjb25zdCBzdHJpbmcgPSBOT19XSElURVNQQUNFOyAvLy9cblxuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cblxuICBjbG9uZSgpIHsgcmV0dXJuIHN1cGVyLmNsb25lKE5vV2hpdGVzcGFjZVBhcnQpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBOb25UZXJtaW5hbE5vZGUgZnJvbSBcIi4uLy4uL25vZGUvbm9uVGVybWluYWxcIjtcbmltcG9ydCBOb1doaXRlc3BhY2VQYXJ0IGZyb20gXCIuLi8uLi9wYXJ0L3Rlcm1pbmFsL25vV2hpdGVzcGFjZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb1doaXRlc3BhY2VQYXJ0Qk5GTm9kZSBleHRlbmRzIE5vblRlcm1pbmFsTm9kZSB7XG4gIGdlbmVyYXRlUGFydChsb29rQWhlYWQpIHtcbiAgICBjb25zdCBub1doaXRlc3BhY2VQYXJ0ID0gbmV3IE5vV2hpdGVzcGFjZVBhcnQoKTtcblxuICAgIHJldHVybiBub1doaXRlc3BhY2VQYXJ0O1xuICB9XG5cbiAgc3RhdGljIGZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHsgcmV0dXJuIE5vblRlcm1pbmFsTm9kZS5mcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKE5vV2hpdGVzcGFjZVBhcnRCTkZOb2RlLCBydWxlTmFtZSwgY2hpbGROb2Rlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgc3BlY2lhbFN5bWJvbHMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgVGVybWluYWxTeW1ib2xQYXJ0IGZyb20gXCIuLi9wYXJ0L3Rlcm1pbmFsL3Rlcm1pbmFsU3ltYm9sXCI7XG5cbmNvbnN0IHsgTk9fV0hJVEVTUEFDRSB9ID0gc3BlY2lhbFN5bWJvbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vV2hpdGVzcGFjZVBhcnREZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IGNvbnRlbnQgPSBOT19XSElURVNQQUNFLFxuICAgICAgICAgIHRlcm1pbmFsU3ltYm9sUGFydCA9IG5ldyBUZXJtaW5hbFN5bWJvbFBhcnQoY29udGVudCksXG4gICAgICAgICAgcGFydHMgPSBbXG4gICAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFBhcnRcbiAgICAgICAgICBdO1xuXG4gICAgc3VwZXIocGFydHMpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFJ1bGUgZnJvbSBcIi4uL3J1bGVcIjtcbmltcG9ydCBOb1doaXRlc3BhY2VQYXJ0Qk5GTm9kZSBmcm9tIFwiLi4vbm9kZS9ibmYvbm9XaGl0ZXNwYWNlUGFydFwiO1xuaW1wb3J0IE5vV2hpdGVzcGFjZVBhcnREZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL25vV2hpdGVzcGFjZVBhcnRcIjtcblxuaW1wb3J0IHsgTm9XaGl0ZXNwYWNlUGFydFJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb1doaXRlc3BhY2VQYXJ0UnVsZSBleHRlbmRzIFJ1bGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBub1doaXRlc3BhY2VQYXJ0RGVmaW5pdGlvbiA9IG5ldyBOb1doaXRlc3BhY2VQYXJ0RGVmaW5pdGlvbigpLFxuICAgICAgICAgIG5hbWUgPSBOb1doaXRlc3BhY2VQYXJ0UnVsZU5hbWUsXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBub1doaXRlc3BhY2VQYXJ0RGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IE5vV2hpdGVzcGFjZVBhcnRCTkZOb2RlO1xuXG4gICAgc3VwZXIobmFtZSwgZGVmaW5pdGlvbnMsIE5vZGUpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgc3BlY2lhbFN5bWJvbHMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgTm9XaGl0ZXNwYWNlUGFydCBmcm9tIFwiLi4vcGFydC90ZXJtaW5hbC9ub1doaXRlc3BhY2VcIjtcbmltcG9ydCBUZXJtaW5hbFN5bWJvbFBhcnQgZnJvbSBcIi4uL3BhcnQvdGVybWluYWwvdGVybWluYWxTeW1ib2xcIjtcblxuY29uc3QgeyBleGNsYW1hdGlvbk1hcmsgfSA9IHNwZWNpYWxTeW1ib2xzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb29rQWhlYWRNb2RpZmllclJ1bGVEZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IGNvbnRlbnQgPSBleGNsYW1hdGlvbk1hcmssICAvLy9cbiAgICAgICAgICBub1doaXRlc3BhY2VQYXJ0ID0gbmV3IE5vV2hpdGVzcGFjZVBhcnQoKSxcbiAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFBhcnQgPSBuZXcgVGVybWluYWxTeW1ib2xQYXJ0KGNvbnRlbnQpLFxuICAgICAgICAgIHBhcnRzID0gW1xuICAgICAgICAgICAgbm9XaGl0ZXNwYWNlUGFydCxcbiAgICAgICAgICAgIHRlcm1pbmFsU3ltYm9sUGFydFxuICAgICAgICAgIF07XG5cbiAgICBzdXBlcihwYXJ0cylcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IERlZmluaXRpb25CTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgTG9va0FoZWFkTW9kaWZpZXJSdWxlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9sb29rQWhlYWRNb2RpZmllclJ1bGVcIjtcblxuaW1wb3J0IHsgTG9va0FoZWFkTW9kaWZpZXJSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9va0FoZWFkTW9kaWZpZXJSdWxlIGV4dGVuZHMgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IG5hbWUgPSBMb29rQWhlYWRNb2RpZmllclJ1bGVOYW1lLFxuICAgICAgICAgIGxvb2tBaGVhZE1vZGlmaWVyUnVsZURlZmluaXRpb24gPSBuZXcgTG9va0FoZWFkTW9kaWZpZXJSdWxlRGVmaW5pdGlvbigpLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgbG9va0FoZWFkTW9kaWZpZXJSdWxlRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IERlZmluaXRpb25CTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3Rlcm1pbmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vcGFydC90ZXJtaW5hbFwiKSk7XG52YXIgX3Rlcm1pbmFsMSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL25vZGUvdGVybWluYWxcIikpO1xudmFyIF9hcnJheSA9IHJlcXVpcmUoXCIuLi8uLi91dGlsaXRpZXMvYXJyYXlcIik7XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgIT09IFwidW5kZWZpbmVkXCIgJiYgUmVmbGVjdC5nZXQpIHtcbiAgICAgICAgX2dldCA9IFJlZmxlY3QuZ2V0O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIF9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICB2YXIgYmFzZSA9IF9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpO1xuICAgICAgICAgICAgaWYgKCFiYXNlKSByZXR1cm47XG4gICAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgaWYgKGRlc2MuZ2V0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRlc2MudmFsdWU7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyIHx8IHRhcmdldCk7XG59XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gICAgfTtcbiAgICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufVxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICAgIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgICAgIHJldHVybiBjYWxsO1xuICAgIH1cbiAgICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxuZnVuY3Rpb24gX3N1cGVyUHJvcEJhc2Uob2JqZWN0LCBwcm9wZXJ0eSkge1xuICAgIHdoaWxlKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpe1xuICAgICAgICBvYmplY3QgPSBfZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTtcbiAgICAgICAgaWYgKG9iamVjdCA9PT0gbnVsbCkgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3Q7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBSZWd1bGFyRXhwcmVzc2lvblBhcnQgPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKFRlcm1pbmFsUGFydCkge1xuICAgIF9pbmhlcml0cyhSZWd1bGFyRXhwcmVzc2lvblBhcnQsIFRlcm1pbmFsUGFydCk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihSZWd1bGFyRXhwcmVzc2lvblBhcnQpO1xuICAgIGZ1bmN0aW9uIFJlZ3VsYXJFeHByZXNzaW9uUGFydChyZWd1bGFyRXhwcmVzc2lvbikge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVndWxhckV4cHJlc3Npb25QYXJ0KTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpO1xuICAgICAgICBfdGhpcy5yZWd1bGFyRXhwcmVzc2lvbiA9IHJlZ3VsYXJFeHByZXNzaW9uO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIF9jcmVhdGVDbGFzcyhSZWd1bGFyRXhwcmVzc2lvblBhcnQsIFtcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcInBhcnNlXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcGFyc2Uobm9kZXMsIHN0YXRlLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIHZhciBwYXJzZWQ7XG4gICAgICAgICAgICAgICAgdmFyIHRlcm1pbmFsTm9kZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgdmFyIHNhdmVkSW5kZXggPSBzdGF0ZS5nZXRTYXZlZEluZGV4KCksIG5leHRTaWduaWZpY2FudFRva2VuID0gc3RhdGUuZ2V0TmV4dFNpZ25pZmljYW50VG9rZW4oKSwgc2lnbmlmaWNhbnRUb2tlbiA9IG5leHRTaWduaWZpY2FudFRva2VuOyAvLy9cbiAgICAgICAgICAgICAgICBpZiAoc2lnbmlmaWNhbnRUb2tlbiAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY29udGVudCA9IHNpZ25pZmljYW50VG9rZW4uZ2V0Q29udGVudCgpLCBtYXRjaGVzID0gY29udGVudC5tYXRjaCh0aGlzLnJlZ3VsYXJFeHByZXNzaW9uKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoZXMgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaXJzdE1hdGNoID0gKDAsIF9hcnJheSkuZmlyc3QobWF0Y2hlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlyc3RNYXRjaCA9PT0gY29udGVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsTm9kZSA9IF90ZXJtaW5hbDEuZGVmYXVsdC5mcm9tU2lnbmlmaWNhbnRUb2tlbihzaWduaWZpY2FudFRva2VuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwYXJzZWQgPSB0ZXJtaW5hbE5vZGUgIT09IG51bGw7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlZCkge1xuICAgICAgICAgICAgICAgICAgICBub2Rlcy5wdXNoKHRlcm1pbmFsTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkID0gY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcGFyc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFwYXJzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGUuYmFja3RyYWNrKHNhdmVkSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiYXNTdHJpbmdcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBhc1N0cmluZygpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVndWxhckV4cHJlc3Npb25TdHJpbmcgPSB0aGlzLnJlZ3VsYXJFeHByZXNzaW9uLnRvU3RyaW5nKCksIHN0cmluZyA9IHJlZ3VsYXJFeHByZXNzaW9uU3RyaW5nOyAvLy9cbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiY2xvbmVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2dldChfZ2V0UHJvdG90eXBlT2YoUmVndWxhckV4cHJlc3Npb25QYXJ0LnByb3RvdHlwZSksIFwiY2xvbmVcIiwgdGhpcykuY2FsbCh0aGlzLCBSZWd1bGFyRXhwcmVzc2lvblBhcnQsIHRoaXMucmVndWxhckV4cHJlc3Npb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIFJlZ3VsYXJFeHByZXNzaW9uUGFydDtcbn0oX3Rlcm1pbmFsLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gUmVndWxhckV4cHJlc3Npb25QYXJ0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMM055WXk5d1lYSjBMM1JsY20xcGJtRnNMM0psWjNWc1lYSkZlSEJ5WlhOemFXOXVMbXB6SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklsd2lkWE5sSUhOMGNtbGpkRndpTzF4dVhHNXBiWEJ2Y25RZ1ZHVnliV2x1WVd4UVlYSjBJR1p5YjIwZ1hDSXVMaTh1TGk5d1lYSjBMM1JsY20xcGJtRnNYQ0k3WEc1cGJYQnZjblFnVkdWeWJXbHVZV3hPYjJSbElHWnliMjBnWENJdUxpOHVMaTl1YjJSbEwzUmxjbTFwYm1Gc1hDSTdYRzVjYm1sdGNHOXlkQ0I3SUdacGNuTjBJSDBnWm5KdmJTQmNJaTR1THk0dUwzVjBhV3hwZEdsbGN5OWhjbkpoZVZ3aU8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQmpiR0Z6Y3lCU1pXZDFiR0Z5Ulhod2NtVnpjMmx2YmxCaGNuUWdaWGgwWlc1a2N5QlVaWEp0YVc1aGJGQmhjblFnZTF4dUlDQmpiMjV6ZEhKMVkzUnZjaWh5WldkMWJHRnlSWGh3Y21WemMybHZiaWtnZTF4dUlDQWdJSE4xY0dWeUtDazdYRzVjYmlBZ0lDQjBhR2x6TG5KbFozVnNZWEpGZUhCeVpYTnphVzl1SUQwZ2NtVm5kV3hoY2tWNGNISmxjM05wYjI0N1hHNGdJSDFjYmx4dUlDQndZWEp6WlNodWIyUmxjeXdnYzNSaGRHVXNJR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdiR1YwSUhCaGNuTmxaRHRjYmx4dUlDQWdJR3hsZENCMFpYSnRhVzVoYkU1dlpHVWdQU0J1ZFd4c08xeHVJQ0FnSUZ4dUlDQWdJR052Ym5OMElITmhkbVZrU1c1a1pYZ2dQU0J6ZEdGMFpTNW5aWFJUWVhabFpFbHVaR1Y0S0Nrc1hHNWNkRngwSUNBZ0lDQWdibVY0ZEZOcFoyNXBabWxqWVc1MFZHOXJaVzRnUFNCemRHRjBaUzVuWlhST1pYaDBVMmxuYm1sbWFXTmhiblJVYjJ0bGJpZ3BMRnh1WEhSY2RGeDBYSFJjZEhOcFoyNXBabWxqWVc1MFZHOXJaVzRnUFNCdVpYaDBVMmxuYm1sbWFXTmhiblJVYjJ0bGJqc2dMeTh2WEc1Y2JpQWdJQ0JwWmlBb2MybG5ibWxtYVdOaGJuUlViMnRsYmlBaFBUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnWTI5dWRHVnVkQ0E5SUhOcFoyNXBabWxqWVc1MFZHOXJaVzR1WjJWMFEyOXVkR1Z1ZENncExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGMFkyaGxjeUE5SUdOdmJuUmxiblF1YldGMFkyZ29kR2hwY3k1eVpXZDFiR0Z5Ulhod2NtVnpjMmx2YmlrN1hHNWNiaUFnSUNBZ0lHbG1JQ2h0WVhSamFHVnpJQ0U5UFNCdWRXeHNLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1pwY25OMFRXRjBZMmdnUFNCbWFYSnpkQ2h0WVhSamFHVnpLVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9abWx5YzNSTllYUmphQ0E5UFQwZ1kyOXVkR1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJsY20xcGJtRnNUbTlrWlNBOUlGUmxjbTFwYm1Gc1RtOWtaUzVtY205dFUybG5ibWxtYVdOaGJuUlViMnRsYmloemFXZHVhV1pwWTJGdWRGUnZhMlZ1S1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhCaGNuTmxaQ0E5SUNoMFpYSnRhVzVoYkU1dlpHVWdJVDA5SUc1MWJHd3BPMXh1WEc0Z0lDQWdhV1lnS0hCaGNuTmxaQ2tnZTF4dUlDQWdJQ0FnYm05a1pYTXVjSFZ6YUNoMFpYSnRhVzVoYkU1dlpHVXBPMXh1WEc0Z0lDQWdJQ0JwWmlBb1kyRnNiR0poWTJzZ0lUMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdjR0Z5YzJWa0lEMGdZMkZzYkdKaFkyc29LVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9JWEJoY25ObFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUc1dlpHVnpMbkJ2Y0NncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLQ0Z3WVhKelpXUXBJSHRjYmlBZ0lDQWdJSE4wWVhSbExtSmhZMnQwY21GamF5aHpZWFpsWkVsdVpHVjRLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2NHRnljMlZrTzF4dUlDQjlYRzVjYmlBZ1lYTlRkSEpwYm1jb0tTQjdYRzRnSUNBZ1kyOXVjM1FnY21WbmRXeGhja1Y0Y0hKbGMzTnBiMjVUZEhKcGJtY2dQU0IwYUdsekxuSmxaM1ZzWVhKRmVIQnlaWE56YVc5dUxuUnZVM1J5YVc1bktDa3NYRzVjZEZ4MElDQWdJQ0FnYzNSeWFXNW5JRDBnY21WbmRXeGhja1Y0Y0hKbGMzTnBiMjVUZEhKcGJtYzdJQzh2TDF4dVhHNGdJQ0FnY21WMGRYSnVJSE4wY21sdVp6dGNiaUFnZlZ4dVhHNGdJR05zYjI1bEtDa2dleUJ5WlhSMWNtNGdjM1Z3WlhJdVkyeHZibVVvVW1WbmRXeGhja1Y0Y0hKbGMzTnBiMjVRWVhKMExDQjBhR2x6TG5KbFozVnNZWEpGZUhCeVpYTnphVzl1S1RzZ2ZWeHVmVnh1SWwwc0ltNWhiV1Z6SWpwYklsSmxaM1ZzWVhKRmVIQnlaWE56YVc5dVVHRnlkQ0lzSW5KbFozVnNZWEpGZUhCeVpYTnphVzl1SWl3aWNHRnljMlVpTENKdWIyUmxjeUlzSW5OMFlYUmxJaXdpWTJGc2JHSmhZMnNpTENKd1lYSnpaV1FpTENKMFpYSnRhVzVoYkU1dlpHVWlMQ0p6WVhabFpFbHVaR1Y0SWl3aVoyVjBVMkYyWldSSmJtUmxlQ0lzSW01bGVIUlRhV2R1YVdacFkyRnVkRlJ2YTJWdUlpd2laMlYwVG1WNGRGTnBaMjVwWm1sallXNTBWRzlyWlc0aUxDSnphV2R1YVdacFkyRnVkRlJ2YTJWdUlpd2lZMjl1ZEdWdWRDSXNJbWRsZEVOdmJuUmxiblFpTENKdFlYUmphR1Z6SWl3aWJXRjBZMmdpTENKbWFYSnpkRTFoZEdOb0lpd2labWx5YzNRaUxDSlVaWEp0YVc1aGJFNXZaR1VpTENKbWNtOXRVMmxuYm1sbWFXTmhiblJVYjJ0bGJpSXNJbkIxYzJnaUxDSndiM0FpTENKaVlXTnJkSEpoWTJzaUxDSmhjMU4wY21sdVp5SXNJbkpsWjNWc1lYSkZlSEJ5WlhOemFXOXVVM1J5YVc1bklpd2lkRzlUZEhKcGJtY2lMQ0p6ZEhKcGJtY2lMQ0pqYkc5dVpTSXNJbFJsY20xcGJtRnNVR0Z5ZENKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1EwRkJXU3hYUVVGQkxFTkJRVU03T3p0RlFVRmlPM2RDUVVGQk8wRkJSWGxDTEVkQlFYRkNMRU5CUVhKQ0xGTkJRWEZDTzBGQlEzSkNMRWRCUVhGQ0xFTkJRWEpDTEZWQlFYRkNPMEZCUlhoQ0xFZEJRWFZDTEVOQlFYWkNMRTFCUVhWQ096czdPenM3T3pzN096czdPenM3T0VSQlREZERPM05EUVVGQk96WkVRVUZCTzJsRlFVRkJPenM3TzNkRlFVRkJPMmRGUVVGQk96czdPenN3UWtGQlFUczdPenM3T3pzN096dFRRVUZCT3pzN096czdPMHRCUVVFN096czdPenM3T3pzN096czdUVUZCUVR0NVJFRkJRVHM3T3pzN096czdPenM3T3pzN08zVkNRVUZCT3p0TFFVRkJPenM3T3p0M1EwRkJRVHM3T3pzN096SkNRVUZCT3pzN096czdPenR4UmtGQlFUczdPenM3T3pzN096czdPMjFGUVVGQk96dHBSRUZCUVRzN096czdRVUZQWlN4SFFVRkxMRU5CUVVOQkxIRkNRVUZ4UWl4cFFrRkJNMElzVVVGQlVUdHJSRUZRZGtJN08yRkJUM0ZDUVN4eFFrRkJjVUlzUTBGRE5VSkRMR2xDUVVGcFFqdHZSRUZTTDBJN08ybERRMEZCTEVORVUxazdZMEZGU0VFc2FVSkJRV2xDTEVkQlFVZEJMR2xDUVVGcFFpeERRVUZET3pzN096dFpRVWMzUTBNc1IwRkJTeXhGUVVGTVFTeERRVUZMTzIxQ1FVRk1RU3hSUVVGUkxFTkJRVkpCTEV0QlFVc3NRMEZCUTBNc1MwRkJTeXhGUVVGRlF5eExRVUZMTEVWQlFVVkRMRkZCUVZFc1JVRkJSU3hEUVVGRE8yZENRVU0zUWl4SFFVRkhMRU5CUVVORExFMUJRVTA3WjBKQlJWWXNSMEZCUnl4RFFVRkRReXhaUVVGWkxFZEJRVWNzU1VGQlNUdG5Ra0ZGZGtJc1IwRkJTeXhEUVVGRFF5eFZRVUZWTEVkQlFVZEtMRXRCUVVzc1EwRkJRMHNzWVVGQllTeEpRVU5zUTBNc2IwSkJRVzlDTEVkQlFVZE9MRXRCUVVzc1EwRkJRMDhzZFVKQlFYVkNMRWxCUTNaRVF5eG5Ra0ZCWjBJc1IwRkJSMFlzYjBKQlFXOUNMRVZCUVVVc1JVRkJSeXhCUVVGSUxFTkJRVWM3WjBKQlJUZERMRVZCUVVVc1JVRkJSVVVzWjBKQlFXZENMRXRCUVVzc1NVRkJTU3hGUVVGRkxFTkJRVU03YjBKQlF6bENMRWRCUVVzc1EwRkJRME1zVDBGQlR5eEhRVUZIUkN4blFrRkJaMElzUTBGQlEwVXNWVUZCVlN4SlFVTnlRME1zVDBGQlR5eEhRVUZIUml4UFFVRlBMRU5CUVVOSExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTm1MR2xDUVVGcFFqdHZRa0ZGY0VRc1JVRkJSU3hGUVVGRll5eFBRVUZQTEV0QlFVc3NTVUZCU1N4RlFVRkZMRU5CUVVNN2QwSkJRM0pDTEVkQlFVc3NRMEZCUTBVc1ZVRkJWU3hQUVVGSFF5eE5RVUZMTEZGQlFVTklMRTlCUVU4N2QwSkJSV2hETEVWQlFVVXNSVUZCUlVVc1ZVRkJWU3hMUVVGTFNpeFBRVUZQTEVWQlFVVXNRMEZCUXpzMFFrRkRNMEpPTEZsQlFWa3NSMEZCUjFrc1ZVRkJXU3hUUVVGRFF5eHZRa0ZCYjBJc1EwRkJRMUlzWjBKQlFXZENMRU5CUVVNc1EwRkJRenQzUWtGRGNrVXNRMEZCUXp0dlFrRkRTQ3hEUVVGRE8yZENRVU5JTEVOQlFVTTdaMEpCUlVST0xFMUJRVTBzUjBGQlNVTXNXVUZCV1N4TFFVRkxMRWxCUVVrc1FVRkJReXhEUVVGRE8yZENRVVZxUXl4RlFVRkZMRVZCUVVWRUxFMUJRVTBzUlVGQlJTeERRVUZETzI5Q1FVTllTQ3hMUVVGTExFTkJRVU5yUWl4SlFVRkpMRU5CUVVOa0xGbEJRVmtzUTBGQlF5eERRVUZETzI5Q1FVVjZRaXhGUVVGRkxFVkJRVVZHTEZGQlFWRXNTMEZCU3l4SlFVRkpMRVZCUVVVc1EwRkJRenQzUWtGRGRFSkRMRTFCUVUwc1IwRkJSMFFzVVVGQlVTeEZRVUZGTEVOQlFVTTdkMEpCUlhCQ0xFVkJRVVVzUjBGQlIwTXNUVUZCVFN4RlFVRkZMRU5CUVVNN05FSkJRMXBJTEV0QlFVc3NRMEZCUTIxQ0xFZEJRVWNzUlVGQlJTeERRVUZETzNkQ1FVTmtMRU5CUVVNN2IwSkJRMGdzUTBGQlF6dG5Ra0ZEU0N4RFFVRkRPMmRDUVVWRUxFVkJRVVVzUjBGQlIyaENMRTFCUVUwc1JVRkJSU3hEUVVGRE8yOUNRVU5hUml4TFFVRkxMRU5CUVVOdFFpeFRRVUZUTEVOQlFVTm1MRlZCUVZVc1EwRkJReXhEUVVGRE8yZENRVU01UWl4RFFVRkRPMmRDUVVWRUxFMUJRVTBzUTBGQlEwWXNUVUZCVFR0WlFVTm1MRU5CUVVNN096dFpRVVZFYTBJc1IwRkJVU3hGUVVGU1FTeERRVUZSTzIxQ1FVRlNRU3hSUVVGUkxFTkJRVkpCTEZGQlFWRXNSMEZCUnl4RFFVRkRPMmRDUVVOV0xFZEJRVXNzUTBGQlEwTXNkVUpCUVhWQ0xFZEJRVWNzU1VGQlNTeERRVUZEZUVJc2FVSkJRV2xDTEVOQlFVTjVRaXhSUVVGUkxFbEJRek5FUXl4TlFVRk5MRWRCUVVkR0xIVkNRVUYxUWl4RlFVRkZMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVY2UXl4TlFVRk5MRU5CUVVORkxFMUJRVTA3V1VGRFppeERRVUZET3pzN1dVRkZSRU1zUjBGQlN5eEZRVUZNUVN4RFFVRkxPMjFDUVVGTVFTeFJRVUZSTEVOQlFWSkJMRXRCUVVzc1IwRkJSeXhEUVVGRE8yZENRVUZETEUxQlFVMHNjMEpCZWtSSE5VSXNjVUpCUVhGQ0xHRkJlVVJxUWpSQ0xFTkJRVXNzVVVGQldDeEpRVUZMTEdGQlFVODFRaXh4UWtGQmNVSXNSVUZCUlN4SlFVRkpMRU5CUVVORExHbENRVUZwUWp0WlFVRkhMRU5CUVVNN08wMUJhRVZvUmpzN1JVRlBiVVEwUWl4VFFVRlpPMnRDUVVFeFF6ZENMSEZDUVVGeFFpeEJRVkF4UXlKOSIsICJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfbm9uVGVybWluYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9ub2RlL25vblRlcm1pbmFsXCIpKTtcbnZhciBfcmVndWxhckV4cHJlc3Npb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9wYXJ0L3Rlcm1pbmFsL3JlZ3VsYXJFeHByZXNzaW9uXCIpKTtcbnZhciBfYXJyYXkgPSByZXF1aXJlKFwiLi4vLi4vdXRpbGl0aWVzL2FycmF5XCIpO1xuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBSZWd1bGFyRXhwcmVzc2lvbkJORk5vZGUgPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKE5vblRlcm1pbmFsTm9kZSkge1xuICAgIF9pbmhlcml0cyhSZWd1bGFyRXhwcmVzc2lvbkJORk5vZGUsIE5vblRlcm1pbmFsTm9kZSk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihSZWd1bGFyRXhwcmVzc2lvbkJORk5vZGUpO1xuICAgIGZ1bmN0aW9uIFJlZ3VsYXJFeHByZXNzaW9uQk5GTm9kZSgpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlZ3VsYXJFeHByZXNzaW9uQk5GTm9kZSk7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInJlZ3VsYXJFeHByZXNzaW9uXCIsIC9eXFwvKCg/OlxcXFwufFteXFwvXSkqKVxcLyQvKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoUmVndWxhckV4cHJlc3Npb25CTkZOb2RlLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZW5lcmF0ZVBhcnRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZW5lcmF0ZVBhcnQobG9va0FoZWFkKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlZ3VsYXJFeHByZXNzaW9uID0gdGhpcy5nZXRSZWd1bGFyRXhwcmVzc2lvbigpLCByZWd1bGFyRXhwcmVzc2lvblBhcnQgPSBuZXcgX3JlZ3VsYXJFeHByZXNzaW9uLmRlZmF1bHQocmVndWxhckV4cHJlc3Npb24pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZWd1bGFyRXhwcmVzc2lvblBhcnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRSZWd1bGFyRXhwcmVzc2lvblwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlZ3VsYXJFeHByZXNzaW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZE5vZGVzID0gdGhpcy5nZXRDaGlsZE5vZGVzKCksIGZpcnN0Q2hpbGROb2RlID0gKDAsIF9hcnJheSkuZmlyc3QoY2hpbGROb2RlcyksIHRlcm1pbmFsTm9kZSA9IGZpcnN0Q2hpbGROb2RlLCB0ZXJtaW5hbE5vZGVDb250ZW50ID0gdGVybWluYWxOb2RlLmdldENvbnRlbnQoKSwgbWF0Y2hlcyA9IHRlcm1pbmFsTm9kZUNvbnRlbnQubWF0Y2godGhpcy5yZWd1bGFyRXhwcmVzc2lvbiksIHNlY29uZE1hdGNoID0gKDAsIF9hcnJheSkuc2Vjb25kKG1hdGNoZXMpLCBwYXR0ZXJuID0gc2Vjb25kTWF0Y2gsIHJlZ3VsYXJFeHByZXNzaW9uID0gbmV3IFJlZ0V4cChwYXR0ZXJuKTsgLy8vXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlZ3VsYXJFeHByZXNzaW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2Rlc1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX25vblRlcm1pbmFsLmRlZmF1bHQuZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhSZWd1bGFyRXhwcmVzc2lvbkJORk5vZGUsIHJ1bGVOYW1lLCBjaGlsZE5vZGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0pO1xuICAgIHJldHVybiBSZWd1bGFyRXhwcmVzc2lvbkJORk5vZGU7XG59KF9ub25UZXJtaW5hbC5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJlZ3VsYXJFeHByZXNzaW9uQk5GTm9kZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OXViMlJsTDJKdVppOXlaV2QxYkdGeVJYaHdjbVZ6YzJsdmJpNXFjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dWFXMXdiM0owSUU1dmJsUmxjbTFwYm1Gc1RtOWtaU0JtY205dElGd2lMaTR2TGk0dmJtOWtaUzl1YjI1VVpYSnRhVzVoYkZ3aU8xeHVhVzF3YjNKMElGSmxaM1ZzWVhKRmVIQnlaWE56YVc5dVVHRnlkQ0JtY205dElGd2lMaTR2TGk0dmNHRnlkQzkwWlhKdGFXNWhiQzl5WldkMWJHRnlSWGh3Y21WemMybHZibHdpTzF4dVhHNXBiWEJ2Y25RZ2V5Qm1hWEp6ZEN3Z2MyVmpiMjVrSUgwZ1puSnZiU0JjSWk0dUx5NHVMM1YwYVd4cGRHbGxjeTloY25KaGVWd2lPMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JqYkdGemN5QlNaV2QxYkdGeVJYaHdjbVZ6YzJsdmJrSk9SazV2WkdVZ1pYaDBaVzVrY3lCT2IyNVVaWEp0YVc1aGJFNXZaR1VnZTF4dUlDQnlaV2QxYkdGeVJYaHdjbVZ6YzJsdmJpQTlJQzllWEZ3dktDZy9PbHhjWEZ3dWZGdGVYRnd2WFNrcUtWeGNMeVF2TzF4dVhHNGdJR2RsYm1WeVlYUmxVR0Z5ZENoc2IyOXJRV2hsWVdRcElIdGNiaUFnSUNCamIyNXpkQ0J5WldkMWJHRnlSWGh3Y21WemMybHZiaUE5SUhSb2FYTXVaMlYwVW1WbmRXeGhja1Y0Y0hKbGMzTnBiMjRvS1N4Y2JpQWdJQ0FnSUNBZ0lDQnlaV2QxYkdGeVJYaHdjbVZ6YzJsdmJsQmhjblFnUFNCdVpYY2dVbVZuZFd4aGNrVjRjSEpsYzNOcGIyNVFZWEowS0hKbFozVnNZWEpGZUhCeVpYTnphVzl1S1R0Y2JseHVJQ0FnSUhKbGRIVnliaUJ5WldkMWJHRnlSWGh3Y21WemMybHZibEJoY25RN1hHNGdJSDFjYmx4dUlDQm5aWFJTWldkMWJHRnlSWGh3Y21WemMybHZiaWdwSUh0Y2JpQWdJQ0JqYjI1emRDQmphR2xzWkU1dlpHVnpJRDBnZEdocGN5NW5aWFJEYUdsc1pFNXZaR1Z6S0Nrc1hHNGdJQ0FnSUNBZ0lDQWdabWx5YzNSRGFHbHNaRTV2WkdVZ1BTQm1hWEp6ZENoamFHbHNaRTV2WkdWektTeGNiaUFnSUNBZ0lDQWdJQ0IwWlhKdGFXNWhiRTV2WkdVZ1BTQm1hWEp6ZEVOb2FXeGtUbTlrWlN3Z0lDOHZMMXh1SUNBZ0lDQWdJQ0FnSUhSbGNtMXBibUZzVG05a1pVTnZiblJsYm5RZ1BTQjBaWEp0YVc1aGJFNXZaR1V1WjJWMFEyOXVkR1Z1ZENncExGeHVJQ0FnSUNBZ0lDQWdJRzFoZEdOb1pYTWdQU0IwWlhKdGFXNWhiRTV2WkdWRGIyNTBaVzUwTG0xaGRHTm9LSFJvYVhNdWNtVm5kV3hoY2tWNGNISmxjM05wYjI0cExGeHVJQ0FnSUNBZ0lDQWdJSE5sWTI5dVpFMWhkR05vSUQwZ2MyVmpiMjVrS0cxaGRHTm9aWE1wTEZ4dUlDQWdJQ0FnSUNBZ0lIQmhkSFJsY200Z1BTQnpaV052Ym1STllYUmphQ3dnTHk4dlhHNGdJQ0FnSUNBZ0lDQWdjbVZuZFd4aGNrVjRjSEpsYzNOcGIyNGdQU0J1WlhjZ1VtVm5SWGh3S0hCaGRIUmxjbTRwT3lBZ0x5OHZYRzVjYmlBZ0lDQnlaWFIxY200Z2NtVm5kV3hoY2tWNGNISmxjM05wYjI0N1hHNGdJSDFjYmx4dUlDQnpkR0YwYVdNZ1puSnZiVkoxYkdWT1lXMWxRVzVrUTJocGJHUk9iMlJsY3loeWRXeGxUbUZ0WlN3Z1kyaHBiR1JPYjJSbGN5a2dleUJ5WlhSMWNtNGdUbTl1VkdWeWJXbHVZV3hPYjJSbExtWnliMjFTZFd4bFRtRnRaVUZ1WkVOb2FXeGtUbTlrWlhNb1VtVm5kV3hoY2tWNGNISmxjM05wYjI1Q1RrWk9iMlJsTENCeWRXeGxUbUZ0WlN3Z1kyaHBiR1JPYjJSbGN5azdJSDFjYm4xY2JseHVJbDBzSW01aGJXVnpJanBiSWxKbFozVnNZWEpGZUhCeVpYTnphVzl1UWs1R1RtOWtaU0lzSW5KbFozVnNZWEpGZUhCeVpYTnphVzl1SWl3aVoyVnVaWEpoZEdWUVlYSjBJaXdpYkc5dmEwRm9aV0ZrSWl3aVoyVjBVbVZuZFd4aGNrVjRjSEpsYzNOcGIyNGlMQ0p5WldkMWJHRnlSWGh3Y21WemMybHZibEJoY25RaUxDSlNaV2QxYkdGeVJYaHdjbVZ6YzJsdmJsQmhjblFpTENKamFHbHNaRTV2WkdWeklpd2laMlYwUTJocGJHUk9iMlJsY3lJc0ltWnBjbk4wUTJocGJHUk9iMlJsSWl3aVptbHljM1FpTENKMFpYSnRhVzVoYkU1dlpHVWlMQ0owWlhKdGFXNWhiRTV2WkdWRGIyNTBaVzUwSWl3aVoyVjBRMjl1ZEdWdWRDSXNJbTFoZEdOb1pYTWlMQ0p0WVhSamFDSXNJbk5sWTI5dVpFMWhkR05vSWl3aWMyVmpiMjVrSWl3aWNHRjBkR1Z5YmlJc0lsSmxaMFY0Y0NJc0ltWnliMjFTZFd4bFRtRnRaVUZ1WkVOb2FXeGtUbTlrWlhNaUxDSnlkV3hsVG1GdFpTSXNJazV2YmxSbGNtMXBibUZzVG05a1pTSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNRMEZCV1N4WFFVRkJMRU5CUVVNN096dEZRVUZpTzNkQ1FVRkJPMEZCUlRSQ0xFZEJRWGRDTEVOQlFYaENMRmxCUVhkQ08wRkJRMnhDTEVkQlFYVkRMRU5CUVhaRExHdENRVUYxUXp0QlFVVXpReXhIUVVGMVFpeERRVUYyUWl4TlFVRjFRanM3T3pzN096czdPenM3T3pzN096aEVRVXh5UkR0elEwRkJRVHMyUkVGQlFUdHBSVUZCUVRzN096dDNSVUZCUVR0blJVRkJRVHM3T3pzN096czdPenRWUVVGQk96dDNRa0ZCUVRzN096czdPenRMUVVGQk96czdPenM3T3pzN096czdPMDFCUVVFN2VVUkJRVUU3T3pzN096czdPenM3T3pzN096dDFRa0ZCUVRzN1MwRkJRVHM3T3pzeVFrRkJRVHM3T3pzN096czdjVVpCUVVFN096czdPenM3T3pzN096dHRSVUZCUVRzN2FVUkJRVUU3T3pzN08wRkJUMlVzUjBGQlN5eERRVUZEUVN4M1FrRkJkMElzYVVKQlFUbENMRkZCUVZFN2QwUkJVSFpDT3p0aFFVOXhRa0VzZDBKQlFYZENPM1ZFUVZBM1F6czdOa05CUVVFN2RVUkJVVVZETEVOQlFXbENMRFpEUTFKdVFpeERSRkVyUXpzN096czdXVUZGTjBORExFZEJRVmtzUlVGQldrRXNRMEZCV1R0dFFrRkJXa0VzVVVGQlVTeERRVUZTUVN4WlFVRlpMRU5CUVVORExGTkJRVk1zUlVGQlJTeERRVUZETzJkQ1FVTjJRaXhIUVVGTExFTkJRVU5HTEdsQ1FVRnBRaXhIUVVGSExFbEJRVWtzUTBGQlEwY3NiMEpCUVc5Q0xFbEJRemREUXl4eFFrRkJjVUlzUjBGQlJ5eEhRVUZITEVOQlFVTkRMR3RDUVVGeFFpeFRRVUZEVEN4cFFrRkJhVUk3WjBKQlJYcEZMRTFCUVUwc1EwRkJRMGtzY1VKQlFYRkNPMWxCUXpsQ0xFTkJRVU03T3p0WlFVVkVSQ3hIUVVGdlFpeEZRVUZ3UWtFc1EwRkJiMEk3YlVKQlFYQkNRU3hSUVVGUkxFTkJRVkpCTEc5Q1FVRnZRaXhIUVVGSExFTkJRVU03WjBKQlEzUkNMRWRCUVVzc1EwRkJRMGNzVlVGQlZTeEhRVUZITEVsQlFVa3NRMEZCUTBNc1lVRkJZU3hKUVVNdlFrTXNZMEZCWXl4UFFVRkhReXhOUVVGTExGRkJRVU5JTEZWQlFWVXNSMEZEYWtOSkxGbEJRVmtzUjBGQlIwWXNZMEZCWXl4RlFVTTNRa2NzYlVKQlFXMUNMRWRCUVVkRUxGbEJRVmtzUTBGQlEwVXNWVUZCVlN4SlFVTTNRME1zVDBGQlR5eEhRVUZIUml4dFFrRkJiVUlzUTBGQlEwY3NTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJRMlFzYVVKQlFXbENMRWRCUXpGRVpTeFhRVUZYTEU5QlFVZERMRTFCUVUwc1UwRkJRMGdzVDBGQlR5eEhRVU0xUWtrc1QwRkJUeXhIUVVGSFJpeFhRVUZYTEVWQlEzSkNaaXhwUWtGQmFVSXNSMEZCUnl4SFFVRkhMRU5CUVVOclFpeE5RVUZOTEVOQlFVTkVMRTlCUVU4c1IwRkJTU3hGUVVGSExFRkJRVWdzUTBGQlJ6dG5Ra0ZGYmtRc1RVRkJUU3hEUVVGRGFrSXNhVUpCUVdsQ08xbEJRekZDTEVOQlFVTTdPenM3V1VGRlRXMUNMRWRCUVhsQ0xFVkJRWHBDUVN4RFFVRjVRanR0UWtGQmFFTXNVVUZCVVN4RFFVRkVRU3g1UWtGQmVVSXNRMEZCUTBNc1VVRkJVU3hGUVVGRlpDeFZRVUZWTEVWQlFVVXNRMEZCUXp0blFrRkJReXhOUVVGTkxFTkJRVU5sTEZsQlFXVXNVMEZCUTBZc2VVSkJRWGxDTEVOQlFVTndRaXgzUWtGQmQwSXNSVUZCUlhGQ0xGRkJRVkVzUlVGQlJXUXNWVUZCVlR0WlFVRkhMRU5CUVVNN08wMUJPVUk1U2pzN1JVRlBjMFJsTEZsQlFXVTdhMEpCUVdoRWRFSXNkMEpCUVhkQ0xFRkJVRGRESW4wPSIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgdHlwZXMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgUmVndWxhckV4cHJlc3Npb25CTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9yZWd1bGFyRXhwcmVzc2lvblwiO1xuaW1wb3J0IFNpZ25pZmljYW50VG9rZW5UeXBlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9zaWduaWZpY2FudFRva2VuVHlwZVwiO1xuXG5pbXBvcnQgeyBSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5jb25zdCB7IHJlZ3VsYXJFeHByZXNzaW9uVHlwZSB9ID0gdHlwZXM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZ3VsYXJFeHByZXNzaW9uUnVsZSBleHRlbmRzIFJ1bGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCByZWd1bGFyRXhwcmVzc2lvblNpZ25pZmljYW50VG9rZW5UeXBlID0gcmVndWxhckV4cHJlc3Npb25UeXBlLCAgLy8vXG4gICAgICAgICAgcmVndWxhckV4cHJlc3Npb25TaWduaWZpY2FudFRva2VuVHlwZURlZmluaXRpb24gPSBuZXcgU2lnbmlmaWNhbnRUb2tlblR5cGVEZWZpbml0aW9uKHJlZ3VsYXJFeHByZXNzaW9uU2lnbmlmaWNhbnRUb2tlblR5cGUpLFxuICAgICAgICAgIG5hbWUgPSBSZWd1bGFyRXhwcmVzc2lvblJ1bGVOYW1lLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgcmVndWxhckV4cHJlc3Npb25TaWduaWZpY2FudFRva2VuVHlwZURlZmluaXRpb25cbiAgICAgICAgICBdLFxuICAgICAgICAgIE5vZGUgPSBSZWd1bGFyRXhwcmVzc2lvbkJORk5vZGU7XG4gICAgXG4gICAgc3VwZXIobmFtZSwgZGVmaW5pdGlvbnMsIE5vZGUpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IERlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb25cIjtcbmltcG9ydCBOb1doaXRlc3BhY2VQYXJ0IGZyb20gXCIuLi9wYXJ0L3Rlcm1pbmFsL25vV2hpdGVzcGFjZVwiO1xuaW1wb3J0IFRlcm1pbmFsU3ltYm9sUGFydCBmcm9tIFwiLi4vcGFydC90ZXJtaW5hbC90ZXJtaW5hbFN5bWJvbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRdWFudGlmaWVyUnVsZURlZmluaXRpb24gZXh0ZW5kcyBEZWZpbml0aW9uIHtcbiAgY29uc3RydWN0b3IodGVybWluYWxTeW1ib2xDb250ZW50KSB7XG4gICAgY29uc3QgY29udGVudCA9IHRlcm1pbmFsU3ltYm9sQ29udGVudCwgIC8vL1xuICAgICAgICAgIG5vV2hpdGVzcGFjZVBhcnQgPSBuZXcgTm9XaGl0ZXNwYWNlUGFydCgpLFxuICAgICAgICAgIHRlcm1pbmFsU3ltYm9sUGFydCA9IG5ldyBUZXJtaW5hbFN5bWJvbFBhcnQoY29udGVudCksXG4gICAgICAgICAgcGFydHMgPSBbXG4gICAgICAgICAgICBub1doaXRlc3BhY2VQYXJ0LFxuICAgICAgICAgICAgdGVybWluYWxTeW1ib2xQYXJ0XG4gICAgICAgICAgXTtcblxuICAgIHN1cGVyKHBhcnRzKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNwZWNpYWxTeW1ib2xzIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IERlZmluaXRpb25CTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgUXVhbnRpZmllclJ1bGVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3F1YW50aWZpZXJSdWxlXCI7XG5cbmltcG9ydCB7IE9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5jb25zdCB7IHF1ZXN0aW9uTWFyayB9ID0gc3BlY2lhbFN5bWJvbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9wdGlvbmFsUXVhbnRpZmllclJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgbmFtZSA9IE9wdGlvbmFsUXVhbnRpZmllclJ1bGVOYW1lLFxuICAgICAgICAgIG9wdGlvbmFsUXVhbnRpZmllclRlcm1pbmFsU3ltYm9sQ29udGVudCA9IHF1ZXN0aW9uTWFyaywgLy8vXG4gICAgICAgICAgb3B0aW9uYWxRdWFudGlmaWVyUnVsZURlZmluaXRpb24gPSBuZXcgUXVhbnRpZmllclJ1bGVEZWZpbml0aW9uKG9wdGlvbmFsUXVhbnRpZmllclRlcm1pbmFsU3ltYm9sQ29udGVudCksXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXG4gICAgICAgICAgICBvcHRpb25hbFF1YW50aWZpZXJSdWxlRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IERlZmluaXRpb25CTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNwZWNpYWxTeW1ib2xzIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IERlZmluaXRpb25CTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgUXVhbnRpZmllclJ1bGVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3F1YW50aWZpZXJSdWxlXCI7XG5cbmltcG9ydCB7IE9uZU9yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSB9IGZyb20gXCIuLi9ydWxlTmFtZXNcIjtcblxuY29uc3QgeyBwbHVzIH0gPSBzcGVjaWFsU3ltYm9scztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT25lT3JNb3JlUXVhbnRpZmllclJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgbmFtZSA9IE9uZU9yTW9yZVF1YW50aWZpZXJSdWxlTmFtZSxcbiAgICAgICAgICBvbmVPck1vcmVRdWFudGlmaWVyVGVybWluYWxTeW1ib2xDb250ZW50ID0gcGx1cywgLy8vXG4gICAgICAgICAgb25lT3JNb3JlUXVhbnRpZmllclJ1bGVEZWZpbml0aW9uID0gbmV3IFF1YW50aWZpZXJSdWxlRGVmaW5pdGlvbihvbmVPck1vcmVRdWFudGlmaWVyVGVybWluYWxTeW1ib2xDb250ZW50KSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIG9uZU9yTW9yZVF1YW50aWZpZXJSdWxlRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IERlZmluaXRpb25CTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNwZWNpYWxTeW1ib2xzIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi4vcnVsZVwiO1xuaW1wb3J0IERlZmluaXRpb25CTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9kZWZpbml0aW9uXCI7XG5pbXBvcnQgUXVhbnRpZmllclJ1bGVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3F1YW50aWZpZXJSdWxlXCI7XG5cbmltcG9ydCB7IFplcm9Pck1vcmVRdWFudGlmaWVyUnVsZU5hbWUgfSBmcm9tIFwiLi4vcnVsZU5hbWVzXCI7XG5cbmNvbnN0IHsgYXN0ZXJpc2sgfSA9IHNwZWNpYWxTeW1ib2xzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBaZXJvT3JNb3JlUXVhbnRpZmllclJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgbmFtZSA9IFplcm9Pck1vcmVRdWFudGlmaWVyUnVsZU5hbWUsXG4gICAgICAgICAgemVyb09yTW9yZVF1YW50aWZpZXJUZXJtaW5hbFN5bWJvbENvbnRlbnQgPSBhc3RlcmlzaywgLy8vXG4gICAgICAgICAgemVyb09yTW9yZVF1YW50aWZpZXJSdWxlRGVmaW5pdGlvbiA9IG5ldyBRdWFudGlmaWVyUnVsZURlZmluaXRpb24oemVyb09yTW9yZVF1YW50aWZpZXJUZXJtaW5hbFN5bWJvbENvbnRlbnQpLFxuICAgICAgICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgICAgICAgemVyb09yTW9yZVF1YW50aWZpZXJSdWxlRGVmaW5pdGlvblxuICAgICAgICAgIF0sXG4gICAgICAgICAgTm9kZSA9IERlZmluaXRpb25CTkZOb2RlO1xuICAgIFxuICAgIHN1cGVyKG5hbWUsIGRlZmluaXRpb25zLCBOb2RlKVxuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX25vblRlcm1pbmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vbm9kZS9ub25UZXJtaW5hbFwiKSk7XG52YXIgX3NpZ25pZmljYW50VG9rZW5UeXBlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vcGFydC90ZXJtaW5hbC9zaWduaWZpY2FudFRva2VuVHlwZVwiKSk7XG52YXIgX2FycmF5ID0gcmVxdWlyZShcIi4uLy4uL3V0aWxpdGllcy9hcnJheVwiKTtcbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICAgIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gc2VsZjtcbn1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspe1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICAgIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG9ialtrZXldID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gICAgfTtcbiAgICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufVxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICAgIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgICAgIHJldHVybiBjYWxsO1xuICAgIH1cbiAgICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgU2lnbmlmaWNhbnRUb2tlblR5cGVCTkZOb2RlID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihOb25UZXJtaW5hbE5vZGUpIHtcbiAgICBfaW5oZXJpdHMoU2lnbmlmaWNhbnRUb2tlblR5cGVCTkZOb2RlLCBOb25UZXJtaW5hbE5vZGUpO1xuICAgIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoU2lnbmlmaWNhbnRUb2tlblR5cGVCTkZOb2RlKTtcbiAgICBmdW5jdGlvbiBTaWduaWZpY2FudFRva2VuVHlwZUJORk5vZGUoKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTaWduaWZpY2FudFRva2VuVHlwZUJORk5vZGUpO1xuICAgICAgICB2YXIgX3RoaXM7XG4gICAgICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJyZWd1bGFyRXhwcmVzc2lvblwiLCAvXlxcWyhbXlxcXV0rKV0kLyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgX2NyZWF0ZUNsYXNzKFNpZ25pZmljYW50VG9rZW5UeXBlQk5GTm9kZSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2VuZXJhdGVQYXJ0XCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ2VuZXJhdGVQYXJ0KGxvb2tBaGVhZCkge1xuICAgICAgICAgICAgICAgIHZhciBzaWduaWZpY2FudFRva2VuVHlwZSA9IHRoaXMuZ2V0U2lnbmlmaWNhbnRUb2tlblR5cGUoKSwgc2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0ID0gbmV3IF9zaWduaWZpY2FudFRva2VuVHlwZS5kZWZhdWx0KHNpZ25pZmljYW50VG9rZW5UeXBlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0U2lnbmlmaWNhbnRUb2tlblR5cGVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTaWduaWZpY2FudFRva2VuVHlwZSgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLCBmaXJzdENoaWxkTm9kZSA9ICgwLCBfYXJyYXkpLmZpcnN0KGNoaWxkTm9kZXMpLCB0ZXJtaW5hbE5vZGUgPSBmaXJzdENoaWxkTm9kZSwgdGVybWluYWxOb2RlQ29udGVudCA9IHRlcm1pbmFsTm9kZS5nZXRDb250ZW50KCksIG1hdGNoZXMgPSB0ZXJtaW5hbE5vZGVDb250ZW50Lm1hdGNoKHRoaXMucmVndWxhckV4cHJlc3Npb24pLCBzZWNvbmRNYXRjaCA9ICgwLCBfYXJyYXkpLnNlY29uZChtYXRjaGVzKSwgc2lnbmlmaWNhbnRUb2tlblR5cGUgPSBzZWNvbmRNYXRjaDsgLy8vXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNpZ25pZmljYW50VG9rZW5UeXBlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2Rlc1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX25vblRlcm1pbmFsLmRlZmF1bHQuZnJvbVJ1bGVOYW1lQW5kQ2hpbGROb2RlcyhTaWduaWZpY2FudFRva2VuVHlwZUJORk5vZGUsIHJ1bGVOYW1lLCBjaGlsZE5vZGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF0pO1xuICAgIHJldHVybiBTaWduaWZpY2FudFRva2VuVHlwZUJORk5vZGU7XG59KF9ub25UZXJtaW5hbC5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFNpZ25pZmljYW50VG9rZW5UeXBlQk5GTm9kZTtcbm1vZHVsZS5leHBvcnRzID0gU2lnbmlmaWNhbnRUb2tlblR5cGVCTkZOb2RlO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMM055WXk5dWIyUmxMMkp1Wmk5emFXZHVhV1pwWTJGdWRGUnZhMlZ1Vkhsd1pTNXFjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dWFXMXdiM0owSUU1dmJsUmxjbTFwYm1Gc1RtOWtaU0JtY205dElGd2lMaTR2TGk0dmJtOWtaUzl1YjI1VVpYSnRhVzVoYkZ3aU8xeHVhVzF3YjNKMElGTnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxVR0Z5ZENCbWNtOXRJRndpTGk0dkxpNHZjR0Z5ZEM5MFpYSnRhVzVoYkM5emFXZHVhV1pwWTJGdWRGUnZhMlZ1Vkhsd1pWd2lPMXh1WEc1cGJYQnZjblFnZXlCbWFYSnpkQ3dnYzJWamIyNWtJSDBnWm5KdmJTQmNJaTR1THk0dUwzVjBhV3hwZEdsbGN5OWhjbkpoZVZ3aU8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQmpiR0Z6Y3lCVGFXZHVhV1pwWTJGdWRGUnZhMlZ1Vkhsd1pVSk9SazV2WkdVZ1pYaDBaVzVrY3lCT2IyNVVaWEp0YVc1aGJFNXZaR1VnZTF4dUlDQnlaV2QxYkdGeVJYaHdjbVZ6YzJsdmJpQTlJQzllWEZ4YktGdGVYRnhkWFNzcFhTUXZPMXh1WEc0Z0lHZGxibVZ5WVhSbFVHRnlkQ2hzYjI5clFXaGxZV1FwSUh0Y2JpQWdJQ0JqYjI1emRDQnphV2R1YVdacFkyRnVkRlJ2YTJWdVZIbHdaU0E5SUhSb2FYTXVaMlYwVTJsbmJtbG1hV05oYm5SVWIydGxibFI1Y0dVb0tTeGNiaUFnSUNBZ0lDQWdJQ0J6YVdkdWFXWnBZMkZ1ZEZSdmEyVnVWSGx3WlZCaGNuUWdQU0J1WlhjZ1UybG5ibWxtYVdOaGJuUlViMnRsYmxSNWNHVlFZWEowS0hOcFoyNXBabWxqWVc1MFZHOXJaVzVVZVhCbEtUdGNibHh1SUNBZ0lISmxkSFZ5YmlCemFXZHVhV1pwWTJGdWRGUnZhMlZ1Vkhsd1pWQmhjblE3WEc0Z0lIMWNibHh1SUNCblpYUlRhV2R1YVdacFkyRnVkRlJ2YTJWdVZIbHdaU2dwSUh0Y2JpQWdJQ0JqYjI1emRDQmphR2xzWkU1dlpHVnpJRDBnZEdocGN5NW5aWFJEYUdsc1pFNXZaR1Z6S0Nrc1hHNGdJQ0FnSUNBZ0lDQWdabWx5YzNSRGFHbHNaRTV2WkdVZ1BTQm1hWEp6ZENoamFHbHNaRTV2WkdWektTeGNiaUFnSUNBZ0lDQWdJQ0IwWlhKdGFXNWhiRTV2WkdVZ1BTQm1hWEp6ZEVOb2FXeGtUbTlrWlN3Z0lDOHZMMXh1SUNBZ0lDQWdJQ0FnSUhSbGNtMXBibUZzVG05a1pVTnZiblJsYm5RZ1BTQjBaWEp0YVc1aGJFNXZaR1V1WjJWMFEyOXVkR1Z1ZENncExGeHVJQ0FnSUNBZ0lDQWdJRzFoZEdOb1pYTWdQU0IwWlhKdGFXNWhiRTV2WkdWRGIyNTBaVzUwTG0xaGRHTm9LSFJvYVhNdWNtVm5kV3hoY2tWNGNISmxjM05wYjI0cExGeHVJQ0FnSUNBZ0lDQWdJSE5sWTI5dVpFMWhkR05vSUQwZ2MyVmpiMjVrS0cxaGRHTm9aWE1wTEZ4dUlDQWdJQ0FnSUNBZ0lITnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxJRDBnYzJWamIyNWtUV0YwWTJnN0lDOHZMMXh1WEc0Z0lDQWdjbVYwZFhKdUlITnBaMjVwWm1sallXNTBWRzlyWlc1VWVYQmxPMXh1SUNCOVhHNWNiaUFnYzNSaGRHbGpJR1p5YjIxU2RXeGxUbUZ0WlVGdVpFTm9hV3hrVG05a1pYTW9jblZzWlU1aGJXVXNJR05vYVd4a1RtOWtaWE1wSUhzZ2NtVjBkWEp1SUU1dmJsUmxjbTFwYm1Gc1RtOWtaUzVtY205dFVuVnNaVTVoYldWQmJtUkRhR2xzWkU1dlpHVnpLRk5wWjI1cFptbGpZVzUwVkc5clpXNVVlWEJsUWs1R1RtOWtaU3dnY25Wc1pVNWhiV1VzSUdOb2FXeGtUbTlrWlhNcE95QjlYRzU5WEc1Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1UybG5ibWxtYVdOaGJuUlViMnRsYmxSNWNHVkNUa1pPYjJSbE8xeHVYRzVjYmlKZExDSnVZVzFsY3lJNld5SlRhV2R1YVdacFkyRnVkRlJ2YTJWdVZIbHdaVUpPUms1dlpHVWlMQ0p5WldkMWJHRnlSWGh3Y21WemMybHZiaUlzSW1kbGJtVnlZWFJsVUdGeWRDSXNJbXh2YjJ0QmFHVmhaQ0lzSW5OcFoyNXBabWxqWVc1MFZHOXJaVzVVZVhCbElpd2laMlYwVTJsbmJtbG1hV05oYm5SVWIydGxibFI1Y0dVaUxDSnphV2R1YVdacFkyRnVkRlJ2YTJWdVZIbHdaVkJoY25RaUxDSlRhV2R1YVdacFkyRnVkRlJ2YTJWdVZIbHdaVkJoY25RaUxDSmphR2xzWkU1dlpHVnpJaXdpWjJWMFEyaHBiR1JPYjJSbGN5SXNJbVpwY25OMFEyaHBiR1JPYjJSbElpd2labWx5YzNRaUxDSjBaWEp0YVc1aGJFNXZaR1VpTENKMFpYSnRhVzVoYkU1dlpHVkRiMjUwWlc1MElpd2laMlYwUTI5dWRHVnVkQ0lzSW0xaGRHTm9aWE1pTENKdFlYUmphQ0lzSW5ObFkyOXVaRTFoZEdOb0lpd2ljMlZqYjI1a0lpd2labkp2YlZKMWJHVk9ZVzFsUVc1a1EyaHBiR1JPYjJSbGN5SXNJbkoxYkdWT1lXMWxJaXdpVG05dVZHVnliV2x1WVd4T2IyUmxJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzUTBGQldTeFhRVUZCTEVOQlFVTTdPenRGUVVGaU8zZENRVUZCTzBGQlJUUkNMRWRCUVhkQ0xFTkJRWGhDTEZsQlFYZENPMEZCUTJZc1IwRkJNRU1zUTBGQk1VTXNjVUpCUVRCRE8wRkJSV3BFTEVkQlFYVkNMRU5CUVhaQ0xFMUJRWFZDT3pzN096czdPenM3T3pzN096czdPRVJCVEhKRU8zTkRRVUZCT3paRVFVRkJPMmxGUVVGQk96czdPM2RGUVVGQk8yZEZRVUZCT3pzN096czdPenM3TzFWQlFVRTdPM2RDUVVGQk96czdPenM3TzB0QlFVRTdPenM3T3pzN096czdPenM3VFVGQlFUdDVSRUZCUVRzN096czdPenM3T3pzN096czdPM1ZDUVVGQk96dExRVUZCT3pzN096SkNRVUZCT3pzN096czdPenR4UmtGQlFUczdPenM3T3pzN096czdPMjFGUVVGQk96dHBSRUZCUVRzN096czdRVUZQWlN4SFFVRkxMRU5CUVVOQkxESkNRVUV5UWl4cFFrRkJha01zVVVGQlVUc3lSRUZRZGtJN08yRkJUM0ZDUVN3eVFrRkJNa0k3TUVSQlVHaEVPenMyUTBGQlFUdDFSRUZSUlVNc1EwRkJhVUlzYjBORFVtNUNMRU5FVVhORE96czdPenRaUVVWd1EwTXNSMEZCV1N4RlFVRmFRU3hEUVVGWk8yMUNRVUZhUVN4UlFVRlJMRU5CUVZKQkxGbEJRVmtzUTBGQlEwTXNVMEZCVXl4RlFVRkZMRU5CUVVNN1owSkJRM1pDTEVkQlFVc3NRMEZCUTBNc2IwSkJRVzlDTEVkQlFVY3NTVUZCU1N4RFFVRkRReXgxUWtGQmRVSXNTVUZEYmtSRExIZENRVUYzUWl4SFFVRkhMRWRCUVVjc1EwRkJRME1zY1VKQlFYZENMRk5CUVVOSUxHOUNRVUZ2UWp0blFrRkZiRVlzVFVGQlRTeERRVUZEUlN4M1FrRkJkMEk3V1VGRGFrTXNRMEZCUXpzN08xbEJSVVJFTEVkQlFYVkNMRVZCUVhaQ1FTeERRVUYxUWp0dFFrRkJka0pCTEZGQlFWRXNRMEZCVWtFc2RVSkJRWFZDTEVkQlFVY3NRMEZCUXp0blFrRkRla0lzUjBGQlN5eERRVUZEUnl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRFF5eGhRVUZoTEVsQlF5OUNReXhqUVVGakxFOUJRVWRETEUxQlFVc3NVVUZCUTBnc1ZVRkJWU3hIUVVOcVEwa3NXVUZCV1N4SFFVRkhSaXhqUVVGakxFVkJRemRDUnl4dFFrRkJiVUlzUjBGQlIwUXNXVUZCV1N4RFFVRkRSU3hWUVVGVkxFbEJRemREUXl4UFFVRlBMRWRCUVVkR0xHMUNRVUZ0UWl4RFFVRkRSeXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZEWml4cFFrRkJhVUlzUjBGRE1VUm5RaXhYUVVGWExFOUJRVWRETEUxQlFVMHNVMEZCUTBnc1QwRkJUeXhIUVVNMVFsZ3NiMEpCUVc5Q0xFZEJRVWRoTEZkQlFWY3NSVUZCUlN4RlFVRkhMRUZCUVVnc1EwRkJSenRuUWtGRk4wTXNUVUZCVFN4RFFVRkRZaXh2UWtGQmIwSTdXVUZETjBJc1EwRkJRenM3T3p0WlFVVk5aU3hIUVVGNVFpeEZRVUY2UWtFc1EwRkJlVUk3YlVKQlFXaERMRkZCUVZFc1EwRkJSRUVzZVVKQlFYbENMRU5CUVVORExGRkJRVkVzUlVGQlJWb3NWVUZCVlN4RlFVRkZMRU5CUVVNN1owSkJRVU1zVFVGQlRTeERRVUZEWVN4WlFVRmxMRk5CUVVOR0xIbENRVUY1UWl4RFFVRkRia0lzTWtKQlFUSkNMRVZCUVVWdlFpeFJRVUZSTEVWQlFVVmFMRlZCUVZVN1dVRkJSeXhEUVVGRE96dE5RVGRDYWtzN08wVkJUM2xFWVN4WlFVRmxPMnRDUVVGdVJISkNMREpDUVVFeVFpeEJRVkJvUkR0QlFXZERRWE5DTEUxQlFVMHNRMEZCUTBNc1QwRkJUeXhIUVVGSGRrSXNNa0pCUVRKQ0xFTkJRVU1pZlE9PSIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgdHlwZXMgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlblR5cGVCTkZOb2RlIGZyb20gXCIuLi9ub2RlL2JuZi9zaWduaWZpY2FudFRva2VuVHlwZVwiO1xuaW1wb3J0IFNpZ25pZmljYW50VG9rZW5UeXBlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9zaWduaWZpY2FudFRva2VuVHlwZVwiO1xuXG5pbXBvcnQgeyBTaWduaWZpY2FudFRva2VuVHlwZVJ1bGVOYW1lIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuXG5jb25zdCB7IHR5cGVUeXBlIH0gPSB0eXBlcztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlIGV4dGVuZHMgUnVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHR5cGVTaWduaWZpY2FudFRva2VuVHlwZSA9IHR5cGVUeXBlLCAgLy8vXG4gICAgICAgICAgdHlwZVNpZ25pZmljYW50VG9rZW5UeXBlRGVmaW5pdGlvbiA9IG5ldyBTaWduaWZpY2FudFRva2VuVHlwZURlZmluaXRpb24odHlwZVNpZ25pZmljYW50VG9rZW5UeXBlKSxcbiAgICAgICAgICBuYW1lID0gU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlTmFtZSxcbiAgICAgICAgICBkZWZpbml0aW9ucyA9IFtcbiAgICAgICAgICAgIHR5cGVTaWduaWZpY2FudFRva2VuVHlwZURlZmluaXRpb25cbiAgICAgICAgICBdLFxuICAgICAgICAgIE5vZGUgPSBTaWduaWZpY2FudFRva2VuVHlwZUJORk5vZGU7XG4gICAgXG4gICAgc3VwZXIobmFtZSwgZGVmaW5pdGlvbnMsIE5vZGUpXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgZmlyc3QgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2FycmF5XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTWFwRnJvbVJ1bGVzKHJ1bGVzKSB7XG4gIGNvbnN0IHJ1bGVNYXAgPSB7fTtcblxuICBydWxlcy5mb3JFYWNoKChydWxlKSA9PiB7XG4gICAgY29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKTtcblxuICAgIHJ1bGVNYXBbcnVsZU5hbWVdID0gcnVsZTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJ1bGVNYXA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGFydFJ1bGVGcm9tUnVsZXMocnVsZXMpIHtcbiAgY29uc3QgZmlyc3RSdWxlID0gZmlyc3QocnVsZXMpLFxuICAgICAgc3RhcnRSdWxlID0gZmlyc3RSdWxlOyAgLy8vXG5cbiAgcmV0dXJuIHN0YXJ0UnVsZTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IGJuZiBmcm9tIFwiLi9ibmZcIjtcbmltcG9ydCBSdWxlIGZyb20gXCIuLi9ydWxlXCI7XG5pbXBvcnQgU3RhdGUgZnJvbSBcIi4uL3N0YXRlXCI7XG5pbXBvcnQgTmFtZVJ1bGUgZnJvbSBcIi4uL3J1bGUvbmFtZVwiO1xuaW1wb3J0IFBhcnRSdWxlIGZyb20gXCIuLi9ydWxlL3BhcnRcIjtcbmltcG9ydCBSdWxlUnVsZSBmcm9tIFwiLi4vcnVsZS9ydWxlXCI7XG5pbXBvcnQgRXJyb3JSdWxlIGZyb20gXCIuLi9ydWxlL2Vycm9yXCI7XG5pbXBvcnQgRG9jdW1lbnRSdWxlIGZyb20gXCIuLi9ydWxlL2RvY3VtZW50XCI7XG5pbXBvcnQgUnVsZU5hbWVSdWxlIGZyb20gXCIuLi9ydWxlL3J1bGVOYW1lXCI7XG5pbXBvcnQgV2lsZGNhcmRSdWxlIGZyb20gXCIuLi9ydWxlL3dpbGRjYXJkXCI7XG5pbXBvcnQgRW5kT2ZMaW5lUnVsZSBmcm9tIFwiLi4vcnVsZS9lbmRPZkxpbmVcIjtcbmltcG9ydCBRdWFudGlmaWVyUnVsZSBmcm9tIFwiLi4vcnVsZS9xdWFudGlmaWVyXCI7XG5pbXBvcnQgRGVmaW5pdGlvblJ1bGUgZnJvbSBcIi4uL3J1bGUvZGVmaW5pdGlvblwiO1xuaW1wb3J0IERlZmluaXRpb25zUnVsZSBmcm9tIFwiLi4vcnVsZS9kZWZpbml0aW9uc1wiO1xuaW1wb3J0IFRlcm1pbmFsUGFydFJ1bGUgZnJvbSBcIi4uL3J1bGUvdGVybWluYWxQYXJ0XCI7XG5pbXBvcnQgQ2hvaWNlT2ZQYXJ0c1J1bGUgZnJvbSBcIi4uL3J1bGUvY2hvaWNlT2ZQYXJ0c1wiO1xuaW1wb3J0IFRlcm1pbmFsU3ltYm9sUnVsZSBmcm9tIFwiLi4vcnVsZS90ZXJtaW5hbFN5bWJvbFwiO1xuaW1wb3J0IE5vblRlcm1pbmFsUGFydFJ1bGUgZnJvbSBcIi4uL3J1bGUvbm9uVGVybWluYWxQYXJ0XCI7XG5pbXBvcnQgU2VxdWVuY2VPZlBhcnRzUnVsZSBmcm9tIFwiLi4vcnVsZS9zZXF1ZW5jZU9mUGFydHNcIjtcbmltcG9ydCBOb1doaXRlc3BhY2VQYXJ0UnVsZSBmcm9tIFwiLi4vcnVsZS9ub1doaXRlc3BhY2VQYXJ0XCI7XG5pbXBvcnQgTG9va0FoZWFkTW9kaWZpZXJSdWxlIGZyb20gXCIuLi9ydWxlL2xvb2tBaGVhZE1vZGlmaWVyXCI7XG5pbXBvcnQgUmVndWxhckV4cHJlc3Npb25SdWxlIGZyb20gXCIuLi9ydWxlL3JlZ3VsYXJFeHByZXNzaW9uXCI7XG5pbXBvcnQgT3B0aW9uYWxRdWFudGlmaWVyUnVsZSBmcm9tIFwiLi4vcnVsZS9vcHRpb25hbFF1YW50aWZpZXJcIjtcbmltcG9ydCBPbmVPck1vcmVRdWFudGlmaWVyUnVsZSBmcm9tIFwiLi4vcnVsZS9vbmVPck1vcmVRdWFudGlmaWVyXCI7XG5pbXBvcnQgWmVyb09yTW9yZVF1YW50aWZpZXJSdWxlIGZyb20gXCIuLi9ydWxlL3plcm9Pck1vcmVRdWFudGlmaWVyXCI7XG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlblR5cGVSdWxlIGZyb20gXCIuLi9ydWxlL3NpZ25pZmljYW50VG9rZW5UeXBlXCI7XG5cbmltcG9ydCB7IHN0YXJ0UnVsZUZyb21SdWxlcywgcnVsZU1hcEZyb21SdWxlcyB9IGZyb20gXCIuLi91dGlsaXRpZXMvcnVsZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQk5GUGFyc2VyIHtcbiAgY29uc3RydWN0b3Ioc3RhcnRSdWxlLCBydWxlTWFwKSB7XG4gICAgdGhpcy5zdGFydFJ1bGUgPSBzdGFydFJ1bGU7XG4gICAgdGhpcy5ydWxlTWFwID0gcnVsZU1hcDtcbiAgfVxuXG4gIGdldFN0YXJ0UnVsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zdGFydFJ1bGU7XG4gIH1cblxuICBnZXRSdWxlTWFwKCkge1xuICAgIHJldHVybiB0aGlzLnJ1bGVNYXA7XG4gIH1cblxuICBwYXJzZSh0b2tlbnMsIHJ1bGUgPSB0aGlzLnN0YXJ0UnVsZSkge1xuICAgIGNvbnN0IHN0YXRlID0gU3RhdGUuZnJvbVRva2Vuc0FuZFJ1bGVNYXAodG9rZW5zLCB0aGlzLnJ1bGVNYXApLFxuICAgICAgICAgIGNhbGxiYWNrID0gbnVsbCxcbiAgICAgICAgICBydWxlTm9kZSA9IHJ1bGUucGFyc2Uoc3RhdGUsIGNhbGxiYWNrKSxcbiAgICAgICAgICBub2RlID0gcnVsZU5vZGU7IC8vL1xuXG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cblxuXHRydWxlc0Zyb21Ub2tlbnModG9rZW5zKSB7XG5cdCAgbGV0IHJ1bGVzO1xuXG4gICAgY29uc3Qgbm9kZSA9IHRoaXMucGFyc2UodG9rZW5zKTtcblxuICAgIGlmIChub2RlID09PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZXJlIGlzIG5vIG5vZGUuYCk7XG4gICAgfVxuXG4gICAgcnVsZXMgPSBub2RlLmdlbmVyYXRlUnVsZXMoUnVsZSk7XG5cbiAgICBjb25zdCBydWxlc0xlbmd0aCA9IHJ1bGVzLmxlbmd0aDtcblxuICAgIGlmIChydWxlc0xlbmd0aCA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGVyZSBhcmUgbm8gcnVsZXMuYCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJ1bGVzO1xuICB9XG5cbiAgc3RhdGljIGJuZiA9IGJuZjtcblxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7XG4gICAgY29uc3QgbmFtZVJ1bGUgPSBuZXcgTmFtZVJ1bGUoKSxcbiAgICAgICAgICBwYXJ0UnVsZSA9IG5ldyBQYXJ0UnVsZSgpLFxuICAgICAgICAgIHJ1bGVSdWxlID0gbmV3IFJ1bGVSdWxlKCksXG4gICAgICAgICAgZXJyb3JSdWxlID0gbmV3IEVycm9yUnVsZSgpLFxuICAgICAgICAgIGRvY3VtZW50UnVsZSA9IG5ldyBEb2N1bWVudFJ1bGUoKSxcbiAgICAgICAgICBydWxlTmFtZVJ1bGUgPSBuZXcgUnVsZU5hbWVSdWxlKCksXG4gICAgICAgICAgd2lsZGNhcmRSdWxlID0gbmV3IFdpbGRjYXJkUnVsZSgpLFxuICAgICAgICAgIGVuZE9mTGluZVJ1bGUgPSBuZXcgRW5kT2ZMaW5lUnVsZSgpLFxuICAgICAgICAgIHF1YW50aWZpZXJSdWxlID0gbmV3IFF1YW50aWZpZXJSdWxlKCksXG4gICAgICAgICAgZGVmaW5pdGlvblJ1bGUgPSBuZXcgRGVmaW5pdGlvblJ1bGUoKSxcbiAgICAgICAgICBkZWZpbml0aW9uc1J1bGUgPSBuZXcgRGVmaW5pdGlvbnNSdWxlKCksXG4gICAgICAgICAgdGVybWluYWxQYXJ0UnVsZSA9IG5ldyBUZXJtaW5hbFBhcnRSdWxlKCksXG4gICAgICAgICAgY2hvaWNlT2ZQYXJ0c1J1bGUgPSBuZXcgQ2hvaWNlT2ZQYXJ0c1J1bGUoKSxcbiAgICAgICAgICB0ZXJtaW5hbFN5bWJvbFJ1bGUgPSBuZXcgVGVybWluYWxTeW1ib2xSdWxlKCksXG4gICAgICAgICAgbm9uVGVybWluYWxQYXJ0UnVsZSA9IG5ldyBOb25UZXJtaW5hbFBhcnRSdWxlKCksXG4gICAgICAgICAgc2VxdWVuY2VPZlBhcnRzUnVsZSA9IG5ldyBTZXF1ZW5jZU9mUGFydHNSdWxlKCksXG4gICAgICAgICAgbm9XaGl0ZXNwYWNlUGFydFJ1bGUgPSBuZXcgTm9XaGl0ZXNwYWNlUGFydFJ1bGUoKSxcbiAgICAgICAgICByZWd1bGFyRXhwcmVzc2lvblJ1bGUgPSBuZXcgUmVndWxhckV4cHJlc3Npb25SdWxlKCksXG4gICAgICAgICAgbG9va0FoZWFkTW9kaWZpZXJSdWxlID0gbmV3IExvb2tBaGVhZE1vZGlmaWVyUnVsZSgpLFxuICAgICAgICAgIG9wdGlvbmFsUXVhbnRpZmllclJ1bGUgPSBuZXcgT3B0aW9uYWxRdWFudGlmaWVyUnVsZSgpLFxuICAgICAgICAgIG9uZU9yTW9yZVF1YW50aWZpZXJSdWxlID0gbmV3IE9uZU9yTW9yZVF1YW50aWZpZXJSdWxlKCksXG4gICAgICAgICAgemVyb09yTW9yZVF1YW50aWZpZXJSdWxlID0gbmV3IFplcm9Pck1vcmVRdWFudGlmaWVyUnVsZSgpLFxuICAgICAgICAgIHNpZ25pZmljYW50VG9rZW5UeXBlUnVsZSA9IG5ldyBTaWduaWZpY2FudFRva2VuVHlwZVJ1bGUoKTtcblxuICAgIGxldCBydWxlcyA9IFtcbiAgICAgIGRvY3VtZW50UnVsZSxcbiAgICAgIHJ1bGVSdWxlLFxuICAgICAgbmFtZVJ1bGUsXG4gICAgICBkZWZpbml0aW9uc1J1bGUsXG4gICAgICBkZWZpbml0aW9uUnVsZSxcbiAgICAgIHBhcnRSdWxlLFxuICAgICAgbm9uVGVybWluYWxQYXJ0UnVsZSxcbiAgICAgIHRlcm1pbmFsUGFydFJ1bGUsXG4gICAgICBub1doaXRlc3BhY2VQYXJ0UnVsZSxcbiAgICAgIHNlcXVlbmNlT2ZQYXJ0c1J1bGUsXG4gICAgICBjaG9pY2VPZlBhcnRzUnVsZSxcbiAgICAgIHJ1bGVOYW1lUnVsZSxcbiAgICAgIHNpZ25pZmljYW50VG9rZW5UeXBlUnVsZSxcbiAgICAgIHJlZ3VsYXJFeHByZXNzaW9uUnVsZSxcbiAgICAgIHRlcm1pbmFsU3ltYm9sUnVsZSxcbiAgICAgIGVuZE9mTGluZVJ1bGUsXG4gICAgICB3aWxkY2FyZFJ1bGUsXG4gICAgICBxdWFudGlmaWVyUnVsZSxcbiAgICAgIGxvb2tBaGVhZE1vZGlmaWVyUnVsZSxcbiAgICAgIG9wdGlvbmFsUXVhbnRpZmllclJ1bGUsXG4gICAgICBvbmVPck1vcmVRdWFudGlmaWVyUnVsZSxcbiAgICAgIHplcm9Pck1vcmVRdWFudGlmaWVyUnVsZSxcbiAgICAgIGVycm9yUnVsZVxuICAgIF07XG5cbiAgICBjb25zdCBzdGFydFJ1bGUgPSBzdGFydFJ1bGVGcm9tUnVsZXMocnVsZXMpLFxuICAgICAgICAgIHJ1bGVNYXAgPSBydWxlTWFwRnJvbVJ1bGVzKHJ1bGVzKSxcbiAgICAgICAgICBibmZQYXJzZXIgPSBuZXcgQk5GUGFyc2VyKHN0YXJ0UnVsZSwgcnVsZU1hcCk7XG4gICAgXG4gICAgcmV0dXJuIGJuZlBhcnNlcjtcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBibmYgPSBgXG5cbiAgZXhwcmVzc2lvbiAgOjo9IGV4cHJlc3Npb25fIG9wZXJhdG9yIGV4cHJlc3Npb24gZXhwcmVzc2lvbn4qXG5cbiAgICAgICAgICAgICAgICB8IGV4cHJlc3Npb25fXG5cbiAgICAgICAgICAgICAgICA7XG5cbiAgb3BlcmF0b3IgICAgOjo9IFwiK1wiXG5cbiAgICAgICAgICAgICAgICB8IFwiLVwiXG5cbiAgICAgICAgICAgICAgICB8IFwiL1wiXG5cbiAgICAgICAgICAgICAgICB8IFwiKlwiXG5cbiAgICAgICAgICAgICAgICA7XG5cbiAgdGVybSAgICAgICAgOjo9IC9cXFxcZCsvIDtcblxuICBleHByZXNzaW9uXyA6Oj0gXCIoXCIgZXhwcmVzc2lvbiBcIilcIlxuXG4gICAgICAgICAgICAgICAgfCB0ZXJtXG5cbiAgICAgICAgICAgICAgICA7XG5cbiAgZXhwcmVzc2lvbn4gOjo9IG9wZXJhdG9yIGV4cHJlc3Npb24gO1xuICBcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQk5GTGV4ZXIgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmltcG9ydCBCTkZQYXJzZXIgZnJvbSBcIi4uL2JuZi9wYXJzZXJcIjtcblxuaW1wb3J0IHsgc3RhcnRSdWxlRnJvbVJ1bGVzLCBydWxlTWFwRnJvbVJ1bGVzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9ydWxlc1wiO1xuXG5jb25zdCBibmZMZXhlciA9IEJORkxleGVyLmZyb21Ob3RoaW5nKCksXG4gICAgICBibmZQYXJzZXIgPSBCTkZQYXJzZXIuZnJvbU5vdGhpbmcoKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bGVzRnJvbUJORihibmYpIHtcbiAgY29uc3QgdG9rZW5zID0gYm5mTGV4ZXIudG9rZW5zRnJvbUJORihibmYpLFxuICAgICAgICBydWxlcyA9IGJuZlBhcnNlci5ydWxlc0Zyb21Ub2tlbnModG9rZW5zKTtcblxuICByZXR1cm4gcnVsZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZXJGcm9tUnVsZXMoQ2xhc3MsIHJ1bGVzKSB7XG4gIGNvbnN0IHN0YXJ0UnVsZSA9IHN0YXJ0UnVsZUZyb21SdWxlcyhydWxlcyksXG4gICAgICAgIHJ1bGVNYXAgPSBydWxlTWFwRnJvbVJ1bGVzKHJ1bGVzKSxcbiAgICAgICAgcGFyc2VyID0gbmV3IENsYXNzKHN0YXJ0UnVsZSwgcnVsZU1hcCk7XG5cbiAgcmV0dXJuIHBhcnNlcjtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFN0YXRlIGZyb20gXCIuLi9zdGF0ZVwiO1xuXG5pbXBvcnQgeyBydWxlc0Zyb21CTkYsIHBhcnNlckZyb21SdWxlcyB9IGZyb20gXCIuLi91dGlsaXRpZXMvcGFyc2VyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbW1vblBhcnNlciB7XG4gIGNvbnN0cnVjdG9yKHN0YXJ0UnVsZSwgcnVsZU1hcCkge1xuICAgIHRoaXMuc3RhcnRSdWxlID0gc3RhcnRSdWxlO1xuICAgIHRoaXMucnVsZU1hcCA9IHJ1bGVNYXA7XG4gIH1cblxuICBnZXRTdGFydFJ1bGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhcnRSdWxlO1xuICB9XG5cbiAgZ2V0UnVsZU1hcCgpIHtcbiAgICByZXR1cm4gdGhpcy5ydWxlTWFwO1xuICB9XG5cbiAgcGFyc2UodG9rZW5zLCBydWxlID0gdGhpcy5zdGFydFJ1bGUpIHtcbiAgICBjb25zdCBzdGF0ZSA9IFN0YXRlLmZyb21Ub2tlbnNBbmRSdWxlTWFwKHRva2VucywgdGhpcy5ydWxlTWFwKSxcbiAgICAgICAgICBjYWxsYmFjayA9IG51bGwsXG4gICAgICAgICAgcnVsZU5vZGUgPSBydWxlLnBhcnNlKHN0YXRlLCBjYWxsYmFjayksXG4gICAgICAgICAgbm9kZSA9IHJ1bGVOb2RlOyAvLy9cblxuICAgIHJldHVybiBub2RlO1xuICB9XG5cbiAgc3RhdGljIGZyb21Ob3RoaW5nKENsYXNzKSB7XG4gICAgY29uc3QgeyBibmYgfSA9IENsYXNzLFxuICAgICAgICAgIHJ1bGVzID0gcnVsZXNGcm9tQk5GKGJuZiksXG4gICAgICAgICAgcGFyc2VyID0gcGFyc2VyRnJvbVJ1bGVzKENsYXNzLCBydWxlcyk7XG5cbiAgICByZXR1cm4gcGFyc2VyO1xuICB9XG5cbiAgc3RhdGljIGZyb21CTkYoQ2xhc3MsIGJuZikge1xuICAgIGNvbnN0IHJ1bGVzID0gcnVsZXNGcm9tQk5GKGJuZiksXG4gICAgICAgICAgcGFyc2VyID0gcGFyc2VyRnJvbVJ1bGVzKENsYXNzLCBydWxlcyk7XG5cbiAgICByZXR1cm4gcGFyc2VyO1xuICB9XG5cbiAgc3RhdGljIGZyb21SdWxlcyhDbGFzcywgcnVsZXMpIHtcbiAgICBjb25zdCBwYXJzZXIgPSBwYXJzZXJGcm9tUnVsZXMoQ2xhc3MsIHJ1bGVzKTtcblxuICAgIHJldHVybiBwYXJzZXI7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IGJuZiBmcm9tIFwiLi9ibmZcIjtcbmltcG9ydCBDb21tb25QYXJzZXIgZnJvbSBcIi4uL2NvbW1vbi9wYXJzZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzaWNQYXJzZXIgZXh0ZW5kcyBDb21tb25QYXJzZXIge1xuICBzdGF0aWMgYm5mID0gYm5mO1xuXG4gIHN0YXRpYyBmcm9tTm90aGluZygpIHsgcmV0dXJuIENvbW1vblBhcnNlci5mcm9tTm90aGluZyhCYXNpY1BhcnNlcik7IH1cblxuICBzdGF0aWMgZnJvbUJORihibmYpIHsgcmV0dXJuIENvbW1vblBhcnNlci5mcm9tQk5GKEJhc2ljUGFyc2VyLCBibmYpOyB9XG5cbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21SdWxlcyhCYXNpY1BhcnNlciwgcnVsZXMpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBXaWxkY2FyZFBhcnQgZnJvbSBcIi4vcGFydC90ZXJtaW5hbC93aWxkY2FyZFwiO1xuaW1wb3J0IEVuZE9mTGluZVBhcnQgZnJvbSBcIi4vcGFydC90ZXJtaW5hbC9lbmRPZkxpbmVcIjtcbmltcG9ydCBUZXJtaW5hbFN5bWJvbFBhcnQgZnJvbSBcIi4vcGFydC90ZXJtaW5hbC90ZXJtaW5hbFN5bWJvbFwiO1xuaW1wb3J0IFJlZ3VsYXJFeHByZXNzaW9uUGFydCBmcm9tIFwiLi9wYXJ0L3Rlcm1pbmFsL3JlZ3VsYXJFeHByZXNzaW9uXCI7XG5pbXBvcnQgU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0IGZyb20gXCIuL3BhcnQvdGVybWluYWwvc2lnbmlmaWNhbnRUb2tlblR5cGVcIjtcbmltcG9ydCBSdWxlTmFtZVBhcnQgZnJvbSBcIi4vcGFydC9ub25UZXJtaW5hbC9ydWxlTmFtZVwiO1xuaW1wb3J0IE9wdGlvbmFsUGFydFBhcnQgZnJvbSBcIi4vcGFydC9ub25UZXJtaW5hbC9vcHRpb25hbFBhcnRcIjtcbmltcG9ydCBaZXJvT3JNb3JlUGFydHNQYXJ0IGZyb20gXCIuL3BhcnQvbm9uVGVybWluYWwvemVyb09yTW9yZVBhcnRzXCI7XG5pbXBvcnQgT25lT3JNb3JlUGFydHNQYXJ0IGZyb20gXCIuL3BhcnQvbm9uVGVybWluYWwvb25lT3JNb3JlUGFydHNcIjtcbmltcG9ydCBTZXF1ZW5jZU9mUGFydHNQYXJ0IGZyb20gXCIuL3BhcnQvbm9uVGVybWluYWwvc2VxdWVuY2VPZlBhcnRzXCI7XG5pbXBvcnQgQ2hvaWNlT2ZQYXJ0c1BhcnQgZnJvbSBcIi4vcGFydC9ub25UZXJtaW5hbC9jaG9pY2VPZlBhcnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgV2lsZGNhcmRQYXJ0LFxuICBFbmRPZkxpbmVQYXJ0LFxuICBUZXJtaW5hbFN5bWJvbFBhcnQsXG4gIFJlZ3VsYXJFeHByZXNzaW9uUGFydCxcbiAgU2lnbmlmaWNhbnRUb2tlblR5cGVQYXJ0LFxuICBSdWxlTmFtZVBhcnQsXG4gIE9wdGlvbmFsUGFydFBhcnQsXG4gIFplcm9Pck1vcmVQYXJ0c1BhcnQsXG4gIE9uZU9yTW9yZVBhcnRzUGFydCxcbiAgU2VxdWVuY2VPZlBhcnRzUGFydCxcbiAgQ2hvaWNlT2ZQYXJ0c1BhcnRcbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgQk5GUGFyc2VyIH0gZnJvbSBcIi4vYm5mL3BhcnNlclwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBCYXNpY1BhcnNlciB9IGZyb20gXCIuL2Jhc2ljL3BhcnNlclwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBDb21tb25QYXJzZXIgfSBmcm9tIFwiLi9jb21tb24vcGFyc2VyXCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgUnVsZSB9IGZyb20gXCIuL3J1bGVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUGFydHMgfSBmcm9tIFwiLi9wYXJ0c1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXJ0VHlwZXMgfSBmcm9tIFwiLi9wYXJ0VHlwZXNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgRGVmaW5pdGlvbiB9IGZyb20gXCIuL2RlZmluaXRpb25cIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVGVybWluYWxOb2RlIH0gZnJvbSBcIi4vbm9kZS90ZXJtaW5hbFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBOb25UZXJtaW5hbE5vZGUgfSBmcm9tIFwiLi9ub2RlL25vblRlcm1pbmFsXCI7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGJuZiA9IGBcblxuXG5cbiAgICBzdHlsZXNoZWV0ICAgICAgICAgICAgICAgICA6Oj0gKCBtZWRpYSB8IHJ1bGVTZXQgfCBkZWNsYXJhdGlvbiB8IGVycm9yICkrIDtcblxuXG5cblxuXG4gICAgbWVkaWEgICAgICAgICAgICAgICAgICAgICAgOjo9IFwiQG1lZGlhXCIgbWVkaWFRdWVyaWVzIFwie1wiICggcnVsZVNldCB8IGRlY2xhcmF0aW9uICkqIFwifVwiIDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgIG1lZGlhUXVlcmllcyAgICAgICAgICAgICAgIDo6PSAgbWVkaWFRdWVyeSAoIFwiLFwiIG1lZGlhUXVlcnkgKSogO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgbWVkaWFRdWVyeSAgICAgICAgICAgICAgICAgOjo9ICBcIm5vdFwiPyAoIFwib25seVwiPyBtZWRpYVR5cGUgXCJhbmRcIiApPyBtZWRpYUV4cHJlc3Npb24gKCBcImFuZFwiIG1lZGlhRXhwcmVzc2lvbiApKiA7XG5cblxuICAgIG1lZGlhVHlwZSAgICAgICAgICAgICAgICAgIDo6PSAgXCJhbGxcIiB8IFwicHJpbnRcIiB8IFwic2NyZWVuXCIgfCBcInNwZWVjaFwiIDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgIG1lZGlhRXhwcmVzc2lvbiAgICAgICAgICAgIDo6PSAgXCIoXCIgW2lkZW50aWZpZXJdICggXCI6XCIgZXhwcmVzc2lvbiApPyBcIilcIiA7XG5cblxuXG5cblxuICAgIHJ1bGVTZXQgICAgICAgICAgICAgICAgICAgIDo6PSAgc2VsZWN0b3JzIFwie1wiIGRlY2xhcmF0aW9uKiBcIn1cIiA7XG4gICAgXG4gICAgXG4gICAgc2VsZWN0b3JzICAgICAgICAgICAgICAgICAgOjo9ICBzZWxlY3RvciAoIFwiLFwiIHNlbGVjdG9yICkqIDtcblxuXG4gICAgc2VsZWN0b3IgICAgICAgICAgICAgICAgICAgOjo9ICAoIGNsYXNzIHwgcHNldWRvQ2xhc3MgfCBwc2V1ZG9FbGVtZW50IHwgYXR0cmlidXRlICkrIDtcblxuXG5cblxuXG4gICAgZGVjbGFyYXRpb24gICAgICAgICAgICAgICAgOjo9ICBwcm9wZXJ0eSBcIjpcIiBleHByZXNzaW9uICggXCIsXCIgZXhwcmVzc2lvbiApKiBwcmlvcml0eT8gXCI7XCIgO1xuXG5cbiAgICBjbGFzcyAgICAgICAgICAgICAgICAgICAgICA6Oj0gIFwiLlwiPE5PX1dISVRFU1BBQ0U+W2lkZW50aWZpZXJdIHBhcmVudGhlc2lzZWRTZWxlY3Rvcj8gO1xuXG5cbiAgICBwc2V1ZG9DbGFzcyAgICAgICAgICAgICAgICA6Oj0gIFwiOlwiPE5PX1dISVRFU1BBQ0U+W2lkZW50aWZpZXJdIHBhcmVudGhlc2lzZWRTZWxlY3Rvcj8gO1xuXG5cbiAgICBwc2V1ZG9FbGVtZW50ICAgICAgICAgICAgICA6Oj0gIFwiOjpcIjxOT19XSElURVNQQUNFPltpZGVudGlmaWVyXSBwYXJlbnRoZXNpc2VkU2VsZWN0b3I/IDtcblxuXG4gICAgcGFyZW50aGVzaXNlZFNlbGVjdG9yICAgICAgOjo9ICA8Tk9fV0hJVEVTUEFDRT5cIihcIiBzZWxlY3RvciA8Tk9fV0hJVEVTUEFDRT5cIilcIiA7XG5cblxuICAgIGF0dHJpYnV0ZSAgICAgICAgICAgICAgICAgIDo6PSAgXCJbXCJcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2lkZW50aWZpZXJdXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIFwiPVwiIHwgXCJ+PVwiIHwgXCJ8PVwiIClcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIFtpZGVudGlmaWVyXSB8IFtzdHJpbmctbGl0ZXJhbF0gKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApP1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIl1cIlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuICAgIHByb3BlcnR5ICAgICAgICAgICAgICAgICAgIDo6PSAgW2lkZW50aWZpZXJdIDtcblxuXG4gICAgZXhwcmVzc2lvbiAgICAgICAgICAgICAgICAgOjo9ICB0ZXJtICggXCIsXCI/IHRlcm0gKSogO1xuXG5cbiAgICBwcmlvcml0eSAgICAgICAgICAgICAgICAgICA6Oj0gIFwiIWltcG9ydGFudFwiIDtcblxuXG5cblxuXG4gICAgdGVybSAgICAgICAgICAgICAgICAgICAgICAgOjo9ICBbdW5hcnktb3BlcmF0b3JdP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCBbcGVyY2VudGFnZV0gfCBbZnJlcXVlbmN5XSB8IFtmcmFjdGlvbl0gfCBbbGVuZ3RoXSB8IFthbmdsZV0gfCBbcmVtc10gfCBbZW1zXSB8IFt0aW1lXSB8IFtudW1iZXJdIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzdHJpbmctbGl0ZXJhbF0rXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtpZGVudGlmaWVyXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sb3VyXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG4gICAgdXJpICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICBcInVybFwiPE5PX1dISVRFU1BBQ0U+XCIoXCIgW3N0cmluZy1saXRlcmFsXSBcIilcIiA7XG5cblxuICAgIGZ1bmN0aW9uICAgICAgICAgICAgICAgICAgIDo6PSAgW2lkZW50aWZpZXJdPE5PX1dISVRFU1BBQ0U+XCIoXCIgZXhwcmVzc2lvbiBcIilcIiA7XG5cblxuXG5cblxuICAgIGVycm9yICAgICAgICAgICAgICAgICAgICAgIDo6PSAgLiA7XG5cblxuXG5gO1xuXG5leHBvcnQgZGVmYXVsdCBibmY7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IENvbW1vblBhcnNlciB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5cbmltcG9ydCBibmYgZnJvbSBcIi4vYm5mXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENTU1BhcnNlciBleHRlbmRzIENvbW1vblBhcnNlciB7XG4gIHN0YXRpYyBibmYgPSBibmY7XG5cbiAgc3RhdGljIGZyb21Ob3RoaW5nKCkgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21Ob3RoaW5nKENTU1BhcnNlcik7IH1cblxuICBzdGF0aWMgZnJvbUJORihibmYpIHsgcmV0dXJuIENvbW1vblBhcnNlci5mcm9tQk5GKENTU1BhcnNlciwgYm5mKTsgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZXMocnVsZXMpIHsgcmV0dXJuIENvbW1vblBhcnNlci5mcm9tUnVsZXMoQ1NTUGFyc2VyLCBydWxlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMudHJpbSA9IHRyaW07XG5leHBvcnRzLmluY2x1ZGVzID0gaW5jbHVkZXM7XG5leHBvcnRzLmZpZnRoID0gZXhwb3J0cy5mb3VydGggPSBleHBvcnRzLnRoaXJkID0gZXhwb3J0cy5zZWNvbmQgPSBleHBvcnRzLnB1c2ggPSBleHBvcnRzLmNsZWFyID0gdm9pZCAwO1xudmFyIF9uZWNlc3NhcnkgPSByZXF1aXJlKFwibmVjZXNzYXJ5XCIpO1xudmFyIGNsZWFyID0gX25lY2Vzc2FyeS5hcnJheVV0aWxpdGllcy5jbGVhciwgcHVzaCA9IF9uZWNlc3NhcnkuYXJyYXlVdGlsaXRpZXMucHVzaCwgc2Vjb25kID0gX25lY2Vzc2FyeS5hcnJheVV0aWxpdGllcy5zZWNvbmQsIHRoaXJkID0gX25lY2Vzc2FyeS5hcnJheVV0aWxpdGllcy50aGlyZCwgZm91cnRoID0gX25lY2Vzc2FyeS5hcnJheVV0aWxpdGllcy5mb3VydGgsIGZpZnRoID0gX25lY2Vzc2FyeS5hcnJheVV0aWxpdGllcy5maWZ0aDtcbmV4cG9ydHMuY2xlYXIgPSBjbGVhcjtcbmV4cG9ydHMucHVzaCA9IHB1c2g7XG5leHBvcnRzLnNlY29uZCA9IHNlY29uZDtcbmV4cG9ydHMudGhpcmQgPSB0aGlyZDtcbmV4cG9ydHMuZm91cnRoID0gZm91cnRoO1xuZXhwb3J0cy5maWZ0aCA9IGZpZnRoO1xuZnVuY3Rpb24gdHJpbShhcnJheSwgc3RhcnRJbmRleCwgZW5kSW5kZXgpIHtcbiAgICB2YXIgc3RhcnQsIGRlbGV0ZUNvdW50O1xuICAgIGlmIChlbmRJbmRleCAhPT0gSW5maW5pdHkpIHtcbiAgICAgICAgc3RhcnQgPSBlbmRJbmRleCArIDE7XG4gICAgICAgIGFycmF5LnNwbGljZShzdGFydCk7XG4gICAgfVxuICAgIHN0YXJ0ID0gMDtcbiAgICBkZWxldGVDb3VudCA9IHN0YXJ0SW5kZXg7XG4gICAgYXJyYXkuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCk7XG59XG5mdW5jdGlvbiBpbmNsdWRlcyhhcnJheSkge1xuICAgIGZvcih2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGVsZW1lbnRzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5Kyspe1xuICAgICAgICBlbGVtZW50c1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuICAgIHJldHVybiBlbGVtZW50cy5zb21lKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5LmluY2x1ZGVzKGVsZW1lbnQpO1xuICAgIH0pO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTkxZEdsc2FYUnBaWE12WVhKeVlYa3Vhbk1pWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVhDSjFjMlVnYzNSeWFXTjBYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lHRnljbUY1VlhScGJHbDBhV1Z6SUgwZ1puSnZiU0JjSW01bFkyVnpjMkZ5ZVZ3aU8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ2V5QmpiR1ZoY2l3Z2NIVnphQ3dnYzJWamIyNWtMQ0IwYUdseVpDd2dabTkxY25Sb0xDQm1hV1owYUNCOUlEMGdZWEp5WVhsVmRHbHNhWFJwWlhNN1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQjBjbWx0S0dGeWNtRjVMQ0J6ZEdGeWRFbHVaR1Y0TENCbGJtUkpibVJsZUNrZ2UxeHVJQ0JzWlhRZ2MzUmhjblFzWEc0Z0lDQWdJQ0JrWld4bGRHVkRiM1Z1ZER0Y2JseHVJQ0JwWmlBb1pXNWtTVzVrWlhnZ0lUMDlJRWx1Wm1sdWFYUjVLU0I3WEc0Z0lDQWdjM1JoY25RZ1BTQmxibVJKYm1SbGVDQXJJREU3WEc1Y2JpQWdJQ0JoY25KaGVTNXpjR3hwWTJVb2MzUmhjblFwTzF4dUlDQjlYRzVjYmlBZ2MzUmhjblFnUFNBd08xeHVJQ0JrWld4bGRHVkRiM1Z1ZENBOUlITjBZWEowU1c1a1pYZzdYRzVjYmlBZ1lYSnlZWGt1YzNCc2FXTmxLSE4wWVhKMExDQmtaV3hsZEdWRGIzVnVkQ2s3WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnBibU5zZFdSbGN5aGhjbkpoZVN3Z0xpNHVaV3hsYldWdWRITXBJSHRjYmlBZ2NtVjBkWEp1SUdWc1pXMWxiblJ6TG5OdmJXVW9LR1ZzWlcxbGJuUXBJRDArSUdGeWNtRjVMbWx1WTJ4MVpHVnpLR1ZzWlcxbGJuUXBLVHRjYm4xY2JpSmRMQ0p1WVcxbGN5STZXeUowY21sdElpd2lhVzVqYkhWa1pYTWlMQ0pqYkdWaGNpSXNJbUZ5Y21GNVZYUnBiR2wwYVdWeklpd2ljSFZ6YUNJc0luTmxZMjl1WkNJc0luUm9hWEprSWl3aVptOTFjblJvSWl3aVptbG1kR2dpTENKaGNuSmhlU0lzSW5OMFlYSjBTVzVrWlhnaUxDSmxibVJKYm1SbGVDSXNJbk4wWVhKMElpd2laR1ZzWlhSbFEyOTFiblFpTENKSmJtWnBibWwwZVNJc0luTndiR2xqWlNJc0ltVnNaVzFsYm5Seklpd2ljMjl0WlNJc0ltVnNaVzFsYm5RaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFTkJRVmtzVjBGQlFTeERRVUZET3pzN1JUdFJRVTFIUVN4SlFVRkpMRWRCUVVwQkxFbEJRVWtzUVR0UlFXZENTa01zVVVGQlVTeEhRVUZTUVN4UlFVRlJMRUU3ZFVjN1FVRndRazhzUjBGQlZ5eERRVUZZTEZWQlFWYzdRVUZGYmtNc1IwRkJTeXhEUVVGSFF5eExRVUZMTEVkQlFYbERReXhWUVVGakxHZENRVUUxUkVRc1MwRkJTeXhGUVVGRlJTeEpRVUZKTEVkQlFXMURSQ3hWUVVGakxHZENRVUZ5UkVNc1NVRkJTU3hGUVVGRlF5eE5RVUZOTEVkQlFUSkNSaXhWUVVGakxHZENRVUV2UTBVc1RVRkJUU3hGUVVGRlF5eExRVUZMTEVkQlFXOUNTQ3hWUVVGakxHZENRVUYyUTBjc1MwRkJTeXhGUVVGRlF5eE5RVUZOTEVkQlFWbEtMRlZCUVdNc1owSkJRV2hEU1N4TlFVRk5MRVZCUVVWRExFdEJRVXNzUjBGQlMwd3NWVUZCWXl4blFrRkJlRUpMTEV0QlFVczdVVUZCZWtOT0xFdEJRVXNzUjBGQlRFRXNTMEZCU3l4Qk8xRkJRVVZGTEVsQlFVa3NSMEZCU2tFc1NVRkJTU3hCTzFGQlFVVkRMRTFCUVUwc1IwRkJUa0VzVFVGQlRTeEJPMUZCUVVWRExFdEJRVXNzUjBGQlRFRXNTMEZCU3l4Qk8xRkJRVVZETEUxQlFVMHNSMEZCVGtFc1RVRkJUU3hCTzFGQlFVVkRMRXRCUVVzc1IwRkJURUVzUzBGQlN5eEJPMU5CUlhoRFVpeEpRVUZKTEVOQlFVTlRMRXRCUVVzc1JVRkJSVU1zVlVGQlZTeEZRVUZGUXl4UlFVRlJMRVZCUVVVc1EwRkJRenRKUVVOcVJDeEhRVUZITEVOQlFVTkRMRXRCUVVzc1JVRkRURU1zVjBGQlZ6dEpRVVZtTEVWQlFVVXNSVUZCUlVZc1VVRkJVU3hMUVVGTFJ5eFJRVUZSTEVWQlFVVXNRMEZCUXp0UlFVTXhRa1lzUzBGQlN5eEhRVUZIUkN4UlFVRlJMRWRCUVVjc1EwRkJReXhEUVVGRE8xRkJSWEpDUml4TFFVRkxMRU5CUVVOTkxFMUJRVTBzUTBGQlEwZ3NTMEZCU3l4RFFVRkRMRU5CUVVNN1NVRkRkRUlzUTBGQlF6dEpRVVZFUVN4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRE8wbEJRMVpETEZkQlFWY3NSMEZCUjBnc1ZVRkJWU3hEUVVGRE8wbEJSWHBDUkN4TFFVRkxMRU5CUVVOTkxFMUJRVTBzUTBGQlEwZ3NTMEZCU3l4RlFVRkZReXhYUVVGWExFTkJRVU1zUTBGQlF6dEJRVU51UXl4RFFVRkRPMU5CUldWYUxGRkJRVkVzUTBGQlExRXNTMEZCU3l4RlFVRmxMRU5CUVVNN1NVRkJaQ3hIUVVGSFR5eERRVUZJTEVkQlFWY3NRMEZCV0N4SlFVRlhMRWRCUVZnc1UwRkJWeXhEUVVGWUxFMUJRVmNzUlVGQlVrRXNVVUZCVVN4SFFVRllMRWRCUVZjc1QwRkJXQ3hKUVVGWExFZEJRVmdzUTBGQlZ5eEhRVUZZTEVsQlFWY3NSMEZCV0N4RFFVRlhMRTlCUVZnc1NVRkJWeXhIUVVGWUxFTkJRVmNzUlVGQldDeEpRVUZYTEVkQlFWZ3NTVUZCVnl4RlFVRllMRWxCUVZjc1IwRkJXQ3hEUVVGRE8xRkJRVVZCTEZGQlFWRXNRMEZCV0N4SlFVRlhMRWRCUVZnc1EwRkJWeXhKUVVGWUxGTkJRVmNzUTBGQldDeEpRVUZYTEVORGRFSXpReXhEUkhOQ01rTTdTVUZCUkN4RFFVRkRPMGxCUTNwRExFMUJRVTBzUTBGQlEwRXNVVUZCVVN4RFFVRkRReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZRUXl4UFFVRlBPMlZCUVV0VUxFdEJRVXNzUTBGQlExSXNVVUZCVVN4RFFVRkRhVUlzVDBGQlR6czdRVUZETVVRc1EwRkJReUo5IiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBjaGFyYWN0ZXJzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5pbXBvcnQgeyBjbGVhciwgdHJpbSwgc2Vjb25kLCB0aGlyZCwgZm91cnRoIH0gZnJvbSBcIi4vdXRpbGl0aWVzL2FycmF5XCI7XG5cbmNvbnN0IHsgRVhDTEFNQVRJT05fTUFSS19DSEFSQUNURVIgfSA9IGNoYXJhY3RlcnM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwcmVhZCB7XG4gIGNvbnN0cnVjdG9yKHN0YXJ0SW5kZXgsIGVuZEluZGV4LCB1bmlxdWUpIHtcbiAgICB0aGlzLnN0YXJ0SW5kZXggPSBzdGFydEluZGV4O1xuICAgIHRoaXMuZW5kSW5kZXggPSBlbmRJbmRleDtcbiAgICB0aGlzLnVuaXF1ZSA9IHVuaXF1ZTtcbiAgfVxuXG4gIGFkanVzdE5vZGVzKG5vZGVzKSB7XG4gICAgaWYgKHRoaXMudW5pcXVlKSB7XG4gICAgICBjb25zdCBub2Rlc0xlbmd0aCA9IG5vZGVzLmxlbmd0aDtcblxuICAgICAgaWYgKG5vZGVzTGVuZ3RoID4gMSkge1xuICAgICAgICBjbGVhcihub2Rlcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyaW0obm9kZXMsIHRoaXMuc3RhcnRJbmRleCwgdGhpcy5lbmRJbmRleCk7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGZyb21TcHJlYWRFeHByZXNzaW9uKHNwcmVhZEV4cHJlc3Npb24pIHtcbiAgICBsZXQgc3RhcnRJbmRleCA9IDAsXG4gICAgICAgIGVuZEluZGV4ID0gSW5maW5pdHksXG4gICAgICAgIHVuaXF1ZSA9IGZhbHNlO1xuXG4gICAgaWYgKHNwcmVhZEV4cHJlc3Npb24gIT09IG51bGwpIHtcbiAgICAgIGlmIChzcHJlYWRFeHByZXNzaW9uID09PSBFWENMQU1BVElPTl9NQVJLX0NIQVJBQ1RFUikge1xuICAgICAgICB1bmlxdWUgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgcmVnRXhwID0gL1xcWyhcXGQrKT8oXFwuXFwuXFwuKT8oXFxkKyk/XS8sXG4gICAgICAgICAgICAgIG1hdGNoZXMgPSBzcHJlYWRFeHByZXNzaW9uLm1hdGNoKHJlZ0V4cCksXG4gICAgICAgICAgICAgIHNlY29uZE1hdGNoID0gc2Vjb25kKG1hdGNoZXMpLFxuICAgICAgICAgICAgICB0aGlyZE1hdGNoID0gdGhpcmQobWF0Y2hlcyksXG4gICAgICAgICAgICAgIGZvdXJ0aE1hdGNoID0gZm91cnRoKG1hdGNoZXMpO1xuXG4gICAgICAgIGlmIChzZWNvbmRNYXRjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc3RhcnRJbmRleCA9IHBhcnNlSW50KHNlY29uZE1hdGNoKTtcblxuICAgICAgICAgIGlmICh0aGlyZE1hdGNoID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGVuZEluZGV4ID0gc3RhcnRJbmRleDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZm91cnRoTWF0Y2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGVuZEluZGV4ID0gcGFyc2VJbnQoZm91cnRoTWF0Y2gpO1xuXG4gICAgICAgICAgaWYgKHRoaXJkTWF0Y2ggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc3RhcnRJbmRleCA9IGVuZEluZGV4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHNwcmVhZCA9IG5ldyBTcHJlYWQoc3RhcnRJbmRleCwgZW5kSW5kZXgsIHVuaXF1ZSk7XG5cbiAgICByZXR1cm4gc3ByZWFkO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGNoYXJhY3RlcnMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmltcG9ydCBTcHJlYWQgZnJvbSBcIi4vc3ByZWFkXCI7XG5cbmltcG9ydCB7IGluY2x1ZGVzLCBwdXNoLCBjbGVhciwgc2Vjb25kLCB0aGlyZCwgZm91cnRoLCBmaWZ0aCB9IGZyb20gXCIuL3V0aWxpdGllcy9hcnJheVwiO1xuXG5jb25zdCB7IFdJTERDQVJEX0NIQVJBQ1RFUiB9ID0gY2hhcmFjdGVycztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUXVlcnkge1xuICBjb25zdHJ1Y3RvcihydWxlTmFtZXMsIHR5cGVzLCBzcHJlYWQsIHN1YlF1ZXJ5LCAgbWF4aW11bURlcHRoLCBpbmZpbml0ZURlc2NlbnQsIGludGVybWVkaWF0ZU5vZGVzKSB7XG4gICAgdGhpcy5ydWxlTmFtZXMgPSBydWxlTmFtZXM7XG4gICAgdGhpcy50eXBlcyA9IHR5cGVzO1xuICAgIHRoaXMuc3ByZWFkID0gc3ByZWFkO1xuICAgIHRoaXMuc3ViUXVlcnkgPSBzdWJRdWVyeTtcbiAgICB0aGlzLm1heGltdW1EZXB0aCA9IG1heGltdW1EZXB0aDtcbiAgICB0aGlzLmluZmluaXRlRGVzY2VudCA9IGluZmluaXRlRGVzY2VudDtcbiAgICB0aGlzLmludGVybWVkaWF0ZU5vZGVzID0gaW50ZXJtZWRpYXRlTm9kZXM7XG4gIH1cblxuICBleGVjdXRlKG5vZGUsIGRlcHRoID0gMCwgbWF4aW11bURlcHRoID0gdGhpcy5tYXhpbXVtRGVwdGgpIHtcbiAgICBjb25zdCBub2RlcyA9IFtdO1xuXG4gICAgdGhpcy5jbGVhcigpO1xuXG4gICAgdGhpcy5maW5kKG5vZGUsIGRlcHRoLCBtYXhpbXVtRGVwdGgpO1xuXG4gICAgdGhpcy5hcHBseShub2RlcywgZGVwdGgsIG1heGltdW1EZXB0aCk7XG5cbiAgICByZXR1cm4gbm9kZXM7XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICBjbGVhcih0aGlzLmludGVybWVkaWF0ZU5vZGVzKTtcbiAgfVxuXG4gIGZpbmQobm9kZSwgZGVwdGgsIG1heGltdW1EZXB0aCkge1xuICAgIGlmIChkZXB0aCA+IG1heGltdW1EZXB0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG5vZGVUZXJtaW5hbE5vZGUgPSBub2RlLmlzVGVybWluYWxOb2RlKCksXG4gICAgICAgICAgbm9kZU5vblRlcm1pbmFsTm9kZSA9ICFub2RlVGVybWluYWxOb2RlO1xuXG4gICAgbGV0IGZvdW5kO1xuXG4gICAgaWYgKG5vZGVUZXJtaW5hbE5vZGUpIHtcbiAgICAgIGNvbnN0IHRlcm1pbmFsTm9kZSA9IG5vZGUsICAvLy9cbiAgICAgICAgICAgIHR5cGUgPSB0ZXJtaW5hbE5vZGUuZ2V0VHlwZSgpO1xuXG4gICAgICBmb3VuZCA9IGluY2x1ZGVzKHRoaXMudHlwZXMsIHR5cGUsIFdJTERDQVJEX0NIQVJBQ1RFUik7XG4gICAgfVxuXG4gICAgaWYgKG5vZGVOb25UZXJtaW5hbE5vZGUpIHtcbiAgICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IG5vZGUsIC8vL1xuICAgICAgICAgICAgcnVsZU5hbWUgPSBub25UZXJtaW5hbE5vZGUuZ2V0UnVsZU5hbWUoKTtcblxuICAgICAgZm91bmQgPSBpbmNsdWRlcyh0aGlzLnJ1bGVOYW1lcywgcnVsZU5hbWUsIFdJTERDQVJEX0NIQVJBQ1RFUik7XG4gICAgfVxuXG4gICAgaWYgKGZvdW5kKSB7XG4gICAgICBjb25zdCBpbnRlcm1lZGlhdGVOb2RlID0gbm9kZTsgLy8vXG5cbiAgICAgIHRoaXMuaW50ZXJtZWRpYXRlTm9kZXMucHVzaChpbnRlcm1lZGlhdGVOb2RlKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pbmZpbml0ZURlc2NlbnQpIHtcbiAgICAgIGlmIChub2RlTm9uVGVybWluYWxOb2RlKSB7XG4gICAgICAgIGRlcHRoKys7XG5cbiAgICAgICAgY29uc3Qgbm9uVGVybWluYWxOb2RlID0gbm9kZSwgLy8vXG4gICAgICAgICAgICAgIGNoaWxkTm9kZXMgPSBub25UZXJtaW5hbE5vZGUuZ2V0Q2hpbGROb2RlcygpO1xuXG4gICAgICAgIGNoaWxkTm9kZXMuZm9yRWFjaCgoY2hpbGROb2RlKSA9PiB0aGlzLmZpbmQoY2hpbGROb2RlLCBkZXB0aCwgbWF4aW11bURlcHRoKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgYXBwbHkobm9kZXMsIGRlcHRoLCBtYXhpbXVtRGVwdGgpIHtcbiAgICB0aGlzLnNwcmVhZC5hZGp1c3ROb2Rlcyh0aGlzLmludGVybWVkaWF0ZU5vZGVzKTtcblxuICAgIGlmICh0aGlzLnN1YlF1ZXJ5ID09PSBudWxsKSB7XG4gICAgICBwdXNoKG5vZGVzLCB0aGlzLmludGVybWVkaWF0ZU5vZGVzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pbnRlcm1lZGlhdGVOb2Rlcy5mb3JFYWNoKChpbnRlcm1lZGlhdGVOb2RlKSA9PiB7XG4gICAgICAgIGNvbnN0IGludGVybWVkaWF0ZU5vZGVOb25UZXJtaW5hbE5vZGUgPSBpbnRlcm1lZGlhdGVOb2RlLmlzTm9uVGVybWluYWxOb2RlKCk7XG5cbiAgICAgICAgaWYgKGludGVybWVkaWF0ZU5vZGVOb25UZXJtaW5hbE5vZGUpIHtcbiAgICAgICAgICBkZXB0aCsrO1xuXG4gICAgICAgICAgY29uc3Qgbm9uVGVybWluYWxOb2RlID0gaW50ZXJtZWRpYXRlTm9kZSwgLy8vXG4gICAgICAgICAgICAgICAgY2hpbGROb2RlcyA9IG5vblRlcm1pbmFsTm9kZS5nZXRDaGlsZE5vZGVzKCk7XG5cbiAgICAgICAgICB0aGlzLnN1YlF1ZXJ5LmNsZWFyKCk7XG5cbiAgICAgICAgICBjaGlsZE5vZGVzLmZvckVhY2goKGNoaWxkTm9kZSkgPT4gdGhpcy5zdWJRdWVyeS5maW5kKGNoaWxkTm9kZSwgZGVwdGgsIG1heGltdW1EZXB0aCkpO1xuXG4gICAgICAgICAgdGhpcy5zdWJRdWVyeS5hcHBseShub2RlcywgZGVwdGgsIG1heGltdW1EZXB0aCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmcm9tU3ViRXhwcmVzc2lvbkFuZFR5cGVzKHN1YkV4cHJlc2lvbiwgdHlwZXMpIHtcbiAgICBsZXQgcXVlcnkgPSBudWxsO1xuXG4gICAgaWYgKHN1YkV4cHJlc2lvbiAhPT0gbnVsbCkge1xuICAgICAgY29uc3QgdHlwZXNMZW5ndGggPSB0eXBlcy5sZW5ndGg7XG5cbiAgICAgIGlmICh0eXBlc0xlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb25zdCBleHByZXNzaW9uID0gc3ViRXhwcmVzaW9uOyAgLy8vXG5cbiAgICAgICAgcXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvbihleHByZXNzaW9uKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcXVlcnk7XG4gIH1cblxuICBzdGF0aWMgZnJvbUV4cHJlc3Npb24oZXhwcmVzc2lvbiwgbWF4aW11bURlcHRoID0gSW5maW5pdHkpIHtcbiAgICBjb25zdCByZWdFeHAgPSAvXlxcLyhcXC8pPyhbXi9cXFshXSspKFxcW1teXFxdXStdfCEpPyhcXC8uKik/JC8sXG4gICAgICAgICAgbWF0Y2hlcyA9IGV4cHJlc3Npb24ubWF0Y2gocmVnRXhwKSxcbiAgICAgICAgICBzZWNvbmRNYXRjaCA9IHNlY29uZChtYXRjaGVzKSxcbiAgICAgICAgICB0aGlyZE1hdGNoID0gdGhpcmQobWF0Y2hlcyksXG4gICAgICAgICAgZm91cnRoTWF0Y2ggPSBmb3VydGgobWF0Y2hlcyksXG4gICAgICAgICAgZmlmdGhNYXRjaCA9IGZpZnRoKG1hdGNoZXMpLFxuICAgICAgICAgIHNlbGVjdG9ycyA9IHRoaXJkTWF0Y2guc3BsaXQoXCJ8XCIpLFxuICAgICAgICAgIHN1YkV4cHJlc3Npb24gPSBmaWZ0aE1hdGNoIHx8IG51bGwsXG4gICAgICAgICAgc3ByZWFkRXhwcmVzc2lvbiA9IGZvdXJ0aE1hdGNoIHx8IG51bGwsXG4gICAgICAgICAgdHlwZXMgPSB0eXBlc0Zyb21TZWxlY3RvcnMoc2VsZWN0b3JzKSxcbiAgICAgICAgICBydWxlTmFtZXMgPSBydWxlTmFtZXNGcm9tU2VsZWN0b3JzQW5kVHlwZXMoc2VsZWN0b3JzLCB0eXBlcyksXG4gICAgICAgICAgc3ByZWFkID0gU3ByZWFkLmZyb21TcHJlYWRFeHByZXNzaW9uKHNwcmVhZEV4cHJlc3Npb24pLFxuICAgICAgICAgIHN1YlF1ZXJ5ID0gUXVlcnkuZnJvbVN1YkV4cHJlc3Npb25BbmRUeXBlcyhzdWJFeHByZXNzaW9uLCB0eXBlcyksXG4gICAgICAgICAgaW5maW5pdGVEZXNjZW50ID0gKHNlY29uZE1hdGNoID09PSBcIi9cIiksICAvLy9cbiAgICAgICAgICBpbnRlcm1lZGlhdGVOb2RlcyA9IFtdLFxuICAgICAgICAgIHF1ZXJ5ID0gbmV3IFF1ZXJ5KHJ1bGVOYW1lcywgdHlwZXMsIHNwcmVhZCwgc3ViUXVlcnksIG1heGltdW1EZXB0aCwgaW5maW5pdGVEZXNjZW50LCBpbnRlcm1lZGlhdGVOb2Rlcyk7XG4gICAgXG4gICAgcmV0dXJuIHF1ZXJ5O1xuICB9XG59XG5cbmZ1bmN0aW9uIHR5cGVzRnJvbVNlbGVjdG9ycyhzZWxlY3RvcnMpIHtcbiAgY29uc3QgdHlwZXMgPSBbXTtcblxuICBzZWxlY3RvcnMuZm9yRWFjaCgoc2VsZWN0b3IpID0+IHtcbiAgICBjb25zdCBzZWxlY3RvclR5cGVTZWxlY3RvciA9IGlzU2VsZWN0b3JUeXBlU2VsZWN0b3Ioc2VsZWN0b3IpO1xuXG4gICAgaWYgKHNlbGVjdG9yVHlwZVNlbGVjdG9yKSB7XG4gICAgICBjb25zdCB0eXBlID0gc2VsZWN0b3Iuc3Vic3RyaW5nKDEpO1xuXG4gICAgICB0eXBlcy5wdXNoKHR5cGUpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHR5cGVzO1xufVxuXG5mdW5jdGlvbiBpc1NlbGVjdG9yVHlwZVNlbGVjdG9yKHNlbGVjdG9yKSB7IHJldHVybiAvXkAvLnRlc3Qoc2VsZWN0b3IpOyB9XG5cbmZ1bmN0aW9uIHJ1bGVOYW1lc0Zyb21TZWxlY3RvcnMoc2VsZWN0b3JzKSB7IHJldHVybiBzZWxlY3RvcnMuZmlsdGVyKGlzU2VsZWN0b3JSdWxlTmFtZVNlbGVjdG9yKTsgfVxuXG5mdW5jdGlvbiBpc1NlbGVjdG9yUnVsZU5hbWVTZWxlY3RvcihzZWxlY3RvcikgeyByZXR1cm4gL15bXkBdLy50ZXN0KHNlbGVjdG9yKTsgfVxuXG5mdW5jdGlvbiBydWxlTmFtZXNGcm9tU2VsZWN0b3JzQW5kVHlwZXMoc2VsZWN0b3JzLCB0eXBlcykge1xuICBsZXQgcnVsZU5hbWVzID0gW107XG5cbiAgY29uc3QgdHlwZXNMZW5ndGggPSB0eXBlcy5sZW5ndGg7XG5cbiAgaWYgKHR5cGVzTGVuZ3RoID09PSAwKSB7XG4gICAgcnVsZU5hbWVzID0gcnVsZU5hbWVzRnJvbVNlbGVjdG9ycyhzZWxlY3RvcnMpO1xuICB9XG5cbiAgcmV0dXJuIHJ1bGVOYW1lcztcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFF1ZXJ5IGZyb20gXCIuLi9xdWVyeVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcXVlcnlCeUNsYXNzKG5vZGUsIENsYXNzLCBub2RlcyA9IFtdKSB7XG4gIGlmIChub2RlIGluc3RhbmNlb2YgQ2xhc3MpIHtcbiAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICB9XG5cbiAgY29uc3Qgbm9kZU5vblRlcm1pbmFsTm9kZSA9IG5vZGUuaXNOb25UZXJtaW5hbE5vZGUoKTtcblxuICBpZiAobm9kZU5vblRlcm1pbmFsTm9kZSkge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSBub2RlLmdldENoaWxkTm9kZXMoKTtcblxuICAgIGNoaWxkTm9kZXMuZm9yRWFjaCgoY2hpbGROb2RlKSA9PiBxdWVyeUJ5Q2xhc3MoY2hpbGROb2RlLCBDbGFzcywgbm9kZXMpKTtcbiAgfVxuXG4gIHJldHVybiBub2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5QnlDbGFzc2VzKG5vZGUsIENsYXNzZXMsIG5vZGVzID0gW10pIHtcbiAgQ2xhc3Nlcy5zb21lKChDbGFzcykgPT4ge1xuICAgIGlmIChub2RlIGluc3RhbmNlb2YgQ2xhc3MpIHtcbiAgICAgIG5vZGVzLnB1c2gobm9kZSk7XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3Qgbm9kZU5vblRlcm1pbmFsTm9kZSA9IG5vZGUuaXNOb25UZXJtaW5hbE5vZGUoKTtcblxuICBpZiAobm9kZU5vblRlcm1pbmFsTm9kZSkge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSBub2RlLmdldENoaWxkTm9kZXMoKTtcblxuICAgIGNoaWxkTm9kZXMuZm9yRWFjaCgoY2hpbGROb2RlKSA9PiBxdWVyeUJ5Q2xhc3NlcyhjaGlsZE5vZGUsIENsYXNzZXMsIG5vZGVzKSk7XG4gIH1cblxuICByZXR1cm4gbm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeUJ5RXhwcmVzc2lvbihub2RlLCBleHByZXNzaW9uLCBtYXhpbXVtRGVwdGgpIHtcbiAgY29uc3QgcXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvbihleHByZXNzaW9uLCBtYXhpbXVtRGVwdGgpLFxuICAgICAgICBub2RlcyA9IHF1ZXJ5LmV4ZWN1dGUobm9kZSk7XG5cbiAgcmV0dXJuIG5vZGVzO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHF1ZXJ5QnlDbGFzcyxcbiAgcXVlcnlCeUNsYXNzZXMsXG4gIHF1ZXJ5QnlFeHByZXNzaW9uXG59O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIFF1ZXJ5IH0gZnJvbSBcIi4vcXVlcnlcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcXVlcnlVdGlsaXRpZXMgfSBmcm9tIFwiLi91dGlsaXRpZXMvcXVlcnlcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IEhFQUQgPSBcImhlYWRcIjtcbmV4cG9ydCBjb25zdCBTVFlMRSA9IFwic3R5bGVcIjtcbmV4cG9ydCBjb25zdCBDSEFSQUNURVJTID0gXCJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCI7XG5leHBvcnQgY29uc3QgVFdPX1NQQUNFUyA9IFwiICBcIjtcbmV4cG9ydCBjb25zdCBGT1VSX1NQQUNFUyA9IFwiICAgIFwiO1xuZXhwb3J0IGNvbnN0IEVNUFRZX1NUUklORyA9IFwiXCI7XG5leHBvcnQgY29uc3QgQ0xBU1NfTkFNRV9MRU5HVEggPSA2O1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBhcnJheVV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5jb25zdCB7IGZpcnN0IH0gPSBhcnJheVV0aWxpdGllcztcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnRlbnRGcm9tUXVlcnlOb2RlQW5kVG9rZW5zKHF1ZXJ5LCBub2RlLCB0b2tlbnMpIHtcbiAgY29uc3Qgbm9kZXMgPSBxdWVyeS5leGVjdXRlKG5vZGUpLFxuICAgICAgICBmaXJzdE5vZGUgPSBmaXJzdChub2Rlcyk7XG5cbiAgbm9kZSA9IGZpcnN0Tm9kZTsgLy8vXG5cbiAgY29uc3QgY29udGVudCA9IGNvbnRlbnRGcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpO1xuXG4gIHJldHVybiBjb250ZW50O1xufVxuXG5mdW5jdGlvbiBjb250ZW50RnJvbU5vZGVBbmRUb2tlbnMobm9kZSwgdG9rZW5zKSB7XG4gIGNvbnN0IGZpcnN0U2lnbmlmaWNhbnRUb2tlbiA9IG5vZGUuZ2V0Rmlyc3RTaWduaWZpY2FudFRva2VuKCksXG4gICAgICAgIGxhc3RTaWduaWZpY2FudFRva2VuID0gbm9kZS5nZXRMYXN0U2lnbmlmaWNhbnRUb2tlbigpLFxuICAgICAgICBmaXJzdFRva2VuID0gZmlyc3RTaWduaWZpY2FudFRva2VuLCAvLy9cbiAgICAgICAgbGFzdFRva2VuID0gbGFzdFNpZ25pZmljYW50VG9rZW4sIC8vL1xuICAgICAgICBmaXJzdFRva2VuSW5kZXggPSB0b2tlbnMuaW5kZXhPZihmaXJzdFRva2VuKSxcbiAgICAgICAgbGFzdFRva2VuSW5kZXggPSB0b2tlbnMuaW5kZXhPZihsYXN0VG9rZW4pO1xuXG4gIGxldCBjb250ZW50ID0gRU1QVFlfU1RSSU5HO1xuXG4gIGZvciAobGV0IGluZGV4ID0gZmlyc3RUb2tlbkluZGV4OyBpbmRleCA8PSBsYXN0VG9rZW5JbmRleDsgaW5kZXgrKykge1xuICAgIGNvbnN0IHRva2VuID0gdG9rZW5zW2luZGV4XSxcbiAgICAgICAgICB0b2tlbkNvbnRlbnQgPSB0b2tlbi5nZXRDb250ZW50KCk7XG5cbiAgICBjb250ZW50ICs9IHRva2VuQ29udGVudDtcbiAgfVxuXG4gIHJldHVybiBjb250ZW50O1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBRdWVyeSB9IGZyb20gXCJvY2NhbS1kb21cIjtcblxuaW1wb3J0IHsgY29udGVudEZyb21RdWVyeU5vZGVBbmRUb2tlbnMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2NvbnRlbnRcIjtcblxuY29uc3QgcHJvcGVydHlRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uKFwiLyovcHJvcGVydHlcIiksXG4gICAgICBleHByZXNzaW9uUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvbihcIi8qL2V4cHJlc3Npb25cIik7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlY2xhcmF0aW9uIHtcbiAgY29uc3RydWN0b3IocHJvcGVydHksIGV4cHJlc3Npb24pIHtcbiAgICB0aGlzLnByb3BlcnR5ID0gcHJvcGVydHk7XG4gICAgdGhpcy5leHByZXNzaW9uID0gZXhwcmVzc2lvbjtcbiAgfVxuXG4gIGdldFByb3BlcnR5KCkge1xuICAgIHJldHVybiB0aGlzLnByb3BlcnR5O1xuICB9XG5cbiAgZ2V0RXhwcmVzc2lvbigpIHtcbiAgICByZXR1cm4gdGhpcy5leHByZXNzaW9uO1xuICB9XG5cbiAgY2hlY2tNYXRjaGVzKGRlY2xhcmF0aW9ucykge1xuICAgIGNvbnN0IG1hdGNoZXMgPSBkZWNsYXJhdGlvbnMuc29tZSgoZGVjbGFyYXRpb24pID0+IHtcbiAgICAgIGNvbnN0IHByb3BlcnR5ID0gZGVjbGFyYXRpb24uZ2V0UHJvcGVydHkoKSxcbiAgICAgICAgICAgIHByb3BlcnRpZXNNYXRjaCA9IChwcm9wZXJ0eSA9PT0gdGhpcy5wcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChwcm9wZXJ0aWVzTWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbWF0Y2hlcztcbiAgfVxuXG4gIGFzQ1NTKGluZGVudCwgbGFzdCkge1xuICAgIGNvbnN0IGNzcyA9IGxhc3QgP1xuICAgICAgICAgICAgICAgIGAke2luZGVudH0ke3RoaXMucHJvcGVydHl9OiAke3RoaXMuZXhwcmVzc2lvbn07YCA6XG4gICAgICAgICAgICAgICAgICBgJHtpbmRlbnR9JHt0aGlzLnByb3BlcnR5fTogJHt0aGlzLmV4cHJlc3Npb259O1xcbmA7XG5cbiAgICByZXR1cm4gY3NzO1xuICB9XG5cbiAgc3RhdGljIGZyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2Vucykge1xuICAgIGNvbnN0IHByb3BlcnR5Q29udGVudCA9IGNvbnRlbnRGcm9tUXVlcnlOb2RlQW5kVG9rZW5zKHByb3BlcnR5UXVlcnksIG5vZGUsIHRva2VucyksXG4gICAgICAgICAgZXhwcmVzc2lvbkNvbnRlbnQgPSBjb250ZW50RnJvbVF1ZXJ5Tm9kZUFuZFRva2VucyhleHByZXNzaW9uUXVlcnksIG5vZGUsIHRva2VucyksXG4gICAgICAgICAgcHJvcGVydHkgPSBwcm9wZXJ0eUNvbnRlbnQsIC8vL1xuICAgICAgICAgIGV4cHJlc3Npb24gPSBleHByZXNzaW9uQ29udGVudCwgLy8vXG4gICAgICAgICAgZGVjbGFyYXRpb24gPSBuZXcgRGVjbGFyYXRpb24ocHJvcGVydHksIGV4cHJlc3Npb24pO1xuXG4gICAgcmV0dXJuIGRlY2xhcmF0aW9uO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSBcIm9jY2FtLWRvbVwiO1xuXG5pbXBvcnQgRGVjbGFyYXRpb24gZnJvbSBcIi4vZGVjbGFyYXRpb25cIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5jb25zdCBkZWNsYXJhdGlvblF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb24oXCIvKi9kZWNsYXJhdGlvblwiKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGVjbGFyYXRpb25zIHtcbiAgY29uc3RydWN0b3IoYXJyYXkpIHtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG4gIH1cblxuICBmb3J3YXJkc0ZvckVhY2goY2FsbGJhY2spIHtcbiAgICBjb25zdCBsZW5ndGggPSB0aGlzLmFycmF5Lmxlbmd0aCxcbiAgICAgICAgICBmaXJzdEluZGV4ID0gMCxcbiAgICAgICAgICBsYXN0SW5kZXggPSBsZW5ndGggLSAxO1xuXG4gICAgZm9yIChsZXQgaW5kZXggPSBmaXJzdEluZGV4OyBpbmRleCA8PSBsYXN0SW5kZXg7IGluZGV4KyspIHtcbiAgICAgIGNvbnN0IGRlY2xhcmF0aW9uID0gdGhpcy5hcnJheVtpbmRleF07XG5cbiAgICAgIGNhbGxiYWNrKGRlY2xhcmF0aW9uLCBpbmRleCk7XG4gICAgfVxuICB9XG5cbiAgYmFja3dhcmRzRm9yRWFjaChjYWxsYmFjaykge1xuICAgIGNvbnN0IGxlbmd0aCA9IHRoaXMuYXJyYXkubGVuZ3RoLFxuICAgICAgICAgIGZpcnN0SW5kZXggPSAwLFxuICAgICAgICAgIGxhc3RJbmRleCA9IGxlbmd0aCAtIDE7XG5cbiAgICBmb3IgKGxldCBpbmRleCA9IGxhc3RJbmRleDsgaW5kZXggPj0gZmlyc3RJbmRleDsgaW5kZXgtLSkge1xuICAgICAgY29uc3QgZGVjbGFyYXRpb24gPSB0aGlzLmFycmF5W2luZGV4XTtcblxuICAgICAgY2FsbGJhY2soZGVjbGFyYXRpb24sIGluZGV4KTtcbiAgICB9XG4gIH1cblxuICB1bnNoaWZ0KGRlY2xhcmF0aW9ucykge1xuICAgIGRlY2xhcmF0aW9ucy5iYWNrd2FyZHNGb3JFYWNoKChkZWNsYXJhdGlvbikgPT4ge1xuICAgICAgY29uc3QgbWF0Y2hlcyA9IGRlY2xhcmF0aW9uLmNoZWNrTWF0Y2hlcyh0aGlzLmFycmF5KTsgLy8vXG5cbiAgICAgIGlmICghbWF0Y2hlcykge1xuICAgICAgICB0aGlzLmFycmF5LnVuc2hpZnQoZGVjbGFyYXRpb24pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgYXNDU1MoY2xhc3NOYW1lLCBpbmRlbnQpIHtcbiAgICBpZiAoaW5kZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGluZGVudCA9IGNsYXNzTmFtZTsgLy8vXG5cbiAgICAgIGNsYXNzTmFtZSA9IG51bGw7IC8vL1xuICAgIH1cblxuICAgIGxldCBjc3MgPSBFTVBUWV9TVFJJTkc7XG5cbiAgICBjb25zdCBsZW5ndGggPSB0aGlzLmFycmF5Lmxlbmd0aDtcblxuICAgIGlmIChsZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBsYXN0SW5kZXggPSBsZW5ndGggLSAxLFxuICAgICAgICAgICAgZGVjbGFyYXRpb25zQ1NTID0gdGhpcy5hcnJheS5yZWR1Y2UoKGRlY2xhcmF0aW9uc0NTUywgZGVjbGFyYXRpb24sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGxhc3QgPSAoaW5kZXggPT09IGxhc3RJbmRleCksXG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uQ1NTID0gZGVjbGFyYXRpb24uYXNDU1MoaW5kZW50LCBsYXN0KTtcblxuICAgICAgICAgICAgICBkZWNsYXJhdGlvbnNDU1MgKz0gZGVjbGFyYXRpb25DU1M7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIGRlY2xhcmF0aW9uc0NTUztcbiAgICAgICAgICAgIH0sIEVNUFRZX1NUUklORyk7XG5cbiAgICAgIGlmIChjbGFzc05hbWUgPT09IG51bGwpIHtcbiAgICAgICAgY3NzID0gZGVjbGFyYXRpb25zQ1NTOyAgLy8vXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjc3MgPSBgLiR7Y2xhc3NOYW1lfSB7XG4ke2RlY2xhcmF0aW9uc0NTU31cbn1cblxuYDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY3NzO1xuICB9XG5cbiAgc3RhdGljIGZyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2Vucykge1xuICAgIGNvbnN0IGRlY2xhcmF0aW9uTm9kZXMgPSBkZWNsYXJhdGlvblF1ZXJ5LmV4ZWN1dGUobm9kZSksXG4gICAgICAgICAgYXJyYXkgPSBkZWNsYXJhdGlvbk5vZGVzLm1hcCgoZGVjbGFyYXRpb25Ob2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0gZGVjbGFyYXRpb25Ob2RlLCAvLy9cbiAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uID0gRGVjbGFyYXRpb24uZnJvbU5vZGVBbmRUb2tlbnMobm9kZSwgdG9rZW5zKTtcblxuICAgICAgICAgICAgcmV0dXJuIGRlY2xhcmF0aW9uO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgIGRlY2xhcmF0aW9ucyA9IG5ldyBEZWNsYXJhdGlvbnMoYXJyYXkpO1xuXG4gICAgcmV0dXJuIGRlY2xhcmF0aW9ucztcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBRdWVyeSB9IGZyb20gXCJvY2NhbS1kb21cIjtcblxuaW1wb3J0IERlY2xhcmF0aW9ucyBmcm9tIFwiLi9kZWNsYXJhdGlvbnNcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgY29udGVudEZyb21RdWVyeU5vZGVBbmRUb2tlbnMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2NvbnRlbnRcIjtcblxuY29uc3Qgc2VsZWN0b3JzUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvbihcIi8vc2VsZWN0b3JzXCIpO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlU2V0IHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3JzLCBkZWNsYXJhdGlvbnMpIHtcbiAgICB0aGlzLnNlbGVjdG9ycyA9IHNlbGVjdG9ycztcbiAgICB0aGlzLmRlY2xhcmF0aW9ucyA9IGRlY2xhcmF0aW9ucztcbiAgfVxuXG4gIGdldFNlbGVjdG9ycygpIHtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3RvcnM7XG4gIH1cblxuICBnZXREZWNsYXJhdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVjbGFyYXRpb25zO1xuICB9XG5cbiAgdW5zaGlmdChydWxlU2V0KSB7XG4gICAgY29uc3QgZGVjbGFyYXRpb25zID0gcnVsZVNldC5nZXREZWNsYXJhdGlvbnMoKTtcblxuICAgIHRoaXMuZGVjbGFyYXRpb25zLnVuc2hpZnQoZGVjbGFyYXRpb25zKTtcbiAgfVxuXG4gIGZpbmRNYXRjaGluZ1J1bGVTZXQocnVsZVNldHMpIHtcbiAgICBjb25zdCBtYXRjaGluZ1J1bGVTZXQgPSBydWxlU2V0cy5maW5kKChydWxlU2V0KSA9PiB7XG4gICAgICBjb25zdCBzZWxlY3RvcnMgPSBydWxlU2V0LmdldFNlbGVjdG9ycygpLFxuICAgICAgICAgICAgc2VsZWN0b3JzTWF0Y2ggPSAoc2VsZWN0b3JzID09PSB0aGlzLnNlbGVjdG9ycyksXG4gICAgICAgICAgICBydWxlU2V0c01hdGNoID0gc2VsZWN0b3JzTWF0Y2g7IC8vL1xuXG4gICAgICBpZiAocnVsZVNldHNNYXRjaCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KSB8fCBudWxsOyAvLy9cblxuICAgIHJldHVybiBtYXRjaGluZ1J1bGVTZXQ7XG4gIH1cblxuICBhc0NTUyhjbGFzc05hbWUsIGluZGVudCkge1xuICAgIGxldCBjc3MgPSBFTVBUWV9TVFJJTkc7XG5cbiAgICBjb25zdCBkZWNsYXJhdGlvbnNDU1MgPSB0aGlzLmRlY2xhcmF0aW9ucy5hc0NTUyhgICAke2luZGVudH1gKTtcblxuICAgIGlmIChkZWNsYXJhdGlvbnNDU1MgIT09IEVNUFRZX1NUUklORykge1xuICAgICAgIGNzcyA9IGAke2luZGVudH0uJHtjbGFzc05hbWV9JHt0aGlzLnNlbGVjdG9yc30ge1xuJHtkZWNsYXJhdGlvbnNDU1N9XG4ke2luZGVudH19XG5cbmA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHN0YXRpYyBmcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpIHtcbiAgICBjb25zdCBzZWxlY3RvcnMgPSBzZWxlY3RvcnNGcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpLFxuICAgICAgICAgIGRlY2xhcmF0aW9ucyA9IERlY2xhcmF0aW9ucy5mcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpLFxuICAgICAgICAgIG1lZGlhID0gbmV3IFJ1bGVTZXQoc2VsZWN0b3JzLCBkZWNsYXJhdGlvbnMpO1xuXG4gICAgcmV0dXJuIG1lZGlhO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNlbGVjdG9yc0Zyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2Vucykge1xuICBjb25zdCBzZWxlY3RvcnNOb2RlQ29udGVudCA9IGNvbnRlbnRGcm9tUXVlcnlOb2RlQW5kVG9rZW5zKHNlbGVjdG9yc1F1ZXJ5LCBub2RlLCB0b2tlbnMpLFxuICAgICAgICBzZWxlY3RvcnMgPSBgJHtzZWxlY3RvcnNOb2RlQ29udGVudH1gO1xuXG4gIHJldHVybiBzZWxlY3RvcnM7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSBcIm9jY2FtLWRvbVwiO1xuXG5pbXBvcnQgUnVsZVNldCBmcm9tIFwiLi9ydWxlU2V0XCI7XG5cbmltcG9ydCB7IEVNUFRZX1NUUklORyB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuY29uc3QgcnVsZVNldFF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb24oXCIvKi9ydWxlU2V0XCIpO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlU2V0cyB7XG4gIGNvbnN0cnVjdG9yKGFycmF5KSB7XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xuICB9XG5cbiAgdW5zaGlmdChydWxlU2V0cykge1xuICAgIHJ1bGVTZXRzLmZvckVhY2goKHJ1bGVTZXQpID0+IHtcbiAgICAgIGNvbnN0IG1hdGNoaW5nUnVsZVNldCA9IHJ1bGVTZXQuZmluZE1hdGNoaW5nUnVsZVNldCh0aGlzLmFycmF5KTsgLy8vXG5cbiAgICAgIChtYXRjaGluZ1J1bGVTZXQgPT09IG51bGwpID9cbiAgICAgICAgdGhpcy5hcnJheS51bnNoaWZ0KHJ1bGVTZXQpIDpcbiAgICAgICAgICBtYXRjaGluZ1J1bGVTZXQudW5zaGlmdChydWxlU2V0KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICB0aGlzLmFycmF5LmZvckVhY2goY2FsbGJhY2spO1xuICB9XG5cbiAgYXNDU1MoY2xhc3NOYW1lLCBpbmRlbnQpIHtcbiAgICBjb25zdCBjc3MgPSB0aGlzLmFycmF5LnJlZHVjZSgoY3NzLCBydWxlU2V0KSA9PiB7XG4gICAgICBjb25zdCBydWxlU2V0Q1NTID0gcnVsZVNldC5hc0NTUyhjbGFzc05hbWUsIGluZGVudCk7XG5cbiAgICAgIGNzcyArPSBydWxlU2V0Q1NTO1xuXG4gICAgICByZXR1cm4gY3NzO1xuICAgIH0sIEVNUFRZX1NUUklORyk7XG5cbiAgICByZXR1cm4gY3NzO1xuICB9XG5cbiAgc3RhdGljIGZyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2Vucykge1xuICAgIGNvbnN0IHJ1bGVTZXROb2RlcyA9IHJ1bGVTZXRRdWVyeS5leGVjdXRlKG5vZGUpLFxuICAgICAgICAgIGFycmF5ID0gcnVsZVNldE5vZGVzLm1hcCgocnVsZVNldE5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5vZGUgPSBydWxlU2V0Tm9kZSwgLy8vXG4gICAgICAgICAgICAgICAgICBydWxlU2V0ID0gUnVsZVNldC5mcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpO1xuXG4gICAgICAgICAgICByZXR1cm4gcnVsZVNldDtcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBydWxlU2V0cyA9IG5ldyBSdWxlU2V0cyhhcnJheSk7XG5cbiAgICByZXR1cm4gcnVsZVNldHM7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwib2NjYW0tZG9tXCI7XG5cbmltcG9ydCBSdWxlU2V0cyBmcm9tIFwiLi9ydWxlU2V0c1wiO1xuaW1wb3J0IERlY2xhcmF0aW9ucyBmcm9tIFwiLi9kZWNsYXJhdGlvbnNcIjtcblxuaW1wb3J0IHsgVFdPX1NQQUNFUywgRk9VUl9TUEFDRVMgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBjb250ZW50RnJvbVF1ZXJ5Tm9kZUFuZFRva2VucyB9IGZyb20gXCIuLi91dGlsaXRpZXMvY29udGVudFwiO1xuXG5jb25zdCBtZWRpYVF1ZXJpZXNRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uKFwiL21lZGlhL21lZGlhUXVlcmllc1wiKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWEge1xuICBjb25zdHJ1Y3RvcihtZWRpYVF1ZXJpZXMsIGRlY2xhcmF0aW9ucywgcnVsZVNldHMpIHtcbiAgICB0aGlzLm1lZGlhUXVlcmllcyA9IG1lZGlhUXVlcmllcztcbiAgICB0aGlzLmRlY2xhcmF0aW9ucyA9IGRlY2xhcmF0aW9ucztcbiAgICB0aGlzLnJ1bGVTZXRzID0gcnVsZVNldHM7XG4gIH1cblxuICBnZXRNZWRpYVF1ZXJpZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMubWVkaWFRdWVyaWVzO1xuICB9XG5cbiAgZ2V0RGVjbGFyYXRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLmRlY2xhcmF0aW9ucztcbiAgfVxuXG4gIGdldFJ1bGVTZXRzKCkge1xuICAgIHJldHVybiB0aGlzLnJ1bGVTZXRzO1xuICB9XG5cbiAgYXNDU1MoY2xhc3NOYW1lKSB7XG4gICAgbGV0IGNzcyA9IFwiXCI7XG5cbiAgICBjb25zdCBydWxlU2V0c0NTUyA9IHRoaXMucnVsZVNldHMuYXNDU1MoY2xhc3NOYW1lLCBUV09fU1BBQ0VTKSxcbiAgICAgICAgICBkZWNsYXJhdGlvbnNDU1MgPSB0aGlzLmRlY2xhcmF0aW9ucy5hc0NTUyhjbGFzc05hbWUsIEZPVVJfU1BBQ0VTKTtcblxuICAgIGlmICgocnVsZVNldHNDU1MgIT09IG51bGwpIHx8IChkZWNsYXJhdGlvbnNDU1MgIT09IG51bGwpKSB7XG4gICAgICBjc3MgPSBgQG1lZGlhICR7dGhpcy5tZWRpYVF1ZXJpZXN9IHtcbiR7ZGVjbGFyYXRpb25zQ1NTfSR7cnVsZVNldHNDU1N9XG59XG5cbmA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHN0YXRpYyBmcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpIHtcbiAgICBjb25zdCBtZWRpYVF1ZXJpZXMgPSBtZWRpYVF1ZXJpZXNGcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpLFxuICAgICAgICAgIGRlY2xhcmF0aW9ucyA9IERlY2xhcmF0aW9ucy5mcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpLFxuICAgICAgICAgIHJ1bGVTZXRzID0gUnVsZVNldHMuZnJvbU5vZGVBbmRUb2tlbnMobm9kZSwgdG9rZW5zKSxcbiAgICAgICAgICBtZWRpYSA9IG5ldyBNZWRpYShtZWRpYVF1ZXJpZXMsIGRlY2xhcmF0aW9ucywgcnVsZVNldHMpO1xuXG4gICAgcmV0dXJuIG1lZGlhO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1lZGlhUXVlcmllc0Zyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2Vucykge1xuICBjb25zdCBtZWRpYVF1ZXJpZXNOb2RlQ29udGVudCA9IGNvbnRlbnRGcm9tUXVlcnlOb2RlQW5kVG9rZW5zKG1lZGlhUXVlcmllc1F1ZXJ5LCBub2RlLCB0b2tlbnMpLFxuICAgICAgICBtZWRpYVF1ZXJpZXMgPSBgJHttZWRpYVF1ZXJpZXNOb2RlQ29udGVudH1gO1xuXG4gIHJldHVybiBtZWRpYVF1ZXJpZXM7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSBcIm9jY2FtLWRvbVwiO1xuXG5pbXBvcnQgTWVkaWEgZnJvbSBcIi4vbWVkaWFcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5jb25zdCBtZWRpYVF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb24oXCIvc3R5bGVzaGVldC9tZWRpYVwiKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWFzIHtcbiAgY29uc3RydWN0b3IoYXJyYXkpIHtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG4gIH1cblxuICB1bnNoaWZ0KG1lZGlhcykge1xuICAgIG1lZGlhcy5mb3JFYWNoKChtZWRpYSkgPT4ge1xuICAgICAgdGhpcy5hcnJheS51bnNoaWZ0KG1lZGlhKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICB0aGlzLmFycmF5LmZvckVhY2goY2FsbGJhY2spO1xuICB9XG5cbiAgYXNDU1MoY2xhc3NOYW1lKSB7XG4gICAgY29uc3QgY3NzID0gdGhpcy5hcnJheS5yZWR1Y2UoKGNzcywgbWVkaWEpID0+IHtcbiAgICAgIGNvbnN0IG1lZGlhQ1NTID0gbWVkaWEuYXNDU1MoY2xhc3NOYW1lKTtcblxuICAgICAgY3NzICs9IG1lZGlhQ1NTO1xuXG4gICAgICByZXR1cm4gY3NzO1xuICAgIH0sIEVNUFRZX1NUUklORyk7XG5cbiAgICByZXR1cm4gY3NzO1xuICB9XG5cbiAgc3RhdGljIGZyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2Vucykge1xuICAgIGNvbnN0IG1lZGlhTm9kZXMgPSBtZWRpYVF1ZXJ5LmV4ZWN1dGUobm9kZSksXG4gICAgICAgICAgYXJyYXkgPSBtZWRpYU5vZGVzLm1hcCgobWVkaWFOb2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0gbWVkaWFOb2RlLCAvLy9cbiAgICAgICAgICAgICAgICAgIG1lZGlhID0gTWVkaWEuZnJvbU5vZGVBbmRUb2tlbnMobm9kZSwgdG9rZW5zKTtcblxuICAgICAgICAgICAgcmV0dXJuIG1lZGlhO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgIG1lZGlhcyA9IG5ldyBNZWRpYXMoYXJyYXkpO1xuXG4gICAgcmV0dXJuIG1lZGlhcztcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgTWVkaWFzIGZyb20gXCIuL3N0eWxlL21lZGlhc1wiO1xuaW1wb3J0IFJ1bGVTZXRzIGZyb20gXCIuL3N0eWxlL3J1bGVTZXRzXCI7XG5pbXBvcnQgRGVjbGFyYXRpb25zIGZyb20gXCIuL3N0eWxlL2RlY2xhcmF0aW9uc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdHlsZSB7XG4gIGNvbnN0cnVjdG9yKGRlY2xhcmF0aW9ucywgcnVsZVNldHMsIG1lZGlhcykge1xuICAgIHRoaXMuZGVjbGFyYXRpb25zID0gZGVjbGFyYXRpb25zO1xuICAgIHRoaXMucnVsZVNldHMgPSBydWxlU2V0cztcbiAgICB0aGlzLm1lZGlhcyA9IG1lZGlhcztcbiAgfVxuXG4gIGdldERlY2xhcmF0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5kZWNsYXJhdGlvbnM7XG4gIH1cblxuICBnZXRSdWxlU2V0cygpIHtcbiAgICByZXR1cm4gdGhpcy5ydWxlU2V0cztcbiAgfVxuXG4gIGdldE1lZGlhcygpIHtcbiAgICByZXR1cm4gdGhpcy5tZWRpYXM7XG4gIH1cblxuICBleHRlbmRzKHN1cGVyU3R5bGUpIHtcbiAgICBjb25zdCBkZWNsYXJhdGlvbnMgPSBzdXBlclN0eWxlLmdldERlY2xhcmF0aW9ucygpLFxuICAgICAgICAgIHJ1bGVTZXRzID0gc3VwZXJTdHlsZS5nZXRSdWxlU2V0cygpLFxuICAgICAgICAgIG1lZGlhcyA9IHN1cGVyU3R5bGUuZ2V0TWVkaWFzKCk7XG5cbiAgICB0aGlzLnVuc2hpZnQoZGVjbGFyYXRpb25zLCBydWxlU2V0cywgbWVkaWFzKTtcbiAgfVxuXG4gIHVuc2hpZnQoZGVjbGFyYXRpb25zLCBydWxlU2V0cywgbWVkaWFzKSB7XG4gICAgdGhpcy5kZWNsYXJhdGlvbnMudW5zaGlmdChkZWNsYXJhdGlvbnMpO1xuICAgIHRoaXMucnVsZVNldHMudW5zaGlmdChydWxlU2V0cyk7XG4gICAgdGhpcy5tZWRpYXMudW5zaGlmdChtZWRpYXMpO1xuICB9XG5cbiAgYXNDU1MoY2xhc3NOYW1lKSB7XG4gICAgY29uc3QgZGVjbGFyYXRpb25zQ1NTID0gdGhpcy5kZWNsYXJhdGlvbnMuYXNDU1MoY2xhc3NOYW1lLCBcIiAgXCIpLFxuICAgICAgICAgIHJ1bGVTZXRzQ1NTID0gdGhpcy5ydWxlU2V0cy5hc0NTUyhjbGFzc05hbWUsIFwiXCIpLFxuICAgICAgICAgIG1lZGlhc0NTUyA9IHRoaXMubWVkaWFzLmFzQ1NTKGNsYXNzTmFtZSksXG4gICAgICAgICAgY3NzID0gYCR7ZGVjbGFyYXRpb25zQ1NTfSR7cnVsZVNldHNDU1N9JHttZWRpYXNDU1N9YDtcblxuICAgIHJldHVybiBjc3M7XG4gIH1cblxuICBzdGF0aWMgZnJvbU5vZGVBbmRUb2tlbnMobm9kZSwgdG9rZW5zKSB7XG4gICAgY29uc3QgZGVjbGFyYXRpb25zID0gRGVjbGFyYXRpb25zLmZyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2VucyksXG4gICAgICAgICAgcnVsZVNldHMgPSBSdWxlU2V0cy5mcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpLFxuICAgICAgICAgIG1lZGlhcyA9IE1lZGlhcy5mcm9tTm9kZUFuZFRva2Vucyhub2RlLCB0b2tlbnMpLFxuICAgICAgICAgIHN0eWxlID0gbmV3IFN0eWxlKGRlY2xhcmF0aW9ucywgcnVsZVNldHMsIG1lZGlhcyk7XG5cbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFN0eWxlIGZyb20gXCIuLi9zdHlsZVwiO1xuaW1wb3J0IENTU0xleGVyIGZyb20gXCIuLi9jc3MvbGV4ZXJcIjtcbmltcG9ydCBDU1NQYXJzZXIgZnJvbSBcIi4uL2Nzcy9wYXJzZXJcIjtcblxuaW1wb3J0IHsgSEVBRCwgU1RZTEUsIEVNUFRZX1NUUklORyB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuY29uc3QgY3NzTGV4ZXIgPSBDU1NMZXhlci5mcm9tTm90aGluZygpLFxuICAgICAgY3NzUGFyc2VyID0gQ1NTUGFyc2VyLmZyb21Ob3RoaW5nKCk7XG5cbmlmICghZ2xvYmFsVGhpcy5zdHlsZU1hcCkge1xuICBnbG9iYWxUaGlzLnN0eWxlTWFwID0ge307XG59XG5cbmNvbnN0IHsgc3R5bGVNYXAgfSA9IGdsb2JhbFRoaXM7XG5cbmZ1bmN0aW9uIHJlbmRlclN0eWxlKHN0eWxlKSB7XG4gIGNvbnN0IGhlYWRET01FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihIRUFEKSxcbiAgICAgICAgc3R5bGVET01FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChTVFlMRSksXG4gICAgICAgIGlubmVySFRNTCA9IGBcbiAgICAgICAgXG4ke3N0eWxlfWA7XG5cbiAgT2JqZWN0LmFzc2lnbihzdHlsZURPTUVsZW1lbnQsIHtcbiAgICBpbm5lckhUTUxcbiAgfSk7XG5cbiAgaGVhZERPTUVsZW1lbnQuYXBwZW5kQ2hpbGQoc3R5bGVET01FbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gcmVuZGVyU3R5bGVzKCkge1xuICBjb25zdCBzdHlsZXNDU1MgPSByZXRyaWV2ZVN0eWxlc0NTUygpLFxuICAgICAgICBzdHlsZSA9IHN0eWxlc0NTUzsgIC8vL1xuXG4gIHJlbmRlclN0eWxlKHN0eWxlKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVTdHlsZShhcmdzLCBjbGFzc05hbWUsIHN1cGVyU3R5bGUgPSBudWxsKSB7XG4gIGNvbnN0IHN0cmluZ3MgPSBhcmdzLnNoaWZ0KCksXHQvLy9cbiAgICAgICAgY29udGVudCA9IHN0cmluZ3MucmVkdWNlKChjb250ZW50LCBzdHJpbmcsIGluZGV4KSA9PiB7XG4gICAgICAgICAgY29uc3QgYXJnID0gYXJnc1tpbmRleF07XG5cbiAgICAgICAgICBjb250ZW50ID0gKGFyZyAhPT0gdW5kZWZpbmVkKSA/XG4gICAgICAgICAgICAgICAgICAgICAgYCR7Y29udGVudH0ke3N0cmluZ30ke2FyZ31gIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGAke2NvbnRlbnR9JHtzdHJpbmd9YDtcblxuICAgICAgICAgIHJldHVybiBjb250ZW50O1xuICAgICAgICB9LCBFTVBUWV9TVFJJTkcpLFxuICAgICAgICB0b2tlbnMgPSBjc3NMZXhlci50b2tlbmlzZShjb250ZW50KSxcbiAgICAgICAgbm9kZSA9IGNzc1BhcnNlci5wYXJzZSh0b2tlbnMpLFxuICAgICAgICBzdHlsZSA9IFN0eWxlLmZyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2Vucyk7XG5cbiAgICAgICAgaWYgKHN1cGVyU3R5bGUgIT09IG51bGwpIHtcbiAgICAgICAgICBzdHlsZS5leHRlbmRzKHN1cGVyU3R5bGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGVNYXBbY2xhc3NOYW1lXSA9IHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZXRyaWV2ZVN0eWxlKGNsYXNzTmFtZSkge1xuICBjb25zdCBzdHlsZSA9IHN0eWxlTWFwW2NsYXNzTmFtZV0gfHwgbnVsbDtcblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcmVuZGVyU3R5bGUsXG4gIHJlbmRlclN0eWxlcyxcbiAgZ2VuZXJhdGVTdHlsZSxcbiAgcmV0cmlldmVTdHlsZVxufTtcblxuZnVuY3Rpb24gcmV0cmlldmVTdHlsZXNDU1MoKSB7XG4gIGNvbnN0IGNsYXNzTmFtZXMgPSBPYmplY3Qua2V5cyhzdHlsZU1hcCksXG4gICAgICAgIHN0eWxlc0NTUyA9IGNsYXNzTmFtZXMucmVkdWNlKChzdHlsZXNDU1MsIGNsYXNzTmFtZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHN0eWxlID0gcmV0cmlldmVTdHlsZShjbGFzc05hbWUpLFxuICAgICAgICAgICAgICAgIHN0eWxlQ1NTID0gc3R5bGUuYXNDU1MoY2xhc3NOYW1lKTtcblxuICAgICAgICAgIHN0eWxlc0NTUyArPSBzdHlsZUNTUztcblxuICAgICAgICAgIHJldHVybiBzdHlsZXNDU1M7XG4gICAgICAgIH0sIEVNUFRZX1NUUklORyk7XG5cbiAgcmV0dXJuIHN0eWxlc0NTUztcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ0hBUkFDVEVSUywgRU1QVFlfU1RSSU5HLCBDTEFTU19OQU1FX0xFTkdUSCB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuY29uc3QgbGVuZ3RoID0gQ0xBU1NfTkFNRV9MRU5HVEgsXG4gICAgICBjaGFyYWN0ZXJzID0gQ0hBUkFDVEVSUyxcbiAgICAgIGNoYXJhY3RlcnNMZW5ndGggPSBjaGFyYWN0ZXJzLmxlbmd0aDtcblxuY29uc3QgY2xhc3NOYW1lcyA9IFtdO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVDbGFzc05hbWUoKSB7XG4gIGxldCBjbGFzc05hbWUgPSBFTVBUWV9TVFJJTkc7XG5cbiAgZm9yIChsZXQgY291bnQgPSAwOyBjb3VudCA8IGxlbmd0aDsgY291bnQrKykge1xuICAgIGNvbnN0IGluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVyc0xlbmd0aCksXG4gICAgICAgICAgY2hhcmFjdGVyID0gY2hhcmFjdGVyc1tpbmRleF07XG5cbiAgICBjbGFzc05hbWUgKz0gY2hhcmFjdGVyO1xuICB9XG5cbiAgY29uc3QgY2xhc3NOYW1lc0luY2x1ZGVzQ2xhc3NOYW1lID0gY2xhc3NOYW1lcy5pbmNsdWRlcyhjbGFzc05hbWUpO1xuXG4gIGlmICghY2xhc3NOYW1lc0luY2x1ZGVzQ2xhc3NOYW1lKSB7XG4gICAgY2xhc3NOYW1lcy5wdXNoKGNsYXNzTmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgY2xhc3NOYW1lID0gZ2VuZXJhdGVDbGFzc05hbWUoKTtcbiAgfVxuXG4gIHJldHVybiBjbGFzc05hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXRyaWV2ZUNsYXNzTmFtZShlbGVtZW50KSB7XG4gIGNvbnN0IHsgY2xhc3NOYW1lIH0gPSBlbGVtZW50LnJlYWN0RnVuY3Rpb24gfHwgZWxlbWVudC5yZWFjdENvbXBvbmVudC5jb25zdHJ1Y3RvcjtcblxuICByZXR1cm4gY2xhc3NOYW1lO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdlbmVyYXRlQ2xhc3NOYW1lLFxuICByZXRyaWV2ZUNsYXNzTmFtZVxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IHsgZGVmYXVsdCBhcyB0YWdOYW1lcyB9IGZyb20gXCIuL3RhZ05hbWVzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIENTU0xleGVyIH0gZnJvbSBcIi4vY3NzL2xleGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIENTU1BhcnNlciB9IGZyb20gXCIuL2Nzcy9wYXJzZXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc3R5bGVzVXRpbGl0aWVzIH0gZnJvbSBcIi4vdXRpbGl0aWVzL3N0eWxlc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBjbGFzc05hbWVVdGlsaXRpZXMgfSBmcm9tIFwiLi91dGlsaXRpZXMvY2xhc3NOYW1lXCI7XG4iLCAiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFbGVtZW50IH0gZnJvbSBcImVhc3lcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzQ2xhc3MoYXJndW1lbnQpIHsgcmV0dXJuIGlzU3ViY2xhc3NPZihhcmd1bWVudCwgRWxlbWVudCk7IH0gIC8vL1xuXG5mdW5jdGlvbiBpc1N1YmNsYXNzT2YoYXJndW1lbnQsIENsYXNzKSB7XG4gIGxldCBzdWJjbGFzcyA9IGZhbHNlO1xuXG4gIGlmIChhcmd1bWVudC5uYW1lID09PSBDbGFzcy5uYW1lKSB7ICAgLy8vXG4gICAgc3ViY2xhc3MgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIGFyZ3VtZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGFyZ3VtZW50KTsgLy8vXG5cbiAgICBpZiAoYXJndW1lbnQgIT09IG51bGwpIHtcbiAgICAgIHN1YmNsYXNzID0gaXNTdWJjbGFzc09mKGFyZ3VtZW50LCBDbGFzcyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN1YmNsYXNzO1xufSIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IENMQVNTX05BTUUgPSBcImNsYXNzTmFtZVwiO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9lYXN5ID0gcmVxdWlyZShcImVhc3lcIik7XG52YXIgX3dpdGhTdHlsZSA9IHJlcXVpcmUoXCJ3aXRoLXN0eWxlXCIpO1xudmFyIF9jbGFzcyA9IHJlcXVpcmUoXCIuL3V0aWxpdGllcy9jbGFzc1wiKTtcbnZhciBfY29uc3RhbnRzID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcbiAgICBmb3IodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKylhcnIyW2ldID0gYXJyW2ldO1xuICAgIHJldHVybiBhcnIyO1xufVxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpO1xufVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxcXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHtcbiAgICBmb3IodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgICAgIHZhciBvd25LZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgICAgICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uKHN5bSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgICAgICByZXR1cm4gY2FsbDtcbiAgICB9XG4gICAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpO1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgICBpZiAoIW8pIHJldHVybjtcbiAgICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICAgIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG4pO1xuICAgIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgZ2VuZXJhdGVDbGFzc05hbWUgPSBfd2l0aFN0eWxlLmNsYXNzTmFtZVV0aWxpdGllcy5nZW5lcmF0ZUNsYXNzTmFtZSwgcmVuZGVyU3R5bGUgPSBfd2l0aFN0eWxlLnN0eWxlc1V0aWxpdGllcy5yZW5kZXJTdHlsZSwgcmVuZGVyU3R5bGVzID0gX3dpdGhTdHlsZS5zdHlsZXNVdGlsaXRpZXMucmVuZGVyU3R5bGVzLCBnZW5lcmF0ZVN0eWxlID0gX3dpdGhTdHlsZS5zdHlsZXNVdGlsaXRpZXMuZ2VuZXJhdGVTdHlsZSwgcmV0cmlldmVTdHlsZSA9IF93aXRoU3R5bGUuc3R5bGVzVXRpbGl0aWVzLnJldHJpZXZlU3R5bGU7XG5mdW5jdGlvbiB3aXRoU3R5bGUoQ2xhc3NPckZ1bmN0aW9uKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7IC8vL1xuICAgICAgICB2YXIgX2NsYXNzTmFtZSA9IENsYXNzT3JGdW5jdGlvbi5jbGFzc05hbWUsIGNsYXNzTmFtZSA9IF9jbGFzc05hbWUgPT09IHZvaWQgMCA/IG51bGwgOiBfY2xhc3NOYW1lO1xuICAgICAgICB2YXIgc3VwZXJTdHlsZSA9IHJldHJpZXZlU3R5bGUoY2xhc3NOYW1lKTtcbiAgICAgICAgY2xhc3NOYW1lID0gZ2VuZXJhdGVDbGFzc05hbWUoKTtcbiAgICAgICAgZ2VuZXJhdGVTdHlsZShhcmdzLCBjbGFzc05hbWUsIHN1cGVyU3R5bGUpO1xuICAgICAgICB2YXIgQ2xhc3NPckZ1bmN0aW9uQ2xhc3MgPSAoMCwgX2NsYXNzKS5pc0NsYXNzKENsYXNzT3JGdW5jdGlvbik7XG4gICAgICAgIGlmIChDbGFzc09yRnVuY3Rpb25DbGFzcykge1xuICAgICAgICAgICAgdmFyIENsYXNzMSA9IENsYXNzT3JGdW5jdGlvbjsgLy8vXG4gICAgICAgICAgICBDbGFzc09yRnVuY3Rpb24gPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKENsYXNzKSB7XG4gICAgICAgICAgICAgICAgX2luaGVyaXRzKF9jbGFzczEsIENsYXNzKTtcbiAgICAgICAgICAgICAgICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKF9jbGFzczEpO1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIF9jbGFzczEoKSB7XG4gICAgICAgICAgICAgICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBfY2xhc3MxKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfY3JlYXRlQ2xhc3MoX2NsYXNzMSwgbnVsbCwgW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6IFwiZnJvbUNsYXNzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbUNsYXNzKF9DbGFzcywgcHJvcGVydGllcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcih2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHJlbWFpbmluZ0FyZ3VtZW50cyA9IG5ldyBBcnJheShfbGVuID4gMiA/IF9sZW4gLSAyIDogMCksIF9rZXkgPSAyOyBfa2V5IDwgX2xlbjsgX2tleSsrKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nQXJndW1lbnRzW19rZXkgLSAyXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF8kX0NsYXNzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXMgPSBhcHBlbmRDbGFzc05hbWVUb1Byb3BlcnRpZXMoY2xhc3NOYW1lLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKF8kX0NsYXNzID0gQ2xhc3MxKS5mcm9tQ2xhc3MuYXBwbHkoXyRfQ2xhc3MsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX0NsYXNzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHJlbWFpbmluZ0FyZ3VtZW50cykpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBfY2xhc3MxO1xuICAgICAgICAgICAgfShDbGFzczEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIEZ1bmN0aW9uID0gQ2xhc3NPckZ1bmN0aW9uOyAvLy9cbiAgICAgICAgICAgIENsYXNzT3JGdW5jdGlvbiA9IGZ1bmN0aW9uKHByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzID0gYXBwZW5kQ2xhc3NOYW1lVG9Qcm9wZXJ0aWVzKGNsYXNzTmFtZSwgcHJvcGVydGllcyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEZ1bmN0aW9uKHByb3BlcnRpZXMpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuYXNzaWduKENsYXNzT3JGdW5jdGlvbiwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBDbGFzc09yRnVuY3Rpb247XG4gICAgfTtcbn1cbk9iamVjdC5hc3NpZ24od2l0aFN0eWxlLCB7XG4gICAgcmVuZGVyU3R5bGU6IHJlbmRlclN0eWxlLFxuICAgIHJlbmRlclN0eWxlczogcmVuZGVyU3R5bGVzXG59KTtcbnZhciBfZGVmYXVsdCA9IHdpdGhTdHlsZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuX3dpdGhTdHlsZS50YWdOYW1lcy5mb3JFYWNoKGZ1bmN0aW9uKHRhZ05hbWUpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2l0aFN0eWxlLCB0YWdOYW1lLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLCBjbGFzc05hbWUgPSBnZW5lcmF0ZUNsYXNzTmFtZSgpO1xuICAgICAgICAgICAgICAgIGdlbmVyYXRlU3R5bGUoYXJncywgY2xhc3NOYW1lKTtcbiAgICAgICAgICAgICAgICB2YXIgRnVuY3Rpb24gPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXMgPSBhcHBlbmRDbGFzc05hbWVUb1Byb3BlcnRpZXMoY2xhc3NOYW1lLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9lYXN5LlJlYWN0LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSwgcHJvcGVydGllcyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKEZ1bmN0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEZ1bmN0aW9uO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG5mdW5jdGlvbiBhcHBlbmRDbGFzc05hbWVUb1Byb3BlcnRpZXMoY2xhc3NOYW1lLCBwcm9wZXJ0aWVzKSB7XG4gICAgcHJvcGVydGllcyA9IHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkoX2NvbnN0YW50cy5DTEFTU19OQU1FKSA/IHByb3BlcnRpZXMgOiBfb2JqZWN0U3ByZWFkKHt9LCBwcm9wZXJ0aWVzLCB7XG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lXG4gICAgfSk7IC8vL1xuICAgIHJldHVybiBwcm9wZXJ0aWVzO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1TDNOeVl5OTNhWFJvVTNSNWJHVXVhbk1pWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVhDSjFjMlVnYzNSeWFXTjBYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lGSmxZV04wSUgwZ1puSnZiU0JjSW1WaGMzbGNJanRjYm1sdGNHOXlkQ0I3SUhSaFowNWhiV1Z6TENCemRIbHNaWE5WZEdsc2FYUnBaWE1zSUdOc1lYTnpUbUZ0WlZWMGFXeHBkR2xsY3lCOUlHWnliMjBnWENKM2FYUm9MWE4wZVd4bFhDSTdYRzVjYm1sdGNHOXlkQ0I3SUdselEyeGhjM01nZlNCbWNtOXRJRndpTGk5MWRHbHNhWFJwWlhNdlkyeGhjM05jSWp0Y2JtbHRjRzl5ZENCN0lFTk1RVk5UWDA1QlRVVWdmU0JtY205dElGd2lMaTlqYjI1emRHRnVkSE5jSWp0Y2JseHVZMjl1YzNRZ2V5Qm5aVzVsY21GMFpVTnNZWE56VG1GdFpTQjlJRDBnWTJ4aGMzTk9ZVzFsVlhScGJHbDBhV1Z6TEZ4dUlDQWdJQ0FnZXlCeVpXNWtaWEpUZEhsc1pTd2djbVZ1WkdWeVUzUjViR1Z6TENCblpXNWxjbUYwWlZOMGVXeGxMQ0J5WlhSeWFXVjJaVk4wZVd4bElIMGdQU0J6ZEhsc1pYTlZkR2xzYVhScFpYTTdYRzVjYm1aMWJtTjBhVzl1SUhkcGRHaFRkSGxzWlNoRGJHRnpjMDl5Um5WdVkzUnBiMjRwSUh0Y2JpQWdjbVYwZFhKdUlHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lHTnZibk4wSUdGeVozTWdQU0JiTGk0dVlYSm5kVzFsYm5SelhUc2dJQzh2TDF4dVhHNGdJQ0FnYkdWMElIc2dZMnhoYzNOT1lXMWxJRDBnYm5Wc2JDQjlJRDBnUTJ4aGMzTlBja1oxYm1OMGFXOXVPMXh1WEc0Z0lDQWdZMjl1YzNRZ2MzVndaWEpUZEhsc1pTQTlJSEpsZEhKcFpYWmxVM1I1YkdVb1kyeGhjM05PWVcxbEtUdGNibHh1SUNBZ0lHTnNZWE56VG1GdFpTQTlJR2RsYm1WeVlYUmxRMnhoYzNOT1lXMWxLQ2s3WEc1Y2JpQWdJQ0JuWlc1bGNtRjBaVk4wZVd4bEtHRnlaM01zSUdOc1lYTnpUbUZ0WlN3Z2MzVndaWEpUZEhsc1pTazdYRzVjYmlBZ0lDQmpiMjV6ZENCRGJHRnpjMDl5Um5WdVkzUnBiMjVEYkdGemN5QTlJR2x6UTJ4aGMzTW9RMnhoYzNOUGNrWjFibU4wYVc5dUtUdGNibHh1SUNBZ0lHbG1JQ2hEYkdGemMwOXlSblZ1WTNScGIyNURiR0Z6Y3lrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnUTJ4aGMzTWdQU0JEYkdGemMwOXlSblZ1WTNScGIyNDdJQ0F2THk5Y2JseHVJQ0FnSUNBZ1EyeGhjM05QY2taMWJtTjBhVzl1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJEYkdGemN5QjdYRzRnSUNBZ0lDQWdJSE4wWVhScFl5Qm1jbTl0UTJ4aGMzTW9YME5zWVhOekxDQndjbTl3WlhKMGFXVnpMQ0F1TGk1eVpXMWhhVzVwYm1kQmNtZDFiV1Z1ZEhNcElIdGNiaUFnSUNBZ0lDQWdJQ0J3Y205d1pYSjBhV1Z6SUQwZ1lYQndaVzVrUTJ4aGMzTk9ZVzFsVkc5UWNtOXdaWEowYVdWektHTnNZWE56VG1GdFpTd2djSEp2Y0dWeWRHbGxjeWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1EyeGhjM011Wm5KdmJVTnNZWE56S0Y5RGJHRnpjeXdnY0hKdmNHVnlkR2xsY3l3Z0xpNHVjbVZ0WVdsdWFXNW5RWEpuZFcxbGJuUnpLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlR0Y2JseHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0JqYjI1emRDQkdkVzVqZEdsdmJpQTlJRU5zWVhOelQzSkdkVzVqZEdsdmJqc2dMeTh2WEc1Y2JpQWdJQ0FnSUVOc1lYTnpUM0pHZFc1amRHbHZiaUE5SUNod2NtOXdaWEowYVdWektTQTlQaUI3WEc0Z0lDQWdJQ0FnSUhCeWIzQmxjblJwWlhNZ1BTQmhjSEJsYm1SRGJHRnpjMDVoYldWVWIxQnliM0JsY25ScFpYTW9ZMnhoYzNOT1lXMWxMQ0J3Y205d1pYSjBhV1Z6S1R0Y2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1JuVnVZM1JwYjI0b2NISnZjR1Z5ZEdsbGN5azdYRzRnSUNBZ0lDQjlPMXh1SUNBZ0lIMWNibHh1SUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvUTJ4aGMzTlBja1oxYm1OMGFXOXVMQ0I3WEc0Z0lDQWdJQ0JqYkdGemMwNWhiV1ZjYmlBZ0lDQjlLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQkRiR0Z6YzA5eVJuVnVZM1JwYjI0N1hHNGdJSDA3WEc1OVhHNWNiazlpYW1WamRDNWhjM05wWjI0b2QybDBhRk4wZVd4bExDQjdYRzRnSUhKbGJtUmxjbE4wZVd4bExGeHVJQ0J5Wlc1a1pYSlRkSGxzWlhOY2JuMHBPMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0IzYVhSb1UzUjViR1U3WEc1Y2JuUmhaMDVoYldWekxtWnZja1ZoWTJnb0tIUmhaMDVoYldVcElEMCtJSHRjYmlBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSGRwZEdoVGRIbHNaU3dnZEdGblRtRnRaU3dnZTF4dUlDQWdJR2RsZERvZ0tDa2dQVDRnWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNCamIyNXpkQ0JoY21keklEMGdXeTR1TG1GeVozVnRaVzUwYzEwc0lDQXZMeTljYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNZWE56VG1GdFpTQTlJR2RsYm1WeVlYUmxRMnhoYzNOT1lXMWxLQ2s3WEc1Y2JpQWdJQ0FnSUdkbGJtVnlZWFJsVTNSNWJHVW9ZWEpuY3l3Z1kyeGhjM05PWVcxbEtUdGNibHh1SUNBZ0lDQWdZMjl1YzNRZ1JuVnVZM1JwYjI0Z1BTQW9jSEp2Y0dWeWRHbGxjeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQndjbTl3WlhKMGFXVnpJRDBnWVhCd1pXNWtRMnhoYzNOT1lXMWxWRzlRY205d1pYSjBhV1Z6S0dOc1lYTnpUbUZ0WlN3Z2NISnZjR1Z5ZEdsbGN5azdYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRkpsWVdOMExtTnlaV0YwWlVWc1pXMWxiblFvZEdGblRtRnRaU3dnY0hKdmNHVnlkR2xsY3lrN1hHNGdJQ0FnSUNCOU8xeHVYRzRnSUNBZ0lDQlBZbXBsWTNRdVlYTnphV2R1S0VaMWJtTjBhVzl1TENCN1hHNGdJQ0FnSUNBZ0lHTnNZWE56VG1GdFpWeHVJQ0FnSUNBZ2ZTazdYRzVjYmlBZ0lDQWdJSEpsZEhWeWJpQkdkVzVqZEdsdmJqdGNiaUFnSUNCOVhHNGdJSDBwTzF4dWZTazdYRzVjYm1aMWJtTjBhVzl1SUdGd2NHVnVaRU5zWVhOelRtRnRaVlJ2VUhKdmNHVnlkR2xsY3loamJHRnpjMDVoYldVc0lIQnliM0JsY25ScFpYTXBJSHRjYmlBZ2NISnZjR1Z5ZEdsbGN5QTlJSEJ5YjNCbGNuUnBaWE11YUdGelQzZHVVSEp2Y0dWeWRIa29RMHhCVTFOZlRrRk5SU2tnUHlCd2NtOXdaWEowYVdWeklEb2dleUF1TGk1d2NtOXdaWEowYVdWekxDQmpiR0Z6YzA1aGJXVWdmVHNnTHk4dlhHNWNiaUFnY21WMGRYSnVJSEJ5YjNCbGNuUnBaWE03WEc1OVhHNGlYU3dpYm1GdFpYTWlPbHNpWjJWdVpYSmhkR1ZEYkdGemMwNWhiV1VpTENKamJHRnpjMDVoYldWVmRHbHNhWFJwWlhNaUxDSnlaVzVrWlhKVGRIbHNaU0lzSW5OMGVXeGxjMVYwYVd4cGRHbGxjeUlzSW5KbGJtUmxjbE4wZVd4bGN5SXNJbWRsYm1WeVlYUmxVM1I1YkdVaUxDSnlaWFJ5YVdWMlpWTjBlV3hsSWl3aWQybDBhRk4wZVd4bElpd2lRMnhoYzNOUGNrWjFibU4wYVc5dUlpd2lZWEpuY3lJc0ltRnlaM1Z0Wlc1MGN5SXNJbU5zWVhOelRtRnRaU0lzSW5OMWNHVnlVM1I1YkdVaUxDSkRiR0Z6YzA5eVJuVnVZM1JwYjI1RGJHRnpjeUlzSW1selEyeGhjM01pTENKRGJHRnpjeUlzSW1aeWIyMURiR0Z6Y3lJc0lsOURiR0Z6Y3lJc0luQnliM0JsY25ScFpYTWlMQ0p5WlcxaGFXNXBibWRCY21kMWJXVnVkSE1pTENKaGNIQmxibVJEYkdGemMwNWhiV1ZVYjFCeWIzQmxjblJwWlhNaUxDSkdkVzVqZEdsdmJpSXNJazlpYW1WamRDSXNJbUZ6YzJsbmJpSXNJblJoWjA1aGJXVnpJaXdpWm05eVJXRmphQ0lzSW5SaFowNWhiV1VpTENKa1pXWnBibVZRY205d1pYSjBlU0lzSW1kbGRDSXNJbEpsWVdOMElpd2lZM0psWVhSbFJXeGxiV1Z1ZENJc0ltaGhjMDkzYmxCeWIzQmxjblI1SWl3aVEweEJVMU5mVGtGTlJTSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNRMEZCV1N4WFFVRkJMRU5CUVVNN096dEZPM2RDTzBGQlJWTXNSMEZCVFN4RFFVRk9MRXRCUVUwN1FVRkRhME1zUjBGQldTeERRVUZhTEZWQlFWazdRVUZGYkVRc1IwRkJiVUlzUTBGQmJrSXNUVUZCYlVJN1FVRkRhRUlzUjBGQllTeERRVUZpTEZWQlFXRTdPM2xFTzNWRk96czdPenM3T3pzN096czdPenM3T3pzN096czRSRHR6UXpzMlJEdHBSVHM3T3p0M1JUdG5SVHM3T3pzN096czdPenRWT3p0M1FqczdPenM3T3p0TE96czdPenM3T3pzN096czdPMDA3ZVVRN096czdPenM3T3pzN096czdPenRsT3pzN2NVUTdWVHM3T3pzN096czdPenM3TzNWQ096dExPenM3T3pzN096SkNPenM3T3pzN095dEVPenM3T3pzN096czdjVVk3T3pzN096czdPenM3T3p0dFJUczdhVVE3T3pzN08wRkJSWGhETEVkQlFVc3NRMEZCUjBFc2FVSkJRV2xDTEVkQlFVdERMRlZCUVd0Q0xHOUNRVUY0UTBRc2FVSkJRV2xDTEVWQlEycENSU3hYUVVGWExFZEJRV2xFUXl4VlFVRmxMR2xDUVVFelJVUXNWMEZCVnl4RlFVRkZSU3haUVVGWkxFZEJRVzFEUkN4VlFVRmxMR2xDUVVFNVJFTXNXVUZCV1N4RlFVRkZReXhoUVVGaExFZEJRVzlDUml4VlFVRmxMR2xDUVVGb1JFVXNZVUZCWVN4RlFVRkZReXhoUVVGaExFZEJRVXRJTEZWQlFXVXNhVUpCUVdwRFJ5eGhRVUZoTzFOQlJYUkVReXhUUVVGVExFTkJRVU5ETEdWQlFXVXNSVUZCUlN4RFFVRkRPMGxCUTI1RExFMUJRVTBzUTBGQlF5eFJRVUZSTEVkQlFVY3NRMEZCUXp0UlFVTnFRaXhIUVVGTExFTkJRVU5ETEVsQlFVa3NPRUpCUVU5RExGTkJRVk1zUjBGQlNTeEZRVUZITEVGQlFVZ3NRMEZCUnp0UlFVVnFReXhIUVVGSExHTkJRWGRDUml4bFFVRmxMRU5CUVhCRFJ5eFRRVUZUTEVWQlFWUkJMRk5CUVZNc01rSkJRVWNzU1VGQlNUdFJRVVYwUWl4SFFVRkxMRU5CUVVORExGVkJRVlVzUjBGQlIwNHNZVUZCWVN4RFFVRkRTeXhUUVVGVE8xRkJSVEZEUVN4VFFVRlRMRWRCUVVkWUxHbENRVUZwUWl4RlFVRkZMRU5CUVVNN1VVRkZhRU5MTEdGQlFXRXNRMEZCUTBrc1NVRkJTU3hGUVVGRlJTeFRRVUZUTEVWQlFVVkRMRlZCUVZVc1EwRkJReXhEUVVGRE8xRkJSVE5ETEVkQlFVc3NRMEZCUTBNc2IwSkJRVzlDTEU5QlFVZERMRTFCUVU4c1ZVRkJRMDRzWlVGQlpUdFJRVVZ3UkN4RlFVRkZMRVZCUVVWTExHOUNRVUZ2UWl4RlFVRkZMRU5CUVVNN1dVRkRla0lzUjBGQlN5eERRVUZEUlN4TlFVRkxMRWRCUVVkUUxHVkJRV1VzUlVGQlJ5eEZRVUZITEVGQlFVZ3NRMEZCUnp0WlFVVnVRMEVzWlVGQlpTeHBRa0ZCUnl4UlFVRlJPM2xET3pzN2EwUTdPenM3TzNkQ1FVTnFRbEVzUjBGQlV5eEZRVUZVUVN4RFFVRlRPeXRDUVVGb1FpeFJRVUZSTEVOQlFVUkJMRk5CUVZNc1EwRkJRME1zVFVGQlRTeEZRVUZGUXl4VlFVRlZMRVZCUVhsQ0xFTkJRVU03TkVKQlFYaENMRWRCUVVkRExFTkJRVWdzUjBGQmNVSXNRMEZCY2tJc1NVRkJjVUlzUjBGQmNrSXNVMEZCY1VJc1EwRkJja0lzVFVGQmNVSXNSVUZCYkVKQkxHdENRVUZyUWl4SFFVRnlRaXhIUVVGeFFpeFBRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeERRVUZ4UWl4SFFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRnhRaXhQUVVGeVFpeEpRVUZ4UWl4SFFVRnlRaXhEUVVGeFFpeEZRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeEpRVUZ4UWl4RlFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRkRPMmREUVVGRlFTeHJRa0ZCYTBJc1EwRkJja0lzU1VGQmNVSXNSMEZCY2tJc1EwRkJjVUlzU1VGQmNrSXNVMEZCY1VJc1EwRkJja0lzU1VGQmNVSXNRME0zUW14RkxFTkVOa0pyUlRzMFFrRkJSQ3hEUVVGRE8yZERRVWRxUkVvc1VVRkJTenMwUWtGR1drY3NWVUZCVlN4SFFVRkhSU3d5UWtGQk1rSXNRMEZCUTFRc1UwRkJVeXhGUVVGRlR5eFZRVUZWTEVOQlFVTXNRMEZCUXpzMFFrRkZhRVVzVFVGQlRTeEZRVUZEU0N4UlFVRkxMRWRCUVV4QkxFMUJRVXNzUlVGQlEwTXNVMEZCVXl4RFFVRm1SQ3hMUVVFd1JDeERRVUV4UkVFc1VVRkJTeXhGUVVGTVFTeERRVUZETzJkRFFVRmxSU3hOUVVGTk8yZERRVUZGUXl4VlFVRlZPelJDUVVGMVFpeERRVUZETEVOQlFURkVTQ3hOUVVFd1JDeHZRa0ZCYmtKSkxHdENRVUZyUWp0M1FrRkRiRVVzUTBGQlF6czdhMEk3TzJOQlREWkNTaXhOUVVGTExFTkJUWEJETEVOQlFVTTdVVUZGU2l4RFFVRkRMRTFCUVUwc1EwRkJRenRaUVVOT0xFZEJRVXNzUTBGQlEwMHNVVUZCVVN4SFFVRkhZaXhsUVVGbExFVkJRVVVzUlVGQlJ5eEJRVUZJTEVOQlFVYzdXVUZGY2tOQkxHVkJRV1VzUjBGQlJ5eFJRVUZSTEVOQlFWQlZMRlZCUVZVc1JVRkJTeXhEUVVGRE8yZENRVU5xUTBFc1ZVRkJWU3hIUVVGSFJTd3lRa0ZCTWtJc1EwRkJRMVFzVTBGQlV5eEZRVUZGVHl4VlFVRlZMRU5CUVVNc1EwRkJRenRuUWtGRmFFVXNUVUZCVFN4RFFVRkRSeXhSUVVGUkxFTkJRVU5JTEZWQlFWVTdXVUZETlVJc1EwRkJReXhEUVVGRE8xRkJRMG9zUTBGQlF6dFJRVVZFU1N4TlFVRk5MRU5CUVVORExFMUJRVTBzUTBGQlEyWXNaVUZCWlN4RlFVRkZMRU5CUVVNN1dVRkRPVUpITEZOQlFWTXNSVUZCVkVFc1UwRkJVenRSUVVOWUxFTkJRVU1zUTBGQlF5eERRVUZETzFGQlJVZ3NUVUZCVFN4RFFVRkRTQ3hsUVVGbE8wbEJRM2hDTEVOQlFVTTdRVUZEU0N4RFFVRkRPMEZCUlVSakxFMUJRVTBzUTBGQlEwTXNUVUZCVFN4RFFVRkRhRUlzVTBGQlV5eEZRVUZGTEVOQlFVTTdTVUZEZUVKTUxGZEJRVmNzUlVGQldFRXNWMEZCVnp0SlFVTllSU3haUVVGWkxFVkJRVnBCTEZsQlFWazdRVUZEWkN4RFFVRkRMRU5CUVVNc1EwRkJRenRsUVVWWlJ5eFRRVUZUT3pCQ08wRkJSWGhDYVVJc1ZVRkJVU3hWUVVGRFF5eFBRVUZQTEVOQlFVTXNVVUZCVVN4RFFVRlFReXhQUVVGUExFVkJRVXNzUTBGQlF6dEpRVU0zUWtvc1RVRkJUU3hEUVVGRFN5eGpRVUZqTEVOQlFVTndRaXhUUVVGVExFVkJRVVZ0UWl4UFFVRlBMRVZCUVVVc1EwRkJRenRSUVVONlEwVXNSMEZCUnl4RlFVRkZMRkZCUVZFN1dVRkJSaXhOUVVGTkxFTkJRVTRzVVVGQlVTeEhRVUZITEVOQlFVTTdaMEpCUTNKQ0xFZEJRVXNzUTBGQlEyNUNMRWxCUVVrc09FSkJRVTlETEZOQlFWTXNSMEZEY0VKRExGTkJRVk1zUjBGQlIxZ3NhVUpCUVdsQ08yZENRVVZ1UTBzc1lVRkJZU3hEUVVGRFNTeEpRVUZKTEVWQlFVVkZMRk5CUVZNc1EwRkJReXhEUVVGRE8yZENRVVV2UWl4SFFVRkxMRU5CUVVOVkxGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFWQklMRlZCUVZVc1JVRkJTeXhEUVVGRE8yOUNRVU5vUTBFc1ZVRkJWU3hIUVVGSFJTd3lRa0ZCTWtJc1EwRkJRMVFzVTBGQlV5eEZRVUZGVHl4VlFVRlZMRU5CUVVNc1EwRkJRenR2UWtGRmFFVXNUVUZCVFN4RFFVRkRWeXhMUVVGTExFOUJRVU5ETEdGQlFXRXNRMEZCUTBvc1QwRkJUeXhGUVVGRlVpeFZRVUZWTzJkQ1FVTm9SQ3hEUVVGRE8yZENRVVZFU1N4TlFVRk5MRU5CUVVORExFMUJRVTBzUTBGQlEwWXNVVUZCVVN4RlFVRkZMRU5CUVVNN2IwSkJRM1pDVml4VFFVRlRMRVZCUVZSQkxGTkJRVk03WjBKQlExZ3NRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJSVWdzVFVGQlRTeERRVUZEVlN4UlFVRlJPMWxCUTJwQ0xFTkJRVU03TzBsQlEwZ3NRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRUQ3hEUVVGRExFTkJRVU1zUTBGQlF6dFRRVVZOUkN3eVFrRkJNa0lzUTBGQlExUXNVMEZCVXl4RlFVRkZUeXhWUVVGVkxFVkJRVVVzUTBGQlF6dEpRVU16UkVFc1ZVRkJWU3hIUVVGSFFTeFZRVUZWTEVOQlFVTmhMR05CUVdNc1EwRkJRME1zVlVGQlZTeGxRVUZKWkN4VlFVRlZMSEZDUVVGUlFTeFZRVUZWTzFGQlFVVlFMRk5CUVZNc1JVRkJWRUVzVTBGQlV6dE5RVUZGTEVOQlFVTXNRMEZCUXl4RlFVRkhMRUZCUVVnc1EwRkJSenRKUVVWdVJ5eE5RVUZOTEVOQlFVTlBMRlZCUVZVN1FVRkRia0lzUTBGQlF5SjkiLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB3aXRoU3R5bGUgZnJvbSBcIi4vd2l0aFN0eWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzSW5zdGFuY2VPZihpbnN0YW5jZSwgQ2xhc3MpIHtcbiAgY29uc3QgY29uc3RydWN0b3IgPSBpbnN0YW5jZS5jb25zdHJ1Y3RvcjtcblxuICBpZiAoY29uc3RydWN0b3IpIHtcbiAgICBpZiAoY29uc3RydWN0b3IubmFtZSA9PT0gQ2xhc3MubmFtZSkgeyAgLy8vXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGNvbnN0cnVjdG9yKTtcblxuICAgICAgcmV0dXJuIGlzUHJvdG90eXBlSW5zdGFuY2VPZihwcm90b3R5cGUsIENsYXNzKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGlzUHJvdG90eXBlSW5zdGFuY2VPZihwcm90b3R5cGUsIENsYXNzKSB7XG4gIGlmIChwcm90b3R5cGUpIHtcbiAgICBpZiAocHJvdG90eXBlLm5hbWUgPT09IENsYXNzLm5hbWUpIHsgIC8vL1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90b3R5cGUpO1xuXG4gICAgICByZXR1cm4gaXNQcm90b3R5cGVJbnN0YW5jZU9mKHByb3RvdHlwZSwgQ2xhc3MpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCByZWR1Y2VkUnVsZU5hbWUgPSBgJHtydWxlTmFtZX1fYDtcblxuICByZXR1cm4gcmVkdWNlZFJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVwZWF0ZWRSdWxlTmFtZUZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCByZXBlYXRlZFJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9fmA7XG5cbiAgcmV0dXJuIHJlcGVhdGVkUnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcmVkdWNlZFJ1bGVOYW1lLnJlcGxhY2UoL18kLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tSZWR1Y2VkUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lLCBydWxlTmFtZSkge1xuICBjb25zdCBydWxlTmFtZUEgPSBydWxlTmFtZTsgLy8vXG5cbiAgcnVsZU5hbWUgPSBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lKTtcblxuICBjb25zdCBydWxlTmFtZUIgPSBydWxlTmFtZTsgLy8vXG5cbiAgY29uc3QgcmVkdWNlZFJ1bGVOYW1lTWF0Y2hlc1J1bGVOYW1lID0gKHJ1bGVOYW1lQSA9PT0gcnVsZU5hbWVCKTsgIC8vL1xuXG4gIHJldHVybiByZWR1Y2VkUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWU7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGlzSW5zdGFuY2VPZiB9IGZyb20gXCIuLi91dGlsaXRpZXMvY2xhc3NcIjtcbmltcG9ydCB7IHJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWUsIHJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvcnVsZU5hbWVcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZHVjZWRSdWxlRnJvbVJ1bGUocnVsZSwgcnVsZU1hcCwgUmVkdWNlZFJ1bGUpIHtcblx0Y29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKSxcblx0XHRcdFx0cmVkdWNlZFJ1bGVOYW1lID0gcmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKTtcblxuXHRsZXQgcmVkdWNlZFJ1bGUgPSBydWxlTWFwW3JlZHVjZWRSdWxlTmFtZV0gfHwgbnVsbDtcblxuXHRpZiAocmVkdWNlZFJ1bGUgPT09IG51bGwpIHtcbiAgICByZWR1Y2VkUnVsZSA9IFJlZHVjZWRSdWxlLmZyb21SdWxlKHJ1bGUpO1xuXG4gICAgcnVsZU1hcFtyZWR1Y2VkUnVsZU5hbWVdID0gcmVkdWNlZFJ1bGU7XG5cdH1cblxuXHRyZXR1cm4gcmVkdWNlZFJ1bGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXBlYXRlZFJ1bGVGcm9tUnVsZShydWxlLCBydWxlTWFwLCBSZXBlYXRlZFJ1bGUpIHtcbiAgY29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKSxcbiAgICAgICAgcmVwZWF0ZWRSdWxlTmFtZSA9IHJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpO1xuXG4gIGxldCByZXBlYXRlZFJ1bGUgPSBydWxlTWFwW3JlcGVhdGVkUnVsZU5hbWVdIHx8IG51bGw7XG5cbiAgaWYgKHJlcGVhdGVkUnVsZSA9PT0gbnVsbCkge1xuICAgIHJlcGVhdGVkUnVsZSA9IFJlcGVhdGVkUnVsZS5mcm9tUnVsZShydWxlKTtcblxuICAgIHJ1bGVNYXBbcmVwZWF0ZWRSdWxlTmFtZV0gPSByZXBlYXRlZFJ1bGU7XG4gIH1cblxuICByZXR1cm4gcmVwZWF0ZWRSdWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmV3cml0dGVuUnVsZUZyb21SdWxlKHJ1bGUsIHJ1bGVNYXAsIFJld3JpdHRlblJ1bGUpIHtcbiAgbGV0IHJld3JpdHRlblJ1bGU7XG5cbiAgY29uc3QgcnVsZVJld3JpdHRlblJ1bGUgPSBpc0luc3RhbmNlT2YocnVsZSwgUmV3cml0dGVuUnVsZSk7XG5cbiAgaWYgKHJ1bGVSZXdyaXR0ZW5SdWxlKSB7XG4gICAgcmV3cml0dGVuUnVsZSA9IHJ1bGU7IC8vL1xuICB9IGVsc2Uge1xuICAgIHJld3JpdHRlblJ1bGUgPSBSZXdyaXR0ZW5SdWxlLmZyb21SdWxlKHJ1bGUpO1xuXG4gICAgY29uc3QgcmVwbGFjZWRSdWxlID0gcnVsZSwgIC8vL1xuICAgICAgICAgIHJlcGxhY2VtZW50UnVsZSA9IHJld3JpdHRlblJ1bGU7ICAvLy9cblxuICAgIHJlcGxhY2VSdWxlKHJlcGxhY2VkUnVsZSwgcmVwbGFjZW1lbnRSdWxlLCBydWxlTWFwKTtcbiAgfVxuXG4gIHJldHVybiByZXdyaXR0ZW5SdWxlO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlUnVsZShyZXBsYWNlZFJ1bGUsIHJlcGxhY2VtZW50UnVsZSwgcnVsZU1hcCkge1xuICBjb25zdCByZXBsYWNlZFJ1bGVOYW1lID0gcmVwbGFjZWRSdWxlLmdldE5hbWUoKSxcbiAgICAgICAgcmVwbGFjZW1lbnRSdWxlTmFtZSA9IHJlcGxhY2VtZW50UnVsZS5nZXROYW1lKCk7XG5cbiAgZGVsZXRlIHJ1bGVNYXBbcmVwbGFjZWRSdWxlTmFtZV07XG5cbiAgcnVsZU1hcFtyZXBsYWNlbWVudFJ1bGVOYW1lXSA9IHJlcGxhY2VtZW50UnVsZTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IFJFQ1VSU0lWRV9UWVBFID0gXCJSRUNVUlNJVkVfVFlQRVwiO1xuZXhwb3J0IGNvbnN0IExFRlRfUkVDVVJTSVZFX1RZUEUgPSBcIkxFRlRfUkVDVVJTSVZFX1RZUEVcIjtcbmV4cG9ydCBjb25zdCBESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFID0gXCJESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFXCI7XG5leHBvcnQgY29uc3QgSU5ESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFID0gXCJJTkRJUkVDVExZX0xFRlRfUkVDVVJTSVZFX1RZUEVcIjtcbmV4cG9ydCBjb25zdCBJTVBMSUNJVExZX0xFRlRfUkVDVVJTSVZFX1RZUEUgPSBcIklNUExJQ0lUTFlfTEVGVF9SRUNVUlNJVkVfVFlQRVwiO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBwYXJ0VHlwZXMgfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuaW1wb3J0IHsgYXJyYXlVdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmNvbnN0IHsgZmlyc3QgfSA9IGFycmF5VXRpbGl0aWVzLFxuICAgICAgeyBSdWxlTmFtZVBhcnRUeXBlLFxuICAgICAgICBPcHRpb25hbFBhcnRQYXJ0VHlwZSxcbiAgICAgICAgU2VxdWVuY2VPZlBhcnRzUGFydFR5cGUsXG4gICAgICAgIENob2ljZU9mUGFydHNQYXJ0VHlwZSxcbiAgICAgICAgT25lT3JNb3JlUGFydHNQYXJ0VHlwZSxcbiAgICAgICAgWmVyb09yTW9yZVBhcnRzUGFydFR5cGUgfSA9IHBhcnRUeXBlcztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0KHBhcnQsIHJlY3Vyc2l2ZVJ1bGVOYW1lcykge1xuICBjb25zdCBwYXJ0Tm9uVGVybWluYWxQYXJ0ID0gcGFydC5pc05vblRlcm1pbmFsUGFydCgpO1xuXG4gIGlmIChwYXJ0Tm9uVGVybWluYWxQYXJ0KSB7XG4gICAgY29uc3QgdHlwZSA9IHBhcnQuZ2V0VHlwZSgpO1xuXG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlIFJ1bGVOYW1lUGFydFR5cGUgOiB7XG4gICAgICAgICAgY29uc3QgcnVsZU5hbWVQYXJ0ID0gcGFydCwgIC8vL1xuICAgICAgICAgICAgICAgIHJ1bGVOYW1lID0gcnVsZU5hbWVQYXJ0LmdldFJ1bGVOYW1lKCksXG4gICAgICAgICAgICAgICAgcmVjdXJzaXZlUnVsZU5hbWVzSW5jbHVkZXNSdWxlTmFtZSA9IHJlY3Vyc2l2ZVJ1bGVOYW1lcy5pbmNsdWRlcyhydWxlTmFtZSk7XG5cbiAgICAgICAgICBpZiAoIXJlY3Vyc2l2ZVJ1bGVOYW1lc0luY2x1ZGVzUnVsZU5hbWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlY3Vyc2l2ZVJ1bGVOYW1lID0gcnVsZU5hbWU7IC8vL1xuXG4gICAgICAgICAgICByZWN1cnNpdmVSdWxlTmFtZXMucHVzaChyZWN1cnNpdmVSdWxlTmFtZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgT3B0aW9uYWxQYXJ0UGFydFR5cGUgOiB7XG4gICAgICAgICAgY29uc3Qgb3B0aW9uYWxQYXJ0UGFydCA9IHBhcnQ7ICAvLy9cblxuICAgICAgICAgIHBhcnQgPSBvcHRpb25hbFBhcnRQYXJ0LmdldFBhcnQoKTtcblxuICAgICAgICAgIHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0KHBhcnQsIHJlY3Vyc2l2ZVJ1bGVOYW1lcyk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBPbmVPck1vcmVQYXJ0c1BhcnRUeXBlIDoge1xuICAgICAgICAgIGNvbnN0IG9uZU9yTW9yZVBhcnRzUGFydCA9IHBhcnQ7ICAvLy9cblxuICAgICAgICAgIHBhcnQgPSBvbmVPck1vcmVQYXJ0c1BhcnQuZ2V0UGFydCgpO1xuXG4gICAgICAgICAgcmVjdXJzaXZlUnVsZU5hbWVzRnJvbVBhcnQocGFydCwgcmVjdXJzaXZlUnVsZU5hbWVzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFplcm9Pck1vcmVQYXJ0c1BhcnRUeXBlIDoge1xuICAgICAgICAgIGNvbnN0IHplcm9Pck1vcmVQYXJ0c1BhcnQgPSBwYXJ0OyAvLy9cblxuICAgICAgICAgIHBhcnQgPSB6ZXJvT3JNb3JlUGFydHNQYXJ0LmdldFBhcnQoKTsgIC8vL1xuXG4gICAgICAgICAgcmVjdXJzaXZlUnVsZU5hbWVzRnJvbVBhcnQocGFydCwgcmVjdXJzaXZlUnVsZU5hbWVzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFNlcXVlbmNlT2ZQYXJ0c1BhcnRUeXBlIDoge1xuICAgICAgICBjb25zdCBzZXF1ZW5jZU9mUGFydHNQYXJ0ID0gcGFydCwgIC8vL1xuICAgICAgICAgICAgICBwYXJ0cyA9IHNlcXVlbmNlT2ZQYXJ0c1BhcnQuZ2V0UGFydHMoKTtcblxuICAgICAgICAgIHBhcnRzLmZvckVhY2goKHBhcnQpID0+IHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0KHBhcnQsIHJlY3Vyc2l2ZVJ1bGVOYW1lcykpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgQ2hvaWNlT2ZQYXJ0c1BhcnRUeXBlIDoge1xuICAgICAgICBjb25zdCBjaG9pY2VPZlBhcnRzUGFydCA9IHBhcnQsIC8vL1xuICAgICAgICAgICAgICBwYXJ0cyA9IGNob2ljZU9mUGFydHNQYXJ0LmdldFBhcnRzKCk7XG5cbiAgICAgICAgICBwYXJ0cy5mb3JFYWNoKChwYXJ0KSA9PiByZWN1cnNpdmVSdWxlTmFtZXNGcm9tUGFydChwYXJ0LCByZWN1cnNpdmVSdWxlTmFtZXMpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0KHBhcnQsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMpIHtcbiAgY29uc3QgcGFydE5vblRlcm1pbmFsUGFydCA9IHBhcnQuaXNOb25UZXJtaW5hbFBhcnQoKTtcblxuICBpZiAocGFydE5vblRlcm1pbmFsUGFydCkge1xuICAgIGNvbnN0IHR5cGUgPSBwYXJ0LmdldFR5cGUoKTtcblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSBSdWxlTmFtZVBhcnRUeXBlIDoge1xuICAgICAgICAgIGNvbnN0IHJ1bGVOYW1lUGFydCA9IHBhcnQsICAvLy9cbiAgICAgICAgICAgICAgICBydWxlTmFtZSA9IHJ1bGVOYW1lUGFydC5nZXRSdWxlTmFtZSgpLFxuICAgICAgICAgICAgICAgIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNJbmNsdWRlc1J1bGVOYW1lID0gbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcy5pbmNsdWRlcyhydWxlTmFtZSk7XG5cbiAgICAgICAgICBpZiAoIWxlZnRSZWN1cnNpdmVSdWxlTmFtZXNJbmNsdWRlc1J1bGVOYW1lKSB7XG4gICAgICAgICAgICBjb25zdCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWUgPSBydWxlTmFtZTsgLy8vXG5cbiAgICAgICAgICAgIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMucHVzaChsZWZ0UmVjdXJzaXZlUnVsZU5hbWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIE9wdGlvbmFsUGFydFBhcnRUeXBlIDoge1xuICAgICAgICAgIGNvbnN0IG9wdGlvbmFsUGFydFBhcnQgPSBwYXJ0OyAvLy9cblxuICAgICAgICAgIHBhcnQgPSBvcHRpb25hbFBhcnRQYXJ0LmdldFBhcnQoKTtcblxuICAgICAgICAgIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNGcm9tUGFydChwYXJ0LCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIE9uZU9yTW9yZVBhcnRzUGFydFR5cGUgOiB7XG4gICAgICAgICAgY29uc3Qgb25lT3JNb3JlUGFydHNQYXJ0ID0gcGFydDsgIC8vL1xuXG4gICAgICAgICAgcGFydCA9IG9uZU9yTW9yZVBhcnRzUGFydC5nZXRQYXJ0KCk7XG5cbiAgICAgICAgICBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbVBhcnQocGFydCwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcyk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBaZXJvT3JNb3JlUGFydHNQYXJ0VHlwZSA6IHtcbiAgICAgICAgICBjb25zdCB6ZXJvT3JNb3JlUGFydHNQYXJ0ID0gcGFydDsgLy8vXG5cbiAgICAgICAgICBwYXJ0ID0gemVyb09yTW9yZVBhcnRzUGFydC5nZXRQYXJ0KCk7XG5cbiAgICAgICAgICBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbVBhcnQocGFydCwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcyk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBTZXF1ZW5jZU9mUGFydHNQYXJ0VHlwZSA6IHtcbiAgICAgICAgICBjb25zdCBzZXF1ZW5jZU9mUGFydHNQYXJ0ID0gcGFydCwgIC8vL1xuICAgICAgICAgICAgICAgIHBhcnRzID0gc2VxdWVuY2VPZlBhcnRzUGFydC5nZXRQYXJ0cygpLFxuICAgICAgICAgICAgICAgIGZpcnN0UGFydCA9IGZpcnN0KHBhcnRzKTtcblxuICAgICAgICAgIHBhcnQgPSBmaXJzdFBhcnQ7IC8vL1xuXG4gICAgICAgICAgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0KHBhcnQsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgQ2hvaWNlT2ZQYXJ0c1BhcnRUeXBlIDoge1xuICAgICAgICAgIGNvbnN0IGNob2ljZU9mUGFydHNQYXJ0ID0gcGFydCwgLy8vXG4gICAgICAgICAgICAgICAgcGFydHMgPSBjaG9pY2VPZlBhcnRzUGFydC5nZXRQYXJ0cygpO1xuXG4gICAgICAgICAgcGFydHMuZm9yRWFjaCgocGFydCkgPT4gbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0KHBhcnQsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBwYXJ0VHlwZXMgfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuaW1wb3J0IHsgYXJyYXlVdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmltcG9ydCB7IHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0LCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbVBhcnQgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3JlY3Vyc2l2ZVBhcnRcIjtcblxuY29uc3QgeyBmaXJzdCB9ID0gYXJyYXlVdGlsaXRpZXMsXG4gICAgICB7IFJ1bGVOYW1lUGFydFR5cGUgfSA9IHBhcnRUeXBlcztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzRGVmaW5pdGlvblVuYXJ5KGRlZmluaXRpb24pIHtcbiAgY29uc3QgcGFydHMgPSBkZWZpbml0aW9uLmdldFBhcnRzKCksXG4gICAgICAgIHBhcnRzTGVuZ3RoID0gcGFydHMubGVuZ3RoLFxuICAgICAgICBkZWZpbml0aW9uVW5hcnkgPSAocGFydHNMZW5ndGggPT09IDEpO1xuXG4gIHJldHVybiBkZWZpbml0aW9uVW5hcnk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0RlZmluaXRpb25Db21wbGV4KGRlZmluaXRpb24pIHtcbiAgY29uc3QgcGFydHMgPSBkZWZpbml0aW9uLmdldFBhcnRzKCksXG4gICAgICAgIGZpcnN0UGFydCA9IGZpcnN0KHBhcnRzKSxcbiAgICAgICAgZmlyc3RQYXJ0VHlwZSA9IGZpcnN0UGFydC5nZXRUeXBlKCksXG4gICAgICAgIGZpcnN0UGFydFR5cGVSdWxlTmFtZVBhcnRUeXBlID0gKGZpcnN0UGFydFR5cGUgPT09IFJ1bGVOYW1lUGFydFR5cGUpLFxuICAgICAgICBmaXJzdFBhcnRSdWxlTmFtZVBhcnQgPSBmaXJzdFBhcnRUeXBlUnVsZU5hbWVQYXJ0VHlwZSxcbiAgICAgICAgZGVmaW5pdGlvbkNvbXBsZXggPSAhZmlyc3RQYXJ0UnVsZU5hbWVQYXJ0O1xuXG4gIHJldHVybiBkZWZpbml0aW9uQ29tcGxleDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRGVmaW5pdGlvbkxvb2tBaGVhZChkZWZpbml0aW9uKSB7XG4gIGxldCBsb29rQWhlYWQgPSBmYWxzZTtcblxuICBjb25zdCBwYXJ0cyA9IGRlZmluaXRpb24uZ2V0UGFydHMoKSxcbiAgICAgICAgZmlyc3RQYXJ0ID0gZmlyc3QocGFydHMpLFxuICAgICAgICBmaXJzdFBhcnRUeXBlID0gZmlyc3RQYXJ0LmdldFR5cGUoKSxcbiAgICAgICAgZmlyc3RQYXJ0VHlwZVJ1bGVOYW1lUGFydFR5cGUgPSAoZmlyc3RQYXJ0VHlwZSA9PT0gUnVsZU5hbWVQYXJ0VHlwZSksXG4gICAgICAgIGZpcnN0UGFydFJ1bGVOYW1lUGFydCA9IGZpcnN0UGFydFR5cGVSdWxlTmFtZVBhcnRUeXBlOyAgLy8vXG5cbiAgaWYgKGZpcnN0UGFydFJ1bGVOYW1lUGFydCkge1xuICAgIGNvbnN0IHJ1bGVOYW1lUGFydCA9IGZpcnN0UGFydDsgLy8vXG5cbiAgICBsb29rQWhlYWQgPSBydWxlTmFtZVBhcnQuaXNMb29rQWhlYWQoKTtcbiAgfVxuXG4gIHJldHVybiBsb29rQWhlYWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWN1cnNpdmVSdWxlTmFtZXNGcm9tRGVmaW5pdGlvbihkZWZpbml0aW9uKSB7XG4gIGNvbnN0IHJlY3Vyc2l2ZVJ1bGVOYW1lcyA9IFtdLFxuICAgICAgICBwYXJ0cyA9IGRlZmluaXRpb24uZ2V0UGFydHMoKTtcblxuICBwYXJ0cy5mb3JFYWNoKChwYXJ0KSA9PiB7XG4gICAgcmVjdXJzaXZlUnVsZU5hbWVzRnJvbVBhcnQocGFydCwgcmVjdXJzaXZlUnVsZU5hbWVzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJlY3Vyc2l2ZVJ1bGVOYW1lcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNGcm9tRGVmaW5pdGlvbihkZWZpbml0aW9uKSB7XG4gIGNvbnN0IGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMgPSBbXSxcbiAgICAgICAgcGFydHMgPSBkZWZpbml0aW9uLmdldFBhcnRzKCksXG4gICAgICAgIGZpcnN0UGFydCA9IGZpcnN0KHBhcnRzKSxcbiAgICAgICAgcGFydCA9IGZpcnN0UGFydDsgLy8vXG5cbiAgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0KHBhcnQsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMpO1xuXG4gIHJldHVybiBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9vY2NhbVBhcnNlcnMgPSByZXF1aXJlKFwib2NjYW0tcGFyc2Vyc1wiKTtcbnZhciBfcnVsZSA9IHJlcXVpcmUoXCIuLi91dGlsaXRpZXMvcnVsZVwiKTtcbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi4vdHlwZXNcIik7XG52YXIgX2RlZmluaXRpb24gPSByZXF1aXJlKFwiLi4vdXRpbGl0aWVzL2RlZmluaXRpb25cIik7XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBSZWN1cnNpdmVEZWZpbml0aW9uID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihEZWZpbml0aW9uKSB7XG4gICAgX2luaGVyaXRzKFJlY3Vyc2l2ZURlZmluaXRpb24sIERlZmluaXRpb24pO1xuICAgIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoUmVjdXJzaXZlRGVmaW5pdGlvbik7XG4gICAgZnVuY3Rpb24gUmVjdXJzaXZlRGVmaW5pdGlvbih0eXBlLCBwYXJ0cywgcnVsZU5hbWUsIGRlZmluaXRpb24sIHJlY3Vyc2l2ZVJ1bGVOYW1lcykge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVjdXJzaXZlRGVmaW5pdGlvbik7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwYXJ0cyk7XG4gICAgICAgIF90aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICBfdGhpcy5ydWxlTmFtZSA9IHJ1bGVOYW1lO1xuICAgICAgICBfdGhpcy5kZWZpbml0aW9uID0gZGVmaW5pdGlvbjtcbiAgICAgICAgX3RoaXMucmVjdXJzaXZlUnVsZU5hbWVzID0gcmVjdXJzaXZlUnVsZU5hbWVzO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIF9jcmVhdGVDbGFzcyhSZWN1cnNpdmVEZWZpbml0aW9uLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRUeXBlXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VHlwZSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50eXBlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0UnVsZU5hbWVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSdWxlTmFtZSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ydWxlTmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImdldERlZmluaXRpb25cIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREZWZpbml0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlZmluaXRpb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRSZWN1cnNpdmVSdWxlTmFtZXNcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZWN1cnNpdmVSdWxlTmFtZXMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVjdXJzaXZlUnVsZU5hbWVzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwicmVwbGFjZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlcGxhY2UocnVsZU1hcCkge1xuICAgICAgICAgICAgICAgIHZhciBydWxlID0gcnVsZU1hcFt0aGlzLnJ1bGVOYW1lXSB8fCBudWxsLCByZXBsYWNlZERlZmluaXRpb24gPSB0aGlzLmRlZmluaXRpb24sIHJlcGxhY2VtZW50RGVmaW5pdGlvbiA9IHRoaXM7IC8vL1xuICAgICAgICAgICAgICAgIHJ1bGUucmVwbGFjZURlZmluaXRpb24ocmVwbGFjZWREZWZpbml0aW9uLCByZXBsYWNlbWVudERlZmluaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbVJ1bGVOYW1lQW5kRGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21SdWxlTmFtZUFuZERlZmluaXRpb24ocnVsZU5hbWUsIGRlZmluaXRpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVjdXJzaXZlRGVmaW5pdGlvbiA9IG51bGw7XG4gICAgICAgICAgICAgICAgdmFyIHR5cGUgPSBfdHlwZXMuUkVDVVJTSVZFX1RZUEUsIHBhcnRzID0gZGVmaW5pdGlvbi5nZXRQYXJ0cygpLCByZWN1cnNpdmVSdWxlTmFtZXMgPSAoMCwgX2RlZmluaXRpb24pLnJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21EZWZpbml0aW9uKGRlZmluaXRpb24pLCByZWN1cnNpdmVSdWxlTmFtZXNMZW5ndGggPSByZWN1cnNpdmVSdWxlTmFtZXMubGVuZ3RoLCBkZWZpbml0aW9uUmVjdXJzaXZlRGVmaW5pdGlvbiA9IHJlY3Vyc2l2ZVJ1bGVOYW1lc0xlbmd0aCA+IDA7XG4gICAgICAgICAgICAgICAgaWYgKGRlZmluaXRpb25SZWN1cnNpdmVEZWZpbml0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlY3Vyc2l2ZURlZmluaXRpb24gPSBuZXcgUmVjdXJzaXZlRGVmaW5pdGlvbih0eXBlLCBwYXJ0cywgcnVsZU5hbWUsIGRlZmluaXRpb24sIHJlY3Vyc2l2ZVJ1bGVOYW1lcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZWN1cnNpdmVEZWZpbml0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIFJlY3Vyc2l2ZURlZmluaXRpb247XG59KF9vY2NhbVBhcnNlcnMuRGVmaW5pdGlvbik7XG5leHBvcnRzLmRlZmF1bHQgPSBSZWN1cnNpdmVEZWZpbml0aW9uO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTlrWldacGJtbDBhVzl1TDNKbFkzVnljMmwyWlM1cWN5SmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpjSW5WelpTQnpkSEpwWTNSY0lqdGNibHh1YVcxd2IzSjBJSHNnUkdWbWFXNXBkR2x2YmlCOUlHWnliMjBnWENKdlkyTmhiUzF3WVhKelpYSnpYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lHWnBibVJTZFd4bElIMGdabkp2YlNCY0lpNHVMM1YwYVd4cGRHbGxjeTl5ZFd4bFhDSTdYRzVwYlhCdmNuUWdleUJTUlVOVlVsTkpWa1ZmVkZsUVJTQjlJR1p5YjIwZ1hDSXVMaTkwZVhCbGMxd2lPMXh1YVcxd2IzSjBJSHNnY21WamRYSnphWFpsVW5Wc1pVNWhiV1Z6Um5KdmJVUmxabWx1YVhScGIyNGdmU0JtY205dElGd2lMaTR2ZFhScGJHbDBhV1Z6TDJSbFptbHVhWFJwYjI1Y0lqdGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdZMnhoYzNNZ1VtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJpQmxlSFJsYm1SeklFUmxabWx1YVhScGIyNGdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaDBlWEJsTENCd1lYSjBjeXdnY25Wc1pVNWhiV1VzSUdSbFptbHVhWFJwYjI0c0lISmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5a2dlMXh1SUNBZ0lITjFjR1Z5S0hCaGNuUnpLVHRjYmx4dUlDQWdJSFJvYVhNdWRIbHdaU0E5SUhSNWNHVTdYRzRnSUNBZ2RHaHBjeTV5ZFd4bFRtRnRaU0E5SUhKMWJHVk9ZVzFsTzF4dUlDQWdJSFJvYVhNdVpHVm1hVzVwZEdsdmJpQTlJR1JsWm1sdWFYUnBiMjQ3WEc0Z0lDQWdkR2hwY3k1eVpXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNZ1BTQnlaV04xY25OcGRtVlNkV3hsVG1GdFpYTTdYRzRnSUgxY2JseHVJQ0JuWlhSVWVYQmxLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG5SNWNHVTdYRzRnSUgxY2JseHVJQ0JuWlhSU2RXeGxUbUZ0WlNncElIdGNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NXlkV3hsVG1GdFpUdGNiaUFnZlZ4dVhHNGdJR2RsZEVSbFptbHVhWFJwYjI0b0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR1ZtYVc1cGRHbHZianRjYmlBZ2ZWeHVYRzRnSUdkbGRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5Z3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WldOMWNuTnBkbVZTZFd4bFRtRnRaWE03WEc0Z0lIMWNibHh1SUNCeVpYQnNZV05sS0hKMWJHVk5ZWEFwSUh0Y2JpQWdJQ0JqYjI1emRDQnlkV3hsSUQwZ2NuVnNaVTFoY0Z0MGFHbHpMbkoxYkdWT1lXMWxYU0I4ZkNCdWRXeHNMRnh1SUNBZ0lDQWdJQ0FnSUhKbGNHeGhZMlZrUkdWbWFXNXBkR2x2YmlBOUlIUm9hWE11WkdWbWFXNXBkR2x2Yml3Z0x5OHZYRzRnSUNBZ0lDQWdJQ0FnY21Wd2JHRmpaVzFsYm5SRVpXWnBibWwwYVc5dUlEMGdkR2hwY3pzZ0x5OHZYRzVjYmlBZ0lDQnlkV3hsTG5KbGNHeGhZMlZFWldacGJtbDBhVzl1S0hKbGNHeGhZMlZrUkdWbWFXNXBkR2x2Yml3Z2NtVndiR0ZqWlcxbGJuUkVaV1pwYm1sMGFXOXVLVHRjYmlBZ2ZWeHVYRzRnSUhOMFlYUnBZeUJtY205dFVuVnNaVTVoYldWQmJtUkVaV1pwYm1sMGFXOXVLSEoxYkdWT1lXMWxMQ0JrWldacGJtbDBhVzl1S1NCN1hHNGdJQ0FnYkdWMElISmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGdQU0J1ZFd4c08xeHVYRzRnSUNBZ1kyOXVjM1FnZEhsd1pTQTlJRkpGUTFWU1UwbFdSVjlVV1ZCRkxGeHVJQ0FnSUNBZ0lDQWdJSEJoY25SeklEMGdaR1ZtYVc1cGRHbHZiaTVuWlhSUVlYSjBjeWdwTEZ4dUlDQWdJQ0FnSUNBZ0lISmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5QTlJSEpsWTNWeWMybDJaVkoxYkdWT1lXMWxjMFp5YjIxRVpXWnBibWwwYVc5dUtHUmxabWx1YVhScGIyNHBMRnh1SUNBZ0lDQWdJQ0FnSUhKbFkzVnljMmwyWlZKMWJHVk9ZVzFsYzB4bGJtZDBhQ0E5SUhKbFkzVnljMmwyWlZKMWJHVk9ZVzFsY3k1c1pXNW5kR2dzWEc0Z0lDQWdJQ0FnSUNBZ1pHVm1hVzVwZEdsdmJsSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGdQU0FvY21WamRYSnphWFpsVW5Wc1pVNWhiV1Z6VEdWdVozUm9JRDRnTUNrN1hHNWNiaUFnSUNCcFppQW9aR1ZtYVc1cGRHbHZibEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjRwSUh0Y2JpQWdJQ0FnSUhKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0Z1BTQnVaWGNnVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmloMGVYQmxMQ0J3WVhKMGN5d2djblZzWlU1aGJXVXNJR1JsWm1sdWFYUnBiMjRzSUhKbFkzVnljMmwyWlZKMWJHVk9ZVzFsY3lrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjQ3WEc0Z0lIMWNibjFjYmlKZExDSnVZVzFsY3lJNld5SlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJaXdpZEhsd1pTSXNJbkJoY25Seklpd2ljblZzWlU1aGJXVWlMQ0prWldacGJtbDBhVzl1SWl3aWNtVmpkWEp6YVhabFVuVnNaVTVoYldWeklpd2laMlYwVkhsd1pTSXNJbWRsZEZKMWJHVk9ZVzFsSWl3aVoyVjBSR1ZtYVc1cGRHbHZiaUlzSW1kbGRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5SXNJbkpsY0d4aFkyVWlMQ0p5ZFd4bFRXRndJaXdpY25Wc1pTSXNJbkpsY0d4aFkyVmtSR1ZtYVc1cGRHbHZiaUlzSW5KbGNHeGhZMlZ0Wlc1MFJHVm1hVzVwZEdsdmJpSXNJbkpsY0d4aFkyVkVaV1pwYm1sMGFXOXVJaXdpWm5KdmJWSjFiR1ZPWVcxbFFXNWtSR1ZtYVc1cGRHbHZiaUlzSW5KbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0aUxDSlNSVU5WVWxOSlZrVmZWRmxRUlNJc0ltZGxkRkJoY25Seklpd2ljbVZqZFhKemFYWmxVblZzWlU1aGJXVnpSbkp2YlVSbFptbHVhWFJwYjI0aUxDSnlaV04xY25OcGRtVlNkV3hsVG1GdFpYTk1aVzVuZEdnaUxDSnNaVzVuZEdnaUxDSmtaV1pwYm1sMGFXOXVVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaUlzSWtSbFptbHVhWFJwYjI0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFTkJRVmtzVjBGQlFTeERRVUZET3pzN1JUdDNRanRCUVVWakxFZEJRV1VzUTBGQlppeGhRVUZsTzBGQlJXcENMRWRCUVcxQ0xFTkJRVzVDTEV0QlFXMUNPMEZCUTJJc1IwRkJWU3hEUVVGV0xFMUJRVlU3UVVGRFVTeEhRVUY1UWl4RFFVRjZRaXhYUVVGNVFqczdPenM3T3pzN096czdPenM3T3poRU8zTkRPelpFTzJsRk96czdPM2RGTzJkRk96czdPenM3U3pzN096czdPenM3T3pzN096dE5PM2xFT3pzN096czdPenM3TzNWQ096dExPenM3T3pKQ096czdPenM3T3p0eFJqczdPenM3T3pzN096czdPMjFGT3p0cFJEczdPenM3U1VGRmNrUkJMRzFDUVVGdFFpeHBRa0ZCZWtJc1VVRkJVVHM0UXpzN1lVRkJSa0VzYlVKQlFXMUNMRU5CUXpGQ1F5eEpRVUZKTEVWQlFVVkRMRXRCUVVzc1JVRkJSVU1zVVVGQlVTeEZRVUZGUXl4VlFVRlZMRVZCUVVWRExHdENRVUZyUWp0clJEczdhME5CUTNwRVNDeExRVUZMTEVORFZtWXNRMFJWYVVJN1kwRkZVa1FzU1VGQlNTeEhRVUZIUVN4SlFVRkpMRU5CUVVNN1kwRkRXa1VzVVVGQlVTeEhRVUZIUVN4UlFVRlJMRU5CUVVNN1kwRkRjRUpETEZWQlFWVXNSMEZCUjBFc1ZVRkJWU3hEUVVGRE8yTkJRM2hDUXl4clFrRkJhMElzUjBGQlIwRXNhMEpCUVd0Q0xFTkJRVU03T3pzN08xbEJSeTlEUXl4SFFVRlBMRVZCUVZCQkxFTkJRVTg3YlVKQlFWQkJMRkZCUVZFc1EwRkJVa0VzVDBGQlR5eEhRVUZITEVOQlFVTTdaMEpCUTFRc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlEwd3NTVUZCU1R0WlFVTnNRaXhEUVVGRE96czdXVUZGUkUwc1IwRkJWeXhGUVVGWVFTeERRVUZYTzIxQ1FVRllRU3hSUVVGUkxFTkJRVkpCTEZkQlFWY3NSMEZCUnl4RFFVRkRPMmRDUVVOaUxFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTktMRkZCUVZFN1dVRkRkRUlzUTBGQlF6czdPMWxCUlVSTExFZEJRV0VzUlVGQllrRXNRMEZCWVR0dFFrRkJZa0VzVVVGQlVTeERRVUZTUVN4aFFVRmhMRWRCUVVjc1EwRkJRenRuUWtGRFppeE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRTaXhWUVVGVk8xbEJRM2hDTEVOQlFVTTdPenRaUVVWRVN5eEhRVUZ4UWl4RlFVRnlRa0VzUTBGQmNVSTdiVUpCUVhKQ1FTeFJRVUZSTEVOQlFWSkJMSEZDUVVGeFFpeEhRVUZITEVOQlFVTTdaMEpCUTNaQ0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTktMR3RDUVVGclFqdFpRVU5vUXl4RFFVRkRPenM3V1VGRlJFc3NSMEZCVHl4RlFVRlFRU3hEUVVGUE8yMUNRVUZRUVN4UlFVRlJReXhEUVVGU1JDeFBRVUZQTEVOQlFVTkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8yZENRVU5vUWl4SFFVRkxMRU5CUVVORExFbEJRVWtzUjBGQlIwUXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJRMUlzVVVGQlVTeExRVUZMTEVsQlFVa3NSVUZEY2tOVkxHdENRVUZyUWl4SFFVRkhMRWxCUVVrc1EwRkJRMVFzVlVGQlZTeEZRVU53UTFVc2NVSkJRWEZDTEVkQlFVY3NTVUZCU1N4RlFVRkZMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVYyUTBZc1NVRkJTU3hEUVVGRFJ5eHBRa0ZCYVVJc1EwRkJRMFlzYTBKQlFXdENMRVZCUVVWRExIRkNRVUZ4UWl4RFFVRkRMRU5CUVVNN1dVRkRjRVVzUTBGQlF6czdPenRaUVVWTlJTeEhRVUY1UWl4RlFVRjZRa0VzUTBGQmVVSTdiVUpCUVdoRExGRkJRVkVzUTBGQlJFRXNlVUpCUVhsQ0xFTkJRVU5pTEZGQlFWRXNSVUZCUlVNc1ZVRkJWU3hGUVVGRkxFTkJRVU03WjBKQlEzUkVMRWRCUVVjc1EwRkJRMkVzYlVKQlFXMUNMRWRCUVVjc1NVRkJTVHRuUWtGRk9VSXNSMEZCU3l4RFFVRkRhRUlzU1VGQlNTeEhRVUZIYVVJc1RVRkJZeXhwUWtGRGNrSm9RaXhMUVVGTExFZEJRVWRGTEZWQlFWVXNRMEZCUTJVc1VVRkJVU3hKUVVNelFtUXNhMEpCUVd0Q0xFOUJRVWRsTEZkQlFXZERMRzFEUVVGRGFFSXNWVUZCVlN4SFFVTm9SV2xDTEhkQ1FVRjNRaXhIUVVGSGFFSXNhMEpCUVd0Q0xFTkJRVU5wUWl4TlFVRk5MRVZCUTNCRVF5dzJRa0ZCTmtJc1IwRkJTVVlzZDBKQlFYZENMRWRCUVVjc1EwRkJRenRuUWtGRmJrVXNSVUZCUlN4RlFVRkZSU3cyUWtGQk5rSXNSVUZCUlN4RFFVRkRPMjlDUVVOc1EwNHNiVUpCUVcxQ0xFZEJRVWNzUjBGQlJ5eERRVUZEYWtJc2JVSkJRVzFDTEVOQlFVTkRMRWxCUVVrc1JVRkJSVU1zUzBGQlN5eEZRVUZGUXl4UlFVRlJMRVZCUVVWRExGVkJRVlVzUlVGQlJVTXNhMEpCUVd0Q0xFTkJRVU1zUTBGQlF6dG5Ra0ZEZGtjc1EwRkJRenRuUWtGRlJDeE5RVUZOTEVOQlFVTlpMRzFDUVVGdFFqdFpRVU0xUWl4RFFVRkRPenROT3p0RlFXaEVPRU5QTEdGQlFWVTdhMEpCUVhSRGVFSXNiVUpCUVcxQ0xFRWlmUT09IiwgIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9yZWN1cnNpdmUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9kZWZpbml0aW9uL3JlY3Vyc2l2ZVwiKSk7XG52YXIgX3R5cGVzID0gcmVxdWlyZShcIi4uL3R5cGVzXCIpO1xudmFyIF9kZWZpbml0aW9uID0gcmVxdWlyZShcIi4uL3V0aWxpdGllcy9kZWZpbml0aW9uXCIpO1xuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gICAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICAgIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gICAgfTtcbiAgICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufVxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICAgIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgICAgIHJldHVybiBjYWxsO1xuICAgIH1cbiAgICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxudmFyIF90eXBlb2YgPSBmdW5jdGlvbihvYmopIHtcbiAgICBcIkBzd2MvaGVscGVycyAtIHR5cGVvZlwiO1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uKCkge30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgICB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7XG4gICAgICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0O1xuICAgICAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgICAgICAgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICAgIH07XG59XG52YXIgTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKFJlY3Vyc2l2ZURlZmluaXRpb24pIHtcbiAgICBfaW5oZXJpdHMoTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24sIFJlY3Vyc2l2ZURlZmluaXRpb24pO1xuICAgIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24pO1xuICAgIGZ1bmN0aW9uIExlZnRSZWN1cnNpdmVEZWZpbml0aW9uKHR5cGUsIHBhcnRzLCBydWxlTmFtZSwgZGVmaW5pdGlvbiwgcmVjdXJzaXZlUnVsZU5hbWVzLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbik7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0eXBlLCBwYXJ0cywgcnVsZU5hbWUsIGRlZmluaXRpb24sIHJlY3Vyc2l2ZVJ1bGVOYW1lcyk7XG4gICAgICAgIF90aGlzLmxlZnRSZWN1cnNpdmVSdWxlTmFtZXMgPSBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIF9jcmVhdGVDbGFzcyhMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0TGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lc1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldExlZnRSZWN1cnNpdmVSdWxlTmFtZXMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcInJld3JpdGVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZXdyaXRlKHJ1bGVNYXApIHtcbiAgICAgICAgICAgIC8vL1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbVJ1bGVOYW1lQW5kRGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21SdWxlTmFtZUFuZERlZmluaXRpb24ocnVsZU5hbWUsIGRlZmluaXRpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBudWxsO1xuICAgICAgICAgICAgICAgIHZhciBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzID0gKDAsIF9kZWZpbml0aW9uKS5sZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbURlZmluaXRpb24oZGVmaW5pdGlvbiksIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNMZW5ndGggPSBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzLmxlbmd0aCwgZGVmaW5pdGlvbkxlZnRSZWN1cnNpdmUgPSBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzTGVuZ3RoID4gMDtcbiAgICAgICAgICAgICAgICBpZiAoZGVmaW5pdGlvbkxlZnRSZWN1cnNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGUgPSBfdHlwZXMuTEVGVF9SRUNVUlNJVkVfVFlQRSwgcGFydHMgPSBkZWZpbml0aW9uLmdldFBhcnRzKCksIHJlY3Vyc2l2ZVJ1bGVOYW1lcyA9ICgwLCBfZGVmaW5pdGlvbikucmVjdXJzaXZlUnVsZU5hbWVzRnJvbURlZmluaXRpb24oZGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uID0gbmV3IExlZnRSZWN1cnNpdmVEZWZpbml0aW9uKHR5cGUsIHBhcnRzLCBydWxlTmFtZSwgZGVmaW5pdGlvbiwgcmVjdXJzaXZlUnVsZU5hbWVzLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIExlZnRSZWN1cnNpdmVEZWZpbml0aW9uO1xufShfcmVjdXJzaXZlLmRlZmF1bHQpO1xuZXhwb3J0cy5kZWZhdWx0ID0gTGVmdFJlY3Vyc2l2ZURlZmluaXRpb247XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOeVl5OWtaV1pwYm1sMGFXOXVMMnhsWm5SU1pXTjFjbk5wZG1VdWFuTWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWENKMWMyVWdjM1J5YVdOMFhDSTdYRzVjYm1sdGNHOXlkQ0JTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1SUdaeWIyMGdYQ0l1TGk5a1pXWnBibWwwYVc5dUwzSmxZM1Z5YzJsMlpWd2lPMXh1WEc1cGJYQnZjblFnZXlCTVJVWlVYMUpGUTFWU1UwbFdSVjlVV1ZCRklIMGdabkp2YlNCY0lpNHVMM1I1Y0dWelhDSTdYRzVwYlhCdmNuUWdleUJ5WldOMWNuTnBkbVZTZFd4bFRtRnRaWE5HY205dFJHVm1hVzVwZEdsdmJpd2diR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsYzBaeWIyMUVaV1pwYm1sMGFXOXVJSDBnWm5KdmJTQmNJaTR1TDNWMGFXeHBkR2xsY3k5a1pXWnBibWwwYVc5dVhDSTdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR05zWVhOeklFeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1SUdWNGRHVnVaSE1nVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmlCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0hSNWNHVXNJSEJoY25SekxDQnlkV3hsVG1GdFpTd2daR1ZtYVc1cGRHbHZiaXdnY21WamRYSnphWFpsVW5Wc1pVNWhiV1Z6TENCc1pXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpLU0I3WEc0Z0lDQWdjM1Z3WlhJb2RIbHdaU3dnY0dGeWRITXNJSEoxYkdWT1lXMWxMQ0JrWldacGJtbDBhVzl1TENCeVpXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNcE8xeHVYRzRnSUNBZ2RHaHBjeTVzWldaMFVtVmpkWEp6YVhabFVuVnNaVTVoYldWeklEMGdiR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsY3p0Y2JpQWdmVnh1WEc0Z0lHZGxkRXhsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXViR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsY3p0Y2JpQWdmVnh1WEc0Z0lISmxkM0pwZEdVb2NuVnNaVTFoY0NrZ2UxeHVJQ0FnSUM4dkwxeHVJQ0I5WEc1Y2JpQWdjM1JoZEdsaklHWnliMjFTZFd4bFRtRnRaVUZ1WkVSbFptbHVhWFJwYjI0b2NuVnNaVTVoYldVc0lHUmxabWx1YVhScGIyNHBJSHRjYmlBZ0lDQnNaWFFnYkdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGdQU0J1ZFd4c08xeHVYRzRnSUNBZ1kyOXVjM1FnYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5QTlJR3hsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlhOR2NtOXRSR1ZtYVc1cGRHbHZiaWhrWldacGJtbDBhVzl1S1N4Y2JpQWdJQ0FnSUNBZ0lDQnNaV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1Z6VEdWdVozUm9JRDBnYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5NXNaVzVuZEdnc1hHNGdJQ0FnSUNBZ0lDQWdaR1ZtYVc1cGRHbHZia3hsWm5SU1pXTjFjbk5wZG1VZ1BTQW9iR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsYzB4bGJtZDBhQ0ErSURBcE8xeHVYRzRnSUNBZ2FXWWdLR1JsWm1sdWFYUnBiMjVNWldaMFVtVmpkWEp6YVhabEtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCMGVYQmxJRDBnVEVWR1ZGOVNSVU5WVWxOSlZrVmZWRmxRUlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoY25SeklEMGdaR1ZtYVc1cGRHbHZiaTVuWlhSUVlYSjBjeWdwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZqZFhKemFYWmxVblZzWlU1aGJXVnpJRDBnY21WamRYSnphWFpsVW5Wc1pVNWhiV1Z6Um5KdmJVUmxabWx1YVhScGIyNG9aR1ZtYVc1cGRHbHZiaWs3WEc1Y2JpQWdJQ0FnSUd4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJRDBnYm1WM0lFeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1S0hSNWNHVXNJSEJoY25SekxDQnlkV3hsVG1GdFpTd2daR1ZtYVc1cGRHbHZiaXdnY21WamRYSnphWFpsVW5Wc1pVNWhiV1Z6TENCc1pXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2JHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjQ3WEc0Z0lIMWNibjFjYmlKZExDSnVZVzFsY3lJNld5Sk1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmlJc0luUjVjR1VpTENKd1lYSjBjeUlzSW5KMWJHVk9ZVzFsSWl3aVpHVm1hVzVwZEdsdmJpSXNJbkpsWTNWeWMybDJaVkoxYkdWT1lXMWxjeUlzSW14bFpuUlNaV04xY25OcGRtVlNkV3hsVG1GdFpYTWlMQ0puWlhSTVpXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpJaXdpY21WM2NtbDBaU0lzSW5KMWJHVk5ZWEFpTENKbWNtOXRVblZzWlU1aGJXVkJibVJFWldacGJtbDBhVzl1SWl3aWJHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjRpTENKc1pXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpSbkp2YlVSbFptbHVhWFJwYjI0aUxDSnNaV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1Z6VEdWdVozUm9JaXdpYkdWdVozUm9JaXdpWkdWbWFXNXBkR2x2Ymt4bFpuUlNaV04xY25OcGRtVWlMQ0pNUlVaVVgxSkZRMVZTVTBsV1JWOVVXVkJGSWl3aVoyVjBVR0Z5ZEhNaUxDSnlaV04xY25OcGRtVlNkV3hsVG1GdFpYTkdjbTl0UkdWbWFXNXBkR2x2YmlJc0lsSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRU5CUVZrc1YwRkJRU3hEUVVGRE96czdSVHQzUWp0QlFVVnRRaXhIUVVGNVFpeERRVUY2UWl4VlFVRjVRanRCUVVWeVFpeEhRVUZWTEVOQlFWWXNUVUZCVlR0QlFVTjVReXhIUVVGNVFpeERRVUY2UWl4WFFVRjVRanM3T3pzN096czdPenM3T3pzN096aEVPM05ET3paRU8ybEZPenM3TzNkRk8yZEZPenM3T3pzN1N6czdPenM3T3pzN096czdPenROTzNsRU96czdPenM3T3pzN096czdPenM3ZFVJN08wczdPenM3TWtJN096czdPenM3TzNGR096czdPenM3T3pzN096czdiVVU3TzJsRU96czdPenRKUVVVelJrRXNkVUpCUVhWQ0xHbENRVUUzUWl4UlFVRlJPekpFT3p0aFFVRkdRU3gxUWtGQmRVSXNRMEZET1VKRExFbEJRVWtzUlVGQlJVTXNTMEZCU3l4RlFVRkZReXhSUVVGUkxFVkJRVVZETEZWQlFWVXNSVUZCUlVNc2EwSkJRV3RDTEVWQlFVVkRMSE5DUVVGelFqdHpSRHM3YTBOQlEycEdUQ3hKUVVGSkxFVkJRVVZETEV0QlFVc3NSVUZCUlVNc1VVRkJVU3hGUVVGRlF5eFZRVUZWTEVWQlFVVkRMR3RDUVVGclFpeERRMVF2UkN4RFJGTnBSVHRqUVVWNFJFTXNjMEpCUVhOQ0xFZEJRVWRCTEhOQ1FVRnpRaXhEUVVGRE96czdPenRaUVVkMlJFTXNSMEZCZVVJc1JVRkJla0pCTEVOQlFYbENPMjFDUVVGNlFrRXNVVUZCVVN4RFFVRlNRU3g1UWtGQmVVSXNSMEZCUnl4RFFVRkRPMmRDUVVNelFpeE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRSQ3h6UWtGQmMwSTdXVUZEY0VNc1EwRkJRenM3TzFsQlJVUkZMRWRCUVU4c1JVRkJVRUVzUTBGQlR6dHRRa0ZCVUVFc1VVRkJVVU1zUTBGQlVrUXNUMEZCVHl4RFFVRkRReXhQUVVGUExFVkJRVVVzUTBGQlF6dFpRVU5vUWl4RlFVRkhMRUZCUVVnc1EwRkJSenRaUVVOTUxFTkJRVU03T3pzN1dVRkZUVU1zUjBGQmVVSXNSVUZCZWtKQkxFTkJRWGxDTzIxQ1FVRm9ReXhSUVVGUkxFTkJRVVJCTEhsQ1FVRjVRaXhEUVVGRFVDeFJRVUZSTEVWQlFVVkRMRlZCUVZVc1JVRkJSU3hEUVVGRE8yZENRVU4wUkN4SFFVRkhMRU5CUVVOUExIVkNRVUYxUWl4SFFVRkhMRWxCUVVrN1owSkJSV3hETEVkQlFVc3NRMEZCUTB3c2MwSkJRWE5DTEU5QlFVZE5MRmRCUVc5RExIVkRRVUZEVWl4VlFVRlZMRWRCUTNoRlV5dzBRa0ZCTkVJc1IwRkJSMUFzYzBKQlFYTkNMRU5CUVVOUkxFMUJRVTBzUlVGRE5VUkRMSFZDUVVGMVFpeEhRVUZKUml3MFFrRkJORUlzUjBGQlJ5eERRVUZETzJkQ1FVVnFSU3hGUVVGRkxFVkJRVVZGTEhWQ1FVRjFRaXhGUVVGRkxFTkJRVU03YjBKQlF6VkNMRWRCUVVzc1EwRkJRMlFzU1VGQlNTeEhRVUZIWlN4TlFVRnRRaXh6UWtGRE1VSmtMRXRCUVVzc1IwRkJSMFVzVlVGQlZTeERRVUZEWVN4UlFVRlJMRWxCUXpOQ1dpeHJRa0ZCYTBJc1QwRkJSMkVzVjBGQlowTXNiVU5CUVVOa0xGVkJRVlU3YjBKQlJYUkZUeXgxUWtGQmRVSXNSMEZCUnl4SFFVRkhMRU5CUVVOWUxIVkNRVUYxUWl4RFFVRkRReXhKUVVGSkxFVkJRVVZETEV0QlFVc3NSVUZCUlVNc1VVRkJVU3hGUVVGRlF5eFZRVUZWTEVWQlFVVkRMR3RDUVVGclFpeEZRVUZGUXl4elFrRkJjMElzUTBGQlF5eERRVUZETzJkQ1FVTjJTU3hEUVVGRE8yZENRVVZFTEUxQlFVMHNRMEZCUTBzc2RVSkJRWFZDTzFsQlEyaERMRU5CUVVNN08wMDdPMFZCTDBKclJGRXNWVUZCYlVJN2EwSkJRVzVFYmtJc2RVSkJRWFZDTEVFaWZRPT0iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IE5vblRlcm1pbmFsTm9kZSB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZHVjZWROb2RlIGV4dGVuZHMgTm9uVGVybWluYWxOb2RlIHtcbiAgc3RhdGljIGZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHsgcmV0dXJuIE5vblRlcm1pbmFsTm9kZS5mcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKFJlZHVjZWROb2RlLCBydWxlTmFtZSwgY2hpbGROb2Rlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUnVsZSB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5cbmltcG9ydCBSZWR1Y2VkTm9kZSBmcm9tIFwiLi4vbm9kZS9yZWR1Y2VkXCI7XG5pbXBvcnQgUmVjdXJzaXZlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9yZWN1cnNpdmVcIjtcblxuaW1wb3J0IHsgaXNJbnN0YW5jZU9mIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jbGFzc1wiO1xuaW1wb3J0IHsgcmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9ydWxlTmFtZVwiO1xuaW1wb3J0IHsgRElSRUNUTFlfTEVGVF9SRUNVUlNJVkVfVFlQRSwgSU5ESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFLCBJTVBMSUNJVExZX0xFRlRfUkVDVVJTSVZFX1RZUEUgfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVkdWNlZFJ1bGUgZXh0ZW5kcyBSdWxlIHtcbiAgaXNFbXB0eSgpIHtcbiAgICBjb25zdCBkZWZpbml0aW9uc0xlbmd0aCA9IHRoaXMuZGVmaW5pdGlvbnMubGVuZ3RoLFxuICAgICAgICAgIGVtcHR5ID0gKGRlZmluaXRpb25zTGVuZ3RoID09PSAwKTtcblxuICAgIHJldHVybiBlbXB0eTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZShydWxlKSB7XG4gICAgbGV0IGRlZmluaXRpb25zID0gcnVsZS5nZXREZWZpbml0aW9ucygpO1xuXG4gICAgY29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKSxcbiAgICAgICAgICByZWR1Y2VkUnVsZU5hbWUgPSByZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpO1xuXG4gICAgZGVmaW5pdGlvbnMgPSBkZWZpbml0aW9ucy5maWx0ZXIoKGRlZmluaXRpb24pID0+IHtcbiAgICAgIGxldCBrZWVwID0gdHJ1ZTtcblxuICAgICAgY29uc3QgZGVmaW5pdGlvblJlY3Vyc2l2ZURlZmluaXRpb24gPSBpc0luc3RhbmNlT2YoZGVmaW5pdGlvbiwgUmVjdXJzaXZlRGVmaW5pdGlvbik7XG5cbiAgICAgIGlmIChkZWZpbml0aW9uUmVjdXJzaXZlRGVmaW5pdGlvbikge1xuICAgICAgICBjb25zdCByZWN1cnNpdmVEZWZpbml0aW9uID0gZGVmaW5pdGlvbiwgLy8vXG4gICAgICAgICAgICAgIHR5cGUgPSByZWN1cnNpdmVEZWZpbml0aW9uLmdldFR5cGUoKTtcblxuICAgICAgICBrZWVwID0gKHR5cGUgIT09IERJUkVDVExZX0xFRlRfUkVDVVJTSVZFX1RZUEUpICYmXG4gICAgICAgICAgICAgICAodHlwZSAhPT0gSU5ESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFKSAmJlxuICAgICAgICAgICAgICAgKHR5cGUgIT09IElNUExJQ0lUTFlfTEVGVF9SRUNVUlNJVkVfVFlQRSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBrZWVwXG4gICAgfSk7XG5cbiAgICBjb25zdCBuYW1lID0gcmVkdWNlZFJ1bGVOYW1lLFxuICAgICAgICAgIE5vblRlcm1pbmFsTm9kZSA9IFJlZHVjZWROb2RlLCAgLy8vXG4gICAgICAgICAgcmVkdWNlZFJ1bGUgPSBuZXcgUmVkdWNlZFJ1bGUobmFtZSwgZGVmaW5pdGlvbnMsIE5vblRlcm1pbmFsTm9kZSk7XG5cbiAgICByZXR1cm4gcmVkdWNlZFJ1bGU7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgTm9uVGVybWluYWxOb2RlIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVwZWF0ZWROb2RlIGV4dGVuZHMgTm9uVGVybWluYWxOb2RlIHtcbiAgc3RhdGljIGZyb21SdWxlTmFtZUFuZENoaWxkTm9kZXMocnVsZU5hbWUsIGNoaWxkTm9kZXMpIHsgcmV0dXJuIE5vblRlcm1pbmFsTm9kZS5mcm9tUnVsZU5hbWVBbmRDaGlsZE5vZGVzKFJlcGVhdGVkTm9kZSwgcnVsZU5hbWUsIGNoaWxkTm9kZXMpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFJ1bGUgfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuXG5pbXBvcnQgUmVwZWF0ZWROb2RlIGZyb20gXCIuLi9ub2RlL3JlcGVhdGVkXCI7XG5cbmltcG9ydCB7IHJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWUgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3J1bGVOYW1lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlcGVhdGVkUnVsZSBleHRlbmRzIFJ1bGUge1xuICBzdGF0aWMgZnJvbVJ1bGUocnVsZSkge1xuICAgIGNvbnN0IHJ1bGVOYW1lID0gcnVsZS5nZXROYW1lKCksXG4gICAgICAgICAgcmVwZWF0ZWRSdWxlTmFtZSA9IHJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpLFxuICAgICAgICAgIG5hbWUgPSByZXBlYXRlZFJ1bGVOYW1lLCAgLy8vXG4gICAgICAgICAgZGVmaW5pdGlvbnMgPSBbXSxcbiAgICAgICAgICBOb25UZXJtaW5hbE5vZGUgPSBSZXBlYXRlZE5vZGUsIC8vL1xuICAgICAgICAgIHJlcGVhdGVkUnVsZSA9IG5ldyBSZXBlYXRlZFJ1bGUobmFtZSwgZGVmaW5pdGlvbnMsIE5vblRlcm1pbmFsTm9kZSk7XG5cbiAgICByZXR1cm4gcmVwZWF0ZWRSdWxlO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFBhcnRzIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuY29uc3QgeyBSdWxlTmFtZVBhcnQsIFplcm9Pck1vcmVQYXJ0c1BhcnQgfSA9IFBhcnRzO1xuXG5leHBvcnQgZnVuY3Rpb24gcnVsZU5hbWVQYXJ0RnJvbVJ1bGVOYW1lKHJ1bGVOYW1lLCBsb29rQWhlYWQgPSBmYWxzZSkge1xuICBjb25zdCBydWxlTmFtZVBhcnQgPSBuZXcgUnVsZU5hbWVQYXJ0KHJ1bGVOYW1lLCBsb29rQWhlYWQpO1xuXG4gIHJldHVybiBydWxlTmFtZVBhcnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB6ZXJvT3JNb3JlUnVsZU5hbWVQYXJ0UGFydEZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCBydWxlTmFtZVBhcnQgPSBydWxlTmFtZVBhcnRGcm9tUnVsZU5hbWUocnVsZU5hbWUpLFxuICAgICAgICB6ZXJvT3JNb3JlUnVsZU5hbWVQYXJ0UGFydCA9IG5ldyBaZXJvT3JNb3JlUGFydHNQYXJ0KHJ1bGVOYW1lUGFydCk7XG5cbiAgcmV0dXJuIHplcm9Pck1vcmVSdWxlTmFtZVBhcnRQYXJ0O1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBEZWZpbml0aW9uIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuaW1wb3J0IHsgcnVsZU5hbWVQYXJ0RnJvbVJ1bGVOYW1lIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9wYXJ0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJ1bGVOYW1lRGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBzdGF0aWMgZnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKSB7XG4gICAgY29uc3QgcnVsZU5hbWVQYXJ0ID0gcnVsZU5hbWVQYXJ0RnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKSxcbiAgICAgICAgICBwYXJ0cyA9IFtcbiAgICAgICAgICAgIHJ1bGVOYW1lUGFydFxuICAgICAgICAgIF0sXG4gICAgICAgICAgcnVsZU5hbWVEZWZpbml0aW9uID0gbmV3IFJ1bGVOYW1lRGVmaW5pdGlvbihwYXJ0cyk7XG5cbiAgICByZXR1cm4gcnVsZU5hbWVEZWZpbml0aW9uO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFJ1bGUgfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuXG5pbXBvcnQgUnVsZU5hbWVEZWZpbml0aW9uIGZyb20gXCIuLi9kZWZpbml0aW9uL3J1bGVOYW1lXCI7XG5pbXBvcnQgUmVjdXJzaXZlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9yZWN1cnNpdmVcIjtcblxuaW1wb3J0IHsgaXNJbnN0YW5jZU9mIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jbGFzc1wiO1xuaW1wb3J0IHsgcmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9ydWxlTmFtZVwiO1xuaW1wb3J0IHsgRElSRUNUTFlfTEVGVF9SRUNVUlNJVkVfVFlQRSwgSU5ESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFLCBJTVBMSUNJVExZX0xFRlRfUkVDVVJTSVZFX1RZUEUgfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmV3cml0dGVuUnVsZSBleHRlbmRzIFJ1bGUge1xuICBzdGF0aWMgZnJvbVJ1bGUocnVsZSkge1xuICAgIGxldCBkZWZpbml0aW9ucyA9IHJ1bGUuZ2V0RGVmaW5pdGlvbnMoKTtcblxuICAgIGNvbnN0IHJ1bGVOYW1lID0gcnVsZS5nZXROYW1lKCksXG4gICAgICAgICAgcmVkdWNlZFJ1bGVOYW1lID0gcmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKSxcbiAgICAgICAgICByZWR1Y2VkUnVsZU5hbWVEZWZpbml0aW9uID0gUnVsZU5hbWVEZWZpbml0aW9uLmZyb21SdWxlTmFtZShyZWR1Y2VkUnVsZU5hbWUpO1xuXG4gICAgZGVmaW5pdGlvbnMgPSBkZWZpbml0aW9ucy5maWx0ZXIoKGRlZmluaXRpb24pID0+IHtcbiAgICAgIGxldCBrZWVwID0gZmFsc2U7XG5cbiAgICAgIGNvbnN0IGRlZmluaXRpb25SZWN1cnNpdmVEZWZpbml0aW9uID0gaXNJbnN0YW5jZU9mKGRlZmluaXRpb24sIFJlY3Vyc2l2ZURlZmluaXRpb24pO1xuXG4gICAgICBpZiAoZGVmaW5pdGlvblJlY3Vyc2l2ZURlZmluaXRpb24pIHtcbiAgICAgICAgY29uc3QgcmVjdXJzaXZlRGVmaW5pdGlvbiA9IGRlZmluaXRpb24sIC8vL1xuICAgICAgICAgICAgICB0eXBlID0gcmVjdXJzaXZlRGVmaW5pdGlvbi5nZXRUeXBlKCk7XG5cbiAgICAgICAga2VlcCA9ICh0eXBlID09PSBESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFKSB8fFxuICAgICAgICAgICAgICAgKHR5cGUgPT09IElORElSRUNUTFlfTEVGVF9SRUNVUlNJVkVfVFlQRSkgfHxcbiAgICAgICAgICAgICAgICh0eXBlID09PSBJTVBMSUNJVExZX0xFRlRfUkVDVVJTSVZFX1RZUEUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ga2VlcDtcbiAgICB9KTtcblxuICAgIGRlZmluaXRpb25zID0gW1xuICAgICAgLi4uZGVmaW5pdGlvbnMsXG4gICAgICByZWR1Y2VkUnVsZU5hbWVEZWZpbml0aW9uXG4gICAgXTtcblxuICAgIGNvbnN0IG5hbWUgPSBydWxlTmFtZSwgIC8vL1xuICAgICAgICAgIE5vblRlcm1pbmFsTm9kZSA9IHJ1bGUuZ2V0Tm9uVGVybWluYWxOb2RlKCksXG4gICAgICAgICAgcmV3cml0dGVuUnVsZSA9IG5ldyBSZXdyaXR0ZW5SdWxlKG5hbWUsIGRlZmluaXRpb25zLCBOb25UZXJtaW5hbE5vZGUpO1xuXG4gICAgcmV0dXJuIHJld3JpdHRlblJ1bGU7XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNsb25lUGFydHMocGFydHMpIHtcbiAgcGFydHMgPSBwYXJ0cy5tYXAoKHBhcnQpID0+IHBhcnQuY2xvbmUoKSk7XG5cbiAgcmV0dXJuIHBhcnRzO1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBEZWZpbml0aW9uIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuaW1wb3J0IHsgY2xvbmVQYXJ0cyB9IGZyb20gXCIuLi91dGlsaXRpZXMvcGFydHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVwZWF0ZWREZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIHN0YXRpYyBmcm9tRGVmaW5pdGlvbihkZWZpbml0aW9uKSB7XG4gICAgbGV0IHBhcnRzID0gZGVmaW5pdGlvbi5nZXRQYXJ0cygpO1xuXG4gICAgcGFydHMgPSBjbG9uZVBhcnRzKHBhcnRzKTsgIC8vL1xuXG4gICAgcGFydHMuc2hpZnQoKTsgIC8vL1xuXG4gICAgY29uc3QgcmVwZWF0ZWREZWZpbml0aW9uID0gbmV3IFJlcGVhdGVkRGVmaW5pdGlvbihwYXJ0cyk7XG5cbiAgICByZXR1cm4gcmVwZWF0ZWREZWZpbml0aW9uO1xuICB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IERlZmluaXRpb24gfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuXG5pbXBvcnQgeyBjbG9uZVBhcnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9wYXJ0c1wiO1xuaW1wb3J0IHsgaXNEZWZpbml0aW9uTG9va0FoZWFkIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9kZWZpbml0aW9uXCI7XG5pbXBvcnQgeyByZXBlYXRlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lLCByZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3J1bGVOYW1lXCI7XG5pbXBvcnQgeyBydWxlTmFtZVBhcnRGcm9tUnVsZU5hbWUsIHplcm9Pck1vcmVSdWxlTmFtZVBhcnRQYXJ0RnJvbVJ1bGVOYW1lIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9wYXJ0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJld3JpdHRlbkRlZmluaXRpb24gZXh0ZW5kcyBEZWZpbml0aW9uIHtcbiAgc3RhdGljIGZyb21EZWZpbml0aW9uQW5kTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKGRlZmluaXRpb24sIGxlZnRSZWN1cnNpdmVSdWxlTmFtZSkge1xuICAgIGxldCBwYXJ0cyA9IGRlZmluaXRpb24uZ2V0UGFydHMoKTtcblxuICAgIHBhcnRzID0gY2xvbmVQYXJ0cyhwYXJ0cyk7ICAvLy9cblxuICAgIHBhcnRzLnNoaWZ0KCk7ICAvLy9cblxuICAgIGNvbnN0IGRlZmluaXRpb25Mb29rQWhlYWQgPSBpc0RlZmluaXRpb25Mb29rQWhlYWQoZGVmaW5pdGlvbiksXG4gICAgICAgICAgbG9va0FoZWFkID0gZGVmaW5pdGlvbkxvb2tBaGVhZCwgIC8vL1xuICAgICAgICAgIHJlcGVhdGVkUnVsZU5hbWUgPSByZXBlYXRlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lKGxlZnRSZWN1cnNpdmVSdWxlTmFtZSksXG4gICAgICAgICAgcmVkdWNlZExlZnRSZWN1cnNpdmVSdWxlTmFtZSA9IHJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZShsZWZ0UmVjdXJzaXZlUnVsZU5hbWUpLFxuICAgICAgICAgIHplcm9Pck1vcmVSZXBlYXRlZFJ1bGVOYW1lUGFydCA9IHplcm9Pck1vcmVSdWxlTmFtZVBhcnRQYXJ0RnJvbVJ1bGVOYW1lKHJlcGVhdGVkUnVsZU5hbWUpLFxuICAgICAgICAgIHJlZHVjZWRMZWZ0UmVjdXJzaXZlUnVsZU5hbWVQYXJ0ID0gcnVsZU5hbWVQYXJ0RnJvbVJ1bGVOYW1lKHJlZHVjZWRMZWZ0UmVjdXJzaXZlUnVsZU5hbWUsIGxvb2tBaGVhZCksXG4gICAgICAgICAgcmV3cml0dGVuRGVmaW5pdGlvbiA9IG5ldyBSZXdyaXR0ZW5EZWZpbml0aW9uKHBhcnRzKTtcblxuICAgIHBhcnRzLnVuc2hpZnQocmVkdWNlZExlZnRSZWN1cnNpdmVSdWxlTmFtZVBhcnQpO1xuXG4gICAgcGFydHMucHVzaCh6ZXJvT3JNb3JlUmVwZWF0ZWRSdWxlTmFtZVBhcnQpO1xuXG4gICAgcmV0dXJuIHJld3JpdHRlbkRlZmluaXRpb247XG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFJlZHVjZWRSdWxlIGZyb20gXCIuLi8uLi9ydWxlL3JlZHVjZWRcIjtcbmltcG9ydCBSZXBlYXRlZFJ1bGUgZnJvbSBcIi4uLy4uL3J1bGUvcmVwZWF0ZWRcIjtcbmltcG9ydCBSZXdyaXR0ZW5SdWxlIGZyb20gXCIuLi8uLi9ydWxlL3Jld3JpdHRlblwiO1xuaW1wb3J0IFJlcGVhdGVkRGVmaW5pdGlvbiBmcm9tIFwiLi4vLi4vZGVmaW5pdGlvbi9yZXBlYXRlZFwiO1xuaW1wb3J0IFJld3JpdHRlbkRlZmluaXRpb24gZnJvbSBcIi4uLy4uL2RlZmluaXRpb24vcmV3cml0dGVuXCI7XG5pbXBvcnQgTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gZnJvbSBcIi4uLy4uL2RlZmluaXRpb24vbGVmdFJlY3Vyc2l2ZVwiO1xuXG5pbXBvcnQgeyBESVJFQ1RMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5pbXBvcnQgeyByZWR1Y2VkUnVsZUZyb21SdWxlLCByZXBlYXRlZFJ1bGVGcm9tUnVsZSwgcmV3cml0dGVuUnVsZUZyb21SdWxlIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9ydWxlXCI7XG5pbXBvcnQgeyBpc0RlZmluaXRpb25VbmFyeSwgaXNEZWZpbml0aW9uQ29tcGxleCwgcmVjdXJzaXZlUnVsZU5hbWVzRnJvbURlZmluaXRpb24sIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNGcm9tRGVmaW5pdGlvbiB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvZGVmaW5pdGlvblwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uIGV4dGVuZHMgTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24ge1xuICByZXdyaXRlKHJ1bGVNYXApIHtcbiAgICBjb25zdCBkZWZpbml0aW9uID0gdGhpcy5nZXREZWZpbml0aW9uKCksXG4gICAgICAgICAgcnVsZU5hbWUgPSB0aGlzLmdldFJ1bGVOYW1lKCksXG4gICAgICAgICAgcnVsZSA9IHJ1bGVNYXBbcnVsZU5hbWVdIHx8IG51bGw7XG5cbiAgICBjb25zdCByZWR1Y2VkUnVsZSA9IHJlZHVjZWRSdWxlRnJvbVJ1bGUocnVsZSwgcnVsZU1hcCwgUmVkdWNlZFJ1bGUpLFxuICAgICAgICAgIHJlZHVjZWRSdWxlRW1wdHkgPSByZWR1Y2VkUnVsZS5pc0VtcHR5KCk7XG5cbiAgICBpZiAocmVkdWNlZFJ1bGVFbXB0eSkge1xuICAgICAgY29uc3QgZGVmaW5pdGlvblN0cmluZyA9IGRlZmluaXRpb24uYXNTdHJpbmcoKTtcblxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgJyR7ZGVmaW5pdGlvblN0cmluZ30nIGRpcmVjdGx5IGxlZnQgcmVjdXJzaXZlIGRlZmluaXRpb24gb2YgdGhlICcke3J1bGVOYW1lfScgcnVsZSBoYXMgbm8gc2libGluZyBub24tbGVmdCByZWN1cnNpdmUgZGVmaW5pdGlvbnMgYW5kIHRoZXJlZm9yZSBjYW5ub3QgYmUgcmV3cml0dGVuLmApO1xuICAgIH1cblxuICAgIGNvbnN0IGxlZnRSZWN1cnNpdmVSdWxlTmFtZSA9IHJ1bGVOYW1lOyAvLy9cblxuICAgIGNvbnN0IHJlcGVhdGVkUnVsZSA9IHJlcGVhdGVkUnVsZUZyb21SdWxlKHJ1bGUsIHJ1bGVNYXAsIFJlcGVhdGVkUnVsZSksXG4gICAgICAgICAgcmVwZWF0ZWREZWZpbml0aW9uID0gUmVwZWF0ZWREZWZpbml0aW9uLmZyb21EZWZpbml0aW9uKGRlZmluaXRpb24pO1xuXG4gICAgcmVwZWF0ZWRSdWxlLmFkZERlZmluaXRpb24ocmVwZWF0ZWREZWZpbml0aW9uKTtcblxuICAgIGNvbnN0IHJld3JpdHRlblJ1bGUgPSByZXdyaXR0ZW5SdWxlRnJvbVJ1bGUocnVsZSwgcnVsZU1hcCwgUmV3cml0dGVuUnVsZSksXG4gICAgICAgICAgcmV3cml0dGVuRGVmaW5pdGlvbiA9IFJld3JpdHRlbkRlZmluaXRpb24uZnJvbURlZmluaXRpb25BbmRMZWZ0UmVjdXJzaXZlUnVsZU5hbWUoZGVmaW5pdGlvbiwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKSxcbiAgICAgICAgICByZXBsYWNlbWVudERlZmluaXRpb24gPSB0aGlzOyAvLy9cblxuICAgIHJld3JpdHRlblJ1bGUucmVwbGFjZURlZmluaXRpb24ocmVwbGFjZW1lbnREZWZpbml0aW9uLCByZXdyaXR0ZW5EZWZpbml0aW9uKTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZU5hbWVBbmREZWZpbml0aW9uKHJ1bGVOYW1lLCBkZWZpbml0aW9uKSB7XG4gICAgbGV0IGRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBudWxsO1xuXG4gICAgY29uc3QgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcyA9IGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNGcm9tRGVmaW5pdGlvbihkZWZpbml0aW9uKSxcbiAgICAgICAgICBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzTGVuZ3RoID0gbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcy5sZW5ndGgsXG4gICAgICAgICAgZGVmaW5pdGlvbkxlZnRSZWN1cnNpdmUgPSAobGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lc0xlbmd0aCA+IDApO1xuXG4gICAgaWYgKGRlZmluaXRpb25MZWZ0UmVjdXJzaXZlKSB7XG4gICAgICBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzLnNvbWUoKGxlZnRSZWN1cnNpdmVSdWxlTmFtZSkgPT4ge1xuICAgICAgICBjb25zdCBydWxlTmFtZUxlZnRSZWN1cnNpdmVSdWxlTmFtZSA9IChydWxlTmFtZSA9PT0gbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKTtcblxuICAgICAgICBpZiAocnVsZU5hbWVMZWZ0UmVjdXJzaXZlUnVsZU5hbWUpIHtcbiAgICAgICAgICBjb25zdCBkZWZpbml0aW9uVW5hcnkgPSBpc0RlZmluaXRpb25VbmFyeShkZWZpbml0aW9uKTtcblxuICAgICAgICAgIGlmIChkZWZpbml0aW9uVW5hcnkpIHtcbiAgICAgICAgICAgIGNvbnN0IGRlZmluaXRpb25TdHJpbmcgPSBkZWZpbml0aW9uLmFzU3RyaW5nKCk7XG5cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlICcke2RlZmluaXRpb25TdHJpbmd9JyBkaXJlY3RseSBsZWZ0IHJlY3Vyc2l2ZSBkZWZpbml0aW9uIG9mIHRoZSAnJHtydWxlTmFtZX0nIHJ1bGUgaXMgdW5hcnkgYW5kIHRoZXJlZm9yZSBjYW5ub3QgYmUgcmV3cml0dGVuLmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IGRlZmluaXRpb25Db21wbGV4ID0gaXNEZWZpbml0aW9uQ29tcGxleChkZWZpbml0aW9uKTtcblxuICAgICAgICAgIGlmIChkZWZpbml0aW9uQ29tcGxleCkge1xuICAgICAgICAgICAgY29uc3QgZGVmaW5pdGlvblN0cmluZyA9IGRlZmluaXRpb24uYXNTdHJpbmcoKTtcblxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgJyR7ZGVmaW5pdGlvblN0cmluZ30nIGRpcmVjdGx5IGxlZnQgcmVjdXJzaXZlIGRlZmluaXRpb24gb2YgdGhlICcke3J1bGVOYW1lfScgcnVsZSBpcyBjb21wbGV4IGFuZCB0aGVyZWZvcmUgY2Fubm90IGJlIHJld3JpdHRlbi5gKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCB0eXBlID0gRElSRUNUTFlfTEVGVF9SRUNVUlNJVkVfVFlQRSxcbiAgICAgICAgICAgICAgICBwYXJ0cyA9IFtdLFxuICAgICAgICAgICAgICAgIHJlY3Vyc2l2ZVJ1bGVOYW1lcyA9IHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21EZWZpbml0aW9uKGRlZmluaXRpb24pO1xuXG4gICAgICAgICAgZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiA9IG5ldyBEaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uKHR5cGUsIHBhcnRzLCBydWxlTmFtZSwgZGVmaW5pdGlvbiwgcmVjdXJzaXZlUnVsZU5hbWVzLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzKTtcblxuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjtcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9uZWNlc3NhcnkgPSByZXF1aXJlKFwibmVjZXNzYXJ5XCIpO1xudmFyIF9sZWZ0UmVjdXJzaXZlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vZGVmaW5pdGlvbi9sZWZ0UmVjdXJzaXZlXCIpKTtcbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi4vLi4vdHlwZXNcIik7XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBmaXJzdCA9IF9uZWNlc3NhcnkuYXJyYXlVdGlsaXRpZXMuZmlyc3Q7XG52YXIgSW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbikge1xuICAgIF9pbmhlcml0cyhJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24sIExlZnRSZWN1cnNpdmVEZWZpbml0aW9uKTtcbiAgICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbik7XG4gICAgZnVuY3Rpb24gSW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uKHR5cGUsIHBhcnRzLCBydWxlTmFtZSwgZGVmaW5pdGlvbiwgcmVjdXJzaXZlUnVsZU5hbWVzLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzLCBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbikge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uKTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHR5cGUsIHBhcnRzLCBydWxlTmFtZSwgZGVmaW5pdGlvbiwgcmVjdXJzaXZlUnVsZU5hbWVzLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzKTtcbiAgICAgICAgX3RoaXMubGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoSW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldExlZnRSZWN1cnNpdmVEZWZpbml0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMubGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcInJlcGxhY2VcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZXBsYWNlKHJ1bGVNYXApIHtcbiAgICAgICAgICAgICAgICB2YXIgcnVsZSA9IHJ1bGVNYXBbdGhpcy5ydWxlTmFtZV0gfHwgbnVsbCwgcmVwbGFjZWREZWZpbml0aW9uID0gdGhpcy5sZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiwgcmVwbGFjZW1lbnREZWZpbml0aW9uID0gdGhpczsgLy8vXG4gICAgICAgICAgICAgICAgcnVsZS5yZXBsYWNlRGVmaW5pdGlvbihyZXBsYWNlZERlZmluaXRpb24sIHJlcGxhY2VtZW50RGVmaW5pdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJmcm9tUnVsZU5hbWVMZWZ0UmVjdXJzaXZlUnVsZU5hbWVBbmRSZWN1cnNpdmVEZWZpbml0aW9uc1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZyb21SdWxlTmFtZUxlZnRSZWN1cnNpdmVSdWxlTmFtZUFuZFJlY3Vyc2l2ZURlZmluaXRpb25zKHJ1bGVOYW1lLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWUsIHJlY3Vyc2l2ZURlZmluaXRpb25zKSB7XG4gICAgICAgICAgICAgICAgdmFyIGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiA9IG51bGw7XG4gICAgICAgICAgICAgICAgdmFyIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uID0gZmluZExlZnRSZWN1cnNpdmVEZWZpbml0aW9uKHJ1bGVOYW1lLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWUsIHJlY3Vyc2l2ZURlZmluaXRpb25zKTtcbiAgICAgICAgICAgICAgICBpZiAobGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGUgPSBfdHlwZXMuSU1QTElDSVRMWV9MRUZUX1JFQ1VSU0lWRV9UWVBFLCBwYXJ0cyA9IGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uLmdldFBhcnRzKCksIF8kcnVsZU5hbWUgPSBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbi5nZXRSdWxlTmFtZSgpLCBkZWZpbml0aW9uID0gbnVsbCwgcmVjdXJzaXZlUnVsZU5hbWVzID0gbGVmdFJlY3Vyc2l2ZURlZmluaXRpb24uZ2V0UmVjdXJzaXZlUnVsZU5hbWVzKCksIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMgPSBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbi5nZXRMZWZ0UmVjdXJzaXZlUnVsZU5hbWVzKCk7XG4gICAgICAgICAgICAgICAgICAgIGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiA9IG5ldyBJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24odHlwZSwgcGFydHMsIF8kcnVsZU5hbWUsIGRlZmluaXRpb24sIHJlY3Vyc2l2ZVJ1bGVOYW1lcywgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcywgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gaW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIEltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjtcbn0oX2xlZnRSZWN1cnNpdmUuZGVmYXVsdCk7XG5leHBvcnRzLmRlZmF1bHQgPSBJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb247XG5mdW5jdGlvbiBmaW5kTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24ocnVsZU5hbWUsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZSwgcmVjdXJzaXZlRGVmaW5pdGlvbnMpIHtcbiAgICB2YXIgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBudWxsO1xuICAgIHZhciBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoID0gZmluZExlZnRSZWN1cnNpdmVEZWZpbml0aW9uc1BhdGgocnVsZU5hbWUsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZSwgcmVjdXJzaXZlRGVmaW5pdGlvbnMpO1xuICAgIGlmIChsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBmaXJzdExlZnRSZWN1cnNpdmVEZWZpbml0aW9uID0gZmlyc3QobGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aCk7XG4gICAgICAgIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uID0gZmlyc3RMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjsgLy8vXG4gICAgfVxuICAgIHJldHVybiBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjtcbn1cbmZ1bmN0aW9uIGZpbmRSZWN1cnNpdmVEZWZpbml0aW9uc1BhdGgocnVsZU5hbWUsIHJlY3Vyc2l2ZVJ1bGVOYW1lLCByZWN1cnNpdmVEZWZpbml0aW9ucykge1xuICAgIHZhciByZWN1cnNpdmVEZWZpbml0aW9uc1BhdGggPSBudWxsO1xuICAgIHJlY3Vyc2l2ZURlZmluaXRpb25zLnNvbWUoZnVuY3Rpb24ocmVjdXJzaXZlRGVmaW5pdGlvbiwgaW5kZXgpIHtcbiAgICAgICAgdmFyIHJlY3Vyc2l2ZURlZmluaXRpb25SdWxlTmFtZSA9IHJlY3Vyc2l2ZURlZmluaXRpb24uZ2V0UnVsZU5hbWUoKSwgcmVjdXJzaXZlRGVmaW5pdGlvblJ1bGVOYW1lUmVjdXJzaXZlUnVsZU5hbWUgPSByZWN1cnNpdmVEZWZpbml0aW9uUnVsZU5hbWUgPT09IHJlY3Vyc2l2ZVJ1bGVOYW1lO1xuICAgICAgICBpZiAocmVjdXJzaXZlRGVmaW5pdGlvblJ1bGVOYW1lUmVjdXJzaXZlUnVsZU5hbWUpIHtcbiAgICAgICAgICAgIHJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aCA9IHJlY3Vyc2l2ZURlZmluaXRpb25zLnNsaWNlKGluZGV4KTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aDtcbn1cbmZ1bmN0aW9uIGZpbmRMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoKHJ1bGVOYW1lLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWUsIHJlY3Vyc2l2ZURlZmluaXRpb25zKSB7XG4gICAgdmFyIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uc1BhdGggPSBudWxsO1xuICAgIHZhciByZWN1cnNpdmVSdWxlTmFtZSA9IGxlZnRSZWN1cnNpdmVSdWxlTmFtZSwgcmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoID0gZmluZFJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aChydWxlTmFtZSwgcmVjdXJzaXZlUnVsZU5hbWUsIHJlY3Vyc2l2ZURlZmluaXRpb25zKTtcbiAgICBpZiAocmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoICE9PSBudWxsKSB7XG4gICAgICAgIHZhciByZWN1cnNpdmVEZWZpbml0aW9uc1BhdGhMZWZ0UmVjdXJzaXZlID0gaXNSZWN1cnNpdmVEZWZpbml0aW9uc1BhdGhMZWZ0UmVjdXJzaXZlKHJ1bGVOYW1lLCByZWN1cnNpdmVEZWZpbml0aW9uc1BhdGgpO1xuICAgICAgICBpZiAocmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoTGVmdFJlY3Vyc2l2ZSkge1xuICAgICAgICAgICAgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aCA9IHJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aDsgLy8vXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uc1BhdGg7XG59XG5mdW5jdGlvbiBpc1JlY3Vyc2l2ZURlZmluaXRpb25zUGF0aExlZnRSZWN1cnNpdmUocnVsZU5hbWUsIHJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aCkge1xuICAgIHZhciBydWxlTmFtZXMgPSBydWxlTmFtZXNGcm9tUnVsZU5hbWVBbmRSZWN1cnNpdmVEZWZpbml0aW9uc1BhdGgocnVsZU5hbWUsIHJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aCksIHJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aExlZnRSZWN1cnNpdmUgPSByZWN1cnNpdmVEZWZpbml0aW9uc1BhdGguZXZlcnkoZnVuY3Rpb24ocmVjdXJzaXZlRGVmaW5pdGlvbiwgaW5kZXgpIHtcbiAgICAgICAgdmFyIHR5cGUgPSByZWN1cnNpdmVEZWZpbml0aW9uLmdldFR5cGUoKTtcbiAgICAgICAgaWYgKHR5cGUgPT09IF90eXBlcy5MRUZUX1JFQ1VSU0lWRV9UWVBFKSB7XG4gICAgICAgICAgICB2YXIgXyRydWxlTmFtZSA9IHJ1bGVOYW1lc1tpbmRleF0sIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMgPSByZWN1cnNpdmVEZWZpbml0aW9uLmdldExlZnRSZWN1cnNpdmVSdWxlTmFtZXMoKSwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lc0luY2x1ZGVzUnVsZU5hbWUgPSBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzLmluY2x1ZGVzKF8kcnVsZU5hbWUpO1xuICAgICAgICAgICAgaWYgKGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNJbmNsdWRlc1J1bGVOYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoTGVmdFJlY3Vyc2l2ZTtcbn1cbmZ1bmN0aW9uIHJ1bGVOYW1lc0Zyb21SdWxlTmFtZUFuZFJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aChydWxlTmFtZSwgcmVjdXJzaXZlRGVmaW5pdGlvbnNQYXRoKSB7XG4gICAgdmFyIHJ1bGVOYW1lcyA9IHJlY3Vyc2l2ZURlZmluaXRpb25zUGF0aC5tYXAoZnVuY3Rpb24ocmVjdXJzaXZlRGVmaW5pdGlvbikge1xuICAgICAgICByZXR1cm4gcmVjdXJzaXZlRGVmaW5pdGlvbi5nZXRSdWxlTmFtZSgpO1xuICAgIH0pO1xuICAgIHJ1bGVOYW1lcy5wdXNoKHJ1bGVOYW1lKTtcbiAgICB2YXIgZmlyc3RSdWxlTmFtZSA9IHJ1bGVOYW1lcy5zaGlmdCgpLCBsYXN0UnVsZU5hbWUgPSBmaXJzdFJ1bGVOYW1lOyAvLy9cbiAgICBydWxlTmFtZXMucHVzaChsYXN0UnVsZU5hbWUpO1xuICAgIHJldHVybiBydWxlTmFtZXM7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwzTnlZeTlrWldacGJtbDBhVzl1TDJ4bFpuUlNaV04xY25OcGRtVXZhVzF3YkdsamFYUnNlUzVxY3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmNJblZ6WlNCemRISnBZM1JjSWp0Y2JseHVhVzF3YjNKMElIc2dZWEp5WVhsVmRHbHNhWFJwWlhNZ2ZTQm1jbTl0SUZ3aWJtVmpaWE56WVhKNVhDSTdYRzVjYm1sdGNHOXlkQ0JNWldaMFVtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJpQm1jbTl0SUZ3aUxpNHZMaTR2WkdWbWFXNXBkR2x2Ymk5c1pXWjBVbVZqZFhKemFYWmxYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lFeEZSbFJmVWtWRFZWSlRTVlpGWDFSWlVFVXNJRWxOVUV4SlEwbFVURmxmVEVWR1ZGOVNSVU5WVWxOSlZrVmZWRmxRUlNCOUlHWnliMjBnWENJdUxpOHVMaTkwZVhCbGMxd2lPMXh1WEc1amIyNXpkQ0I3SUdacGNuTjBJSDBnUFNCaGNuSmhlVlYwYVd4cGRHbGxjenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJ4aGMzTWdTVzF3YkdsamFYUnNlVXhsWm5SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUlHVjRkR1Z1WkhNZ1RHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjRnZTF4dUlDQmpiMjV6ZEhKMVkzUnZjaWgwZVhCbExDQndZWEowY3l3Z2NuVnNaVTVoYldVc0lHUmxabWx1YVhScGIyNHNJSEpsWTNWeWMybDJaVkoxYkdWT1lXMWxjeXdnYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5d2diR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0cElIdGNiaUFnSUNCemRYQmxjaWgwZVhCbExDQndZWEowY3l3Z2NuVnNaVTVoYldVc0lHUmxabWx1YVhScGIyNHNJSEpsWTNWeWMybDJaVkoxYkdWT1lXMWxjeXdnYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5azdYRzVjYmlBZ0lDQjBhR2x6TG14bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJRDBnYkdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNDdYRzRnSUgxY2JseHVJQ0JuWlhSTVpXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaWdwSUh0Y2JpQWdJQ0IwYUdsekxteGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1SUQwZ2JHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjQ3WEc0Z0lIMWNibHh1SUNCeVpYQnNZV05sS0hKMWJHVk5ZWEFwSUh0Y2JpQWdJQ0JqYjI1emRDQnlkV3hsSUQwZ2NuVnNaVTFoY0Z0MGFHbHpMbkoxYkdWT1lXMWxYU0I4ZkNCdWRXeHNMRnh1SUNBZ0lDQWdJQ0FnSUhKbGNHeGhZMlZrUkdWbWFXNXBkR2x2YmlBOUlIUm9hWE11YkdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNHNJQ0F2THk5Y2JpQWdJQ0FnSUNBZ0lDQnlaWEJzWVdObGJXVnVkRVJsWm1sdWFYUnBiMjRnUFNCMGFHbHpPeUF2THk5Y2JseHVJQ0FnSUhKMWJHVXVjbVZ3YkdGalpVUmxabWx1YVhScGIyNG9jbVZ3YkdGalpXUkVaV1pwYm1sMGFXOXVMQ0J5WlhCc1lXTmxiV1Z1ZEVSbFptbHVhWFJwYjI0cE8xeHVJQ0I5WEc1Y2JpQWdjM1JoZEdsaklHWnliMjFTZFd4bFRtRnRaVXhsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlVGdVpGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNXpLSEoxYkdWT1lXMWxMQ0JzWldaMFVtVmpkWEp6YVhabFVuVnNaVTVoYldVc0lISmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNXpLU0I3WEc0Z0lDQWdiR1YwSUdsdGNHeHBZMmwwYkhsTVpXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaUE5SUc1MWJHdzdYRzVjYmlBZ0lDQmpiMjV6ZENCc1pXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaUE5SUdacGJtUk1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmloeWRXeGxUbUZ0WlN3Z2JHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxMQ0J5WldOMWNuTnBkbVZFWldacGJtbDBhVzl1Y3lrN1hHNWNiaUFnSUNCcFppQW9iR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0Z0lUMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lHTnZibk4wSUhSNWNHVWdQU0JKVFZCTVNVTkpWRXhaWDB4RlJsUmZVa1ZEVlZKVFNWWkZYMVJaVUVVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVhKMGN5QTlJR3hsWm5SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUxtZGxkRkJoY25SektDa3NYRzRnSUNBZ0lDQWdJQ0FnSUNCeWRXeGxUbUZ0WlNBOUlHeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1TG1kbGRGSjFiR1ZPWVcxbEtDa3NYRzRnSUNBZ0lDQWdJQ0FnSUNCa1pXWnBibWwwYVc5dUlEMGdiblZzYkN3Z0x5OHZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNZ1BTQnNaV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2Ymk1blpYUlNaV04xY25OcGRtVlNkV3hsVG1GdFpYTW9LU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaWE1nUFNCc1pXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaTVuWlhSTVpXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpLQ2s3WEc1Y2JpQWdJQ0FnSUdsdGNHeHBZMmwwYkhsTVpXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaUE5SUc1bGR5QkpiWEJzYVdOcGRHeDVUR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0b2RIbHdaU3dnY0dGeWRITXNJSEoxYkdWT1lXMWxMQ0JrWldacGJtbDBhVzl1TENCeVpXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNc0lHeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaWE1zSUd4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2FXMXdiR2xqYVhSc2VVeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1TzF4dUlDQjlYRzU5WEc1Y2JtWjFibU4wYVc5dUlHWnBibVJNWldaMFVtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJpaHlkV3hsVG1GdFpTd2diR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsTENCeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dWN5a2dlMXh1SUNCc1pYUWdiR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0Z1BTQnVkV3hzTzF4dVhHNGdJR052Ym5OMElHeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1YzFCaGRHZ2dQU0JtYVc1a1RHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDaHlkV3hsVG1GdFpTd2diR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsTENCeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dWN5azdYRzVjYmlBZ2FXWWdLR3hsWm5SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dWMxQmhkR2dnSVQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0JqYjI1emRDQm1hWEp6ZEV4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJRDBnWm1seWMzUW9iR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI1elVHRjBhQ2s3WEc1Y2JpQWdJQ0JzWldaMFVtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJpQTlJR1pwY25OMFRHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjQ3SUM4dkwxeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1TzF4dWZWeHVYRzVtZFc1amRHbHZiaUJtYVc1a1VtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJuTlFZWFJvS0hKMWJHVk9ZVzFsTENCeVpXTjFjbk5wZG1WU2RXeGxUbUZ0WlN3Z2NtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJuTXBJSHRjYmlBZ2JHVjBJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDQTlJRzUxYkd3N1hHNWNiaUFnY21WamRYSnphWFpsUkdWbWFXNXBkR2x2Ym5NdWMyOXRaU2dvY21WamRYSnphWFpsUkdWbWFXNXBkR2x2Yml3Z2FXNWtaWGdwSUQwK0lIdGNiaUFnSUNCamIyNXpkQ0J5WldOMWNuTnBkbVZFWldacGJtbDBhVzl1VW5Wc1pVNWhiV1VnUFNCeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUxtZGxkRkoxYkdWT1lXMWxLQ2tzWEc0Z0lDQWdJQ0FnSUNBZ2NtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJsSjFiR1ZPWVcxbFVtVmpkWEp6YVhabFVuVnNaVTVoYldVZ1BTQW9jbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZibEoxYkdWT1lXMWxJRDA5UFNCeVpXTjFjbk5wZG1WU2RXeGxUbUZ0WlNrN1hHNWNiaUFnSUNCcFppQW9jbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZibEoxYkdWT1lXMWxVbVZqZFhKemFYWmxVblZzWlU1aGJXVXBJSHRjYmlBZ0lDQWdJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDQTlJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6TG5Oc2FXTmxLR2x1WkdWNEtUdGNibHh1SUNBZ0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lDQWdmVnh1SUNCOUtUdGNibHh1SUNCeVpYUjFjbTRnY21WamRYSnphWFpsUkdWbWFXNXBkR2x2Ym5OUVlYUm9PMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQm1hVzVrVEdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNXpVR0YwYUNoeWRXeGxUbUZ0WlN3Z2JHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxMQ0J5WldOMWNuTnBkbVZFWldacGJtbDBhVzl1Y3lrZ2UxeHVJQ0JzWlhRZ2JHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDQTlJRzUxYkd3N1hHNWNiaUFnWTI5dWMzUWdjbVZqZFhKemFYWmxVblZzWlU1aGJXVWdQU0JzWldaMFVtVmpkWEp6YVhabFVuVnNaVTVoYldVc0lDQXZMeTljYmlBZ0lDQWdJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDQTlJR1pwYm1SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dWMxQmhkR2dvY25Wc1pVNWhiV1VzSUhKbFkzVnljMmwyWlZKMWJHVk9ZVzFsTENCeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dWN5azdYRzVjYmlBZ2FXWWdLSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDQWhQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lHTnZibk4wSUhKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI1elVHRjBhRXhsWm5SU1pXTjFjbk5wZG1VZ1BTQnBjMUpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFFeGxablJTWldOMWNuTnBkbVVvY25Wc1pVNWhiV1VzSUhKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI1elVHRjBhQ2s3WEc1Y2JpQWdJQ0JwWmlBb2NtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJuTlFZWFJvVEdWbWRGSmxZM1Z5YzJsMlpTa2dlMXh1SUNBZ0lDQWdiR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI1elVHRjBhQ0E5SUhKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI1elVHRjBhRHNnSUM4dkwxeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCc1pXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZibk5RWVhSb08xeHVmVnh1WEc1bWRXNWpkR2x2YmlCcGMxSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNXpVR0YwYUV4bFpuUlNaV04xY25OcGRtVW9jblZzWlU1aGJXVXNJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDa2dlMXh1SUNCamIyNXpkQ0J5ZFd4bFRtRnRaWE1nUFNCeWRXeGxUbUZ0WlhOR2NtOXRVblZzWlU1aGJXVkJibVJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1YzFCaGRHZ29jblZzWlU1aGJXVXNJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDa3NYRzRnSUNBZ0lDQWdJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFFeGxablJTWldOMWNuTnBkbVVnUFNCeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dWMxQmhkR2d1WlhabGNua29LSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjRzSUdsdVpHVjRLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RIbHdaU0E5SUhKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0dVoyVjBWSGx3WlNncE8xeHVYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1VnUFQwOUlFeEZSbFJmVWtWRFZWSlRTVlpGWDFSWlVFVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhKMWJHVk9ZVzFsSUQwZ2NuVnNaVTVoYldWelcybHVaR1Y0WFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaWE1nUFNCeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUxtZGxkRXhsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNb0tTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlhOSmJtTnNkV1JsYzFKMWJHVk9ZVzFsSUQwZ2JHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxjeTVwYm1Oc2RXUmxjeWh5ZFd4bFRtRnRaU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoc1pXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpTVzVqYkhWa1pYTlNkV3hsVG1GdFpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwcE8xeHVYRzRnSUhKbGRIVnliaUJ5WldOMWNuTnBkbVZFWldacGJtbDBhVzl1YzFCaGRHaE1aV1owVW1WamRYSnphWFpsTzF4dWZWeHVYRzVtZFc1amRHbHZiaUJ5ZFd4bFRtRnRaWE5HY205dFVuVnNaVTVoYldWQmJtUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVjMUJoZEdnb2NuVnNaVTVoYldVc0lISmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNXpVR0YwYUNrZ2UxeHVJQ0JqYjI1emRDQnlkV3hsVG1GdFpYTWdQU0J5WldOMWNuTnBkbVZFWldacGJtbDBhVzl1YzFCaGRHZ3ViV0Z3S0NoeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUtTQTlQaUJ5WldOMWNuTnBkbVZFWldacGJtbDBhVzl1TG1kbGRGSjFiR1ZPWVcxbEtDa3BPMXh1WEc0Z0lISjFiR1ZPWVcxbGN5NXdkWE5vS0hKMWJHVk9ZVzFsS1R0Y2JseHVJQ0JqYjI1emRDQm1hWEp6ZEZKMWJHVk9ZVzFsSUQwZ2NuVnNaVTVoYldWekxuTm9hV1owS0Nrc1hHNGdJQ0FnSUNBZ0lHeGhjM1JTZFd4bFRtRnRaU0E5SUdacGNuTjBVblZzWlU1aGJXVTdJQzh2TDF4dVhHNGdJSEoxYkdWT1lXMWxjeTV3ZFhOb0tHeGhjM1JTZFd4bFRtRnRaU2s3WEc1Y2JpQWdjbVYwZFhKdUlISjFiR1ZPWVcxbGN6dGNibjFjYmlKZExDSnVZVzFsY3lJNld5Sm1hWEp6ZENJc0ltRnljbUY1VlhScGJHbDBhV1Z6SWl3aVNXMXdiR2xqYVhSc2VVeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1SWl3aWRIbHdaU0lzSW5CaGNuUnpJaXdpY25Wc1pVNWhiV1VpTENKa1pXWnBibWwwYVc5dUlpd2ljbVZqZFhKemFYWmxVblZzWlU1aGJXVnpJaXdpYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5SXNJbXhsWm5SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUlpd2laMlYwVEdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGlMQ0p5WlhCc1lXTmxJaXdpY25Wc1pVMWhjQ0lzSW5KMWJHVWlMQ0p5WlhCc1lXTmxaRVJsWm1sdWFYUnBiMjRpTENKeVpYQnNZV05sYldWdWRFUmxabWx1YVhScGIyNGlMQ0p5WlhCc1lXTmxSR1ZtYVc1cGRHbHZiaUlzSW1aeWIyMVNkV3hsVG1GdFpVeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaVUZ1WkZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI1eklpd2liR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsSWl3aWNtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJuTWlMQ0pwYlhCc2FXTnBkR3g1VEdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGlMQ0ptYVc1a1RHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjRpTENKSlRWQk1TVU5KVkV4WlgweEZSbFJmVWtWRFZWSlRTVlpGWDFSWlVFVWlMQ0puWlhSUVlYSjBjeUlzSW1kbGRGSjFiR1ZPWVcxbElpd2laMlYwVW1WamRYSnphWFpsVW5Wc1pVNWhiV1Z6SWl3aVoyVjBUR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsY3lJc0lreGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1SWl3aWJHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDSXNJbVpwYm1STVpXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZibk5RWVhSb0lpd2labWx5YzNSTVpXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaUlzSW1acGJtUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVjMUJoZEdnaUxDSnlaV04xY25OcGRtVlNkV3hsVG1GdFpTSXNJbkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6VUdGMGFDSXNJbk52YldVaUxDSnlaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJaXdpYVc1a1pYZ2lMQ0p5WldOMWNuTnBkbVZFWldacGJtbDBhVzl1VW5Wc1pVNWhiV1VpTENKeVpXTjFjbk5wZG1WRVpXWnBibWwwYVc5dVVuVnNaVTVoYldWU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlNJc0luTnNhV05sSWl3aWNtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJuTlFZWFJvVEdWbWRGSmxZM1Z5YzJsMlpTSXNJbWx6VW1WamRYSnphWFpsUkdWbWFXNXBkR2x2Ym5OUVlYUm9UR1ZtZEZKbFkzVnljMmwyWlNJc0luSjFiR1ZPWVcxbGN5SXNJbkoxYkdWT1lXMWxjMFp5YjIxU2RXeGxUbUZ0WlVGdVpGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNXpVR0YwYUNJc0ltVjJaWEo1SWl3aVoyVjBWSGx3WlNJc0lreEZSbFJmVWtWRFZWSlRTVlpGWDFSWlVFVWlMQ0pzWldaMFVtVmpkWEp6YVhabFVuVnNaVTVoYldWelNXNWpiSFZrWlhOU2RXeGxUbUZ0WlNJc0ltbHVZMngxWkdWeklpd2liV0Z3SWl3aWNIVnphQ0lzSW1acGNuTjBVblZzWlU1aGJXVWlMQ0p6YUdsbWRDSXNJbXhoYzNSU2RXeGxUbUZ0WlNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1EwRkJXU3hYUVVGQkxFTkJRVU03T3p0Rk8zZENPMEZCUld0Q0xFZEJRVmNzUTBGQldDeFZRVUZYTzBGQlJVNHNSMEZCWjBNc1EwRkJhRU1zWTBGQlowTTdRVUZGUVN4SFFVRmhMRU5CUVdJc1RVRkJZVHM3T3pzN096czdPenM3T3pzN096aEVPM05ET3paRU8ybEZPenM3TzNkRk8yZEZPenM3T3pzN1N6czdPenM3T3pzN096czdPenROTzNsRU96czdPenM3T3pzN096czdPenM3ZFVJN08wczdPenM3TWtJN096czdPenM3TzNGR096czdPenM3T3pzN096czdiVVU3TzJsRU96czdPenRCUVVWcVJpeEhRVUZMTEVOQlFVZEJMRXRCUVVzc1IwRkJTME1zVlVGQll5eG5Ra0ZCZUVKRUxFdEJRVXM3U1VGRlVVVXNhVU5CUVdsRExHbENRVUYyUXl4UlFVRlJPM2xGT3p0aFFVRkdRU3hwUTBGQmFVTXNRMEZEZUVORExFbEJRVWtzUlVGQlJVTXNTMEZCU3l4RlFVRkZReXhSUVVGUkxFVkJRVVZETEZWQlFWVXNSVUZCUlVNc2EwSkJRV3RDTEVWQlFVVkRMSE5DUVVGelFpeEZRVUZGUXl4MVFrRkJkVUk3WjBVN08ydERRVU14UjA0c1NVRkJTU3hGUVVGRlF5eExRVUZMTEVWQlFVVkRMRkZCUVZFc1JVRkJSVU1zVlVGQlZTeEZRVUZGUXl4clFrRkJhMElzUlVGQlJVTXNjMEpCUVhOQ0xFTkRXblpHTEVORVdYbEdPMk5CUldoR1F5eDFRa0ZCZFVJc1IwRkJSMEVzZFVKQlFYVkNMRU5CUVVNN096czdPMWxCUjNwRVF5eEhRVUV3UWl4RlFVRXhRa0VzUTBGQk1FSTdiVUpCUVRGQ1FTeFJRVUZSTEVOQlFWSkJMREJDUVVFd1FpeEhRVUZITEVOQlFVTTdaMEpCUXpWQ0xFbEJRVWtzUTBGQlEwUXNkVUpCUVhWQ0xFZEJRVWRCTEhWQ1FVRjFRaXhEUVVGRE8xbEJRM3BFTEVOQlFVTTdPenRaUVVWRVJTeEhRVUZQTEVWQlFWQkJMRU5CUVU4N2JVSkJRVkJCTEZGQlFWRkRMRU5CUVZKRUxFOUJRVThzUTBGQlEwTXNUMEZCVHl4RlFVRkZMRU5CUVVNN1owSkJRMmhDTEVkQlFVc3NRMEZCUTBNc1NVRkJTU3hIUVVGSFJDeFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRVQ3hSUVVGUkxFdEJRVXNzU1VGQlNTeEZRVU55UTFNc2EwSkJRV3RDTEVkQlFVY3NTVUZCU1N4RFFVRkRUQ3gxUWtGQmRVSXNSVUZEYWtSTkxIRkNRVUZ4UWl4SFFVRkhMRWxCUVVrc1JVRkJSU3hGUVVGSExFRkJRVWdzUTBGQlJ6dG5Ra0ZGZGtOR0xFbEJRVWtzUTBGQlEwY3NhVUpCUVdsQ0xFTkJRVU5HTEd0Q1FVRnJRaXhGUVVGRlF5eHhRa0ZCY1VJc1EwRkJReXhEUVVGRE8xbEJRM0JGTEVOQlFVTTdPenM3V1VGRlRVVXNSMEZCZDBRc1JVRkJlRVJCTEVOQlFYZEVPMjFDUVVFdlJDeFJRVUZSTEVOQlFVUkJMSGRFUVVGM1JDeERRVUZEV2l4UlFVRlJMRVZCUVVWaExIRkNRVUZ4UWl4RlFVRkZReXh2UWtGQmIwSXNSVUZCUlN4RFFVRkRPMmRDUVVOMFNDeEhRVUZITEVOQlFVTkRMR2xEUVVGcFF5eEhRVUZITEVsQlFVazdaMEpCUlRWRExFZEJRVXNzUTBGQlExZ3NkVUpCUVhWQ0xFZEJRVWRaTERKQ1FVRXlRaXhEUVVGRGFFSXNVVUZCVVN4RlFVRkZZU3h4UWtGQmNVSXNSVUZCUlVNc2IwSkJRVzlDTzJkQ1FVVnFTQ3hGUVVGRkxFVkJRVVZXTEhWQ1FVRjFRaXhMUVVGTExFbEJRVWtzUlVGQlJTeERRVUZETzI5Q1FVTnlReXhIUVVGTExFTkJRVU5PTEVsQlFVa3NSMEZCUjIxQ0xFMUJRVGhDTEdsRFFVTnlRMnhDTEV0QlFVc3NSMEZCUjBzc2RVSkJRWFZDTEVOQlFVTmpMRkZCUVZFc1NVRkRlRU5zUWl4VlFVRlJMRWRCUVVkSkxIVkNRVUYxUWl4RFFVRkRaU3hYUVVGWExFbEJRemxEYkVJc1ZVRkJWU3hIUVVGSExFbEJRVWtzUlVGRGFrSkRMR3RDUVVGclFpeEhRVUZIUlN4MVFrRkJkVUlzUTBGQlEyZENMSEZDUVVGeFFpeEpRVU5zUldwQ0xITkNRVUZ6UWl4SFFVRkhReXgxUWtGQmRVSXNRMEZCUTJsQ0xIbENRVUY1UWp0dlFrRkZhRVpPTEdsRFFVRnBReXhIUVVGSExFZEJRVWNzUTBGQlEyeENMR2xEUVVGcFF5eERRVUZEUXl4SlFVRkpMRVZCUVVWRExFdEJRVXNzUlVGQlJVTXNWVUZCVVN4RlFVRkZReXhWUVVGVkxFVkJRVVZETEd0Q1FVRnJRaXhGUVVGRlF5eHpRa0ZCYzBJc1JVRkJSVU1zZFVKQlFYVkNMRU5CUVVNc1EwRkJRenRuUWtGRGNFd3NRMEZCUXp0blFrRkZSQ3hOUVVGTkxFTkJRVU5YTEdsRFFVRnBRenRaUVVNeFF5eERRVUZET3p0Tk96dEZRWEJETkVSUExHTkJRWFZDTzJ0Q1FVRnFSWHBDTEdsRFFVRnBReXhCTzFOQmRVTTNRMjFDTERKQ1FVRXlRaXhEUVVGRGFFSXNVVUZCVVN4RlFVRkZZU3h4UWtGQmNVSXNSVUZCUlVNc2IwSkJRVzlDTEVWQlFVVXNRMEZCUXp0SlFVTXpSaXhIUVVGSExFTkJRVU5XTEhWQ1FVRjFRaXhIUVVGSExFbEJRVWs3U1VGRmJFTXNSMEZCU3l4RFFVRkRiVUlzTkVKQlFUUkNMRWRCUVVkRExHZERRVUZuUXl4RFFVRkRlRUlzVVVGQlVTeEZRVUZGWVN4eFFrRkJjVUlzUlVGQlJVTXNiMEpCUVc5Q08wbEJSVE5JTEVWQlFVVXNSVUZCUlZNc05FSkJRVFJDTEV0QlFVc3NTVUZCU1N4RlFVRkZMRU5CUVVNN1VVRkRNVU1zUjBGQlN5eERRVUZEUlN3MFFrRkJORUlzUjBGQlJ6bENMRXRCUVVzc1EwRkJRelJDTERSQ1FVRTBRanRSUVVWMlJXNUNMSFZDUVVGMVFpeEhRVUZIY1VJc05FSkJRVFJDTEVOQlFVTXNRMEZCUXl4RlFVRkhMRUZCUVVnc1EwRkJSenRKUVVNM1JDeERRVUZETzBsQlJVUXNUVUZCVFN4RFFVRkRja0lzZFVKQlFYVkNPMEZCUTJoRExFTkJRVU03VTBGRlVYTkNMRFJDUVVFMFFpeERRVUZETVVJc1VVRkJVU3hGUVVGRk1rSXNhVUpCUVdsQ0xFVkJRVVZpTEc5Q1FVRnZRaXhGUVVGRkxFTkJRVU03U1VGRGVFWXNSMEZCUnl4RFFVRkRZeXgzUWtGQmQwSXNSMEZCUnl4SlFVRkpPMGxCUlc1RFpDeHZRa0ZCYjBJc1EwRkJRMlVzU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCVUVNc2JVSkJRVzFDTEVWQlFVVkRMRXRCUVVzc1JVRkJTeXhEUVVGRE8xRkJRM3BFTEVkQlFVc3NRMEZCUTBNc01rSkJRVEpDTEVkQlFVZEdMRzFDUVVGdFFpeERRVUZEV0N4WFFVRlhMRWxCUXpkRVl5dzBRMEZCTkVNc1IwRkJTVVFzTWtKQlFUSkNMRXRCUVV0TUxHbENRVUZwUWp0UlFVVjJSeXhGUVVGRkxFVkJRVVZOTERSRFFVRTBReXhGUVVGRkxFTkJRVU03V1VGRGFrUk1MSGRDUVVGM1FpeEhRVUZIWkN4dlFrRkJiMElzUTBGQlEyOUNMRXRCUVVzc1EwRkJRMGdzUzBGQlN5eERRVUZETEVOQlFVTTdXVUZGTjBRc1RVRkJUU3hEUVVGRExFbEJRVWs3VVVGRFlpeERRVUZETzBsQlEwZ3NRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkZTQ3hOUVVGTkxFTkJRVU5JTEhkQ1FVRjNRanRCUVVOcVF5eERRVUZETzFOQlJWRktMR2REUVVGblF5eERRVUZEZUVJc1VVRkJVU3hGUVVGRllTeHhRa0ZCY1VJc1JVRkJSVU1zYjBKQlFXOUNMRVZCUVVVc1EwRkJRenRKUVVOb1J5eEhRVUZITEVOQlFVTlRMRFJDUVVFMFFpeEhRVUZITEVsQlFVazdTVUZGZGtNc1IwRkJTeXhEUVVGRFNTeHBRa0ZCYVVJc1IwRkJSMlFzY1VKQlFYRkNMRVZCUXpORFpTeDNRa0ZCZDBJc1IwRkJSMFlzTkVKQlFUUkNMRU5CUVVNeFFpeFJRVUZSTEVWQlFVVXlRaXhwUWtGQmFVSXNSVUZCUldJc2IwSkJRVzlDTzBsQlJUZEhMRVZCUVVVc1JVRkJSV01zZDBKQlFYZENMRXRCUVVzc1NVRkJTU3hGUVVGRkxFTkJRVU03VVVGRGRFTXNSMEZCU3l4RFFVRkRUeXh4UTBGQmNVTXNSMEZCUjBNc2RVTkJRWFZETEVOQlFVTndReXhSUVVGUkxFVkJRVVUwUWl4M1FrRkJkMEk3VVVGRmVFZ3NSVUZCUlN4RlFVRkZUeXh4UTBGQmNVTXNSVUZCUlN4RFFVRkRPMWxCUXpGRFdpdzBRa0ZCTkVJc1IwRkJSMHNzZDBKQlFYZENMRU5CUVVNc1EwRkJSU3hGUVVGSExFRkJRVWdzUTBGQlJ6dFJRVU12UkN4RFFVRkRPMGxCUTBnc1EwRkJRenRKUVVWRUxFMUJRVTBzUTBGQlEwd3NORUpCUVRSQ08wRkJRM0pETEVOQlFVTTdVMEZGVVdFc2RVTkJRWFZETEVOQlFVTndReXhSUVVGUkxFVkJRVVUwUWl4M1FrRkJkMElzUlVGQlJTeERRVUZETzBsQlEzQkdMRWRCUVVzc1EwRkJRMU1zVTBGQlV5eEhRVUZIUXl4blJFRkJaMFFzUTBGQlEzUkRMRkZCUVZFc1JVRkJSVFJDTEhkQ1FVRjNRaXhIUVVNdlJrOHNjVU5CUVhGRExFZEJRVWRRTEhkQ1FVRjNRaXhEUVVGRFZ5eExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRlFWQ3h0UWtGQmJVSXNSVUZCUlVNc1MwRkJTeXhGUVVGTExFTkJRVU03VVVGRGRFY3NSMEZCU3l4RFFVRkRha01zU1VGQlNTeEhRVUZIWjBNc2JVSkJRVzFDTEVOQlFVTlZMRTlCUVU4N1VVRkZlRU1zUlVGQlJTeEZRVUZGTVVNc1NVRkJTU3hMUVVGTE1rTXNUVUZCYlVJc2MwSkJRVVVzUTBGQlF6dFpRVU5xUXl4SFFVRkxMRU5CUVVONlF5eFZRVUZSTEVkQlFVZHhReXhUUVVGVExFTkJRVU5PTEV0QlFVc3NSMEZETVVJMVFpeHpRa0ZCYzBJc1IwRkJSekpDTEcxQ1FVRnRRaXhEUVVGRFZDeDVRa0ZCZVVJc1NVRkRkRVZ4UWl4elEwRkJjME1zUjBGQlIzWkRMSE5DUVVGelFpeERRVUZEZDBNc1VVRkJVU3hEUVVGRE0wTXNWVUZCVVR0WlFVVjJSaXhGUVVGRkxFVkJRVVV3UXl4elEwRkJjME1zUlVGQlJTeERRVUZETzJkQ1FVTXpReXhOUVVGTkxFTkJRVU1zU1VGQlNUdFpRVU5pTEVOQlFVTTdVVUZEU0N4RFFVRkRPMGxCUTBnc1EwRkJRenRKUVVWUUxFMUJRVTBzUTBGQlExQXNjVU5CUVhGRE8wRkJRemxETEVOQlFVTTdVMEZGVVVjc1owUkJRV2RFTEVOQlFVTjBReXhSUVVGUkxFVkJRVVUwUWl4M1FrRkJkMElzUlVGQlJTeERRVUZETzBsQlF6ZEdMRWRCUVVzc1EwRkJRMU1zVTBGQlV5eEhRVUZIVkN4M1FrRkJkMElzUTBGQlEyZENMRWRCUVVjc1EwRkJReXhSUVVGUkxFTkJRVkJrTEcxQ1FVRnRRanRSUVVGTFFTeE5RVUZOTEVOQlFVNUJMRzFDUVVGdFFpeERRVUZEV0N4WFFVRlhPenRKUVVWMlIydENMRk5CUVZNc1EwRkJRMUVzU1VGQlNTeERRVUZETjBNc1VVRkJVU3hEUVVGRExFTkJRVU03U1VGRmVrSXNSMEZCU3l4RFFVRkRPRU1zWVVGQllTeEhRVUZIVkN4VFFVRlRMRU5CUVVOVkxFdEJRVXNzU1VGREwwSkRMRmxCUVZrc1IwRkJSMFlzWVVGQllTeEZRVUZGTEVWQlFVY3NRVUZCU0N4RFFVRkhPMGxCUlhaRFZDeFRRVUZUTEVOQlFVTlJMRWxCUVVrc1EwRkJRMGNzV1VGQldTeERRVUZETEVOQlFVTTdTVUZGTjBJc1RVRkJUU3hEUVVGRFdDeFRRVUZUTzBGQlEyeENMRU5CUVVNaWZRPT0iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX25lY2Vzc2FyeSA9IHJlcXVpcmUoXCJuZWNlc3NhcnlcIik7XG52YXIgX3JlZHVjZWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9ydWxlL3JlZHVjZWRcIikpO1xudmFyIF9yZXBlYXRlZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL3J1bGUvcmVwZWF0ZWRcIikpO1xudmFyIF9yZXdyaXR0ZW4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9ydWxlL3Jld3JpdHRlblwiKSk7XG52YXIgX3JlcGVhdGVkMSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL2RlZmluaXRpb24vcmVwZWF0ZWRcIikpO1xudmFyIF9yZXdyaXR0ZW4xID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vZGVmaW5pdGlvbi9yZXdyaXR0ZW5cIikpO1xudmFyIF9sZWZ0UmVjdXJzaXZlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vZGVmaW5pdGlvbi9sZWZ0UmVjdXJzaXZlXCIpKTtcbnZhciBfaW1wbGljaXRseSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL2RlZmluaXRpb24vbGVmdFJlY3Vyc2l2ZS9pbXBsaWNpdGx5XCIpKTtcbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi4vLi4vdHlwZXNcIik7XG52YXIgX3J1bGUgPSByZXF1aXJlKFwiLi4vLi4vdXRpbGl0aWVzL3J1bGVcIik7XG52YXIgX2RlZmluaXRpb24gPSByZXF1aXJlKFwiLi4vLi4vdXRpbGl0aWVzL2RlZmluaXRpb25cIik7XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgICB9O1xuICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGw7XG4gICAgfVxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgICAgby5fX3Byb3RvX18gPSBwO1xuICAgICAgICByZXR1cm4gbztcbiAgICB9O1xuICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbnZhciBmaXJzdCA9IF9uZWNlc3NhcnkuYXJyYXlVdGlsaXRpZXMuZmlyc3Q7XG52YXIgSW5kaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uID0gLyojX19QVVJFX18qLyBmdW5jdGlvbihMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbikge1xuICAgIF9pbmhlcml0cyhJbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24sIExlZnRSZWN1cnNpdmVEZWZpbml0aW9uKTtcbiAgICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEluZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbik7XG4gICAgZnVuY3Rpb24gSW5kaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uKHR5cGUsIHBhcnRzLCBydWxlTmFtZSwgZGVmaW5pdGlvbiwgcmVjdXJzaXZlUnVsZU5hbWVzLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzLCBpbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24pIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEluZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbik7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB0eXBlLCBwYXJ0cywgcnVsZU5hbWUsIGRlZmluaXRpb24sIHJlY3Vyc2l2ZVJ1bGVOYW1lcywgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcyk7XG4gICAgICAgIF90aGlzLmltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiA9IGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoSW5kaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXRJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb25cIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwicmV3cml0ZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJld3JpdGUocnVsZU1hcCkge1xuICAgICAgICAgICAgICAgIHZhciBkZWZpbml0aW9uID0gdGhpcy5nZXREZWZpbml0aW9uKCksIHJ1bGVOYW1lID0gdGhpcy5nZXRSdWxlTmFtZSgpLCBydWxlID0gcnVsZU1hcFtydWxlTmFtZV0gfHwgbnVsbDtcbiAgICAgICAgICAgICAgICB2YXIgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcyA9IHRoaXMuZ2V0TGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcygpLCBmaXJzdExlZnRSZWN1cnNpdmVSdWxlTmFtZSA9IGZpcnN0KGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMpLCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWUgPSBmaXJzdExlZnRSZWN1cnNpdmVSdWxlTmFtZSwgbGVmdFJlY3Vyc2l2ZVJ1bGUgPSBydWxlTWFwW2xlZnRSZWN1cnNpdmVSdWxlTmFtZV0gfHwgbnVsbDtcbiAgICAgICAgICAgICAgICB2YXIgcmVkdWNlZFJ1bGUgPSAoMCwgX3J1bGUpLnJlZHVjZWRSdWxlRnJvbVJ1bGUobGVmdFJlY3Vyc2l2ZVJ1bGUsIHJ1bGVNYXAsIF9yZWR1Y2VkLmRlZmF1bHQpLCByZWR1Y2VkUnVsZUVtcHR5ID0gcmVkdWNlZFJ1bGUuaXNFbXB0eSgpO1xuICAgICAgICAgICAgICAgIGlmIChyZWR1Y2VkUnVsZUVtcHR5KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWZpbml0aW9uU3RyaW5nID0gZGVmaW5pdGlvbi5hc1N0cmluZygpLCBpbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSB0aGlzLmdldEltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbigpLCBpbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb25TdHJpbmcgPSBpbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24uYXNTdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlICdcIi5jb25jYXQoaW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uU3RyaW5nLCBcIicgaW1wbGljaXRseSBsZWZ0IHJlY3Vyc2l2ZSBkZWZpbml0aW9uIG9mIHRoZSAnXCIpLmNvbmNhdChsZWZ0UmVjdXJzaXZlUnVsZU5hbWUsIFwiJyBydWxlIGhhcyBubyBzaWJsaW5nIG5vbi1sZWZ0IHJlY3Vyc2l2ZSBkZWZpbml0aW9ucyBhbmQgdGhlcmVmb3JlIHRoZSAnXCIpLmNvbmNhdChkZWZpbml0aW9uU3RyaW5nLCBcIicgaW5kaXJlY3RseSBsZWZ0IHJlY3Vyc2l2ZSBkZWZpbml0aW9uIG9mIHRoZSAnXCIpLmNvbmNhdChydWxlTmFtZSwgXCInIHJ1bGUgY2Fubm90IGJlIHJld3JpdHRlbi5cIikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgcmVwZWF0ZWRSdWxlID0gKDAsIF9ydWxlKS5yZXBlYXRlZFJ1bGVGcm9tUnVsZShsZWZ0UmVjdXJzaXZlUnVsZSwgcnVsZU1hcCwgX3JlcGVhdGVkLmRlZmF1bHQpLCByZXBlYXRlZERlZmluaXRpb24gPSBfcmVwZWF0ZWQxLmRlZmF1bHQuZnJvbURlZmluaXRpb24oZGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgcmVwZWF0ZWRSdWxlLmFkZERlZmluaXRpb24ocmVwZWF0ZWREZWZpbml0aW9uKTtcbiAgICAgICAgICAgICAgICAoMCwgX3J1bGUpLnJld3JpdHRlblJ1bGVGcm9tUnVsZShsZWZ0UmVjdXJzaXZlUnVsZSwgcnVsZU1hcCwgX3Jld3JpdHRlbi5kZWZhdWx0KTtcbiAgICAgICAgICAgICAgICB2YXIgcmV3cml0dGVuRGVmaW5pdGlvbiA9IF9yZXdyaXR0ZW4xLmRlZmF1bHQuZnJvbURlZmluaXRpb25BbmRMZWZ0UmVjdXJzaXZlUnVsZU5hbWUoZGVmaW5pdGlvbiwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKSwgcmVwbGFjZW1lbnREZWZpbml0aW9uID0gdGhpczsgLy8vXG4gICAgICAgICAgICAgICAgcnVsZS5yZXBsYWNlRGVmaW5pdGlvbihyZXBsYWNlbWVudERlZmluaXRpb24sIHJld3JpdHRlbkRlZmluaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSwgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZnJvbVJ1bGVOYW1lRGVmaW5pdGlvbkFuZFJlY3Vyc2l2ZURlZmluaXRpb25zXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbVJ1bGVOYW1lRGVmaW5pdGlvbkFuZFJlY3Vyc2l2ZURlZmluaXRpb25zKHJ1bGVOYW1lLCBkZWZpbml0aW9uLCByZWN1cnNpdmVEZWZpbml0aW9ucykge1xuICAgICAgICAgICAgICAgIHZhciBpbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBudWxsO1xuICAgICAgICAgICAgICAgIHZhciBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzID0gKDAsIF9kZWZpbml0aW9uKS5sZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbURlZmluaXRpb24oZGVmaW5pdGlvbiksIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNMZW5ndGggPSBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzLmxlbmd0aCwgZGVmaW5pdGlvbkxlZnRSZWN1cnNpdmUgPSBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzTGVuZ3RoID4gMDtcbiAgICAgICAgICAgICAgICBpZiAoZGVmaW5pdGlvbkxlZnRSZWN1cnNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcy5zb21lKGZ1bmN0aW9uKGxlZnRSZWN1cnNpdmVSdWxlTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJ1bGVOYW1lTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lID0gcnVsZU5hbWUgPT09IGxlZnRSZWN1cnNpdmVSdWxlTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcnVsZU5hbWVMZWZ0UmVjdXJzaXZlUnVsZU5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uID0gX2ltcGxpY2l0bHkuZGVmYXVsdC5mcm9tUnVsZU5hbWVMZWZ0UmVjdXJzaXZlUnVsZU5hbWVBbmRSZWN1cnNpdmVEZWZpbml0aW9ucyhydWxlTmFtZSwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lLCByZWN1cnNpdmVEZWZpbml0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGVmaW5pdGlvblVuYXJ5ID0gKDAsIF9kZWZpbml0aW9uKS5pc0RlZmluaXRpb25VbmFyeShkZWZpbml0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlZmluaXRpb25VbmFyeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRlZmluaXRpb25TdHJpbmcgPSBkZWZpbml0aW9uLmFzU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgJ1wiLmNvbmNhdChkZWZpbml0aW9uU3RyaW5nLCBcIicgaW5kaXJlY3RseSBsZWZ0IHJlY3Vyc2l2ZSBkZWZpbml0aW9uIG9mIHRoZSAnXCIpLmNvbmNhdChydWxlTmFtZSwgXCInIHJ1bGUgaXMgdW5hcnkgYW5kIHRoZXJlZm9yZSBjYW5ub3QgYmUgcmV3cml0dGVuLlwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRlZmluaXRpb25Db21wbGV4ID0gKDAsIF9kZWZpbml0aW9uKS5pc0RlZmluaXRpb25Db21wbGV4KGRlZmluaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVmaW5pdGlvbkNvbXBsZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZWZpbml0aW9uU3RyaW5nMSA9IGRlZmluaXRpb24uYXNTdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSAnXCIuY29uY2F0KGRlZmluaXRpb25TdHJpbmcxLCBcIicgaW5kaXJlY3RseSBsZWZ0IHJlY3Vyc2l2ZSBkZWZpbml0aW9uIG9mIHRoZSAnXCIpLmNvbmNhdChydWxlTmFtZSwgXCInIHJ1bGUgaXMgY29tcGxleCBhbmQgdGhlcmVmb3JlIGNhbm5vdCBiZSByZXdyaXR0ZW4uXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZSA9IF90eXBlcy5JTkRJUkVDVExZX0xFRlRfUkVDVVJTSVZFX1RZUEUsIHBhcnRzID0gW10sIHJlY3Vyc2l2ZVJ1bGVOYW1lcyA9ICgwLCBfZGVmaW5pdGlvbikucmVjdXJzaXZlUnVsZU5hbWVzRnJvbURlZmluaXRpb24oZGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiA9IG5ldyBJbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24odHlwZSwgcGFydHMsIHJ1bGVOYW1lLCBkZWZpbml0aW9uLCByZWN1cnNpdmVSdWxlTmFtZXMsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXMsIGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBpbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdKTtcbiAgICByZXR1cm4gSW5kaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uO1xufShfbGVmdFJlY3Vyc2l2ZS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IEluZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OWtaV1pwYm1sMGFXOXVMMnhsWm5SU1pXTjFjbk5wZG1VdmFXNWthWEpsWTNSc2VTNXFjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dWFXMXdiM0owSUhzZ1lYSnlZWGxWZEdsc2FYUnBaWE1nZlNCbWNtOXRJRndpYm1WalpYTnpZWEo1WENJN1hHNWNibWx0Y0c5eWRDQlNaV1IxWTJWa1VuVnNaU0JtY205dElGd2lMaTR2TGk0dmNuVnNaUzl5WldSMVkyVmtYQ0k3WEc1cGJYQnZjblFnVW1Wd1pXRjBaV1JTZFd4bElHWnliMjBnWENJdUxpOHVMaTl5ZFd4bEwzSmxjR1ZoZEdWa1hDSTdYRzVwYlhCdmNuUWdVbVYzY21sMGRHVnVVblZzWlNCbWNtOXRJRndpTGk0dkxpNHZjblZzWlM5eVpYZHlhWFIwWlc1Y0lqdGNibWx0Y0c5eWRDQlNaWEJsWVhSbFpFUmxabWx1YVhScGIyNGdabkp2YlNCY0lpNHVMeTR1TDJSbFptbHVhWFJwYjI0dmNtVndaV0YwWldSY0lqdGNibWx0Y0c5eWRDQlNaWGR5YVhSMFpXNUVaV1pwYm1sMGFXOXVJR1p5YjIwZ1hDSXVMaTh1TGk5a1pXWnBibWwwYVc5dUwzSmxkM0pwZEhSbGJsd2lPMXh1YVcxd2IzSjBJRXhsWm5SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUlHWnliMjBnWENJdUxpOHVMaTlrWldacGJtbDBhVzl1TDJ4bFpuUlNaV04xY25OcGRtVmNJanRjYm1sdGNHOXlkQ0JKYlhCc2FXTnBkR3g1VEdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGdabkp2YlNCY0lpNHVMeTR1TDJSbFptbHVhWFJwYjI0dmJHVm1kRkpsWTNWeWMybDJaUzlwYlhCc2FXTnBkR3g1WENJN1hHNWNibWx0Y0c5eWRDQjdJRWxPUkVsU1JVTlVURmxmVEVWR1ZGOVNSVU5WVWxOSlZrVmZWRmxRUlNCOUlHWnliMjBnWENJdUxpOHVMaTkwZVhCbGMxd2lPMXh1YVcxd2IzSjBJSHNnY21Wa2RXTmxaRkoxYkdWR2NtOXRVblZzWlN3Z2NtVndaV0YwWldSU2RXeGxSbkp2YlZKMWJHVXNJSEpsZDNKcGRIUmxibEoxYkdWR2NtOXRVblZzWlNCOUlHWnliMjBnWENJdUxpOHVMaTkxZEdsc2FYUnBaWE12Y25Wc1pWd2lPMXh1YVcxd2IzSjBJSHNnYVhORVpXWnBibWwwYVc5dVZXNWhjbmtzSUdselJHVm1hVzVwZEdsdmJrTnZiWEJzWlhnc0lISmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGMwWnliMjFFWldacGJtbDBhVzl1TENCc1pXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpSbkp2YlVSbFptbHVhWFJwYjI0Z2ZTQm1jbTl0SUZ3aUxpNHZMaTR2ZFhScGJHbDBhV1Z6TDJSbFptbHVhWFJwYjI1Y0lqdGNibHh1WTI5dWMzUWdleUJtYVhKemRDQjlJRDBnWVhKeVlYbFZkR2xzYVhScFpYTTdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR05zWVhOeklFbHVaR2x5WldOMGJIbE1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmlCbGVIUmxibVJ6SUV4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJSHRjYmlBZ1kyOXVjM1J5ZFdOMGIzSW9kSGx3WlN3Z2NHRnlkSE1zSUhKMWJHVk9ZVzFsTENCa1pXWnBibWwwYVc5dUxDQnlaV04xY25OcGRtVlNkV3hsVG1GdFpYTXNJR3hsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNc0lHbHRjR3hwWTJsMGJIbE1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmlrZ2UxeHVJQ0FnSUhOMWNHVnlLSFI1Y0dVc0lIQmhjblJ6TENCeWRXeGxUbUZ0WlN3Z1pHVm1hVzVwZEdsdmJpd2djbVZqZFhKemFYWmxVblZzWlU1aGJXVnpMQ0JzWldaMFVtVmpkWEp6YVhabFVuVnNaVTVoYldWektUdGNibHh1SUNBZ0lIUm9hWE11YVcxd2JHbGphWFJzZVV4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJRDBnYVcxd2JHbGphWFJzZVV4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVPMXh1SUNCOVhHNWNiaUFnWjJWMFNXMXdiR2xqYVhSc2VVeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1S0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHRjR3hwWTJsMGJIbE1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2Ymp0Y2JpQWdmVnh1WEc0Z0lISmxkM0pwZEdVb2NuVnNaVTFoY0NrZ2UxeHVJQ0FnSUdOdmJuTjBJR1JsWm1sdWFYUnBiMjRnUFNCMGFHbHpMbWRsZEVSbFptbHVhWFJwYjI0b0tTeGNiaUFnSUNBZ0lDQWdJQ0J5ZFd4bFRtRnRaU0E5SUhSb2FYTXVaMlYwVW5Wc1pVNWhiV1VvS1N4Y2JpQWdJQ0FnSUNBZ0lDQnlkV3hsSUQwZ2NuVnNaVTFoY0Z0eWRXeGxUbUZ0WlYwZ2ZId2diblZzYkR0Y2JseHVJQ0FnSUdOdmJuTjBJR3hsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNZ1BTQjBhR2x6TG1kbGRFeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaWE1vS1N4Y2JpQWdJQ0FnSUNBZ0lDQm1hWEp6ZEV4bFpuUlNaV04xY25OcGRtVlNkV3hsVG1GdFpTQTlJR1pwY25OMEtHeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaWE1wTEZ4dUlDQWdJQ0FnSUNBZ0lHeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaU0E5SUdacGNuTjBUR1ZtZEZKbFkzVnljMmwyWlZKMWJHVk9ZVzFsTENBdkx5OWNiaUFnSUNBZ0lDQWdJQ0JzWldaMFVtVmpkWEp6YVhabFVuVnNaU0E5SUhKMWJHVk5ZWEJiYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbFhTQjhmQ0J1ZFd4c08xeHVYRzRnSUNBZ1kyOXVjM1FnY21Wa2RXTmxaRkoxYkdVZ1BTQnlaV1IxWTJWa1VuVnNaVVp5YjIxU2RXeGxLR3hsWm5SU1pXTjFjbk5wZG1WU2RXeGxMQ0J5ZFd4bFRXRndMQ0JTWldSMVkyVmtVblZzWlNrc1hHNGdJQ0FnSUNBZ0lDQWdjbVZrZFdObFpGSjFiR1ZGYlhCMGVTQTlJSEpsWkhWalpXUlNkV3hsTG1selJXMXdkSGtvS1R0Y2JseHVJQ0FnSUdsbUlDaHlaV1IxWTJWa1VuVnNaVVZ0Y0hSNUtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCa1pXWnBibWwwYVc5dVUzUnlhVzVuSUQwZ1pHVm1hVzVwZEdsdmJpNWhjMU4wY21sdVp5Z3BMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXMXdiR2xqYVhSc2VVeGxablJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1SUQwZ2RHaHBjeTVuWlhSSmJYQnNhV05wZEd4NVRHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjRvS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2x0Y0d4cFkybDBiSGxNWldaMFVtVmpkWEp6YVhabFJHVm1hVzVwZEdsdmJsTjBjbWx1WnlBOUlHbHRjR3hwWTJsMGJIbE1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2Ymk1aGMxTjBjbWx1WnlncE8xeHVYRzRnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb1lGUm9aU0FuSkh0cGJYQnNhV05wZEd4NVRHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjVUZEhKcGJtZDlKeUJwYlhCc2FXTnBkR3g1SUd4bFpuUWdjbVZqZFhKemFYWmxJR1JsWm1sdWFYUnBiMjRnYjJZZ2RHaGxJQ2NrZTJ4bFpuUlNaV04xY25OcGRtVlNkV3hsVG1GdFpYMG5JSEoxYkdVZ2FHRnpJRzV2SUhOcFlteHBibWNnYm05dUxXeGxablFnY21WamRYSnphWFpsSUdSbFptbHVhWFJwYjI1eklHRnVaQ0IwYUdWeVpXWnZjbVVnZEdobElDY2tlMlJsWm1sdWFYUnBiMjVUZEhKcGJtZDlKeUJwYm1ScGNtVmpkR3g1SUd4bFpuUWdjbVZqZFhKemFYWmxJR1JsWm1sdWFYUnBiMjRnYjJZZ2RHaGxJQ2NrZTNKMWJHVk9ZVzFsZlNjZ2NuVnNaU0JqWVc1dWIzUWdZbVVnY21WM2NtbDBkR1Z1TG1BcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJSEpsY0dWaGRHVmtVblZzWlNBOUlISmxjR1ZoZEdWa1VuVnNaVVp5YjIxU2RXeGxLR3hsWm5SU1pXTjFjbk5wZG1WU2RXeGxMQ0J5ZFd4bFRXRndMQ0JTWlhCbFlYUmxaRkoxYkdVcExGeHVJQ0FnSUNBZ0lDQWdJSEpsY0dWaGRHVmtSR1ZtYVc1cGRHbHZiaUE5SUZKbGNHVmhkR1ZrUkdWbWFXNXBkR2x2Ymk1bWNtOXRSR1ZtYVc1cGRHbHZiaWhrWldacGJtbDBhVzl1S1R0Y2JseHVJQ0FnSUhKbGNHVmhkR1ZrVW5Wc1pTNWhaR1JFWldacGJtbDBhVzl1S0hKbGNHVmhkR1ZrUkdWbWFXNXBkR2x2YmlrN1hHNWNiaUFnSUNCeVpYZHlhWFIwWlc1U2RXeGxSbkp2YlZKMWJHVW9iR1ZtZEZKbFkzVnljMmwyWlZKMWJHVXNJSEoxYkdWTllYQXNJRkpsZDNKcGRIUmxibEoxYkdVcE8xeHVYRzRnSUNBZ1kyOXVjM1FnY21WM2NtbDBkR1Z1UkdWbWFXNXBkR2x2YmlBOUlGSmxkM0pwZEhSbGJrUmxabWx1YVhScGIyNHVabkp2YlVSbFptbHVhWFJwYjI1QmJtUk1aV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1VvWkdWbWFXNXBkR2x2Yml3Z2JHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxLU3hjYmlBZ0lDQWdJQ0FnSUNCeVpYQnNZV05sYldWdWRFUmxabWx1YVhScGIyNGdQU0IwYUdsek95QXZMeTljYmx4dUlDQWdJSEoxYkdVdWNtVndiR0ZqWlVSbFptbHVhWFJwYjI0b2NtVndiR0ZqWlcxbGJuUkVaV1pwYm1sMGFXOXVMQ0J5WlhkeWFYUjBaVzVFWldacGJtbDBhVzl1S1R0Y2JpQWdmVnh1WEc0Z0lITjBZWFJwWXlCbWNtOXRVblZzWlU1aGJXVkVaV1pwYm1sMGFXOXVRVzVrVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2Ym5Nb2NuVnNaVTVoYldVc0lHUmxabWx1YVhScGIyNHNJSEpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjV6S1NCN1hHNGdJQ0FnYkdWMElHbHVaR2x5WldOMGJIbE1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmlBOUlHNTFiR3c3WEc1Y2JpQWdJQ0JqYjI1emRDQnNaV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1Z6SUQwZ2JHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxjMFp5YjIxRVpXWnBibWwwYVc5dUtHUmxabWx1YVhScGIyNHBMRnh1SUNBZ0lDQWdJQ0FnSUd4bFpuUlNaV04xY25OcGRtVlNkV3hsVG1GdFpYTk1aVzVuZEdnZ1BTQnNaV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1Z6TG14bGJtZDBhQ3hjYmlBZ0lDQWdJQ0FnSUNCa1pXWnBibWwwYVc5dVRHVm1kRkpsWTNWeWMybDJaU0E5SUNoc1pXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVnpUR1Z1WjNSb0lENGdNQ2s3WEc1Y2JpQWdJQ0JwWmlBb1pHVm1hVzVwZEdsdmJreGxablJTWldOMWNuTnBkbVVwSUh0Y2JpQWdJQ0FnSUd4bFpuUlNaV04xY25OcGRtVlNkV3hsVG1GdFpYTXVjMjl0WlNnb2JHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhKMWJHVk9ZVzFsVEdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbElEMGdLSEoxYkdWT1lXMWxJRDA5UFNCc1pXWjBVbVZqZFhKemFYWmxVblZzWlU1aGJXVXBPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hjblZzWlU1aGJXVk1aV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcGJYQnNhV05wZEd4NVRHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjRnUFNCSmJYQnNhV05wZEd4NVRHVm1kRkpsWTNWeWMybDJaVVJsWm1sdWFYUnBiMjR1Wm5KdmJWSjFiR1ZPWVcxbFRHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxRVzVrVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2Ym5Nb2NuVnNaVTVoYldVc0lHeGxablJTWldOMWNuTnBkbVZTZFd4bFRtRnRaU3dnY21WamRYSnphWFpsUkdWbWFXNXBkR2x2Ym5NcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tHbHRjR3hwWTJsMGJIbE1aV1owVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2YmlBaFBUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaR1ZtYVc1cGRHbHZibFZ1WVhKNUlEMGdhWE5FWldacGJtbDBhVzl1Vlc1aGNua29aR1ZtYVc1cGRHbHZiaWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa1pXWnBibWwwYVc5dVZXNWhjbmtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaR1ZtYVc1cGRHbHZibE4wY21sdVp5QTlJR1JsWm1sdWFYUnBiMjR1WVhOVGRISnBibWNvS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvWUZSb1pTQW5KSHRrWldacGJtbDBhVzl1VTNSeWFXNW5mU2NnYVc1a2FYSmxZM1JzZVNCc1pXWjBJSEpsWTNWeWMybDJaU0JrWldacGJtbDBhVzl1SUc5bUlIUm9aU0FuSkh0eWRXeGxUbUZ0WlgwbklISjFiR1VnYVhNZ2RXNWhjbmtnWVc1a0lIUm9aWEpsWm05eVpTQmpZVzV1YjNRZ1ltVWdjbVYzY21sMGRHVnVMbUFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCa1pXWnBibWwwYVc5dVEyOXRjR3hsZUNBOUlHbHpSR1ZtYVc1cGRHbHZia052YlhCc1pYZ29aR1ZtYVc1cGRHbHZiaWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa1pXWnBibWwwYVc5dVEyOXRjR3hsZUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrWldacGJtbDBhVzl1VTNSeWFXNW5JRDBnWkdWbWFXNXBkR2x2Ymk1aGMxTjBjbWx1WnlncE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loZ1ZHaGxJQ2NrZTJSbFptbHVhWFJwYjI1VGRISnBibWQ5SnlCcGJtUnBjbVZqZEd4NUlHeGxablFnY21WamRYSnphWFpsSUdSbFptbHVhWFJwYjI0Z2IyWWdkR2hsSUNja2UzSjFiR1ZPWVcxbGZTY2djblZzWlNCcGN5QmpiMjF3YkdWNElHRnVaQ0IwYUdWeVpXWnZjbVVnWTJGdWJtOTBJR0psSUhKbGQzSnBkSFJsYmk1Z0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdkSGx3WlNBOUlFbE9SRWxTUlVOVVRGbGZURVZHVkY5U1JVTlZVbE5KVmtWZlZGbFFSU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGNuUnpJRDBnVzEwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV04xY25OcGRtVlNkV3hsVG1GdFpYTWdQU0J5WldOMWNuTnBkbVZTZFd4bFRtRnRaWE5HY205dFJHVm1hVzVwZEdsdmJpaGtaV1pwYm1sMGFXOXVLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhVzVrYVhKbFkzUnNlVXhsWm5SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUlEMGdibVYzSUVsdVpHbHlaV04wYkhsTVpXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaWgwZVhCbExDQndZWEowY3l3Z2NuVnNaVTVoYldVc0lHUmxabWx1YVhScGIyNHNJSEpsWTNWeWMybDJaVkoxYkdWT1lXMWxjeXdnYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5d2dhVzF3YkdsamFYUnNlVXhsWm5SU1pXTjFjbk5wZG1WRVpXWnBibWwwYVc5dUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnYVc1a2FYSmxZM1JzZVV4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVPMXh1SUNCOVhHNTlYRzRpWFN3aWJtRnRaWE1pT2xzaVptbHljM1FpTENKaGNuSmhlVlYwYVd4cGRHbGxjeUlzSWtsdVpHbHlaV04wYkhsTVpXWjBVbVZqZFhKemFYWmxSR1ZtYVc1cGRHbHZiaUlzSW5SNWNHVWlMQ0p3WVhKMGN5SXNJbkoxYkdWT1lXMWxJaXdpWkdWbWFXNXBkR2x2YmlJc0luSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGN5SXNJbXhsWm5SU1pXTjFjbk5wZG1WU2RXeGxUbUZ0WlhNaUxDSnBiWEJzYVdOcGRHeDVUR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI0aUxDSm5aWFJKYlhCc2FXTnBkR3g1VEdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGlMQ0p5WlhkeWFYUmxJaXdpY25Wc1pVMWhjQ0lzSW1kbGRFUmxabWx1YVhScGIyNGlMQ0puWlhSU2RXeGxUbUZ0WlNJc0luSjFiR1VpTENKblpYUk1aV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1Z6SWl3aVptbHljM1JNWldaMFVtVmpkWEp6YVhabFVuVnNaVTVoYldVaUxDSnNaV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1VpTENKc1pXWjBVbVZqZFhKemFYWmxVblZzWlNJc0luSmxaSFZqWldSU2RXeGxJaXdpY21Wa2RXTmxaRkoxYkdWR2NtOXRVblZzWlNJc0lsSmxaSFZqWldSU2RXeGxJaXdpY21Wa2RXTmxaRkoxYkdWRmJYQjBlU0lzSW1selJXMXdkSGtpTENKa1pXWnBibWwwYVc5dVUzUnlhVzVuSWl3aVlYTlRkSEpwYm1jaUxDSnBiWEJzYVdOcGRHeDVUR1ZtZEZKbFkzVnljMmwyWlVSbFptbHVhWFJwYjI1VGRISnBibWNpTENKRmNuSnZjaUlzSW5KbGNHVmhkR1ZrVW5Wc1pTSXNJbkpsY0dWaGRHVmtVblZzWlVaeWIyMVNkV3hsSWl3aVVtVndaV0YwWldSU2RXeGxJaXdpY21Wd1pXRjBaV1JFWldacGJtbDBhVzl1SWl3aVVtVndaV0YwWldSRVpXWnBibWwwYVc5dUlpd2labkp2YlVSbFptbHVhWFJwYjI0aUxDSmhaR1JFWldacGJtbDBhVzl1SWl3aWNtVjNjbWwwZEdWdVVuVnNaVVp5YjIxU2RXeGxJaXdpVW1WM2NtbDBkR1Z1VW5Wc1pTSXNJbkpsZDNKcGRIUmxia1JsWm1sdWFYUnBiMjRpTENKU1pYZHlhWFIwWlc1RVpXWnBibWwwYVc5dUlpd2labkp2YlVSbFptbHVhWFJwYjI1QmJtUk1aV1owVW1WamRYSnphWFpsVW5Wc1pVNWhiV1VpTENKeVpYQnNZV05sYldWdWRFUmxabWx1YVhScGIyNGlMQ0p5WlhCc1lXTmxSR1ZtYVc1cGRHbHZiaUlzSW1aeWIyMVNkV3hsVG1GdFpVUmxabWx1YVhScGIyNUJibVJTWldOMWNuTnBkbVZFWldacGJtbDBhVzl1Y3lJc0luSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNXpJaXdpYVc1a2FYSmxZM1JzZVV4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJaXdpYkdWbWRGSmxZM1Z5YzJsMlpWSjFiR1ZPWVcxbGMwWnliMjFFWldacGJtbDBhVzl1SWl3aWJHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxjMHhsYm1kMGFDSXNJbXhsYm1kMGFDSXNJbVJsWm1sdWFYUnBiMjVNWldaMFVtVmpkWEp6YVhabElpd2ljMjl0WlNJc0luSjFiR1ZPWVcxbFRHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxJaXdpU1cxd2JHbGphWFJzZVV4bFpuUlNaV04xY25OcGRtVkVaV1pwYm1sMGFXOXVJaXdpWm5KdmJWSjFiR1ZPWVcxbFRHVm1kRkpsWTNWeWMybDJaVkoxYkdWT1lXMWxRVzVrVW1WamRYSnphWFpsUkdWbWFXNXBkR2x2Ym5NaUxDSmtaV1pwYm1sMGFXOXVWVzVoY25raUxDSnBjMFJsWm1sdWFYUnBiMjVWYm1GeWVTSXNJbVJsWm1sdWFYUnBiMjVEYjIxd2JHVjRJaXdpYVhORVpXWnBibWwwYVc5dVEyOXRjR3hsZUNJc0lrbE9SRWxTUlVOVVRGbGZURVZHVkY5U1JVTlZVbE5KVmtWZlZGbFFSU0lzSW5KbFkzVnljMmwyWlZKMWJHVk9ZVzFsYzBaeWIyMUVaV1pwYm1sMGFXOXVJaXdpVEdWbWRGSmxZM1Z5YzJsMlpVUmxabWx1YVhScGIyNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRU5CUVZrc1YwRkJRU3hEUVVGRE96czdSVHQzUWp0QlFVVnJRaXhIUVVGWExFTkJRVmdzVlVGQlZ6dEJRVVZzUWl4SFFVRnZRaXhEUVVGd1FpeFJRVUZ2UWp0QlFVTnVRaXhIUVVGeFFpeERRVUZ5UWl4VFFVRnhRanRCUVVOd1FpeEhRVUZ6UWl4RFFVRjBRaXhWUVVGelFqdEJRVU5xUWl4SFFVRXlRaXhEUVVFelFpeFZRVUV5UWp0QlFVTXhRaXhIUVVFMFFpeERRVUUxUWl4WFFVRTBRanRCUVVONFFpeEhRVUZuUXl4RFFVRm9ReXhqUVVGblF6dEJRVU4wUWl4SFFVRXlReXhEUVVFelF5eFhRVUV5UXp0QlFVVXhReXhIUVVGaExFTkJRV0lzVFVGQllUdEJRVU54UWl4SFFVRnpRaXhEUVVGMFFpeExRVUZ6UWp0QlFVTjNRaXhIUVVFMFFpeERRVUUxUWl4WFFVRTBRanM3T3pzN096czdPenM3T3pzN096aEVPM05ET3paRU8ybEZPenM3TzNkRk8yZEZPenM3T3pzN1N6czdPenM3T3pzN096czdPenROTzNsRU96czdPenM3T3pzN096czdPenM3ZFVJN08wczdPenM3TWtJN096czdPenM3TzNGR096czdPenM3T3pzN096czdiVVU3TzJsRU96czdPenRCUVVVelNpeEhRVUZMTEVOQlFVZEJMRXRCUVVzc1IwRkJTME1zVlVGQll5eG5Ra0ZCZUVKRUxFdEJRVXM3U1VGRlVVVXNhVU5CUVdsRExHbENRVUYyUXl4UlFVRlJPM2xGT3p0aFFVRkdRU3hwUTBGQmFVTXNRMEZEZUVORExFbEJRVWtzUlVGQlJVTXNTMEZCU3l4RlFVRkZReXhSUVVGUkxFVkJRVVZETEZWQlFWVXNSVUZCUlVNc2EwSkJRV3RDTEVWQlFVVkRMSE5DUVVGelFpeEZRVUZGUXl4cFEwRkJhVU03WjBVN08ydERRVU53U0U0c1NVRkJTU3hGUVVGRlF5eExRVUZMTEVWQlFVVkRMRkZCUVZFc1JVRkJSVU1zVlVGQlZTeEZRVUZGUXl4clFrRkJhMElzUlVGQlJVTXNjMEpCUVhOQ0xFTkRjRUoyUml4RFJHOUNlVVk3WTBGRmFFWkRMR2xEUVVGcFF5eEhRVUZIUVN4cFEwRkJhVU1zUTBGQlF6czdPenM3V1VGSE4wVkRMRWRCUVc5RExFVkJRWEJEUVN4RFFVRnZRenR0UWtGQmNFTkJMRkZCUVZFc1EwRkJVa0VzYjBOQlFXOURMRWRCUVVjc1EwRkJRenRuUWtGRGRFTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJRMFFzYVVOQlFXbERPMWxCUXk5RExFTkJRVU03T3p0WlFVVkVSU3hIUVVGUExFVkJRVkJCTEVOQlFVODdiVUpCUVZCQkxGRkJRVkZETEVOQlFWSkVMRTlCUVU4c1EwRkJRME1zVDBGQlR5eEZRVUZGTEVOQlFVTTdaMEpCUTJoQ0xFZEJRVXNzUTBGQlEwNHNWVUZCVlN4SFFVRkhMRWxCUVVrc1EwRkJRMDhzWVVGQllTeEpRVU12UWxJc1VVRkJVU3hIUVVGSExFbEJRVWtzUTBGQlExTXNWMEZCVnl4SlFVTXpRa01zU1VGQlNTeEhRVUZIU0N4UFFVRlBMRU5CUVVOUUxGRkJRVkVzUzBGQlN5eEpRVUZKTzJkQ1FVVjBReXhIUVVGTExFTkJRVU5ITEhOQ1FVRnpRaXhIUVVGSExFbEJRVWtzUTBGQlExRXNlVUpCUVhsQ0xFbEJRM1pFUXl3d1FrRkJNRUlzUjBGQlIycENMRXRCUVVzc1EwRkJRMUVzYzBKQlFYTkNMRWRCUTNwRVZTeHhRa0ZCY1VJc1IwRkJSMFFzTUVKQlFUQkNMRVZCUTJ4RVJTeHBRa0ZCYVVJc1IwRkJSMUFzVDBGQlR5eERRVUZEVFN4eFFrRkJjVUlzUzBGQlN5eEpRVUZKTzJkQ1FVVm9SU3hIUVVGTExFTkJRVU5GTEZkQlFWY3NUMEZCUjBNc1MwRkJiVUlzYzBKQlFVTkdMR2xDUVVGcFFpeEZRVUZGVUN4UFFVRlBMRVZCUVVWVkxGRkJRVmNzVjBGRGVrVkRMR2RDUVVGblFpeEhRVUZIU0N4WFFVRlhMRU5CUVVOSkxFOUJRVTg3WjBKQlJUVkRMRVZCUVVVc1JVRkJSVVFzWjBKQlFXZENMRVZCUVVVc1EwRkJRenR2UWtGRGNrSXNSMEZCU3l4RFFVRkRSU3huUWtGQlowSXNSMEZCUjI1Q0xGVkJRVlVzUTBGQlEyOUNMRkZCUVZFc1NVRkRkRU5xUWl4cFEwRkJhVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTkRMRzlEUVVGdlF5eEpRVU0zUldsQ0xIVkRRVUYxUXl4SFFVRkhiRUlzYVVOQlFXbERMRU5CUVVOcFFpeFJRVUZSTzI5Q1FVVXhSaXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZEUlN4TFFVRkxMRU5CUVVVc1EwRkJTeXhQUVVFeVJsWXNUVUZCY1VJc1EwRkJPVWRUTEhWRFFVRjFReXhGUVVGRExFTkJRU3RETEd0RVFVRnJSMFlzVFVGQlowSXNRMEZCYUVoUUxIRkNRVUZ4UWl4RlFVRkRMRU5CUVhkRkxESkZRVUZ2UldJc1RVRkJVU3hEUVVFeFJXOUNMR2RDUVVGblFpeEZRVUZETEVOQlFTdERMR3RFUVVGWExFMUJRVEpDTEVOQlFYQkRjRUlzVVVGQlVTeEZRVUZETEVOQlFUSkNPMmRDUVVONlZDeERRVUZETzJkQ1FVVkVMRWRCUVVzc1EwRkJRM2RDTEZsQlFWa3NUMEZCUjBNc1MwRkJiMElzZFVKQlFVTllMR2xDUVVGcFFpeEZRVUZGVUN4UFFVRlBMRVZCUVVWdFFpeFRRVUZaTEZkQlF6VkZReXhyUWtGQmEwSXNSMEZCUjBNc1ZVRkJhMElzVTBGQlEwTXNZMEZCWXl4RFFVRkROVUlzVlVGQlZUdG5Ra0ZGZGtWMVFpeFpRVUZaTEVOQlFVTk5MR0ZCUVdFc1EwRkJRMGdzYTBKQlFXdENMRU5CUVVNc1EwRkJRenR2UWtGRkwwTkpMRXRCUVhGQ0xIZENRVUZEYWtJc2FVSkJRV2xDTEVWQlFVVlFMRTlCUVU4c1JVRkJSWGxDTEZWQlFXRXNVMEZCUXl4RFFVRkRPMmRDUVVWcVJTeEhRVUZMTEVOQlFVTkRMRzFDUVVGdFFpeEhRVUZIUXl4WFFVRnRRaXhUUVVGRFF5eHpRMEZCYzBNc1EwRkJRMnhETEZWQlFWVXNSVUZCUlZrc2NVSkJRWEZDTEVkQlEyeElkVUlzY1VKQlFYRkNMRWRCUVVjc1NVRkJTU3hGUVVGRkxFVkJRVWNzUVVGQlNDeERRVUZITzJkQ1FVVjJRekZDTEVsQlFVa3NRMEZCUXpKQ0xHbENRVUZwUWl4RFFVRkRSQ3h4UWtGQmNVSXNSVUZCUlVnc2JVSkJRVzFDTEVOQlFVTXNRMEZCUXp0WlFVTnlSU3hEUVVGRE96czdPMWxCUlUxTExFZEJRVFpETEVWQlFUZERRU3hEUVVFMlF6dHRRa0ZCY0VRc1VVRkJVU3hEUVVGRVFTdzJRMEZCTmtNc1EwRkJRM1JETEZGQlFWRXNSVUZCUlVNc1ZVRkJWU3hGUVVGRmMwTXNiMEpCUVc5Q0xFVkJRVVVzUTBGQlF6dG5Ra0ZEYUVjc1IwRkJSeXhEUVVGRFF5eHBRMEZCYVVNc1IwRkJSeXhKUVVGSk8yZENRVVUxUXl4SFFVRkxMRU5CUVVOeVF5eHpRa0ZCYzBJc1QwRkJSM05ETEZkQlFXOURMSFZEUVVGRGVFTXNWVUZCVlN4SFFVTjRSWGxETERSQ1FVRTBRaXhIUVVGSGRrTXNjMEpCUVhOQ0xFTkJRVU4zUXl4TlFVRk5MRVZCUXpWRVF5eDFRa0ZCZFVJc1IwRkJTVVlzTkVKQlFUUkNMRWRCUVVjc1EwRkJRenRuUWtGRmFrVXNSVUZCUlN4RlFVRkZSU3gxUWtGQmRVSXNSVUZCUlN4RFFVRkRPMjlDUVVNMVFucERMSE5DUVVGelFpeERRVUZETUVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlVHaERMSEZDUVVGeFFpeEZRVUZMTEVOQlFVTTdkMEpCUTNSRUxFZEJRVXNzUTBGQlEybERMRFpDUVVFMlFpeEhRVUZKT1VNc1VVRkJVU3hMUVVGTFlTeHhRa0ZCY1VJN2QwSkJSWHBGTEVWQlFVVXNSMEZCUjJsRExEWkNRVUUyUWl4RlFVRkZMRU5CUVVNN05FSkJRMjVETEVkQlFVc3NRMEZCUXpGRExHbERRVUZwUXl4SFFVRkhNa01zVjBGQmFVTXNVMEZCUTBNc2QwUkJRWGRFTEVOQlFVTm9SQ3hSUVVGUkxFVkJRVVZoTEhGQ1FVRnhRaXhGUVVGRk1FSXNiMEpCUVc5Q096UkNRVVV4VEN4RlFVRkZMRVZCUVVWdVF5eHBRMEZCYVVNc1MwRkJTeXhKUVVGSkxFVkJRVVVzUTBGQlF6dG5RMEZETDBNc1IwRkJTeXhEUVVGRE5rTXNaVUZCWlN4UFFVRkhReXhYUVVGcFFpeHZRa0ZCUTJwRUxGVkJRVlU3WjBOQlJYQkVMRVZCUVVVc1JVRkJSV2RFTEdWQlFXVXNSVUZCUlN4RFFVRkRPMjlEUVVOd1FpeEhRVUZMTEVOQlFVTTNRaXhuUWtGQlowSXNSMEZCUjI1Q0xGVkJRVlVzUTBGQlEyOUNMRkZCUVZFN2IwTkJSVFZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVORkxFdEJRVXNzUTBGQlJTeERRVUZMTEU5QlFXOUZka0lzVFVGQlVTeERRVUV4Ulc5Q0xHZENRVUZuUWl4RlFVRkRMRU5CUVN0RExHdEVRVUZYTEUxQlFXdEVMRU5CUVRORWNFSXNVVUZCVVN4RlFVRkRMRU5CUVd0RU8yZERRVU4yU2l4RFFVRkRPMmREUVVWRUxFZEJRVXNzUTBGQlEyMUVMR2xDUVVGcFFpeFBRVUZIUXl4WFFVRnRRaXh6UWtGQlEyNUVMRlZCUVZVN1owTkJSWGhFTEVWQlFVVXNSVUZCUld0RUxHbENRVUZwUWl4RlFVRkZMRU5CUVVNN2IwTkJRM1JDTEVkQlFVc3NRMEZCUXk5Q0xHbENRVUZuUWl4SFFVRkhia0lzVlVGQlZTeERRVUZEYjBJc1VVRkJVVHR2UTBGRk5VTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJRMFVzUzBGQlN5eERRVUZGTEVOQlFVc3NUMEZCYjBWMlFpeE5RVUZSTEVOQlFURkZiMElzYVVKQlFXZENMRVZCUVVNc1EwRkJLME1zYTBSQlFWY3NUVUZCYjBRc1EwRkJOMFJ3UWl4UlFVRlJMRVZCUVVNc1EwRkJiMFE3WjBOQlEzcEtMRU5CUVVNN1owTkJSVVFzUjBGQlN5eERRVUZEUml4SlFVRkpMRWRCUVVkMVJDeE5RVUU0UWl4cFEwRkRja04wUkN4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRMVpITEd0Q1FVRnJRaXhQUVVGSGIwUXNWMEZCWjBNc2JVTkJRVU55UkN4VlFVRlZPMmREUVVWMFJYVkRMR2xEUVVGcFF5eEhRVUZITEVkQlFVY3NRMEZCUXpORExHbERRVUZwUXl4RFFVRkRReXhKUVVGSkxFVkJRVVZETEV0QlFVc3NSVUZCUlVNc1VVRkJVU3hGUVVGRlF5eFZRVUZWTEVWQlFVVkRMR3RDUVVGclFpeEZRVUZGUXl4elFrRkJjMElzUlVGQlJVTXNhVU5CUVdsRExFTkJRVU1zUTBGQlF6dG5RMEZGTlV3c1RVRkJUU3hEUVVGRExFbEJRVWs3TkVKQlEySXNRMEZCUXp0M1FrRkRTQ3hEUVVGRE8yOUNRVU5JTEVOQlFVTXNRMEZCUXl4RFFVRkRPMmRDUVVOTUxFTkJRVU03WjBKQlJVUXNUVUZCVFN4RFFVRkRiME1zYVVOQlFXbERPMWxCUXpGRExFTkJRVU03TzAwN08wVkJla1kwUkdVc1kwRkJkVUk3YTBKQlFXcEZNVVFzYVVOQlFXbERMRUVpZlE9PSIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFJlY3Vyc2l2ZURlZmluaXRpb24gZnJvbSBcIi4vZGVmaW5pdGlvbi9yZWN1cnNpdmVcIjtcbmltcG9ydCBMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiBmcm9tIFwiLi9kZWZpbml0aW9uL2xlZnRSZWN1cnNpdmVcIjtcbmltcG9ydCBEaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uIGZyb20gXCIuL2RlZmluaXRpb24vbGVmdFJlY3Vyc2l2ZS9kaXJlY3RseVwiO1xuaW1wb3J0IEluZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiBmcm9tIFwiLi9kZWZpbml0aW9uL2xlZnRSZWN1cnNpdmUvaW5kaXJlY3RseVwiO1xuXG5pbXBvcnQgeyBpc0luc3RhbmNlT2YgfSBmcm9tIFwiLi91dGlsaXRpZXMvY2xhc3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZWxpbWluYXRlTGVmdFJlY3Vyc2lvbihzdGFydFJ1bGUsIHJ1bGVNYXApIHtcbiAgY29uc3QgcnVsZSA9IHN0YXJ0UnVsZSwgLy8vXG4gICAgICAgIHJlY3Vyc2l2ZURlZmluaXRpb25zID0gW10sXG4gICAgICAgIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucyA9IFtdO1xuXG4gIHJlcGxhY2VSZWN1cnNpdmVEZWZpbml0aW9ucyhydWxlLCByZWN1cnNpdmVEZWZpbml0aW9ucywgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zLCBydWxlTWFwKTtcblxuICByZXdyaXRlTGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zKGxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucywgcnVsZU1hcCk7XG5cbiAgY29uc3Qgc3RhcnRSdWxlTmFtZSA9IHN0YXJ0UnVsZS5nZXROYW1lKCk7XG5cbiAgc3RhcnRSdWxlID0gcnVsZU1hcFtzdGFydFJ1bGVOYW1lXTsgLy8vXG5cbiAgcmV0dXJuIHN0YXJ0UnVsZTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZVJlY3Vyc2l2ZURlZmluaXRpb24ocnVsZU5hbWUsIGRlZmluaXRpb24sIHJlY3Vyc2l2ZURlZmluaXRpb25zLCBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbnMsIHJ1bGVNYXApIHtcbiAgY29uc3QgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBJbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24uZnJvbVJ1bGVOYW1lRGVmaW5pdGlvbkFuZFJlY3Vyc2l2ZURlZmluaXRpb25zKHJ1bGVOYW1lLCBkZWZpbml0aW9uLCByZWN1cnNpdmVEZWZpbml0aW9ucykgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uLmZyb21SdWxlTmFtZUFuZERlZmluaXRpb24ocnVsZU5hbWUsIGRlZmluaXRpb24pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24uZnJvbVJ1bGVOYW1lQW5kRGVmaW5pdGlvbihydWxlTmFtZSwgZGVmaW5pdGlvbik7XG5cbiAgaWYgKGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uICE9PSBudWxsKSB7XG4gICAgY29uc3QgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb25JbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBpc0luc3RhbmNlT2YobGVmdFJlY3Vyc2l2ZURlZmluaXRpb24sIEluZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbik7XG5cbiAgICBpZiAobGVmdFJlY3Vyc2l2ZURlZmluaXRpb25JbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24pIHtcbiAgICAgIGNvbnN0IGluZGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiA9IGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uLCAgLy8vXG4gICAgICAgICAgICBpbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gPSBpbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24uZ2V0SW1wbGljaXRseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uKCk7XG5cbiAgICAgIGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbi5yZXBsYWNlKHJ1bGVNYXApO1xuICAgIH1cblxuICAgIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucy5wdXNoKGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uKTtcbiAgfVxuXG4gIGNvbnN0IHJlY3Vyc2l2ZURlZmluaXRpb24gPSAobGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gIT09IG51bGwpID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gOiAvLy9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWN1cnNpdmVEZWZpbml0aW9uLmZyb21SdWxlTmFtZUFuZERlZmluaXRpb24ocnVsZU5hbWUsIGRlZmluaXRpb24pO1xuXG4gIGlmIChyZWN1cnNpdmVEZWZpbml0aW9uICE9PSBudWxsKSB7XG4gICAgcmVjdXJzaXZlRGVmaW5pdGlvbi5yZXBsYWNlKHJ1bGVNYXApO1xuICB9XG5cbiAgcmV0dXJuIHJlY3Vyc2l2ZURlZmluaXRpb247XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VSZWN1cnNpdmVEZWZpbml0aW9ucyhydWxlLCByZWN1cnNpdmVEZWZpbml0aW9ucywgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zLCBydWxlTWFwKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcnVsZS5nZXROYW1lKCksXG4gICAgICAgIGRlZmluaXRpb25zID0gcnVsZS5nZXREZWZpbml0aW9ucygpO1xuXG4gIGRlZmluaXRpb25zLmZvckVhY2goKGRlZmluaXRpb24pID0+IHtcbiAgICBjb25zdCBkZWZpbml0aW9uUmVjdXJzaXZlRGVmaW5pdGlvbiA9IGlzSW5zdGFuY2VPZihkZWZpbml0aW9uLCBSZWN1cnNpdmVEZWZpbml0aW9uKSxcbiAgICAgICAgICByZWN1cnNpdmVEZWZpbml0aW9uID0gZGVmaW5pdGlvblJlY3Vyc2l2ZURlZmluaXRpb24gP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmluaXRpb24gOiAgLy8vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBsYWNlUmVjdXJzaXZlRGVmaW5pdGlvbihydWxlTmFtZSwgZGVmaW5pdGlvbiwgcmVjdXJzaXZlRGVmaW5pdGlvbnMsIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucywgcnVsZU1hcCk7XG5cbiAgICBpZiAocmVjdXJzaXZlRGVmaW5pdGlvbiAhPT0gbnVsbCkge1xuICAgICAgY29uc3QgcHJldmlvdXNSZWN1cnNpdmVEZWZpbml0aW9ucyA9IFsgLi4ucmVjdXJzaXZlRGVmaW5pdGlvbnMsIHJlY3Vyc2l2ZURlZmluaXRpb24gXSxcbiAgICAgICAgICAgIHByZXZpb3VzUmVjdXJzaXZlUnVsZU5hbWVzID0gcHJldmlvdXNSZWN1cnNpdmVEZWZpbml0aW9ucy5tYXAoKHByZXZpb3VzUmVjdXJzaXZlRGVmaW5pdGlvbikgPT4gcmVjdXJzaXZlUnVsZU5hbWVGcm9tUmVjdXJzaXZlRGVmaW5pdGlvbihwcmV2aW91c1JlY3Vyc2l2ZURlZmluaXRpb24pKSxcbiAgICAgICAgICAgIHJlY3Vyc2l2ZVJ1bGVOYW1lcyA9IHJlY3Vyc2l2ZURlZmluaXRpb24uZ2V0UmVjdXJzaXZlUnVsZU5hbWVzKCk7XG5cbiAgICAgIHJlY3Vyc2l2ZVJ1bGVOYW1lcy5mb3JFYWNoKChyZWN1cnNpdmVSdWxlTmFtZSkgPT4ge1xuICAgICAgICBjb25zdCBwcmV2aW91c1JlY3Vyc2l2ZVJ1bGVOYW1lc0luY2x1ZGVzUmVjdXJzaXZlUnVsZU5hbWUgPSBwcmV2aW91c1JlY3Vyc2l2ZVJ1bGVOYW1lcy5pbmNsdWRlcyhyZWN1cnNpdmVSdWxlTmFtZSk7XG5cbiAgICAgICAgaWYgKCFwcmV2aW91c1JlY3Vyc2l2ZVJ1bGVOYW1lc0luY2x1ZGVzUmVjdXJzaXZlUnVsZU5hbWUpIHtcbiAgICAgICAgICBjb25zdCBydWxlTmFtZSA9IHJlY3Vyc2l2ZVJ1bGVOYW1lLCAgLy8vXG4gICAgICAgICAgICAgICAgcnVsZSA9IHJ1bGVNYXBbcnVsZU5hbWVdIHx8IG51bGw7IC8vL1xuXG4gICAgICAgICAgaWYgKHJ1bGUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlY3Vyc2l2ZURlZmluaXRpb25zID0gcHJldmlvdXNSZWN1cnNpdmVEZWZpbml0aW9uczsgIC8vL1xuXG4gICAgICAgICAgICByZXBsYWNlUmVjdXJzaXZlRGVmaW5pdGlvbnMocnVsZSwgcmVjdXJzaXZlRGVmaW5pdGlvbnMsIGxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucywgcnVsZU1hcCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiByZXdyaXRlTGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zKGxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucywgcnVsZU1hcCkge1xuICBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbnMuZm9yRWFjaCgobGVmdFJlY3Vyc2l2ZURlZmluaXRpb24pID0+IGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uLnJld3JpdGUocnVsZU1hcCkpO1xufVxuXG5mdW5jdGlvbiByZWN1cnNpdmVSdWxlTmFtZUZyb21SZWN1cnNpdmVEZWZpbml0aW9uKHJlY3Vyc2l2ZURlZmluaXRpb24pIHtcbiAgY29uc3QgcmVjdXJzaXZlRGVmaW5pdGlvblJ1bGVOYW1lID0gcmVjdXJzaXZlRGVmaW5pdGlvbi5nZXRSdWxlTmFtZSgpLFxuICAgICAgICByZWN1cnNpdmVSdWxlTmFtZSA9IHJlY3Vyc2l2ZURlZmluaXRpb25SdWxlTmFtZTsgIC8vL1xuXG4gIHJldHVybiByZWN1cnNpdmVSdWxlTmFtZTtcblxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgUmVkdWNlZE5vZGUgZnJvbSBcIi4vbm9kZS9yZWR1Y2VkXCI7XG5pbXBvcnQgUmVwZWF0ZWROb2RlIGZyb20gXCIuL25vZGUvcmVwZWF0ZWRcIjtcblxuaW1wb3J0IHsgaXNJbnN0YW5jZU9mIH0gZnJvbSBcIi4vdXRpbGl0aWVzL2NsYXNzXCI7XG5pbXBvcnQgeyBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUsIGNoZWNrUmVkdWNlZFJ1bGVOYW1lTWF0Y2hlc1J1bGVOYW1lIH0gZnJvbSBcIi4vdXRpbGl0aWVzL3J1bGVOYW1lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbW92ZU9yUmVuYW1lSW50ZXJtZWRpYXRlTm9kZXMobm9kZSkge1xuICByZW1vdmVPclJlbmFtZVJlZHVjZWROb2Rlcyhub2RlKTtcblxuICByZW1vdmVSZXBlYXRlZE5vZGVzKG5vZGUpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVSZXBlYXRlZE5vZGVzKG5vZGUpIHtcbiAgY29uc3Qgbm9kZU5vblRlcm1pbmFsTm9kZSA9IG5vZGUuaXNOb25UZXJtaW5hbE5vZGUoKTtcblxuICBpZiAobm9kZU5vblRlcm1pbmFsTm9kZSkge1xuICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IG5vZGU7IC8vL1xuXG4gICAgbGV0IGNoaWxkTm9kZXMgPSBub25UZXJtaW5hbE5vZGUuZ2V0Q2hpbGROb2RlcygpO1xuXG4gICAgY2hpbGROb2RlcyA9IHJlbW92ZVJlcGVhdGVkQ2hpbGROb2RlcyhjaGlsZE5vZGVzKTtcblxuICAgIG5vblRlcm1pbmFsTm9kZS5zZXRDaGlsZE5vZGVzKGNoaWxkTm9kZXMpXG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlUmVwZWF0ZWRDaGlsZE5vZGVzKGNoaWxkTm9kZXMpIHtcbiAgY2hpbGROb2RlcyA9IGNoaWxkTm9kZXMucmVkdWNlKChjaGlsZE5vZGVzLCBjaGlsZE5vZGUpID0+IHtcbiAgICBjb25zdCBjaGlsZE5vZGVSZXBlYXRlZE5vZGUgPSBpc0luc3RhbmNlT2YoY2hpbGROb2RlLCBSZXBlYXRlZE5vZGUpO1xuXG4gICAgaWYgKGNoaWxkTm9kZVJlcGVhdGVkTm9kZSkge1xuICAgICAgbGV0IGNoaWxkTm9kZUNoaWxkTm9kZXMgPSBjaGlsZE5vZGUuZ2V0Q2hpbGROb2RlcygpO1xuXG4gICAgICBjaGlsZE5vZGVDaGlsZE5vZGVzID0gcmVtb3ZlUmVwZWF0ZWRDaGlsZE5vZGVzKGNoaWxkTm9kZUNoaWxkTm9kZXMpO1xuXG4gICAgICBjaGlsZE5vZGVzID0gY2hpbGROb2Rlcy5jb25jYXQoY2hpbGROb2RlQ2hpbGROb2Rlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZVJlcGVhdGVkTm9kZXMoY2hpbGROb2RlKTtcblxuICAgICAgY2hpbGROb2Rlcy5wdXNoKGNoaWxkTm9kZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoaWxkTm9kZXM7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gY2hpbGROb2Rlcztcbn1cblxuZnVuY3Rpb24gcmVtb3ZlT3JSZW5hbWVSZWR1Y2VkTm9kZXMobm9kZSkge1xuICBjb25zdCBub2RlTm9uVGVybWluYWxOb2RlID0gbm9kZS5pc05vblRlcm1pbmFsTm9kZSgpO1xuXG4gIGlmIChub2RlTm9uVGVybWluYWxOb2RlKSB7XG4gICAgY29uc3Qgbm9uVGVybWluYWxOb2RlID0gbm9kZSwgLy8vXG4gICAgICAgICAgcnVsZU5hbWUgPSBub25UZXJtaW5hbE5vZGUuZ2V0UnVsZU5hbWUoKTtcblxuICAgIGxldCBjaGlsZE5vZGVzID0gbm9uVGVybWluYWxOb2RlLmdldENoaWxkTm9kZXMoKTtcblxuICAgIGNoaWxkTm9kZXMgPSByZW1vdmVPclJlbmFtZVJlZHVjZWRDaGlsZE5vZGVzKGNoaWxkTm9kZXMsIHJ1bGVOYW1lKTtcblxuICAgIG5vblRlcm1pbmFsTm9kZS5zZXRDaGlsZE5vZGVzKGNoaWxkTm9kZXMpXG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlT3JSZW5hbWVSZWR1Y2VkQ2hpbGROb2RlcyhjaGlsZE5vZGVzLCBydWxlTmFtZSkge1xuICBjb25zdCBjaGlsZE5vZGVzTGVuZ3RoID0gY2hpbGROb2Rlcy5sZW5ndGg7XG5cbiAgY2hpbGROb2RlcyA9IGNoaWxkTm9kZXMucmVkdWNlKChjaGlsZE5vZGVzLCBjaGlsZE5vZGUpID0+IHtcbiAgICBjb25zdCBjaGlsZE5vZGVSZWR1Y2VkTm9kZSA9IGlzSW5zdGFuY2VPZihjaGlsZE5vZGUsIFJlZHVjZWROb2RlKTtcblxuICAgIGlmIChjaGlsZE5vZGVSZWR1Y2VkTm9kZSkge1xuICAgICAgY29uc3QgcmVkdWNlZE5vZGUgPSBjaGlsZE5vZGUsIC8vL1xuICAgICAgICAgICAgcmVkdWNlZE5vZGVSdWxlTmFtZSA9IHJlZHVjZWROb2RlLmdldFJ1bGVOYW1lKCksXG4gICAgICAgICAgICByZWR1Y2VkUnVsZU5hbWUgPSByZWR1Y2VkTm9kZVJ1bGVOYW1lLCAgLy8vXG4gICAgICAgICAgICByZWR1Y2VkUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWUgPSBjaGVja1JlZHVjZWRSdWxlTmFtZU1hdGNoZXNSdWxlTmFtZShyZWR1Y2VkUnVsZU5hbWUsIHJ1bGVOYW1lKTtcblxuICAgICAgaWYgKHJlZHVjZWRSdWxlTmFtZU1hdGNoZXNSdWxlTmFtZSkge1xuICAgICAgICBpZiAoY2hpbGROb2Rlc0xlbmd0aCA+IDEpIHtcbiAgICAgICAgICBjb25zdCBydWxlTmFtZSA9IHJ1bGVOYW1lRnJvbVJlZHVjZWRSdWxlTmFtZShyZWR1Y2VkUnVsZU5hbWUpO1xuXG4gICAgICAgICAgY2hpbGROb2RlLnNldFJ1bGVOYW1lKHJ1bGVOYW1lKTtcblxuICAgICAgICAgIHJlbW92ZU9yUmVuYW1lUmVkdWNlZE5vZGVzKGNoaWxkTm9kZSk7XG5cbiAgICAgICAgICBjaGlsZE5vZGVzLnB1c2goY2hpbGROb2RlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsZXQgY2hpbGROb2RlQ2hpbGROb2RlcyA9IGNoaWxkTm9kZS5nZXRDaGlsZE5vZGVzKCk7XG5cbiAgICAgICAgICBjaGlsZE5vZGVDaGlsZE5vZGVzID0gcmVtb3ZlT3JSZW5hbWVSZWR1Y2VkQ2hpbGROb2RlcyhjaGlsZE5vZGVDaGlsZE5vZGVzKTtcblxuICAgICAgICAgIGNoaWxkTm9kZXMgPSBjaGlsZE5vZGVzLmNvbmNhdChjaGlsZE5vZGVDaGlsZE5vZGVzKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgcnVsZU5hbWUgPSBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lKTtcblxuICAgICAgICBjaGlsZE5vZGUuc2V0UnVsZU5hbWUocnVsZU5hbWUpO1xuXG4gICAgICAgIHJlbW92ZU9yUmVuYW1lUmVkdWNlZE5vZGVzKGNoaWxkTm9kZSk7XG5cbiAgICAgICAgY2hpbGROb2Rlcy5wdXNoKGNoaWxkTm9kZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZU9yUmVuYW1lUmVkdWNlZE5vZGVzKGNoaWxkTm9kZSk7XG5cbiAgICAgIGNoaWxkTm9kZXMucHVzaChjaGlsZE5vZGUpO1xuICAgIH1cblxuICAgIHJldHVybiBjaGlsZE5vZGVzO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIGNoaWxkTm9kZXM7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgZWxpbWluYXRlTGVmdFJlY3Vyc2lvbiB9IGZyb20gXCIuL2VsaW1pbmF0ZUxlZnRSZWN1cnNpb25cIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcmVtb3ZlT3JSZW5hbWVJbnRlcm1lZGlhdGVOb2RlcyB9IGZyb20gXCIuL3JlbW92ZU9yUmVuYW1lSW50ZXJtZWRpYXRlTm9kZXNcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IEVTQ0FQRV9LRVlfU1RPUFNfRFJBR0dJTkdfT1BUSU9OID0gXCJFU0NBUEVfS0VZX1NUT1BTX0RSQUdHSU5HXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgRVNDQVBFX0tFWV9TVE9QU19EUkFHR0lOR19PUFRJT05cbn07XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB3aXRoU3R5bGUgZnJvbSBcImVhc3ktd2l0aC1zdHlsZVwiOyAgLy8vXG5cbmltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiZWFzeVwiO1xuXG5jbGFzcyBSb3dEaXYgZXh0ZW5kcyBFbGVtZW50IHtcbiAgc3RhdGljIHRhZ05hbWUgPSBcImRpdlwiO1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcGVydGllcyA9IHtcbiAgICBjbGFzc05hbWU6IFwicm93XCJcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlKFJvd0RpdilgXG5cbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1ncm93OiAxO1xuXG5gO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBFbGVtZW50IH0gZnJvbSBcImVhc3lcIjtcblxuY2xhc3MgUm93c0RpdiBleHRlbmRzIEVsZW1lbnQge1xuICBzdGF0aWMgdGFnTmFtZSA9IFwiZGl2XCI7XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJyb3dzXCJcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlKFJvd3NEaXYpYFxuXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZ3JvdzogMTtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuYDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHdpdGhTdHlsZSBmcm9tIFwiZWFzeS13aXRoLXN0eWxlXCI7ICAvLy9cblxuaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gXCJlYXN5XCI7XG5cbmNsYXNzIENvbHVtbkRpdiBleHRlbmRzIEVsZW1lbnQge1xuICBzdGF0aWMgdGFnTmFtZSA9IFwiZGl2XCI7XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJjb2x1bW5cIlxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGUoQ29sdW1uRGl2KWBcblxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWdyb3c6IDE7XG5cbmA7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB3aXRoU3R5bGUgZnJvbSBcImVhc3ktd2l0aC1zdHlsZVwiOyAgLy8vXG5cbmltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiZWFzeVwiO1xuXG5jbGFzcyBDb2x1bW5zRGl2IGV4dGVuZHMgRWxlbWVudCB7XG4gIHN0YXRpYyB0YWdOYW1lID0gXCJkaXZcIjtcblxuICBzdGF0aWMgZGVmYXVsdFByb3BlcnRpZXMgPSB7XG4gICAgY2xhc3NOYW1lOiBcImNvbHVtbnNcIlxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGUoQ29sdW1uc0RpdilgXG5cbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1ncm93OiAxO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG5gO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBFbGVtZW50IH0gZnJvbSBcImVhc3lcIjtcblxuY2xhc3MgU2l6ZWFibGVEaXYgZXh0ZW5kcyBFbGVtZW50IHtcbiAgc3RhdGljIHRhZ05hbWUgPSBcImRpdlwiO1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcGVydGllcyA9IHtcbiAgICBjbGFzc05hbWU6IFwic2l6ZWFibGVcIlxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGUoU2l6ZWFibGVEaXYpYFxuXG4gIGRpc3BsYXk6IGZsZXg7XG4gIFxuYDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IEFVVE8gPSBcImF1dG9cIjtcbmV4cG9ydCBjb25zdCBDVVJTT1IgPSBcImN1cnNvclwiO1xuZXhwb3J0IGNvbnN0IENPTF9SRVNJWkUgPSBcImNvbC1yZXNpemVcIjtcbmV4cG9ydCBjb25zdCBST1dfUkVTSVpFID0gXCJyb3ctcmVzaXplXCI7XG5leHBvcnQgY29uc3QgRVNDQVBFX0tFWV9DT0RFID0gMjc7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEJvZHkgfSBmcm9tIFwiZWFzeVwiO1xuXG5pbXBvcnQgeyBBVVRPLCBDVVJTT1IsIENPTF9SRVNJWkUsIFJPV19SRVNJWkUgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuY29uc3QgYm9keSA9IG5ldyBCb2R5KCk7XG5cbmxldCBwcmV2aW91c0N1cnNvcjsgIC8vL1xuXG5leHBvcnQgZnVuY3Rpb24gY29sdW1uUmVzaXplQ3Vyc29yKCkge1xuICBjb25zdCBjdXJyZW50Q3Vyc29yID0gZ2V0Q3VycmVudEN1cnNvcigpO1xuXG4gIGlmIChjdXJyZW50Q3Vyc29yICE9PSBDT0xfUkVTSVpFKSB7XG4gICAgcHJldmlvdXNDdXJzb3IgPSBjdXJyZW50Q3Vyc29yO1xuXG4gICAgc2V0Q3Vyc29yKENPTF9SRVNJWkUpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByb3dSZXNpemVDdXJzb3IoKSB7XG4gIGNvbnN0IGN1cnJlbnRDdXJzb3IgPSBnZXRDdXJyZW50Q3Vyc29yKCk7XG5cbiAgaWYgKGN1cnJlbnRDdXJzb3IgIT09IFJPV19SRVNJWkUpIHtcbiAgICBwcmV2aW91c0N1cnNvciA9IGN1cnJlbnRDdXJzb3I7XG5cbiAgICBzZXRDdXJzb3IoUk9XX1JFU0laRSk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0Q3Vyc29yKCkge1xuICBzZXRDdXJzb3IocHJldmlvdXNDdXJzb3IpOyAvLy9cbn1cblxuZnVuY3Rpb24gc2V0Q3Vyc29yKGN1cnNvcikge1xuICBjb25zdCBjc3MgPSB7XG4gICAgY3Vyc29yXG4gIH07XG5cbiAgYm9keS5jc3MoY3NzKTtcbn1cblxuZnVuY3Rpb24gZ2V0Q3VycmVudEN1cnNvcigpIHtcbiAgY29uc3QgY3VycmVudEN1cnNvciA9IGJvZHkuY3NzKENVUlNPUikgfHwgQVVUTztcblxuICByZXR1cm4gY3VycmVudEN1cnNvcjtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfZWFzeVdpdGhTdHlsZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImVhc3ktd2l0aC1zdHlsZVwiKSk7XG52YXIgX2Vhc3kgPSByZXF1aXJlKFwiZWFzeVwiKTtcbnZhciBfc2l6ZWFibGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9kaXYvc2l6ZWFibGVcIikpO1xudmFyIF9jdXJzb3IgPSByZXF1aXJlKFwiLi4vY3Vyc29yXCIpO1xudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzXCIpO1xudmFyIF9vcHRpb25zID0gcmVxdWlyZShcIi4uL29wdGlvbnNcIik7XG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICAgIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuICAgIGZvcih2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKWFycjJbaV0gPSBhcnJbaV07XG4gICAgcmV0dXJuIGFycjI7XG59XG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7XG59XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbigpIHt9KSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgIGlmIChpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkge1xuICAgICAgICBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgICAgICAgICAgdmFyIGEgPSBbXG4gICAgICAgICAgICAgICAgbnVsbFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGEucHVzaC5hcHBseShhLCBhcmdzKTtcbiAgICAgICAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuICAgICAgICAgICAgaWYgKENsYXNzKSBfc2V0UHJvdG90eXBlT2YoaW5zdGFuY2UsIENsYXNzLnByb3RvdHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5IGluIG9iaikge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICAgIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cbmZ1bmN0aW9uIF9pbnN0YW5jZW9mKGxlZnQsIHJpZ2h0KSB7XG4gICAgaWYgKHJpZ2h0ICE9IG51bGwgJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiByaWdodFtTeW1ib2wuaGFzSW5zdGFuY2VdKSB7XG4gICAgICAgIHJldHVybiAhIXJpZ2h0W1N5bWJvbC5oYXNJbnN0YW5jZV0obGVmdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGxlZnQgaW5zdGFuY2VvZiByaWdodDtcbiAgICB9XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5mdW5jdGlvbiBfaXNOYXRpdmVGdW5jdGlvbihmbikge1xuICAgIHJldHVybiBGdW5jdGlvbi50b1N0cmluZy5jYWxsKGZuKS5pbmRleE9mKFwiW25hdGl2ZSBjb2RlXVwiKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxcXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICAgIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgICAgIHJldHVybiBjYWxsO1xuICAgIH1cbiAgICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgICAgcmV0dXJuIG87XG4gICAgfTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxuZnVuY3Rpb24gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChzdHJpbmdzLCByYXcpIHtcbiAgICBpZiAoIXJhdykge1xuICAgICAgICByYXcgPSBzdHJpbmdzLnNsaWNlKDApO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmZyZWV6ZShPYmplY3QuZGVmaW5lUHJvcGVydGllcyhzdHJpbmdzLCB7XG4gICAgICAgIHJhdzoge1xuICAgICAgICAgICAgdmFsdWU6IE9iamVjdC5mcmVlemUocmF3KVxuICAgICAgICB9XG4gICAgfSkpO1xufVxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICAgIHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7XG59XG52YXIgX3R5cGVvZiA9IGZ1bmN0aW9uKG9iaikge1xuICAgIFwiQHN3Yy9oZWxwZXJzIC0gdHlwZW9mXCI7XG4gICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICAgIGlmICghbykgcmV0dXJuO1xuICAgIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gICAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICAgIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obik7XG4gICAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxuZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykge1xuICAgIHZhciBfY2FjaGUgPSB0eXBlb2YgTWFwID09PSBcImZ1bmN0aW9uXCIgPyBuZXcgTWFwKCkgOiB1bmRlZmluZWQ7XG4gICAgX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHtcbiAgICAgICAgaWYgKENsYXNzID09PSBudWxsIHx8ICFfaXNOYXRpdmVGdW5jdGlvbihDbGFzcykpIHJldHVybiBDbGFzcztcbiAgICAgICAgaWYgKHR5cGVvZiBDbGFzcyAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBfY2FjaGUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIGlmIChfY2FjaGUuaGFzKENsYXNzKSkgcmV0dXJuIF9jYWNoZS5nZXQoQ2xhc3MpO1xuICAgICAgICAgICAgX2NhY2hlLnNldChDbGFzcywgV3JhcHBlcik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gV3JhcHBlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBfY29uc3RydWN0KENsYXNzLCBhcmd1bWVudHMsIF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3Rvcik7XG4gICAgICAgIH1cbiAgICAgICAgV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKENsYXNzLnByb3RvdHlwZSwge1xuICAgICAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogV3JhcHBlcixcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YoV3JhcHBlciwgQ2xhc3MpO1xuICAgIH07XG4gICAgcmV0dXJuIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpO1xufVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkge1xuICAgIHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHtcbiAgICAgICAgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7XG4gICAgICAgIGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7XG4gICAgICAgICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHtcbiAgICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoW1xuICAgICAgICBcIlxcblxcbiAgZmxleC1zaHJpbms6IDA7XFxuXFxuXCJcbiAgICBdKTtcbiAgICBfdGVtcGxhdGVPYmplY3QgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH07XG4gICAgcmV0dXJuIGRhdGE7XG59XG52YXIgQkxVUl9FVkVOVF9UWVBFID0gX2Vhc3kuZXZlbnRUeXBlcy5CTFVSX0VWRU5UX1RZUEUsIERSQUdfRVZFTlRfVFlQRSA9IF9lYXN5LmV2ZW50VHlwZXMuRFJBR19FVkVOVF9UWVBFLCBNT1VTRVVQX0VWRU5UX1RZUEUgPSBfZWFzeS5ldmVudFR5cGVzLk1PVVNFVVBfRVZFTlRfVFlQRSwgU1RPUF9EUkFHX0VWRU5UX1RZUEUgPSBfZWFzeS5ldmVudFR5cGVzLlNUT1BfRFJBR19FVkVOVF9UWVBFLCBTVEFSVF9EUkFHX0VWRU5UX1RZUEUgPSBfZWFzeS5ldmVudFR5cGVzLlNUQVJUX0RSQUdfRVZFTlRfVFlQRTtcbnZhciBTcGxpdHRlckRpdiA9IC8qI19fUFVSRV9fKi8gZnVuY3Rpb24oRWxlbWVudCkge1xuICAgIF9pbmhlcml0cyhTcGxpdHRlckRpdiwgRWxlbWVudCk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihTcGxpdHRlckRpdik7XG4gICAgZnVuY3Rpb24gU3BsaXR0ZXJEaXYoc2VsZWN0b3IsIG9wdGlvbnMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNwbGl0dGVyRGl2KTtcbiAgICAgICAgdmFyIF90aGlzO1xuICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHNlbGVjdG9yKTtcbiAgICAgICAgX3RoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgX2NyZWF0ZUNsYXNzKFNwbGl0dGVyRGl2LCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJpc09wdGlvblByZXNlbnRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpc09wdGlvblByZXNlbnQob3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgdmFyIG9wdGlvblByZXNlbnQgPSAhIXRoaXMub3B0aW9uc1tvcHRpb25dO1xuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25QcmVzZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwic2V0T3B0aW9uc1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHNldE9wdGlvbnMob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJzZXRPcHRpb25cIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRPcHRpb24ob3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zW29wdGlvbl0gPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwidW5zZXRPcHRpb25cIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiB1bnNldE9wdGlvbihvcHRpb24pIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy5vcHRpb25zW29wdGlvbl07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJvbkRyYWdcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkRyYWcoZHJhZ0hhbmRsZXIsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZXZlbnRUeXBlID0gRFJBR19FVkVOVF9UWVBFLCBoYW5kbGVyID0gZHJhZ0hhbmRsZXI7IC8vL1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwib2ZmRHJhZ1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9mZkRyYWcoZHJhZ0hhbmRsZXIsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZXZlbnRUeXBlID0gRFJBR19FVkVOVF9UWVBFLCBoYW5kbGVyID0gZHJhZ0hhbmRsZXI7IC8vL1xuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwib25TdG9wRHJhZ1wiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uU3RvcERyYWcoc3RvcERyYWdIYW5kbGVyLCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50VHlwZSA9IFNUT1BfRFJBR19FVkVOVF9UWVBFLCBoYW5kbGVyID0gc3RvcERyYWdIYW5kbGVyOyAvLy9cbiAgICAgICAgICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcIm9mZlN0b3BEcmFnXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb2ZmU3RvcERyYWcoc3RvcERyYWdIYW5kbGVyLCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50VHlwZSA9IFNUT1BfRFJBR19FVkVOVF9UWVBFLCBoYW5kbGVyID0gc3RvcERyYWdIYW5kbGVyOyAvLy9cbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcIm9uU3RhcnREcmFnXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb25TdGFydERyYWcoc3RvcERyYWdIYW5kbGVyLCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50VHlwZSA9IFNUQVJUX0RSQUdfRVZFTlRfVFlQRSwgaGFuZGxlciA9IHN0b3BEcmFnSGFuZGxlcjsgLy8vXG4gICAgICAgICAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJvZmZTdGFydERyYWdcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBvZmZTdGFydERyYWcoc3RvcERyYWdIYW5kbGVyLCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50VHlwZSA9IFNUQVJUX0RSQUdfRVZFTlRfVFlQRSwgaGFuZGxlciA9IHN0b3BEcmFnSGFuZGxlcjsgLy8vXG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjYWxsSGFuZGxlcnNcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjYWxsSGFuZGxlcnMoZXZlbnRUeXBlKSB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcmVtYWluaW5nQXJndW1lbnRzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5Kyspe1xuICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdBcmd1bWVudHNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciBldmVudExpc3RlbmVycyA9IHRoaXMuZmluZEV2ZW50TGlzdGVuZXJzKGV2ZW50VHlwZSk7XG4gICAgICAgICAgICAgICAgZXZlbnRMaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbihldmVudExpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfaGFuZGxlcjtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGhhbmRsZXIgPSBldmVudExpc3RlbmVyLmhhbmRsZXIsIGhhbmRsZXJFbGVtZW50ID0gZXZlbnRMaXN0ZW5lci5lbGVtZW50LCBlbGVtZW50ID0gX3RoaXM7IC8vL1xuICAgICAgICAgICAgICAgICAgICAoX2hhbmRsZXIgPSBoYW5kbGVyKS5jYWxsLmFwcGx5KF9oYW5kbGVyLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVyRWxlbWVudFxuICAgICAgICAgICAgICAgICAgICBdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocmVtYWluaW5nQXJndW1lbnRzKSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICBdKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJlbmFibGVcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVDbGFzcyhcImRpc2FibGVkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZGlzYWJsZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRDbGFzcyhcImRpc2FibGVkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiaXNEaXNhYmxlZFwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGlzRGlzYWJsZWQoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRpc2FibGVkID0gdGhpcy5oYXNDbGFzcyhcImRpc2FibGVkXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkaXNhYmxlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImlzRHJhZ2dpbmdcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpc0RyYWdnaW5nKCkge1xuICAgICAgICAgICAgICAgIHZhciBkcmFnZ2luZyA9IHRoaXMuaGFzQ2xhc3MoXCJkcmFnZ2luZ1wiKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHJhZ2dpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJnZXREaXJlY3Rpb25cIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREaXJlY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRpcmVjdGlvbjtcbiAgICAgICAgICAgICAgICB2YXIgbmV4dFNpYmxpbmdFbGVtZW50ID0gdGhpcy5nZXROZXh0U2libGluZ0VsZW1lbnQoKSwgcHJldmlvdXNTaWJsaW5nRWxlbWVudCA9IHRoaXMuZ2V0UHJldmlvdXNTaWJsaW5nRWxlbWVudCgpO1xuICAgICAgICAgICAgICAgIGlmIChfaW5zdGFuY2VvZihuZXh0U2libGluZ0VsZW1lbnQsIF9zaXplYWJsZS5kZWZhdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICBkaXJlY3Rpb24gPSArMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKF9pbnN0YW5jZW9mKHByZXZpb3VzU2libGluZ0VsZW1lbnQsIF9zaXplYWJsZS5kZWZhdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICBkaXJlY3Rpb24gPSAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRpcmVjdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImdldFNpemVhYmxlRGl2XCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U2l6ZWFibGVEaXYoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNpemVhYmxlRGl2O1xuICAgICAgICAgICAgICAgIHZhciBuZXh0U2libGluZ0VsZW1lbnQgPSB0aGlzLmdldE5leHRTaWJsaW5nRWxlbWVudCgpLCBwcmV2aW91c1NpYmxpbmdFbGVtZW50ID0gdGhpcy5nZXRQcmV2aW91c1NpYmxpbmdFbGVtZW50KCk7XG4gICAgICAgICAgICAgICAgaWYgKF9pbnN0YW5jZW9mKG5leHRTaWJsaW5nRWxlbWVudCwgX3NpemVhYmxlLmRlZmF1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNpemVhYmxlRGl2ID0gbmV4dFNpYmxpbmdFbGVtZW50OyAvLy9cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKF9pbnN0YW5jZW9mKHByZXZpb3VzU2libGluZ0VsZW1lbnQsIF9zaXplYWJsZS5kZWZhdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICBzaXplYWJsZURpdiA9IHByZXZpb3VzU2libGluZ0VsZW1lbnQ7IC8vL1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gc2l6ZWFibGVEaXY7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJzdGFydERyYWdcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzdGFydERyYWcoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50VHlwZSA9IFNUQVJUX0RSQUdfRVZFTlRfVFlQRSwgZXNjYXBlS2V5U3RvcHNEcmFnZ2luZ09wdGlvblByZXNlbnQgPSB0aGlzLmlzT3B0aW9uUHJlc2VudChfb3B0aW9ucy5FU0NBUEVfS0VZX1NUT1BTX0RSQUdHSU5HX09QVElPTik7XG4gICAgICAgICAgICAgICAgaWYgKGVzY2FwZUtleVN0b3BzRHJhZ2dpbmdPcHRpb25QcmVzZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIF9lYXN5LndpbmRvdy5vbktleURvd24odGhpcy5rZXlEb3duSGFuZGxlciwgdGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuYWRkQ2xhc3MoXCJkcmFnZ2luZ1wiKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGxIYW5kbGVycyhldmVudFR5cGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwic3RvcERyYWdcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wRHJhZygpIHtcbiAgICAgICAgICAgICAgICB2YXIgZXZlbnRUeXBlID0gU1RPUF9EUkFHX0VWRU5UX1RZUEUsIGVzY2FwZUtleVN0b3BzRHJhZ2dpbmdPcHRpb25QcmVzZW50ID0gdGhpcy5pc09wdGlvblByZXNlbnQoX29wdGlvbnMuRVNDQVBFX0tFWV9TVE9QU19EUkFHR0lOR19PUFRJT04pO1xuICAgICAgICAgICAgICAgIGlmIChlc2NhcGVLZXlTdG9wc0RyYWdnaW5nT3B0aW9uUHJlc2VudCkge1xuICAgICAgICAgICAgICAgICAgICBfZWFzeS53aW5kb3cub2ZmS2V5RG93bih0aGlzLmtleURvd25IYW5kbGVyLCB0aGlzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVDbGFzcyhcImRyYWdnaW5nXCIpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FsbEhhbmRsZXJzKGV2ZW50VHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJtb3VzZVVwSGFuZGxlclwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG1vdXNlVXBIYW5kbGVyKGV2ZW50LCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGRpc2FibGVkID0gdGhpcy5pc0Rpc2FibGVkKCk7XG4gICAgICAgICAgICAgICAgaWYgKCFkaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZHJhZ2dpbmcgPSB0aGlzLmlzRHJhZ2dpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0b3BEcmFnKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgKDAsIF9jdXJzb3IpLnJlc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwibW91c2VPdXRIYW5kbGVyXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gbW91c2VPdXRIYW5kbGVyKGV2ZW50LCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGRpc2FibGVkID0gdGhpcy5pc0Rpc2FibGVkKCk7XG4gICAgICAgICAgICAgICAgaWYgKCFkaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZHJhZ2dpbmcgPSB0aGlzLmlzRHJhZ2dpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFkcmFnZ2luZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgKDAsIF9jdXJzb3IpLnJlc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJrZXlEb3duSGFuZGxlclwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGtleURvd25IYW5kbGVyKGV2ZW50LCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGtleUNvZGUgPSBldmVudC5rZXlDb2RlO1xuICAgICAgICAgICAgICAgIGlmIChrZXlDb2RlID09PSBfY29uc3RhbnRzLkVTQ0FQRV9LRVlfQ09ERSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZHJhZ2dpbmcgPSB0aGlzLmlzRHJhZ2dpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0b3BEcmFnKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgKDAsIF9jdXJzb3IpLnJlc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZGlkTW91bnRcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBkaWRNb3VudCgpIHtcbiAgICAgICAgICAgICAgICB2YXIgX3Byb3BlcnRpZXMgPSB0aGlzLnByb3BlcnRpZXMsIG9uRHJhZyA9IF9wcm9wZXJ0aWVzLm9uRHJhZywgb25TdG9wRHJhZyA9IF9wcm9wZXJ0aWVzLm9uU3RvcERyYWcsIG9uU3RhcnREcmFnID0gX3Byb3BlcnRpZXMub25TdGFydERyYWcsIGRpc2FibGVkID0gX3Byb3BlcnRpZXMuZGlzYWJsZWQsIGRyYWdIYW5kbGVyID0gb25EcmFnLCBzdG9wRHJhZ0hhbmRsZXIgPSBvblN0b3BEcmFnLCBzdGFydERyYWdIYW5kbGVyID0gb25TdGFydERyYWc7IC8vL1xuICAgICAgICAgICAgICAgIGRpc2FibGVkID09PSB0cnVlID8gdGhpcy5kaXNhYmxlKCkgOiB0aGlzLmVuYWJsZSgpO1xuICAgICAgICAgICAgICAgIGRyYWdIYW5kbGVyICYmIHRoaXMub25EcmFnKGRyYWdIYW5kbGVyKTtcbiAgICAgICAgICAgICAgICBzdG9wRHJhZ0hhbmRsZXIgJiYgdGhpcy5vblN0b3BEcmFnKHN0b3BEcmFnSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgc3RhcnREcmFnSGFuZGxlciAmJiB0aGlzLm9uU3RhcnREcmFnKHN0YXJ0RHJhZ0hhbmRsZXIpO1xuICAgICAgICAgICAgICAgIF9lYXN5LndpbmRvdy5vbihcIlwiLmNvbmNhdChCTFVSX0VWRU5UX1RZUEUsIFwiIFwiKS5jb25jYXQoTU9VU0VVUF9FVkVOVF9UWVBFKSwgdGhpcy5tb3VzZVVwSGFuZGxlciwgdGhpcyk7IC8vL1xuICAgICAgICAgICAgICAgIF9lYXN5LndpbmRvdy5vbk1vdXNlTW92ZSh0aGlzLm1vdXNlTW92ZUhhbmRsZXIsIHRoaXMpO1xuICAgICAgICAgICAgICAgIHRoaXMub25Nb3VzZURvd24odGhpcy5tb3VzZURvd25IYW5kbGVyLCB0aGlzKTtcbiAgICAgICAgICAgICAgICB0aGlzLm9uTW91c2VPdmVyKHRoaXMubW91c2VPdmVySGFuZGxlciwgdGhpcyk7XG4gICAgICAgICAgICAgICAgdGhpcy5vbk1vdXNlT3V0KHRoaXMubW91c2VPdXRIYW5kbGVyLCB0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcIndpbGxVbm1vdW50XCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gd2lsbFVubW91bnQoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9wcm9wZXJ0aWVzID0gdGhpcy5wcm9wZXJ0aWVzLCBvbkRyYWcgPSBfcHJvcGVydGllcy5vbkRyYWcsIG9uU3RvcERyYWcgPSBfcHJvcGVydGllcy5vblN0b3BEcmFnLCBvblN0YXJ0RHJhZyA9IF9wcm9wZXJ0aWVzLm9uU3RhcnREcmFnLCBkcmFnSGFuZGxlciA9IG9uRHJhZywgc3RvcERyYWdIYW5kbGVyID0gb25TdG9wRHJhZywgc3RhcnREcmFnSGFuZGxlciA9IG9uU3RhcnREcmFnOyAvLy9cbiAgICAgICAgICAgICAgICBkcmFnSGFuZGxlciAmJiB0aGlzLm9mZkRyYWcoZHJhZ0hhbmRsZXIpO1xuICAgICAgICAgICAgICAgIHN0b3BEcmFnSGFuZGxlciAmJiB0aGlzLm9mZlN0b3BEcmFnKHN0b3BEcmFnSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgc3RhcnREcmFnSGFuZGxlciAmJiB0aGlzLm9mZlN0YXJ0RHJhZyhzdGFydERyYWdIYW5kbGVyKTtcbiAgICAgICAgICAgICAgICBfZWFzeS53aW5kb3cub2ZmKFwiXCIuY29uY2F0KEJMVVJfRVZFTlRfVFlQRSwgXCIgXCIpLmNvbmNhdChNT1VTRVVQX0VWRU5UX1RZUEUpLCB0aGlzLm1vdXNlVXBIYW5kbGVyLCB0aGlzKTsgLy8vXG4gICAgICAgICAgICAgICAgX2Vhc3kud2luZG93Lm9mZk1vdXNlTW92ZSh0aGlzLm1vdXNlTW92ZUhhbmRsZXIsIHRoaXMpO1xuICAgICAgICAgICAgICAgIHRoaXMub2ZmTW91c2VEb3duKHRoaXMubW91c2VEb3duSGFuZGxlciwgdGhpcyk7XG4gICAgICAgICAgICAgICAgdGhpcy5vZmZNb3VzZU92ZXIodGhpcy5tb3VzZU92ZXJIYW5kbGVyLCB0aGlzKTtcbiAgICAgICAgICAgICAgICB0aGlzLm9mZk1vdXNlT3V0KHRoaXMubW91c2VPdXRIYW5kbGVyLCB0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImluaXRpYWxpc2VcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0aWFsaXNlKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0SW5pdGlhbFN0YXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJmcm9tQ2xhc3NcIixcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBmcm9tQ2xhc3MoQ2xhc3MsIHByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgICAgICB2YXIgX29wdGlvbnMxID0gcHJvcGVydGllcy5vcHRpb25zLCBvcHRpb25zID0gX29wdGlvbnMxID09PSB2b2lkIDAgPyB7fSA6IF9vcHRpb25zMSwgc3BsaXR0ZXJEaXYgPSBfZWFzeS5FbGVtZW50LmZyb21DbGFzcyhDbGFzcywgcHJvcGVydGllcywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNwbGl0dGVyRGl2O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIFNwbGl0dGVyRGl2O1xufShfd3JhcE5hdGl2ZVN1cGVyKF9lYXN5LkVsZW1lbnQpKTtcbl9kZWZpbmVQcm9wZXJ0eShTcGxpdHRlckRpdiwgXCJ0YWdOYW1lXCIsIFwiZGl2XCIpO1xuX2RlZmluZVByb3BlcnR5KFNwbGl0dGVyRGl2LCBcImRlZmF1bHRQcm9wZXJ0aWVzXCIsIHtcbiAgICBjbGFzc05hbWU6IFwic3BsaXR0ZXJcIlxufSk7XG5fZGVmaW5lUHJvcGVydHkoU3BsaXR0ZXJEaXYsIFwiaWdub3JlZFByb3BlcnRpZXNcIiwgW1xuICAgIFwib25EcmFnXCIsXG4gICAgXCJvcHRpb25zXCIsXG4gICAgXCJkaXNhYmxlZFwiLFxuICAgIFwib25TdG9wRHJhZ1wiLFxuICAgIFwib25TdGFydERyYWdcIlxuXSk7XG52YXIgX2RlZmF1bHQgPSAoMCwgX2Vhc3lXaXRoU3R5bGUpLmRlZmF1bHQoU3BsaXR0ZXJEaXYpKF90ZW1wbGF0ZU9iamVjdCgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwzTnlZeTlrYVhZdmMzQnNhWFIwWlhJdWFuTWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWENKMWMyVWdjM1J5YVdOMFhDSTdYRzVjYm1sdGNHOXlkQ0IzYVhSb1UzUjViR1VnWm5KdmJTQmNJbVZoYzNrdGQybDBhQzF6ZEhsc1pWd2lPeUFnTHk4dlhHNWNibWx0Y0c5eWRDQjdJSGRwYm1SdmR5d2dSV3hsYldWdWRDd2daWFpsYm5SVWVYQmxjeUI5SUdaeWIyMGdYQ0psWVhONVhDSTdYRzVjYm1sdGNHOXlkQ0JUYVhwbFlXSnNaVVJwZGlCbWNtOXRJRndpTGk0dlpHbDJMM05wZW1WaFlteGxYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lISmxjMlYwUTNWeWMyOXlJSDBnWm5KdmJTQmNJaTR1TDJOMWNuTnZjbHdpTzF4dWFXMXdiM0owSUhzZ1JWTkRRVkJGWDB0RldWOURUMFJGSUgwZ1puSnZiU0JjSWk0dUwyTnZibk4wWVc1MGMxd2lPMXh1YVcxd2IzSjBJSHNnUlZORFFWQkZYMHRGV1Y5VFZFOVFVMTlFVWtGSFIwbE9SMTlQVUZSSlQwNGdmU0JtY205dElGd2lMaTR2YjNCMGFXOXVjMXdpTzF4dVhHNWpiMjV6ZENCN0lFSk1WVkpmUlZaRlRsUmZWRmxRUlN3Z1JGSkJSMTlGVmtWT1ZGOVVXVkJGTENCTlQxVlRSVlZRWDBWV1JVNVVYMVJaVUVVc0lGTlVUMUJmUkZKQlIxOUZWa1ZPVkY5VVdWQkZMQ0JUVkVGU1ZGOUVVa0ZIWDBWV1JVNVVYMVJaVUVVZ2ZTQTlJR1YyWlc1MFZIbHdaWE03WEc1Y2JtTnNZWE56SUZOd2JHbDBkR1Z5UkdsMklHVjRkR1Z1WkhNZ1JXeGxiV1Z1ZENCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0hObGJHVmpkRzl5TENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnYzNWd1pYSW9jMlZzWldOMGIzSXBPMXh1WEc0Z0lDQWdkR2hwY3k1dmNIUnBiMjV6SUQwZ2IzQjBhVzl1Y3p0Y2JpQWdmVnh1WEc0Z0lHbHpUM0IwYVc5dVVISmxjMlZ1ZENodmNIUnBiMjRwSUh0Y2JpQWdJQ0JqYjI1emRDQnZjSFJwYjI1UWNtVnpaVzUwSUQwZ0lTRjBhR2x6TG05d2RHbHZibk5iYjNCMGFXOXVYVHRjYmx4dUlDQWdJSEpsZEhWeWJpQnZjSFJwYjI1UWNtVnpaVzUwTzF4dUlDQjlYRzVjYmlBZ2MyVjBUM0IwYVc5dWN5aHZjSFJwYjI1ektTQjdYRzRnSUNBZ2RHaHBjeTV2Y0hScGIyNXpJRDBnYjNCMGFXOXVjenRjYmlBZ2ZWeHVYRzRnSUhObGRFOXdkR2x2YmlodmNIUnBiMjRwSUh0Y2JpQWdJQ0IwYUdsekxtOXdkR2x2Ym5OYmIzQjBhVzl1WFNBOUlIUnlkV1U3WEc0Z0lIMWNibHh1SUNCMWJuTmxkRTl3ZEdsdmJpaHZjSFJwYjI0cElIdGNiaUFnSUNCa1pXeGxkR1VvZEdocGN5NXZjSFJwYjI1elcyOXdkR2x2YmwwcE8xeHVJQ0I5WEc1Y2JpQWdiMjVFY21GbktHUnlZV2RJWVc1a2JHVnlMQ0JsYkdWdFpXNTBLU0I3WEc0Z0lDQWdZMjl1YzNRZ1pYWmxiblJVZVhCbElEMGdSRkpCUjE5RlZrVk9WRjlVV1ZCRkxGeHVJQ0FnSUNBZ0lDQWdJR2hoYm1Sc1pYSWdQU0JrY21GblNHRnVaR3hsY2pzZ0lDOHZMMXh1WEc0Z0lDQWdkR2hwY3k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0dWMlpXNTBWSGx3WlN3Z2FHRnVaR3hsY2l3Z1pXeGxiV1Z1ZENrN1hHNGdJSDFjYmx4dUlDQnZabVpFY21GbktHUnlZV2RJWVc1a2JHVnlMQ0JsYkdWdFpXNTBLU0I3WEc0Z0lDQWdZMjl1YzNRZ1pYWmxiblJVZVhCbElEMGdSRkpCUjE5RlZrVk9WRjlVV1ZCRkxGeHVJQ0FnSUNBZ0lDQWdJR2hoYm1Sc1pYSWdQU0JrY21GblNHRnVaR3hsY2pzZ0lDOHZMMXh1WEc0Z0lDQWdkR2hwY3k1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtHVjJaVzUwVkhsd1pTd2dhR0Z1Wkd4bGNpd2daV3hsYldWdWRDazdYRzRnSUgxY2JseHVJQ0J2YmxOMGIzQkVjbUZuS0hOMGIzQkVjbUZuU0dGdVpHeGxjaXdnWld4bGJXVnVkQ2tnZTF4dUlDQWdJR052Ym5OMElHVjJaVzUwVkhsd1pTQTlJRk5VVDFCZlJGSkJSMTlGVmtWT1ZGOVVXVkJGTEZ4dUlDQWdJQ0FnSUNBZ0lHaGhibVJzWlhJZ1BTQnpkRzl3UkhKaFowaGhibVJzWlhJN0lDQXZMeTljYmx4dUlDQWdJSFJvYVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lobGRtVnVkRlI1Y0dVc0lHaGhibVJzWlhJc0lHVnNaVzFsYm5RcE8xeHVJQ0I5WEc1Y2JpQWdiMlptVTNSdmNFUnlZV2NvYzNSdmNFUnlZV2RJWVc1a2JHVnlMQ0JsYkdWdFpXNTBLU0I3WEc0Z0lDQWdZMjl1YzNRZ1pYWmxiblJVZVhCbElEMGdVMVJQVUY5RVVrRkhYMFZXUlU1VVgxUlpVRVVzWEc0Z0lDQWdJQ0FnSUNBZ2FHRnVaR3hsY2lBOUlITjBiM0JFY21GblNHRnVaR3hsY2pzZ0lDOHZMMXh1WEc0Z0lDQWdkR2hwY3k1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtHVjJaVzUwVkhsd1pTd2dhR0Z1Wkd4bGNpd2daV3hsYldWdWRDazdYRzRnSUgxY2JseHVJQ0J2YmxOMFlYSjBSSEpoWnloemRHOXdSSEpoWjBoaGJtUnNaWElzSUdWc1pXMWxiblFwSUh0Y2JpQWdJQ0JqYjI1emRDQmxkbVZ1ZEZSNWNHVWdQU0JUVkVGU1ZGOUVVa0ZIWDBWV1JVNVVYMVJaVUVVc1hHNGdJQ0FnSUNBZ0lDQWdhR0Z1Wkd4bGNpQTlJSE4wYjNCRWNtRm5TR0Z1Wkd4bGNqc2dJQzh2TDF4dVhHNGdJQ0FnZEdocGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtHVjJaVzUwVkhsd1pTd2dhR0Z1Wkd4bGNpd2daV3hsYldWdWRDazdYRzRnSUgxY2JseHVJQ0J2Wm1aVGRHRnlkRVJ5WVdjb2MzUnZjRVJ5WVdkSVlXNWtiR1Z5TENCbGJHVnRaVzUwS1NCN1hHNGdJQ0FnWTI5dWMzUWdaWFpsYm5SVWVYQmxJRDBnVTFSQlVsUmZSRkpCUjE5RlZrVk9WRjlVV1ZCRkxGeHVJQ0FnSUNBZ0lDQWdJR2hoYm1Sc1pYSWdQU0J6ZEc5d1JISmhaMGhoYm1Sc1pYSTdJQ0F2THk5Y2JseHVJQ0FnSUhSb2FYTXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWhsZG1WdWRGUjVjR1VzSUdoaGJtUnNaWElzSUdWc1pXMWxiblFwTzF4dUlDQjlYRzVjYmlBZ1kyRnNiRWhoYm1Sc1pYSnpLR1YyWlc1MFZIbHdaU3dnTGk0dWNtVnRZV2x1YVc1blFYSm5kVzFsYm5SektTQjdYRzRnSUNBZ1kyOXVjM1FnWlhabGJuUk1hWE4wWlc1bGNuTWdQU0IwYUdsekxtWnBibVJGZG1WdWRFeHBjM1JsYm1WeWN5aGxkbVZ1ZEZSNWNHVXBPMXh1WEc0Z0lDQWdaWFpsYm5STWFYTjBaVzVsY25NdVptOXlSV0ZqYUNnb1pYWmxiblJNYVhOMFpXNWxjaWtnUFQ0Z2UxeHVJQ0FnSUNBZ1kyOXVjM1FnZXlCb1lXNWtiR1Z5TENCbGJHVnRaVzUwT2lCb1lXNWtiR1Z5Uld4bGJXVnVkQ0I5SUQwZ1pYWmxiblJNYVhOMFpXNWxjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNaVzFsYm5RZ1BTQjBhR2x6T3lBdkx5OWNibHh1SUNBZ0lDQWdhR0Z1Wkd4bGNpNWpZV3hzS0doaGJtUnNaWEpGYkdWdFpXNTBMQ0F1TGk1eVpXMWhhVzVwYm1kQmNtZDFiV1Z1ZEhNc0lHVnNaVzFsYm5RcE8xeHVJQ0FnSUgwcE8xeHVJQ0I5WEc1Y2JpQWdaVzVoWW14bEtDa2dlMXh1SUNBZ0lIUm9hWE11Y21WdGIzWmxRMnhoYzNNb1hDSmthWE5oWW14bFpGd2lLVHRjYmlBZ2ZWeHVYRzRnSUdScGMyRmliR1VvS1NCN1hHNGdJQ0FnZEdocGN5NWhaR1JEYkdGemN5aGNJbVJwYzJGaWJHVmtYQ0lwTzF4dUlDQjlYRzVjYmlBZ2FYTkVhWE5oWW14bFpDZ3BJSHRjYmlBZ0lDQmpiMjV6ZENCa2FYTmhZbXhsWkNBOUlIUm9hWE11YUdGelEyeGhjM01vWENKa2FYTmhZbXhsWkZ3aUtUdGNiaUFnSUNCY2JpQWdJQ0J5WlhSMWNtNGdaR2x6WVdKc1pXUTdYRzRnSUgxY2JseHVJQ0JwYzBSeVlXZG5hVzVuS0NrZ2UxeHVJQ0FnSUdOdmJuTjBJR1J5WVdkbmFXNW5JRDBnZEdocGN5NW9ZWE5EYkdGemN5aGNJbVJ5WVdkbmFXNW5YQ0lwTzF4dUlDQWdJRnh1SUNBZ0lISmxkSFZ5YmlCa2NtRm5aMmx1Wnp0Y2JpQWdmVnh1SUNCY2JpQWdaMlYwUkdseVpXTjBhVzl1S0NrZ2UxeHVJQ0FnSUd4bGRDQmthWEpsWTNScGIyNDdYRzVjYmlBZ0lDQmpiMjV6ZENCdVpYaDBVMmxpYkdsdVowVnNaVzFsYm5RZ1BTQjBhR2x6TG1kbGRFNWxlSFJUYVdKc2FXNW5SV3hsYldWdWRDZ3BMRnh1SUNBZ0lDQWdJQ0FnSUhCeVpYWnBiM1Z6VTJsaWJHbHVaMFZzWlcxbGJuUWdQU0IwYUdsekxtZGxkRkJ5WlhacGIzVnpVMmxpYkdsdVowVnNaVzFsYm5Rb0tUdGNibHh1SUNBZ0lHbG1JQ2h1WlhoMFUybGliR2x1WjBWc1pXMWxiblFnYVc1emRHRnVZMlZ2WmlCVGFYcGxZV0pzWlVScGRpa2dlMXh1SUNBZ0lDQWdaR2x5WldOMGFXOXVJRDBnS3pFN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tIQnlaWFpwYjNWelUybGliR2x1WjBWc1pXMWxiblFnYVc1emRHRnVZMlZ2WmlCVGFYcGxZV0pzWlVScGRpa2dlMXh1SUNBZ0lDQWdaR2x5WldOMGFXOXVJRDBnTFRFN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJR1JwY21WamRHbHZianRjYmlBZ2ZWeHVYRzRnSUdkbGRGTnBlbVZoWW14bFJHbDJLQ2tnZTF4dUlDQWdJR3hsZENCemFYcGxZV0pzWlVScGRqdGNibHh1SUNBZ0lHTnZibk4wSUc1bGVIUlRhV0pzYVc1blJXeGxiV1Z1ZENBOUlIUm9hWE11WjJWMFRtVjRkRk5wWW14cGJtZEZiR1Z0Wlc1MEtDa3NYRzRnSUNBZ0lDQWdJQ0FnY0hKbGRtbHZkWE5UYVdKc2FXNW5SV3hsYldWdWRDQTlJSFJvYVhNdVoyVjBVSEpsZG1sdmRYTlRhV0pzYVc1blJXeGxiV1Z1ZENncE8xeHVYRzRnSUNBZ2FXWWdLRzVsZUhSVGFXSnNhVzVuUld4bGJXVnVkQ0JwYm5OMFlXNWpaVzltSUZOcGVtVmhZbXhsUkdsMktTQjdYRzRnSUNBZ0lDQnphWHBsWVdKc1pVUnBkaUE5SUc1bGVIUlRhV0pzYVc1blJXeGxiV1Z1ZERzZ0x5OHZYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLSEJ5WlhacGIzVnpVMmxpYkdsdVowVnNaVzFsYm5RZ2FXNXpkR0Z1WTJWdlppQlRhWHBsWVdKc1pVUnBkaWtnZTF4dUlDQWdJQ0FnYzJsNlpXRmliR1ZFYVhZZ1BTQndjbVYyYVc5MWMxTnBZbXhwYm1kRmJHVnRaVzUwT3lBdkx5OWNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnYzJsNlpXRmliR1ZFYVhZN1hHNGdJSDFjYmx4dUlDQnpkR0Z5ZEVSeVlXY29LU0I3WEc0Z0lDQWdZMjl1YzNRZ1pYWmxiblJVZVhCbElEMGdVMVJCVWxSZlJGSkJSMTlGVmtWT1ZGOVVXVkJGTEZ4dUlDQWdJQ0FnSUNBZ0lHVnpZMkZ3WlV0bGVWTjBiM0J6UkhKaFoyZHBibWRQY0hScGIyNVFjbVZ6Wlc1MElEMGdkR2hwY3k1cGMwOXdkR2x2YmxCeVpYTmxiblFvUlZORFFWQkZYMHRGV1Y5VFZFOVFVMTlFVWtGSFIwbE9SMTlQVUZSSlQwNHBPMXh1WEc0Z0lDQWdhV1lnS0dWelkyRndaVXRsZVZOMGIzQnpSSEpoWjJkcGJtZFBjSFJwYjI1UWNtVnpaVzUwS1NCN1hHNGdJQ0FnSUNCM2FXNWtiM2N1YjI1TFpYbEViM2R1S0hSb2FYTXVhMlY1Ukc5M2JraGhibVJzWlhJc0lIUm9hWE1wTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdVlXUmtRMnhoYzNNb1hDSmtjbUZuWjJsdVoxd2lLVHRjYmx4dUlDQWdJSFJvYVhNdVkyRnNiRWhoYm1Sc1pYSnpLR1YyWlc1MFZIbHdaU2xjYmlBZ2ZWeHVYRzRnSUhOMGIzQkVjbUZuS0NrZ2UxeHVJQ0FnSUdOdmJuTjBJR1YyWlc1MFZIbHdaU0E5SUZOVVQxQmZSRkpCUjE5RlZrVk9WRjlVV1ZCRkxGeHVJQ0FnSUNBZ0lDQWdJR1Z6WTJGd1pVdGxlVk4wYjNCelJISmhaMmRwYm1kUGNIUnBiMjVRY21WelpXNTBJRDBnZEdocGN5NXBjMDl3ZEdsdmJsQnlaWE5sYm5Rb1JWTkRRVkJGWDB0RldWOVRWRTlRVTE5RVVrRkhSMGxPUjE5UFVGUkpUMDRwTzF4dVhHNGdJQ0FnYVdZZ0tHVnpZMkZ3WlV0bGVWTjBiM0J6UkhKaFoyZHBibWRQY0hScGIyNVFjbVZ6Wlc1MEtTQjdYRzRnSUNBZ0lDQjNhVzVrYjNjdWIyWm1TMlY1Ukc5M2JpaDBhR2x6TG10bGVVUnZkMjVJWVc1a2JHVnlMQ0IwYUdsektUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbkpsYlc5MlpVTnNZWE56S0Z3aVpISmhaMmRwYm1kY0lpazdYRzVjYmlBZ0lDQjBhR2x6TG1OaGJHeElZVzVrYkdWeWN5aGxkbVZ1ZEZSNWNHVXBPMXh1SUNCOVhHNWNiaUFnYlc5MWMyVlZjRWhoYm1Sc1pYSW9aWFpsYm5Rc0lHVnNaVzFsYm5RcElIdGNiaUFnSUNCamIyNXpkQ0JrYVhOaFlteGxaQ0E5SUhSb2FYTXVhWE5FYVhOaFlteGxaQ2dwTzF4dVhHNGdJQ0FnYVdZZ0tDRmthWE5oWW14bFpDa2dlMXh1SUNBZ0lDQWdZMjl1YzNRZ1pISmhaMmRwYm1jZ1BTQjBhR2x6TG1selJISmhaMmRwYm1jb0tUdGNibHh1SUNBZ0lDQWdhV1lnS0dSeVlXZG5hVzVuS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YzNSdmNFUnlZV2NvS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVnpaWFJEZFhKemIzSW9LVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J0YjNWelpVOTFkRWhoYm1Sc1pYSW9aWFpsYm5Rc0lHVnNaVzFsYm5RcElIdGNiaUFnSUNCamIyNXpkQ0JrYVhOaFlteGxaQ0E5SUhSb2FYTXVhWE5FYVhOaFlteGxaQ2dwTzF4dVhHNGdJQ0FnYVdZZ0tDRmthWE5oWW14bFpDa2dlMXh1SUNBZ0lDQWdZMjl1YzNRZ1pISmhaMmRwYm1jZ1BTQjBhR2x6TG1selJISmhaMmRwYm1jb0tUdGNibHh1SUNBZ0lDQWdhV1lnS0NGa2NtRm5aMmx1WnlrZ2UxeHVJQ0FnSUNBZ0lDQnlaWE5sZEVOMWNuTnZjaWdwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUd0bGVVUnZkMjVJWVc1a2JHVnlLR1YyWlc1MExDQmxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ1kyOXVjM1FnZXlCclpYbERiMlJsSUgwZ1BTQmxkbVZ1ZER0Y2JseHVJQ0FnSUdsbUlDaHJaWGxEYjJSbElEMDlQU0JGVTBOQlVFVmZTMFZaWDBOUFJFVXBJSHRjYmlBZ0lDQWdJR052Ym5OMElHUnlZV2RuYVc1bklEMGdkR2hwY3k1cGMwUnlZV2RuYVc1bktDazdYRzVjYmlBZ0lDQWdJR2xtSUNoa2NtRm5aMmx1WnlrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG5OMGIzQkVjbUZuS0NrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lISmxjMlYwUTNWeWMyOXlLQ2s3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnWkdsa1RXOTFiblFvS1NCN1hHNGdJQ0FnWTI5dWMzUWdleUJ2YmtSeVlXY3NJRzl1VTNSdmNFUnlZV2NzSUc5dVUzUmhjblJFY21GbkxDQmthWE5oWW14bFpDQjlJRDBnZEdocGN5NXdjbTl3WlhKMGFXVnpMRnh1SUNBZ0lDQWdJQ0FnSUdSeVlXZElZVzVrYkdWeUlEMGdiMjVFY21GbkxDQXZMeTljYmlBZ0lDQWdJQ0FnSUNCemRHOXdSSEpoWjBoaGJtUnNaWElnUFNCdmJsTjBiM0JFY21GbkxDQXZMeTljYmlBZ0lDQWdJQ0FnSUNCemRHRnlkRVJ5WVdkSVlXNWtiR1Z5SUQwZ2IyNVRkR0Z5ZEVSeVlXYzdJQzh2TDF4dVhHNGdJQ0FnS0dScGMyRmliR1ZrSUQwOVBTQjBjblZsS1NBL0lDOHZMMXh1SUNBZ0lDQWdkR2hwY3k1a2FYTmhZbXhsS0NrZ09seHVJQ0FnSUNBZ0lDQjBhR2x6TG1WdVlXSnNaU2dwTzF4dVhHNGdJQ0FnWkhKaFowaGhibVJzWlhJZ0ppWWdkR2hwY3k1dmJrUnlZV2NvWkhKaFowaGhibVJzWlhJcE8xeHVJQ0FnSUhOMGIzQkVjbUZuU0dGdVpHeGxjaUFtSmlCMGFHbHpMbTl1VTNSdmNFUnlZV2NvYzNSdmNFUnlZV2RJWVc1a2JHVnlLVHRjYmlBZ0lDQnpkR0Z5ZEVSeVlXZElZVzVrYkdWeUlDWW1JSFJvYVhNdWIyNVRkR0Z5ZEVSeVlXY29jM1JoY25SRWNtRm5TR0Z1Wkd4bGNpazdYRzVjYmlBZ0lDQjNhVzVrYjNjdWIyNG9ZQ1I3UWt4VlVsOUZWa1ZPVkY5VVdWQkZmU0FrZTAxUFZWTkZWVkJmUlZaRlRsUmZWRmxRUlgxZ0xDQjBhR2x6TG0xdmRYTmxWWEJJWVc1a2JHVnlMQ0IwYUdsektUc2dJQzh2TDF4dVhHNGdJQ0FnZDJsdVpHOTNMbTl1VFc5MWMyVk5iM1psS0hSb2FYTXViVzkxYzJWTmIzWmxTR0Z1Wkd4bGNpd2dkR2hwY3lrN1hHNWNiaUFnSUNCMGFHbHpMbTl1VFc5MWMyVkViM2R1S0hSb2FYTXViVzkxYzJWRWIzZHVTR0Z1Wkd4bGNpd2dkR2hwY3lrN1hHNGdJQ0FnZEdocGN5NXZiazF2ZFhObFQzWmxjaWgwYUdsekxtMXZkWE5sVDNabGNraGhibVJzWlhJc0lIUm9hWE1wTzF4dUlDQWdJSFJvYVhNdWIyNU5iM1Z6WlU5MWRDaDBhR2x6TG0xdmRYTmxUM1YwU0dGdVpHeGxjaXdnZEdocGN5azdYRzRnSUgxY2JseHVJQ0IzYVd4c1ZXNXRiM1Z1ZENncElIdGNiaUFnSUNCamIyNXpkQ0I3SUc5dVJISmhaeXdnYjI1VGRHOXdSSEpoWnl3Z2IyNVRkR0Z5ZEVSeVlXY2dmU0E5SUhSb2FYTXVjSEp2Y0dWeWRHbGxjeXhjYmlBZ0lDQWdJQ0FnSUNCa2NtRm5TR0Z1Wkd4bGNpQTlJRzl1UkhKaFp5d2dMeTh2WEc0Z0lDQWdJQ0FnSUNBZ2MzUnZjRVJ5WVdkSVlXNWtiR1Z5SUQwZ2IyNVRkRzl3UkhKaFp5d2dMeTh2WEc0Z0lDQWdJQ0FnSUNBZ2MzUmhjblJFY21GblNHRnVaR3hsY2lBOUlHOXVVM1JoY25SRWNtRm5PeUF2THk5Y2JseHVJQ0FnSUdSeVlXZElZVzVrYkdWeUlDWW1JSFJvYVhNdWIyWm1SSEpoWnloa2NtRm5TR0Z1Wkd4bGNpazdYRzRnSUNBZ2MzUnZjRVJ5WVdkSVlXNWtiR1Z5SUNZbUlIUm9hWE11YjJabVUzUnZjRVJ5WVdjb2MzUnZjRVJ5WVdkSVlXNWtiR1Z5S1R0Y2JpQWdJQ0J6ZEdGeWRFUnlZV2RJWVc1a2JHVnlJQ1ltSUhSb2FYTXViMlptVTNSaGNuUkVjbUZuS0hOMFlYSjBSSEpoWjBoaGJtUnNaWElwTzF4dVhHNGdJQ0FnZDJsdVpHOTNMbTltWmloZ0pIdENURlZTWDBWV1JVNVVYMVJaVUVWOUlDUjdUVTlWVTBWVlVGOUZWa1ZPVkY5VVdWQkZmV0FzSUhSb2FYTXViVzkxYzJWVmNFaGhibVJzWlhJc0lIUm9hWE1wT3lBZ0x5OHZYRzVjYmlBZ0lDQjNhVzVrYjNjdWIyWm1UVzkxYzJWTmIzWmxLSFJvYVhNdWJXOTFjMlZOYjNabFNHRnVaR3hsY2l3Z2RHaHBjeWs3WEc1Y2JpQWdJQ0IwYUdsekxtOW1aazF2ZFhObFJHOTNiaWgwYUdsekxtMXZkWE5sUkc5M2JraGhibVJzWlhJc0lIUm9hWE1wTzF4dUlDQWdJSFJvYVhNdWIyWm1UVzkxYzJWUGRtVnlLSFJvYVhNdWJXOTFjMlZQZG1WeVNHRnVaR3hsY2l3Z2RHaHBjeWs3WEc0Z0lDQWdkR2hwY3k1dlptWk5iM1Z6WlU5MWRDaDBhR2x6TG0xdmRYTmxUM1YwU0dGdVpHeGxjaXdnZEdocGN5azdYRzRnSUgxY2JseHVJQ0JwYm1sMGFXRnNhWE5sS0NrZ2UxeHVJQ0FnSUhSb2FYTXVjMlYwU1c1cGRHbGhiRk4wWVhSbEtDazdYRzRnSUgxY2JseHVJQ0J6ZEdGMGFXTWdkR0ZuVG1GdFpTQTlJRndpWkdsMlhDSTdYRzVjYmlBZ2MzUmhkR2xqSUdSbFptRjFiSFJRY205d1pYSjBhV1Z6SUQwZ2UxeHVJQ0FnSUdOc1lYTnpUbUZ0WlRvZ1hDSnpjR3hwZEhSbGNsd2lYRzRnSUgwN1hHNWNiaUFnYzNSaGRHbGpJR2xuYm05eVpXUlFjbTl3WlhKMGFXVnpJRDBnVzF4dUlDQWdJRndpYjI1RWNtRm5YQ0lzWEc0Z0lDQWdYQ0p2Y0hScGIyNXpYQ0lzWEc0Z0lDQWdYQ0prYVhOaFlteGxaRndpTEZ4dUlDQWdJRndpYjI1VGRHOXdSSEpoWjF3aUxGeHVJQ0FnSUZ3aWIyNVRkR0Z5ZEVSeVlXZGNJbHh1SUNCZE8xeHVYRzRnSUhOMFlYUnBZeUJtY205dFEyeGhjM01vUTJ4aGMzTXNJSEJ5YjNCbGNuUnBaWE1wSUh0Y2JpQWdJQ0JqYjI1emRDQjdJRzl3ZEdsdmJuTWdQU0I3ZlNCOUlEMGdjSEp2Y0dWeWRHbGxjeXhjYmlBZ0lDQWdJQ0FnSUNCemNHeHBkSFJsY2tScGRpQTlJRVZzWlcxbGJuUXVabkp2YlVOc1lYTnpLRU5zWVhOekxDQndjbTl3WlhKMGFXVnpMQ0J2Y0hScGIyNXpLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQnpjR3hwZEhSbGNrUnBkanRjYmlBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0IzYVhSb1UzUjViR1VvVTNCc2FYUjBaWEpFYVhZcFlGeHVYRzRnSUdac1pYZ3RjMmh5YVc1ck9pQXdPMXh1WEc1Z08xeHVJbDBzSW01aGJXVnpJanBiSWtKTVZWSmZSVlpGVGxSZlZGbFFSU0lzSW1WMlpXNTBWSGx3WlhNaUxDSkVVa0ZIWDBWV1JVNVVYMVJaVUVVaUxDSk5UMVZUUlZWUVgwVldSVTVVWDFSWlVFVWlMQ0pUVkU5UVgwUlNRVWRmUlZaRlRsUmZWRmxRUlNJc0lsTlVRVkpVWDBSU1FVZGZSVlpGVGxSZlZGbFFSU0lzSWxOd2JHbDBkR1Z5UkdsMklpd2ljMlZzWldOMGIzSWlMQ0p2Y0hScGIyNXpJaXdpYVhOUGNIUnBiMjVRY21WelpXNTBJaXdpYjNCMGFXOXVJaXdpYjNCMGFXOXVVSEpsYzJWdWRDSXNJbk5sZEU5d2RHbHZibk1pTENKelpYUlBjSFJwYjI0aUxDSjFibk5sZEU5d2RHbHZiaUlzSW05dVJISmhaeUlzSW1SeVlXZElZVzVrYkdWeUlpd2laV3hsYldWdWRDSXNJbVYyWlc1MFZIbHdaU0lzSW1oaGJtUnNaWElpTENKaFpHUkZkbVZ1ZEV4cGMzUmxibVZ5SWl3aWIyWm1SSEpoWnlJc0luSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSWlMQ0p2YmxOMGIzQkVjbUZuSWl3aWMzUnZjRVJ5WVdkSVlXNWtiR1Z5SWl3aWIyWm1VM1J2Y0VSeVlXY2lMQ0p2YmxOMFlYSjBSSEpoWnlJc0ltOW1abE4wWVhKMFJISmhaeUlzSW1OaGJHeElZVzVrYkdWeWN5SXNJbkpsYldGcGJtbHVaMEZ5WjNWdFpXNTBjeUlzSW1WMlpXNTBUR2x6ZEdWdVpYSnpJaXdpWm1sdVpFVjJaVzUwVEdsemRHVnVaWEp6SWl3aVptOXlSV0ZqYUNJc0ltVjJaVzUwVEdsemRHVnVaWElpTENKb1lXNWtiR1Z5Uld4bGJXVnVkQ0lzSW1OaGJHd2lMQ0psYm1GaWJHVWlMQ0p5WlcxdmRtVkRiR0Z6Y3lJc0ltUnBjMkZpYkdVaUxDSmhaR1JEYkdGemN5SXNJbWx6UkdsellXSnNaV1FpTENKa2FYTmhZbXhsWkNJc0ltaGhjME5zWVhOeklpd2lhWE5FY21GbloybHVaeUlzSW1SeVlXZG5hVzVuSWl3aVoyVjBSR2x5WldOMGFXOXVJaXdpWkdseVpXTjBhVzl1SWl3aWJtVjRkRk5wWW14cGJtZEZiR1Z0Wlc1MElpd2laMlYwVG1WNGRGTnBZbXhwYm1kRmJHVnRaVzUwSWl3aWNISmxkbWx2ZFhOVGFXSnNhVzVuUld4bGJXVnVkQ0lzSW1kbGRGQnlaWFpwYjNWelUybGliR2x1WjBWc1pXMWxiblFpTENKVGFYcGxZV0pzWlVScGRpSXNJbWRsZEZOcGVtVmhZbXhsUkdsMklpd2ljMmw2WldGaWJHVkVhWFlpTENKemRHRnlkRVJ5WVdjaUxDSmxjMk5oY0dWTFpYbFRkRzl3YzBSeVlXZG5hVzVuVDNCMGFXOXVVSEpsYzJWdWRDSXNJa1ZUUTBGUVJWOUxSVmxmVTFSUFVGTmZSRkpCUjBkSlRrZGZUMUJVU1U5T0lpd2lkMmx1Wkc5M0lpd2liMjVMWlhsRWIzZHVJaXdpYTJWNVJHOTNia2hoYm1Sc1pYSWlMQ0p6ZEc5d1JISmhaeUlzSW05bVprdGxlVVJ2ZDI0aUxDSnRiM1Z6WlZWd1NHRnVaR3hsY2lJc0ltVjJaVzUwSWl3aWNtVnpaWFJEZFhKemIzSWlMQ0p0YjNWelpVOTFkRWhoYm1Sc1pYSWlMQ0pyWlhsRGIyUmxJaXdpUlZORFFWQkZYMHRGV1Y5RFQwUkZJaXdpWkdsa1RXOTFiblFpTENKd2NtOXdaWEowYVdWeklpd2ljM1JoY25SRWNtRm5TR0Z1Wkd4bGNpSXNJbTl1SWl3aWIyNU5iM1Z6WlUxdmRtVWlMQ0p0YjNWelpVMXZkbVZJWVc1a2JHVnlJaXdpYjI1TmIzVnpaVVJ2ZDI0aUxDSnRiM1Z6WlVSdmQyNUlZVzVrYkdWeUlpd2liMjVOYjNWelpVOTJaWElpTENKdGIzVnpaVTkyWlhKSVlXNWtiR1Z5SWl3aWIyNU5iM1Z6WlU5MWRDSXNJbmRwYkd4VmJtMXZkVzUwSWl3aWIyWm1JaXdpYjJabVRXOTFjMlZOYjNabElpd2liMlptVFc5MWMyVkViM2R1SWl3aWIyWm1UVzkxYzJWUGRtVnlJaXdpYjJabVRXOTFjMlZQZFhRaUxDSnBibWwwYVdGc2FYTmxJaXdpYzJWMFNXNXBkR2xoYkZOMFlYUmxJaXdpWm5KdmJVTnNZWE56SWl3aVEyeGhjM01pTENKemNHeHBkSFJsY2tScGRpSXNJa1ZzWlcxbGJuUWlMQ0owWVdkT1lXMWxJaXdpWkdWbVlYVnNkRkJ5YjNCbGNuUnBaWE1pTENKamJHRnpjMDVoYldVaUxDSnBaMjV2Y21Wa1VISnZjR1Z5ZEdsbGN5SXNJbmRwZEdoVGRIbHNaU0pkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzUTBGQldTeFhRVUZCTEVOQlFVTTdPenRGTzNkQ08wRkJSVk1zUjBGQmFVSXNRMEZCYWtJc1kwRkJhVUk3UVVGRlN5eEhRVUZOTEVOQlFVNHNTMEZCVFR0QlFVVXhRaXhIUVVGcFFpeERRVUZxUWl4VFFVRnBRanRCUVVWaUxFZEJRVmNzUTBGQldDeFBRVUZYTzBGQlExQXNSMEZCWXl4RFFVRmtMRlZCUVdNN1FVRkRSeXhIUVVGWkxFTkJRVm9zVVVGQldUczdlVVE3ZFVVN096czdPenM3T3pzN096czdPenM3T3pzN096czdaMFk3T3pzN096czdPM05ET3pzN096czdhVU03T3p0cFJUczdVenM3T3pzN096czRSRHR6UXpzMlJEdHBSVHM3T3p0M1JUdG5SVHM3T3pzN096czdPenRWT3p0M1FqczdPenM3T3p0TE96czdPenM3T3pzN096czdPMDA3ZVVRN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdkVUk3TzBzN096czdPemhDT3pzN096czdPenM3T3pzN01rSTdPenM3T3pzN0swUTdPenM3T3pzN096czdPenM3YzBNN096czdPenM3T3pzN096dFZPenRMT3pzN096czdPenR4UmpzN096czdPenM3T3pzN08yMUZPenRwUkRzN096czdPenRSUVRoUmRrSXNRMEZKZEVNN096czdTenM3TzBGQmFGSkJMRWRCUVVzc1EwRkJSMEVzWlVGQlpTeEhRVUYxUmtNc1MwRkJWU3haUVVGb1NFUXNaVUZCWlN4RlFVRkZSU3hsUVVGbExFZEJRWE5GUkN4TFFVRlZMRmxCUVM5R1F5eGxRVUZsTEVWQlFVVkRMR3RDUVVGclFpeEhRVUZyUkVZc1MwRkJWU3haUVVFNVJVVXNhMEpCUVd0Q0xFVkJRVVZETEc5Q1FVRnZRaXhIUVVFMFFrZ3NTMEZCVlN4WlFVRXhSRWNzYjBKQlFXOUNMRVZCUVVWRExIRkNRVUZ4UWl4SFFVRkxTaXhMUVVGVkxGbEJRWEJEU1N4eFFrRkJjVUk3U1VGRmJrZERMRmRCUVZjc2FVSkJRV3BDTEZGQlFWRTdiVU03TzJGQlFVWkJMRmRCUVZjc1EwRkRTRU1zVVVGQlVTeEZRVUZGUXl4UFFVRlBPekJET3p0clEwRkRja0pFTEZGQlFWRXNRME5vUW14Q0xFTkVaMEp2UWp0alFVVllReXhQUVVGUExFZEJRVWRCTEU5QlFVOHNRMEZCUXpzN096czdXVUZIZWtKRExFZEJRV1VzUlVGQlprRXNRMEZCWlR0dFFrRkJaa0VzVVVGQlVTeERRVUZTUVN4bFFVRmxMRU5CUVVORExFMUJRVTBzUlVGQlJTeERRVUZETzJkQ1FVTjJRaXhIUVVGTExFTkJRVU5ETEdGQlFXRXNTMEZCU3l4SlFVRkpMRU5CUVVOSUxFOUJRVThzUTBGQlEwVXNUVUZCVFR0blFrRkZNME1zVFVGQlRTeERRVUZEUXl4aFFVRmhPMWxCUTNSQ0xFTkJRVU03T3p0WlFVVkVReXhIUVVGVkxFVkJRVlpCTEVOQlFWVTdiVUpCUVZaQkxGRkJRVkVzUTBGQlVrRXNWVUZCVlN4RFFVRkRTaXhQUVVGUExFVkJRVVVzUTBGQlF6dG5Ra0ZEYmtJc1NVRkJTU3hEUVVGRFFTeFBRVUZQTEVkQlFVZEJMRTlCUVU4c1EwRkJRenRaUVVONlFpeERRVUZET3pzN1dVRkZSRXNzUjBGQlV5eEZRVUZVUVN4RFFVRlRPMjFDUVVGVVFTeFJRVUZSTEVOQlFWSkJMRk5CUVZNc1EwRkJRMGdzVFVGQlRTeEZRVUZGTEVOQlFVTTdaMEpCUTJwQ0xFbEJRVWtzUTBGQlEwWXNUMEZCVHl4RFFVRkRSU3hOUVVGTkxFbEJRVWtzU1VGQlNTeERRVUZETzFsQlF6bENMRU5CUVVNN096dFpRVVZFU1N4SFFVRlhMRVZCUVZoQkxFTkJRVmM3YlVKQlFWaEJMRkZCUVZFc1EwRkJVa0VzVjBGQlZ5eERRVUZEU2l4TlFVRk5MRVZCUVVVc1EwRkJRenRuUWtGRGJrSXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJRMFlzVDBGQlR5eERRVUZEUlN4TlFVRk5MRU5CUVVVc1EwRkJRenRaUVVNdlFpeERRVUZET3pzN1dVRkZSRXNzUjBGQlRTeEZRVUZPUVN4RFFVRk5PMjFDUVVGT1FTeFJRVUZSTEVOQlFWSkJMRTFCUVUwc1EwRkJRME1zVjBGQlZ5eEZRVUZGUXl4UFFVRlBMRVZCUVVVc1EwRkJRenRuUWtGRE5VSXNSMEZCU3l4RFFVRkRReXhUUVVGVExFZEJRVWRvUWl4bFFVRmxMRVZCUXpOQ2FVSXNUMEZCVHl4SFFVRkhTQ3hYUVVGWExFVkJRVWNzUlVGQlJ5eEJRVUZJTEVOQlFVYzdaMEpCUldwRExFbEJRVWtzUTBGQlEwa3NaMEpCUVdkQ0xFTkJRVU5HTEZOQlFWTXNSVUZCUlVNc1QwRkJUeXhGUVVGRlJpeFBRVUZQTEVOQlFVTXNRMEZCUXp0WlFVTnlSQ3hEUVVGRE96czdXVUZGUkVrc1IwRkJUeXhGUVVGUVFTeERRVUZQTzIxQ1FVRlFRU3hSUVVGUlRDeERRVUZTU3l4UFFVRlBMRU5CUVVOTUxGZEJRVmNzUlVGQlJVTXNUMEZCVHl4RlFVRkZMRU5CUVVNN1owSkJRemRDTEVkQlFVc3NRMEZCUTBNc1UwRkJVeXhIUVVGSGFFSXNaVUZCWlN4RlFVTXpRbWxDTEU5QlFVOHNSMEZCUjBnc1YwRkJWeXhGUVVGSExFVkJRVWNzUVVGQlNDeERRVUZITzJkQ1FVVnFReXhKUVVGSkxFTkJRVU5OTEcxQ1FVRnRRaXhEUVVGRFNpeFRRVUZUTEVWQlFVVkRMRTlCUVU4c1JVRkJSVVlzVDBGQlR5eERRVUZETEVOQlFVTTdXVUZEZUVRc1EwRkJRenM3TzFsQlJVUk5MRWRCUVZVc1JVRkJWa0VzUTBGQlZUdHRRa0ZCVmtFc1VVRkJVU3hEUVVGU1FTeFZRVUZWTEVOQlFVTkRMR1ZCUVdVc1JVRkJSVkFzVDBGQlR5eEZRVUZGTEVOQlFVTTdaMEpCUTNCRExFZEJRVXNzUTBGQlEwTXNVMEZCVXl4SFFVRkhaQ3h2UWtGQmIwSXNSVUZEYUVObExFOUJRVThzUjBGQlIwc3NaVUZCWlN4RlFVRkhMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVZ5UXl4SlFVRkpMRU5CUVVOS0xHZENRVUZuUWl4RFFVRkRSaXhUUVVGVExFVkJRVVZETEU5QlFVOHNSVUZCUlVZc1QwRkJUeXhEUVVGRExFTkJRVU03V1VGRGNrUXNRMEZCUXpzN08xbEJSVVJSTEVkQlFWY3NSVUZCV0VFc1EwRkJWenR0UWtGQldFRXNVVUZCVVN4RFFVRlNRU3hYUVVGWExFTkJRVU5FTEdWQlFXVXNSVUZCUlZBc1QwRkJUeXhGUVVGRkxFTkJRVU03WjBKQlEzSkRMRWRCUVVzc1EwRkJRME1zVTBGQlV5eEhRVUZIWkN4dlFrRkJiMElzUlVGRGFFTmxMRTlCUVU4c1IwRkJSMHNzWlVGQlpTeEZRVUZITEVWQlFVY3NRVUZCU0N4RFFVRkhPMmRDUVVWeVF5eEpRVUZKTEVOQlFVTkdMRzFDUVVGdFFpeERRVUZEU2l4VFFVRlRMRVZCUVVWRExFOUJRVThzUlVGQlJVWXNUMEZCVHl4RFFVRkRMRU5CUVVNN1dVRkRlRVFzUTBGQlF6czdPMWxCUlVSVExFZEJRVmNzUlVGQldFRXNRMEZCVnp0dFFrRkJXRUVzVVVGQlVTeERRVUZTUVN4WFFVRlhMRU5CUVVOR0xHVkJRV1VzUlVGQlJWQXNUMEZCVHl4RlFVRkZMRU5CUVVNN1owSkJRM0pETEVkQlFVc3NRMEZCUTBNc1UwRkJVeXhIUVVGSFlpeHhRa0ZCY1VJc1JVRkRha05qTEU5QlFVOHNSMEZCUjBzc1pVRkJaU3hGUVVGSExFVkJRVWNzUVVGQlNDeERRVUZITzJkQ1FVVnlReXhKUVVGSkxFTkJRVU5LTEdkQ1FVRm5RaXhEUVVGRFJpeFRRVUZUTEVWQlFVVkRMRTlCUVU4c1JVRkJSVVlzVDBGQlR5eERRVUZETEVOQlFVTTdXVUZEY2tRc1EwRkJRenM3TzFsQlJVUlZMRWRCUVZrc1JVRkJXa0VzUTBGQldUdHRRa0ZCV2tFc1VVRkJVU3hEUVVGU1FTeFpRVUZaTEVOQlFVTklMR1ZCUVdVc1JVRkJSVkFzVDBGQlR5eEZRVUZGTEVOQlFVTTdaMEpCUTNSRExFZEJRVXNzUTBGQlEwTXNVMEZCVXl4SFFVRkhZaXh4UWtGQmNVSXNSVUZEYWtOakxFOUJRVThzUjBGQlIwc3NaVUZCWlN4RlFVRkhMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVVZ5UXl4SlFVRkpMRU5CUVVOR0xHMUNRVUZ0UWl4RFFVRkRTaXhUUVVGVExFVkJRVVZETEU5QlFVOHNSVUZCUlVZc1QwRkJUeXhEUVVGRExFTkJRVU03V1VGRGVFUXNRMEZCUXpzN08xbEJSVVJYTEVkQlFWa3NSVUZCV2tFc1EwRkJXVHR0UWtGQldrRXNVVUZCVVN4RFFVRlNRU3haUVVGWkxFTkJRVU5XTEZOQlFWTXNSVUZCZVVJc1EwRkJRenRuUWtGQmVFSXNSMEZCUjFjc1EwRkJTQ3hIUVVGeFFpeERRVUZ5UWl4SlFVRnhRaXhIUVVGeVFpeFRRVUZ4UWl4RFFVRnlRaXhOUVVGeFFpeEZRVUZzUWtFc2EwSkJRV3RDTEVkQlFYSkNMRWRCUVhGQ0xFOUJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xFTkJRWEZDTEVkQlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVOQlFYRkNMRTlCUVhKQ0xFbEJRWEZDTEVkQlFYSkNMRU5CUVhGQ0xFVkJRWEpDTEVsQlFYRkNMRWRCUVhKQ0xFbEJRWEZDTEVWQlFYSkNMRWxCUVhGQ0xFZEJRWEpDTEVOQlFVTTdiMEpCUVVWQkxHdENRVUZyUWl4RFFVRnlRaXhKUVVGeFFpeEhRVUZ5UWl4RFFVRnhRaXhKUVVGeVFpeFRRVUZ4UWl4RFFVRnlRaXhKUVVGeFFpeERRMnBHTDBNc1EwUnBSaXRETzJkQ1FVRkVMRU5CUVVNN08yZENRVU16UXl4SFFVRkxMRU5CUVVORExHTkJRV01zUjBGQlJ5eEpRVUZKTEVOQlFVTkRMR3RDUVVGclFpeERRVUZEWWl4VFFVRlRPMmRDUVVWNFJGa3NZMEZCWXl4RFFVRkRSU3hQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZRUXl4aFFVRmhMRVZCUVVzc1EwRkJRenQzUWtGSmVrTmtMRkZCUVU4N2IwSkJTRkFzUjBGQlN5eERRVUZIUVN4UFFVRlBMRWRCUVRoQ1l5eGhRVUZoTEVOQlFXeEVaQ3hQUVVGUExFVkJRVmRsTEdOQlFXTXNSMEZCUzBRc1lVRkJZU3hEUVVGNlEyaENMRTlCUVU4c1JVRkRiRUpCTEU5QlFVOHNWVUZCVXl4RlFVRkhMRUZCUVVnc1EwRkJSenR4UWtGRmVrSkZMRkZCUVU4c1IwRkJVRUVzVDBGQlR5eEZRVUZEWjBJc1NVRkJTU3hEUVVGYWFFSXNTMEZCTkVRc1EwRkJOVVJCTEZGQlFVOHNSVUZCVUVFc1EwRkJRenQzUWtGQldXVXNZMEZCWXp0dlFrRkJaME1zUTBGQlF5eERRVUUxUkdZc1RVRkJORVFzYjBKQlFUVkNWU3hyUWtGQmEwSXNSMEZCYkVSV0xFTkJRVU03ZDBKQlFXMUVSaXhQUVVGUE8yOUNRVUZCTEVOQlFVTXNSVUZCUVN4RFFVRkRPMmRDUVVNdlJDeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTk1MRU5CUVVNN096dFpRVVZFYlVJc1IwRkJUU3hGUVVGT1FTeERRVUZOTzIxQ1FVRk9RU3hSUVVGUkxFTkJRVkpCTEUxQlFVMHNSMEZCUnl4RFFVRkRPMmRDUVVOU0xFbEJRVWtzUTBGQlEwTXNWMEZCVnl4RFFVRkRMRU5CUVZVc1ZVRkJReXhEUVVGRE8xbEJReTlDTEVOQlFVTTdPenRaUVVWRVF5eEhRVUZQTEVWQlFWQkJMRU5CUVU4N2JVSkJRVkJCTEZGQlFWRXNRMEZCVWtFc1QwRkJUeXhIUVVGSExFTkJRVU03WjBKQlExUXNTVUZCU1N4RFFVRkRReXhSUVVGUkxFTkJRVU1zUTBGQlZTeFZRVUZETEVOQlFVTTdXVUZETlVJc1EwRkJRenM3TzFsQlJVUkRMRWRCUVZVc1JVRkJWa0VzUTBGQlZUdHRRa0ZCVmtFc1VVRkJVU3hEUVVGU1FTeFZRVUZWTEVkQlFVY3NRMEZCUXp0blFrRkRXaXhIUVVGTExFTkJRVU5ETEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVORExGRkJRVkVzUTBGQlF5eERRVUZWTzJkQ1FVVjZReXhOUVVGTkxFTkJRVU5FTEZGQlFWRTdXVUZEYWtJc1EwRkJRenM3TzFsQlJVUkZMRWRCUVZVc1JVRkJWa0VzUTBGQlZUdHRRa0ZCVmtFc1VVRkJVU3hEUVVGU1FTeFZRVUZWTEVkQlFVY3NRMEZCUXp0blFrRkRXaXhIUVVGTExFTkJRVU5ETEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVOR0xGRkJRVkVzUTBGQlF5eERRVUZWTzJkQ1FVVjZReXhOUVVGTkxFTkJRVU5GTEZGQlFWRTdXVUZEYWtJc1EwRkJRenM3TzFsQlJVUkRMRWRCUVZrc1JVRkJXa0VzUTBGQldUdHRRa0ZCV2tFc1VVRkJVU3hEUVVGU1FTeFpRVUZaTEVkQlFVY3NRMEZCUXp0blFrRkRaQ3hIUVVGSExFTkJRVU5ETEZOQlFWTTdaMEpCUldJc1IwRkJTeXhEUVVGRFF5eHJRa0ZCYTBJc1IwRkJSeXhKUVVGSkxFTkJRVU5ETEhGQ1FVRnhRaXhKUVVNdlEwTXNjMEpCUVhOQ0xFZEJRVWNzU1VGQlNTeERRVUZEUXl4NVFrRkJlVUk3WjBKQlJUZEVMRVZCUVVVc1JVRkJSVWdzVjBGQmVVTXNRMEZCZWtOQkxHdENRVUZyUWl4RlFVRlpTU3hUUVVGWExGZEJRVVVzUTBGQlF6dHZRa0ZET1VOTUxGTkJRVk1zU1VGQlNTeERRVUZETEVOQlFVTTdaMEpCUTJwQ0xFTkJRVU03WjBKQlJVUXNSVUZCUlN4RlFVRkZSeXhYUVVFMlF5eERRVUUzUTBFc2MwSkJRWE5DTEVWQlFWbEZMRk5CUVZjc1YwRkJSU3hEUVVGRE8yOUNRVU5zUkV3c1UwRkJVeXhKUVVGSkxFTkJRVU1zUTBGQlF6dG5Ra0ZEYWtJc1EwRkJRenRuUWtGRlJDeE5RVUZOTEVOQlFVTkJMRk5CUVZNN1dVRkRiRUlzUTBGQlF6czdPMWxCUlVSTkxFZEJRV01zUlVGQlpFRXNRMEZCWXp0dFFrRkJaRUVzVVVGQlVTeERRVUZTUVN4alFVRmpMRWRCUVVjc1EwRkJRenRuUWtGRGFFSXNSMEZCUnl4RFFVRkRReXhYUVVGWE8yZENRVVZtTEVkQlFVc3NRMEZCUTA0c2EwSkJRV3RDTEVkQlFVY3NTVUZCU1N4RFFVRkRReXh4UWtGQmNVSXNTVUZETDBORExITkNRVUZ6UWl4SFFVRkhMRWxCUVVrc1EwRkJRME1zZVVKQlFYbENPMmRDUVVVM1JDeEZRVUZGTEVWQlFVVklMRmRCUVhsRExFTkJRWHBEUVN4clFrRkJhMElzUlVGQldVa3NVMEZCVnl4WFFVRkZMRU5CUVVNN2IwSkJRemxEUlN4WFFVRlhMRWRCUVVkT0xHdENRVUZyUWl4RFFVRkRMRU5CUVVNc1JVRkJSeXhCUVVGSUxFTkJRVWM3WjBKQlEzWkRMRU5CUVVNN1owSkJSVVFzUlVGQlJTeEZRVUZGUlN4WFFVRTJReXhEUVVFM1EwRXNjMEpCUVhOQ0xFVkJRVmxGTEZOQlFWY3NWMEZCUlN4RFFVRkRPMjlDUVVOc1JFVXNWMEZCVnl4SFFVRkhTaXh6UWtGQmMwSXNRMEZCUXl4RFFVRkRMRVZCUVVjc1FVRkJTQ3hEUVVGSE8yZENRVU16UXl4RFFVRkRPMmRDUVVWRUxFMUJRVTBzUTBGQlEwa3NWMEZCVnp0WlFVTndRaXhEUVVGRE96czdXVUZGUkVNc1IwRkJVeXhGUVVGVVFTeERRVUZUTzIxQ1FVRlVRU3hSUVVGUkxFTkJRVkpCTEZOQlFWTXNSMEZCUnl4RFFVRkRPMmRDUVVOWUxFZEJRVXNzUTBGQlEzQkRMRk5CUVZNc1IwRkJSMklzY1VKQlFYRkNMRVZCUTJwRGEwUXNiVU5CUVcxRExFZEJRVWNzU1VGQlNTeERRVUZET1VNc1pVRkJaU3hEUVVGREswTXNVVUZCWjBNN1owSkJSV3BITEVWQlFVVXNSVUZCUlVRc2JVTkJRVzFETEVWQlFVVXNRMEZCUXp0dlFrRkRlRU5GTEV0QlFVMHNVVUZCUTBNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlEwTXNZMEZCWXl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU01UXl4RFFVRkRPMmRDUVVWRUxFbEJRVWtzUTBGQlEzQkNMRkZCUVZFc1EwRkJReXhEUVVGVkxGVkJRVU1zUTBGQlF6dG5Ra0ZGTVVJc1NVRkJTU3hEUVVGRFdDeFpRVUZaTEVOQlFVTldMRk5CUVZNc1F6dFpRVU0zUWl4RFFVRkRPenM3V1VGRlJEQkRMRWRCUVZFc1JVRkJVa0VzUTBGQlVUdHRRa0ZCVWtFc1VVRkJVU3hEUVVGU1FTeFJRVUZSTEVkQlFVY3NRMEZCUXp0blFrRkRWaXhIUVVGTExFTkJRVU14UXl4VFFVRlRMRWRCUVVka0xHOUNRVUZ2UWl4RlFVTm9RMjFFTEcxRFFVRnRReXhIUVVGSExFbEJRVWtzUTBGQlF6bERMR1ZCUVdVc1EwRkJReXRETEZGQlFXZERPMmRDUVVWcVJ5eEZRVUZGTEVWQlFVVkVMRzFEUVVGdFF5eEZRVUZGTEVOQlFVTTdiMEpCUTNoRFJTeExRVUZOTEZGQlFVTkpMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU5HTEdOQlFXTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGREwwTXNRMEZCUXp0blFrRkZSQ3hKUVVGSkxFTkJRVU4wUWl4WFFVRlhMRU5CUVVNc1EwRkJWU3hWUVVGRExFTkJRVU03WjBKQlJUZENMRWxCUVVrc1EwRkJRMVFzV1VGQldTeERRVUZEVml4VFFVRlRMRU5CUVVNc1EwRkJRenRaUVVNdlFpeERRVUZET3pzN1dVRkZSRFJETEVkQlFXTXNSVUZCWkVFc1EwRkJZenR0UWtGQlpFRXNVVUZCVVN4RFFVRlNRU3hqUVVGakxFTkJRVU5ETEV0QlFVc3NSVUZCUlRsRExFOUJRVThzUlVGQlJTeERRVUZETzJkQ1FVTTVRaXhIUVVGTExFTkJRVU4zUWl4UlFVRlJMRWRCUVVjc1NVRkJTU3hEUVVGRFJDeFZRVUZWTzJkQ1FVVm9ReXhGUVVGRkxFZEJRVWRETEZGQlFWRXNSVUZCUlN4RFFVRkRPMjlDUVVOa0xFZEJRVXNzUTBGQlEwY3NVVUZCVVN4SFFVRkhMRWxCUVVrc1EwRkJRMFFzVlVGQlZUdHZRa0ZGYUVNc1JVRkJSU3hGUVVGRlF5eFJRVUZSTEVWQlFVVXNRMEZCUXp0M1FrRkRZaXhKUVVGSkxFTkJRVU5uUWl4UlFVRlJMRVZCUVVVc1EwRkJRenR2UWtGRGJFSXNRMEZCUXp0M1FrRkZSRWtzVDBGQlZ5eGxRVUZGTEVOQlFVTTdaMEpCUTJoQ0xFTkJRVU03V1VGRFNDeERRVUZET3pzN1dVRkZSRU1zUjBGQlpTeEZRVUZtUVN4RFFVRmxPMjFDUVVGbVFTeFJRVUZSTEVOQlFWSkJMR1ZCUVdVc1EwRkJRMFlzUzBGQlN5eEZRVUZGT1VNc1QwRkJUeXhGUVVGRkxFTkJRVU03WjBKQlF5OUNMRWRCUVVzc1EwRkJRM2RDTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVORUxGVkJRVlU3WjBKQlJXaERMRVZCUVVVc1IwRkJSME1zVVVGQlVTeEZRVUZGTEVOQlFVTTdiMEpCUTJRc1IwRkJTeXhEUVVGRFJ5eFJRVUZSTEVkQlFVY3NTVUZCU1N4RFFVRkRSQ3hWUVVGVk8yOUNRVVZvUXl4RlFVRkZMRWRCUVVkRExGRkJRVkVzUlVGQlJTeERRVUZET3pSQ1FVTmtiMElzVDBGQlZ5eGxRVUZGTEVOQlFVTTdiMEpCUTJoQ0xFTkJRVU03WjBKQlEwZ3NRMEZCUXp0WlFVTklMRU5CUVVNN096dFpRVVZFVEN4SFFVRmpMRVZCUVdSQkxFTkJRV003YlVKQlFXUkJMRkZCUVZFc1EwRkJVa0VzWTBGQll5eERRVUZEU1N4TFFVRkxMRVZCUVVVNVF5eFBRVUZQTEVWQlFVVXNRMEZCUXp0blFrRkRPVUlzUjBGQlN5eERRVUZIYVVRc1QwRkJUeXhIUVVGTFNDeExRVUZMTEVOQlFXcENSeXhQUVVGUE8yZENRVVZtTEVWQlFVVXNSVUZCUlVFc1QwRkJUeXhMUVVGTFF5eFZRVUZsTEd0Q1FVRkZMRU5CUVVNN2IwSkJRMmhETEVkQlFVc3NRMEZCUTNaQ0xGRkJRVkVzUjBGQlJ5eEpRVUZKTEVOQlFVTkVMRlZCUVZVN2IwSkJSV2hETEVWQlFVVXNSVUZCUlVNc1VVRkJVU3hGUVVGRkxFTkJRVU03ZDBKQlEySXNTVUZCU1N4RFFVRkRaMElzVVVGQlVTeEZRVUZGTEVOQlFVTTdiMEpCUTJ4Q0xFTkJRVU03ZDBKQlJVUkpMRTlCUVZjc1pVRkJSU3hEUVVGRE8yZENRVU5vUWl4RFFVRkRPMWxCUTBnc1EwRkJRenM3TzFsQlJVUkpMRWRCUVZFc1JVRkJVa0VzUTBGQlVUdHRRa0ZCVWtFc1VVRkJVU3hEUVVGU1FTeFJRVUZSTEVkQlFVY3NRMEZCUXp0blFrRkRWaXhIUVVGTExFTkJRV2xFTEZkQlFXVXNSMEZCWml4SlFVRkpMRU5CUVVORExGVkJRVlVzUlVGQk4wUjBSQ3hOUVVGTkxFZEJRWGRETEZkQlFXVXNRMEZCTjBSQkxFMUJRVTBzUlVGQlJWRXNWVUZCVlN4SFFVRTBRaXhYUVVGbExFTkJRWEpFUVN4VlFVRlZMRVZCUVVWSExGZEJRVmNzUjBGQlpTeFhRVUZsTEVOQlFYcERRU3hYUVVGWExFVkJRVVZsTEZGQlFWRXNSMEZCU3l4WFFVRmxMRU5CUVRWQ1FTeFJRVUZSTEVWQlF6TkRla0lzVjBGQlZ5eEhRVUZIUkN4TlFVRk5MRVZCUTNCQ1V5eGxRVUZsTEVkQlFVZEVMRlZCUVZVc1JVRkROVUlyUXl4blFrRkJaMElzUjBGQlJ6VkRMRmRCUVZjc1JVRkJSU3hGUVVGSExFRkJRVWdzUTBGQlJ6dG5Ra0ZGZUVObExGRkJRVkVzUzBGQlN5eEpRVUZKTEVkQlEyaENMRWxCUVVrc1EwRkJRMGdzVDBGQlR5eExRVU5XTEVsQlFVa3NRMEZCUTBZc1RVRkJUU3hGUVVGRkxFTkJRVU03WjBKQlJXeENjRUlzVjBGQlZ5eEpRVUZKTEVsQlFVa3NRMEZCUTBRc1RVRkJUU3hEUVVGRFF5eFhRVUZYTEVOQlFVTXNRMEZCUXp0blFrRkRlRU5STEdWQlFXVXNTVUZCU1N4SlFVRkpMRU5CUVVORUxGVkJRVlVzUTBGQlEwTXNaVUZCWlN4RFFVRkRMRU5CUVVNN1owSkJRM0JFT0VNc1owSkJRV2RDTEVsQlFVa3NTVUZCU1N4RFFVRkROVU1zVjBGQlZ5eERRVUZETkVNc1owSkJRV2RDTEVOQlFVTXNRMEZCUXp0blFrRkZka1JpTEV0QlFVMHNVVUZCUTJNc1JVRkJSU3hEUVVGRkxFTkJRVUVzUlVGQmNVSndSU3hOUVVGclFpeERRVUZ5UTBnc1pVRkJaU3hGUVVGRExFTkJRVU1zU1VGQmNVSXNUVUZCUVN4RFFVRnVRa2NzYTBKQlFXdENMRWRCUVVrc1NVRkJTU3hEUVVGRE1rUXNZMEZCWXl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVVVzUlVGQlJ5eEJRVUZJTEVOQlFVYzdaMEpCUlhSR1RDeExRVUZOTEZGQlFVTmxMRmRCUVZjc1EwRkJReXhKUVVGSkxFTkJRVU5ETEdkQ1FVRm5RaXhGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVVm9SQ3hKUVVGSkxFTkJRVU5ETEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVORExHZENRVUZuUWl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU01UXl4SlFVRkpMRU5CUVVORExGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTkRMR2RDUVVGblFpeEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRPMmRDUVVNNVF5eEpRVUZKTEVOQlFVTkRMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU5pTEdWQlFXVXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRaUVVNNVF5eERRVUZET3pzN1dVRkZSR01zUjBGQlZ5eEZRVUZZUVN4RFFVRlhPMjFDUVVGWVFTeFJRVUZSTEVOQlFWSkJMRmRCUVZjc1IwRkJSeXhEUVVGRE8yZENRVU5pTEVkQlFVc3NRMEZCZFVNc1YwRkJaU3hIUVVGbUxFbEJRVWtzUTBGQlExWXNWVUZCVlN4RlFVRnVSSFJFTEUxQlFVMHNSMEZCT0VJc1YwRkJaU3hEUVVGdVJFRXNUVUZCVFN4RlFVRkZVU3hWUVVGVkxFZEJRV3RDTEZkQlFXVXNRMEZCTTBOQkxGVkJRVlVzUlVGQlJVY3NWMEZCVnl4SFFVRkxMRmRCUVdVc1EwRkJMMEpCTEZkQlFWY3NSVUZEYWtOV0xGZEJRVmNzUjBGQlIwUXNUVUZCVFN4RlFVTndRbE1zWlVGQlpTeEhRVUZIUkN4VlFVRlZMRVZCUXpWQ0swTXNaMEpCUVdkQ0xFZEJRVWMxUXl4WFFVRlhMRVZCUVVVc1JVRkJSeXhCUVVGSUxFTkJRVWM3WjBKQlJYcERWaXhYUVVGWExFbEJRVWtzU1VGQlNTeERRVUZEU3l4UFFVRlBMRU5CUVVOTUxGZEJRVmNzUTBGQlF5eERRVUZETzJkQ1FVTjZRMUVzWlVGQlpTeEpRVUZKTEVsQlFVa3NRMEZCUTBNc1YwRkJWeXhEUVVGRFJDeGxRVUZsTEVOQlFVTXNRMEZCUXp0blFrRkRja1E0UXl4blFrRkJaMElzU1VGQlNTeEpRVUZKTEVOQlFVTXpReXhaUVVGWkxFTkJRVU15UXl4blFrRkJaMElzUTBGQlF5eERRVUZETzJkQ1FVVjRSR0lzUzBGQlRTeFJRVUZEZFVJc1IwRkJSeXhEUVVGRkxFTkJRVUVzUlVGQmNVSTNSU3hOUVVGclFpeERRVUZ5UTBnc1pVRkJaU3hGUVVGRExFTkJRVU1zU1VGQmNVSXNUVUZCUVN4RFFVRnVRa2NzYTBKQlFXdENMRWRCUVVrc1NVRkJTU3hEUVVGRE1rUXNZMEZCWXl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVVVzUlVGQlJ5eEJRVUZJTEVOQlFVYzdaMEpCUlhaR1RDeExRVUZOTEZGQlFVTjNRaXhaUVVGWkxFTkJRVU1zU1VGQlNTeERRVUZEVWl4blFrRkJaMElzUlVGQlJTeEpRVUZKTEVOQlFVTXNRMEZCUXp0blFrRkZha1FzU1VGQlNTeERRVUZEVXl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRFVDeG5Ra0ZCWjBJc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF6dG5Ra0ZETDBNc1NVRkJTU3hEUVVGRFVTeFpRVUZaTEVOQlFVTXNTVUZCU1N4RFFVRkRUaXhuUWtGQlowSXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRuUWtGREwwTXNTVUZCU1N4RFFVRkRUeXhYUVVGWExFTkJRVU1zU1VGQlNTeERRVUZEYmtJc1pVRkJaU3hGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETzFsQlF5OURMRU5CUVVNN096dFpRVVZFYjBJc1IwRkJWU3hGUVVGV1FTeERRVUZWTzIxQ1FVRldRU3hSUVVGUkxFTkJRVkpCTEZWQlFWVXNSMEZCUnl4RFFVRkRPMmRDUVVOYUxFbEJRVWtzUTBGQlEwTXNaVUZCWlN4RlFVRkZMRU5CUVVNN1dVRkRla0lzUTBGQlF6czdPenRaUVdkQ1RVTXNSMEZCVXl4RlFVRlVRU3hEUVVGVE8yMUNRVUZvUWl4UlFVRlJMRU5CUVVSQkxGTkJRVk1zUTBGQlEwTXNTMEZCU3l4RlFVRkZia0lzVlVGQlZTeEZRVUZGTEVOQlFVTTdaMEpCUTI1RExFZEJRVXNzWVVGQmIwSkJMRlZCUVZVc1EwRkJNMEkzUkN4UFFVRlBMRVZCUVZCQkxFOUJRVThzTUVKQlFVY3NRMEZCUXl4RFFVRkRMR05CUTJScFJpeFhRVUZYTEVkQlFVZERMRXRCUVU4c1UwRkJRMGdzVTBGQlV5eERRVUZEUXl4TFFVRkxMRVZCUVVWdVFpeFZRVUZWTEVWQlFVVTNSQ3hQUVVGUE8yZENRVVZvUlN4TlFVRk5MRU5CUVVOcFJpeFhRVUZYTzFsQlEzQkNMRU5CUVVNN08wMDdPMjFDUVhaUmRVSkRMRXRCUVU4N1owSkJRVE5DY0VZc1YwRkJWeXhGUVc5UVVuRkdMRU5CUVU4c1ZVRkJSeXhEUVVGTExFczdaMEpCY0ZCc1FuSkdMRmRCUVZjc1JVRnpVRkp6Uml4RFFVRnBRaXh2UWtGQlJ5eERRVUZETzBsQlF6RkNReXhUUVVGVExFVkJRVVVzUTBGQlZUdEJRVU4yUWl4RFFVRkRMRU03WjBKQmVGQkhka1lzVjBGQlZ5eEZRVEJRVW5kR0xFTkJRV2xDTEc5Q1FVRkhMRU5CUVVNN1NVRkRNVUlzUTBGQlVUdEpRVU5TTEVOQlFWTTdTVUZEVkN4RFFVRlZPMGxCUTFZc1EwRkJXVHRKUVVOYUxFTkJRV0U3UVVGRFppeERRVUZETEVNN2JVSkJWVmxETEdOQlFWTXNWVUZCUTNwR0xGZEJRVmM3TUVJaWZRPT0iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB3aXRoU3R5bGUgZnJvbSBcImVhc3ktd2l0aC1zdHlsZVwiOyAgLy8vXG5cbmltcG9ydCB7IGV2ZW50VHlwZXMgfSBmcm9tIFwiZWFzeVwiO1xuXG5pbXBvcnQgU3BsaXR0ZXIgZnJvbSBcIi4uL3NwbGl0dGVyXCI7XG5cbmltcG9ydCB7IGNvbHVtblJlc2l6ZUN1cnNvciB9IGZyb20gXCIuLi8uLi9jdXJzb3JcIjtcblxuY29uc3QgeyBEUkFHX0VWRU5UX1RZUEUgfSA9IGV2ZW50VHlwZXM7XG5cbmNsYXNzIFZlcnRpY2FsU3BsaXR0ZXIgZXh0ZW5kcyBTcGxpdHRlciB7XG4gIG1vdXNlT3ZlckhhbmRsZXIoZXZlbnQsIGVsZW1lbnQpIHtcbiAgICBjb25zdCBkaXNhYmxlZCA9IHRoaXMuaXNEaXNhYmxlZCgpO1xuXG4gICAgaWYgKCFkaXNhYmxlZCkge1xuICAgICAgY29sdW1uUmVzaXplQ3Vyc29yKCk7XG4gICAgfVxuICB9XG5cbiAgbW91c2VNb3ZlSGFuZGxlcihldmVudCwgZWxlbWVudCkge1xuICAgIGNvbnN0IHsgcGFnZVggfSA9IGV2ZW50LFxuICAgICAgICAgIG1vdXNlTGVmdCA9IHBhZ2VYLCAgLy8vXG4gICAgICAgICAgZGlzYWJsZWQgPSB0aGlzLmlzRGlzYWJsZWQoKTtcblxuICAgIGlmICghZGlzYWJsZWQpIHtcbiAgICAgIGNvbnN0IGRyYWdnaW5nID0gdGhpcy5pc0RyYWdnaW5nKCk7XG5cbiAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICBjb25zdCBkaXJlY3Rpb24gPSB0aGlzLmdldERpcmVjdGlvbigpLFxuICAgICAgICAgICAgICBzaXplYWJsZURpdiA9IHRoaXMuZ2V0U2l6ZWFibGVEaXYoKTtcblxuICAgICAgICBjb25zdCBwcmV2aW91c01vdXNlTGVmdCA9IHRoaXMuZ2V0UHJldmlvdXNNb3VzZUxlZnQoKSxcbiAgICAgICAgICAgICAgcHJldmlvdXNTaXplYWJsZURpdldpZHRoID0gdGhpcy5nZXRQcmV2aW91c1NpemVhYmxlRGl2V2lkdGgoKSxcbiAgICAgICAgICAgICAgcmVsYXRpdmVNb3VzZUxlZnQgPSBtb3VzZUxlZnQgLSBwcmV2aW91c01vdXNlTGVmdDtcblxuICAgICAgICBsZXQgc2l6ZWFibGVEaXZXaWR0aCA9IHByZXZpb3VzU2l6ZWFibGVEaXZXaWR0aCAtIGRpcmVjdGlvbiAqIHJlbGF0aXZlTW91c2VMZWZ0O1xuXG4gICAgICAgIGNvbnN0IHdpZHRoID0gc2l6ZWFibGVEaXZXaWR0aCwgLy8vXG4gICAgICAgICAgICAgIGV2ZW50VHlwZSA9IERSQUdfRVZFTlRfVFlQRTtcblxuICAgICAgICBzaXplYWJsZURpdi5zZXRXaWR0aCh3aWR0aCk7XG5cbiAgICAgICAgc2l6ZWFibGVEaXZXaWR0aCA9IHNpemVhYmxlRGl2LmdldFdpZHRoKCk7ICAvLy9cblxuICAgICAgICB0aGlzLmNhbGxIYW5kbGVycyhldmVudFR5cGUsIHNpemVhYmxlRGl2V2lkdGgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG1vdXNlRG93bkhhbmRsZXIoZXZlbnQsIGVsZW1lbnQpIHtcbiAgICBjb25zdCB7IHBhZ2VYIH0gPSBldmVudCxcbiAgICAgICAgICBtb3VzZUxlZnQgPSBwYWdlWCwgIC8vL1xuICAgICAgICAgIGRpc2FibGVkID0gdGhpcy5pc0Rpc2FibGVkKCk7XG5cbiAgICBpZiAoIWRpc2FibGVkKSB7XG4gICAgICBjb25zdCBkcmFnZ2luZyA9IHRoaXMuaXNEcmFnZ2luZygpLFxuICAgICAgICAgICAgc2l6ZWFibGVEaXYgPSB0aGlzLmdldFNpemVhYmxlRGl2KCksXG4gICAgICAgICAgICBwcmV2aW91c01vdXNlTGVmdCA9IG1vdXNlTGVmdCwgIC8vL1xuICAgICAgICAgICAgc2l6ZWFibGVEaXZXaWR0aCA9IHNpemVhYmxlRGl2LmdldFdpZHRoKCksXG4gICAgICAgICAgICBwcmV2aW91c1NpemVhYmxlRGl2V2lkdGggPSBzaXplYWJsZURpdldpZHRoOyAgLy8vXG5cbiAgICAgIHRoaXMuc2V0UHJldmlvdXNNb3VzZUxlZnQocHJldmlvdXNNb3VzZUxlZnQpO1xuXG4gICAgICB0aGlzLnNldFByZXZpb3VzU2l6ZWFibGVEaXZXaWR0aChwcmV2aW91c1NpemVhYmxlRGl2V2lkdGgpO1xuXG4gICAgICBjb2x1bW5SZXNpemVDdXJzb3IoKTtcblxuICAgICAgaWYgKCFkcmFnZ2luZykge1xuICAgICAgICB0aGlzLnN0YXJ0RHJhZygpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGdldFByZXZpb3VzTW91c2VMZWZ0KCkge1xuICAgIGNvbnN0IHN0YXRlID0gdGhpcy5nZXRTdGF0ZSgpLFxuICAgICAgICAgIHsgcHJldmlvdXNNb3VzZUxlZnQgfSA9IHN0YXRlO1xuXG4gICAgcmV0dXJuIHByZXZpb3VzTW91c2VMZWZ0O1xuICB9XG5cbiAgZ2V0UHJldmlvdXNTaXplYWJsZURpdldpZHRoKCkge1xuICAgIGNvbnN0IHN0YXRlID0gdGhpcy5nZXRTdGF0ZSgpLFxuICAgICAgICAgIHsgcHJldmlvdXNTaXplYWJsZURpdldpZHRoIH0gPSBzdGF0ZTtcblxuICAgIHJldHVybiBwcmV2aW91c1NpemVhYmxlRGl2V2lkdGg7XG4gIH1cblxuICBzZXRQcmV2aW91c01vdXNlTGVmdChwcmV2aW91c01vdXNlTGVmdCkge1xuICAgIHRoaXMudXBkYXRlU3RhdGUoe1xuICAgICAgcHJldmlvdXNNb3VzZUxlZnRcbiAgICB9KTtcbiAgfVxuXG4gIHNldFByZXZpb3VzU2l6ZWFibGVEaXZXaWR0aChwcmV2aW91c1NpemVhYmxlRGl2V2lkdGgpIHtcbiAgICB0aGlzLnVwZGF0ZVN0YXRlKHtcbiAgICAgIHByZXZpb3VzU2l6ZWFibGVEaXZXaWR0aFxuICAgIH0pO1xuICB9XG5cbiAgc2V0SW5pdGlhbFN0YXRlKCkge1xuICAgIGNvbnN0IHByZXZpb3VzTW91c2VMZWZ0ID0gbnVsbCxcbiAgICAgICAgICBwcmV2aW91c1NpemVhYmxlRGl2V2lkdGggPSBudWxsO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBwcmV2aW91c01vdXNlTGVmdCxcbiAgICAgIHByZXZpb3VzU2l6ZWFibGVEaXZXaWR0aFxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJ2ZXJ0aWNhbFwiXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZShWZXJ0aWNhbFNwbGl0dGVyKWBcblxuICB3aWR0aDogMXJlbTtcblxuYDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHdpdGhTdHlsZSBmcm9tIFwiZWFzeS13aXRoLXN0eWxlXCI7ICAvLy9cblxuaW1wb3J0IHsgZXZlbnRUeXBlcyB9IGZyb20gXCJlYXN5XCI7XG5cbmltcG9ydCBTcGxpdHRlciBmcm9tIFwiLi4vc3BsaXR0ZXJcIjtcblxuaW1wb3J0IHsgcm93UmVzaXplQ3Vyc29yIH0gZnJvbSBcIi4uLy4uL2N1cnNvclwiO1xuXG5jb25zdCB7IERSQUdfRVZFTlRfVFlQRSB9ID0gZXZlbnRUeXBlcztcblxuY2xhc3MgSG9yaXpvbnRhbFNwbGl0dGVyIGV4dGVuZHMgU3BsaXR0ZXIge1xuICBtb3VzZU92ZXJIYW5kbGVyKGV2ZW50LCBlbGVtZW50KSB7XG4gICAgY29uc3QgZGlzYWJsZWQgPSB0aGlzLmlzRGlzYWJsZWQoKTtcblxuICAgIGlmICghZGlzYWJsZWQpIHtcbiAgICAgIHJvd1Jlc2l6ZUN1cnNvcigpO1xuICAgIH1cbiAgfVxuXG4gIG1vdXNlTW92ZUhhbmRsZXIoZXZlbnQsIGVsZW1lbnQpIHtcbiAgICBjb25zdCB7IHBhZ2VZIH0gPSBldmVudCxcbiAgICAgICAgICBtb3VzZVRvcCA9IHBhZ2VZLCAgLy8vXG4gICAgICAgICAgZGlzYWJsZWQgPSB0aGlzLmlzRGlzYWJsZWQoKTtcblxuICAgIGlmICghZGlzYWJsZWQpIHtcbiAgICAgIGNvbnN0IGRyYWdnaW5nID0gdGhpcy5pc0RyYWdnaW5nKCk7XG5cbiAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICBjb25zdCBkaXJlY3Rpb24gPSB0aGlzLmdldERpcmVjdGlvbigpLFxuICAgICAgICAgICAgICBzaXplYWJsZURpdiA9IHRoaXMuZ2V0U2l6ZWFibGVEaXYoKTtcblxuICAgICAgICBjb25zdCBwcmV2aW91c01vdXNlVG9wID0gdGhpcy5nZXRQcmV2aW91c01vdXNlVG9wKCksXG4gICAgICAgICAgICAgIHByZXZpb3VzU2l6ZWFibGVEaXZIZWlnaHQgPSB0aGlzLmdldFByZXZpb3VzU2l6ZWFibGVEaXZIZWlnaHQoKSxcbiAgICAgICAgICAgICAgcmVsYXRpdmVNb3VzZVRvcCA9IG1vdXNlVG9wIC0gcHJldmlvdXNNb3VzZVRvcDtcblxuICAgICAgICBsZXQgc2l6ZWFibGVEaXZIZWlnaHQgPSBwcmV2aW91c1NpemVhYmxlRGl2SGVpZ2h0IC0gZGlyZWN0aW9uICogcmVsYXRpdmVNb3VzZVRvcDtcblxuICAgICAgICBjb25zdCBoZWlnaHQgPSBzaXplYWJsZURpdkhlaWdodCwgLy8vXG4gICAgICAgICAgICAgIGV2ZW50VHlwZSA9IERSQUdfRVZFTlRfVFlQRTtcblxuICAgICAgICBzaXplYWJsZURpdi5zZXRIZWlnaHQoaGVpZ2h0KTtcblxuICAgICAgICBzaXplYWJsZURpdkhlaWdodCA9IHNpemVhYmxlRGl2LmdldEhlaWdodCgpOyAgLy8vXG5cbiAgICAgICAgdGhpcy5jYWxsSGFuZGxlcnMoZXZlbnRUeXBlLCBzaXplYWJsZURpdkhlaWdodCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgbW91c2VEb3duSGFuZGxlcihldmVudCwgZWxlbWVudCkge1xuICAgIGNvbnN0IHsgcGFnZVkgfSA9IGV2ZW50LFxuICAgICAgICAgIG1vdXNlVG9wID0gcGFnZVksICAvLy9cbiAgICAgICAgICBkaXNhYmxlZCA9IHRoaXMuaXNEaXNhYmxlZCgpO1xuXG4gICAgaWYgKCFkaXNhYmxlZCkge1xuICAgICAgY29uc3QgZHJhZ2dpbmcgPSB0aGlzLmlzRHJhZ2dpbmcoKSxcbiAgICAgICAgICAgIHNpemVhYmxlRGl2ID0gdGhpcy5nZXRTaXplYWJsZURpdigpLFxuICAgICAgICAgICAgcHJldmlvdXNNb3VzZVRvcCA9IG1vdXNlVG9wLCAgLy8vXG4gICAgICAgICAgICBzaXplYWJsZURpdkhlaWdodCA9IHNpemVhYmxlRGl2LmdldEhlaWdodCgpLFxuICAgICAgICAgICAgcHJldmlvdXNTaXplYWJsZURpdkhlaWdodCA9IHNpemVhYmxlRGl2SGVpZ2h0OyAgLy8vXG5cbiAgICAgIHRoaXMuc2V0UHJldmlvdXNNb3VzZVRvcChwcmV2aW91c01vdXNlVG9wKTtcblxuICAgICAgdGhpcy5zZXRQcmV2aW91c1NpemVhYmxlRGl2SGVpZ2h0KHByZXZpb3VzU2l6ZWFibGVEaXZIZWlnaHQpO1xuXG4gICAgICByb3dSZXNpemVDdXJzb3IoKTtcblxuICAgICAgaWYgKCFkcmFnZ2luZykge1xuICAgICAgICB0aGlzLnN0YXJ0RHJhZygpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGdldFByZXZpb3VzTW91c2VUb3AoKSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLmdldFN0YXRlKCksXG4gICAgICAgICAgeyBwcmV2aW91c01vdXNlVG9wIH0gPSBzdGF0ZTtcblxuICAgIHJldHVybiBwcmV2aW91c01vdXNlVG9wO1xuICB9XG5cbiAgZ2V0UHJldmlvdXNTaXplYWJsZURpdkhlaWdodCgpIHtcbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMuZ2V0U3RhdGUoKSxcbiAgICAgICAgICB7IHByZXZpb3VzU2l6ZWFibGVEaXZIZWlnaHQgfSA9IHN0YXRlO1xuXG4gICAgcmV0dXJuIHByZXZpb3VzU2l6ZWFibGVEaXZIZWlnaHQ7XG4gIH1cblxuICBzZXRQcmV2aW91c01vdXNlVG9wKHByZXZpb3VzTW91c2VUb3ApIHtcbiAgICB0aGlzLnVwZGF0ZVN0YXRlKHtcbiAgICAgIHByZXZpb3VzTW91c2VUb3BcbiAgICB9KTtcbiAgfVxuXG4gIHNldFByZXZpb3VzU2l6ZWFibGVEaXZIZWlnaHQocHJldmlvdXNTaXplYWJsZURpdkhlaWdodCkge1xuICAgIHRoaXMudXBkYXRlU3RhdGUoe1xuICAgICAgcHJldmlvdXNTaXplYWJsZURpdkhlaWdodFxuICAgIH0pO1xuICB9XG5cbiAgc2V0SW5pdGlhbFN0YXRlKCkge1xuICAgIGNvbnN0IHByZXZpb3VzTW91c2VUb3AgPSBudWxsLFxuICAgICAgICAgIHByZXZpb3VzU2l6ZWFibGVEaXZIZWlnaHQgPSBudWxsO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBwcmV2aW91c01vdXNlVG9wLFxuICAgICAgcHJldmlvdXNTaXplYWJsZURpdkhlaWdodFxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJob3Jpem9udGFsXCJcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlKEhvcml6b250YWxTcGxpdHRlcilgXG5cbiAgaGVpZ2h0OiAxcmVtO1xuXG5gO1xuIiwgIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IHsgZGVmYXVsdCBhcyBvcHRpb25zIH0gZnJvbSBcIi4vb3B0aW9uc1wiO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIFJvd0RpdiB9IGZyb20gXCIuL2Rpdi9yb3dcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUm93c0RpdiB9IGZyb20gXCIuL2Rpdi9yb3dzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIENvbHVtbkRpdiB9IGZyb20gXCIuL2Rpdi9jb2x1bW5cIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ29sdW1uc0RpdiB9IGZyb20gXCIuL2Rpdi9jb2x1bW5zXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNwbGl0dGVyRGl2IH0gZnJvbSBcIi4vZGl2L3NwbGl0dGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNpemVhYmxlRGl2IH0gZnJvbSBcIi4vZGl2L3NpemVhYmxlXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFZlcnRpY2FsU3BsaXR0ZXJEaXYgfSBmcm9tIFwiLi9kaXYvc3BsaXR0ZXIvdmVydGljYWxcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgSG9yaXpvbnRhbFNwbGl0dGVyRGl2IH0gZnJvbSBcIi4vZGl2L3NwbGl0dGVyL2hvcml6b250YWxcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ1VTVE9NX0dSQU1NQVJfTkFNRSA9IFwiRGVmYXVsdFwiO1xuZXhwb3J0IGNvbnN0IFVTRVJfREVGSU5FRF9DVVNUT01fR1JBTU1BUl9OQU1FID0gXCJVc2VyIGRlZmluZWRcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IFRFUk0gPSBcInRlcm1cIjtcbmV4cG9ydCBjb25zdCBTVEFURU1FTlQgPSBcInN0YXRlbWVudFwiO1xuZXhwb3J0IGNvbnN0IEVYUFJFU1NJT04gPSBcImV4cHJlc3Npb25cIjtcbmV4cG9ydCBjb25zdCBFTVBUWV9TVFJJTkcgPSBcIlwiO1xuZXhwb3J0IGNvbnN0IE1FVEFTVEFURU1FTlQgPSBcIm1ldGFzdGF0ZW1lbnRcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgVEVSTSwgU1RBVEVNRU5ULCBFWFBSRVNTSU9OLCBNRVRBU1RBVEVNRU5UIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1c3RvbUdyYW1tYXIge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBsZXhpY2FsUGF0dGVybiwgdGVybUJORiwgZXhwcmVzc2lvbkJORiwgc3RhdGVtZW50Qk5GLCBtZXRhc3RhdGVtZW50Qk5GKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLmxleGljYWxQYXR0ZXJuID0gbGV4aWNhbFBhdHRlcm47XG4gICAgdGhpcy50ZXJtQk5GID0gdGVybUJORjtcbiAgICB0aGlzLmV4cHJlc3Npb25CTkYgPSBleHByZXNzaW9uQk5GO1xuICAgIHRoaXMuc3RhdGVtZW50Qk5GID0gc3RhdGVtZW50Qk5GO1xuICAgIHRoaXMubWV0YXN0YXRlbWVudEJORiA9IG1ldGFzdGF0ZW1lbnRCTkY7XG4gIH1cbiAgXG4gIGdldE5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZTtcbiAgfVxuXG4gIGdldExleGljYWxQYXR0ZXJuKCkge1xuICAgIHJldHVybiB0aGlzLmxleGljYWxQYXR0ZXJuO1xuICB9XG5cbiAgZ2V0Qk5GKHJ1bGVOYW1lKSB7XG4gICAgbGV0IGJuZjtcblxuICAgIHN3aXRjaCAocnVsZU5hbWUpIHtcbiAgICAgIGNhc2UgVEVSTTpcbiAgICAgICAgYm5mID0gdGhpcy50ZXJtQk5GO1xuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEVYUFJFU1NJT046XG5cbiAgICAgICAgYm5mID0gdGhpcy5leHByZXNzaW9uQk5GO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBTVEFURU1FTlQ6XG5cbiAgICAgICAgYm5mID0gdGhpcy5zdGF0ZW1lbnRCTkY7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIE1FVEFTVEFURU1FTlQ6XG5cbiAgICAgICAgYm5mID0gdGhpcy5tZXRhc3RhdGVtZW50Qk5GO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gYm5mO1xuICB9XG5cbiAgc2V0TmFtZShuYW1lKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgfVxuXG4gIHNldExleGljYWxQYXR0ZXJuKGxleGljYWxQYXR0ZXJuKSB7XG4gICAgdGhpcy5sZXhpY2FsUGF0dGVybiA9IGxleGljYWxQYXR0ZXJuO1xuICB9XG5cbiAgc2V0Qk5GKHJ1bGVOYW1lLCBibmYpIHtcbiAgICBzd2l0Y2ggKHJ1bGVOYW1lKSB7XG4gICAgICBjYXNlIFRFUk06XG4gICAgICAgIHRoaXMudGVybUJORiA9IGJuZjtcblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBFWFBSRVNTSU9OOlxuICAgICAgICB0aGlzLmV4cHJlc3Npb25CTkYgPSBibmY7XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgU1RBVEVNRU5UOlxuICAgICAgICB0aGlzLnN0YXRlbWVudEJORiA9IGJuZjtcblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBNRVRBU1RBVEVNRU5UOlxuICAgICAgICB0aGlzLm1ldGFzdGF0ZW1lbnRCTkYgPSBibmY7XG5cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmVzZXRMZXhpY2FsUGF0dGVybigpIHsgXG4gICAgY29uc3QgbGV4aWNhbFBhdHRlcm4gPSBudWxsO1xuICAgIFxuICAgIHRoaXMuc2V0TGV4aWNhbFBhdHRlcm4obGV4aWNhbFBhdHRlcm4pO1xuICB9XG5cbiAgcmVzZXRCTkYocnVsZU5hbWUpIHtcbiAgICBjb25zdCBibmYgPSBudWxsO1xuXG4gICAgdGhpcy5zZXRCTkYocnVsZU5hbWUsIGJuZik7XG4gIH1cblxuICB1cGRhdGUocnVsZU5hbWUsIGJuZiwgbGV4aWNhbFBhdHRlcm4pIHtcbiAgICB0aGlzLnNldEJORihydWxlTmFtZSwgYm5mKTtcbiAgICB0aGlzLnNldExleGljYWxQYXR0ZXJuKGxleGljYWxQYXR0ZXJuKTtcbiAgfVxuXG4gIHRvSlNPTigpIHtcbiAgICBjb25zdCBuYW1lID0gdGhpcy5uYW1lLFxuICAgICAgICAgIGxleGljYWxQYXR0ZXJuID0gdGhpcy5sZXhpY2FsUGF0dGVybixcbiAgICAgICAgICB0ZXJtQk5GID0gdGhpcy50ZXJtQk5GLFxuICAgICAgICAgIGV4cHJlc3Npb25CTkYgPSB0aGlzLmV4cHJlc3Npb25CTkYsXG4gICAgICAgICAgc3RhdGVtZW50Qk5GID0gdGhpcy5zdGF0ZW1lbnRCTkYsXG4gICAgICAgICAgbWV0YXN0YXRlbWVudEJORiA9IHRoaXMubWV0YXN0YXRlbWVudEJORixcbiAgICAgICAgICBqc29uID0ge1xuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIGxleGljYWxQYXR0ZXJuLFxuICAgICAgICAgICAgdGVybUJORixcbiAgICAgICAgICAgIGV4cHJlc3Npb25CTkYsXG4gICAgICAgICAgICBzdGF0ZW1lbnRCTkYsXG4gICAgICAgICAgICBtZXRhc3RhdGVtZW50Qk5GXG4gICAgICAgICAgfTtcbiAgICBcbiAgICByZXR1cm4ganNvbjtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tSlNPTihqc29uKSB7XG4gICAgY29uc3QgeyBuYW1lLCBsZXhpY2FsUGF0dGVybiwgdGVybUJORiwgZXhwcmVzc2lvbkJORiwgc3RhdGVtZW50Qk5GLCBtZXRhc3RhdGVtZW50Qk5GIH0gPSBqc29uLFxuICAgICAgICAgIGN1c3RvbUdyYW1tYXIgPSBuZXcgQ3VzdG9tR3JhbW1hcihuYW1lLCBsZXhpY2FsUGF0dGVybiwgdGVybUJORiwgZXhwcmVzc2lvbkJORiwgc3RhdGVtZW50Qk5GLCBtZXRhc3RhdGVtZW50Qk5GKTtcblxuICAgIHJldHVybiBjdXN0b21HcmFtbWFyO1xuICB9XG5cbiAgc3RhdGljIGZyb21OYW1lKG5hbWUpIHtcbiAgICBjb25zdCBsZXhpY2FsUGF0dGVybiA9IG51bGwsXG4gICAgICAgICAgdGVybUJORiA9IG51bGwsXG4gICAgICAgICAgZXhwcmVzc2lvbkJORiA9IG51bGwsXG4gICAgICAgICAgc3RhdGVtZW50Qk5GID0gbnVsbCxcbiAgICAgICAgICBtZXRhc3RhdGVtZW50Qk5GID0gbnVsbCxcbiAgICAgICAgICBjdXN0b21HcmFtbWFyID0gbmV3IEN1c3RvbUdyYW1tYXIobmFtZSwgbGV4aWNhbFBhdHRlcm4sIHRlcm1CTkYsIGV4cHJlc3Npb25CTkYsIHN0YXRlbWVudEJORiwgbWV0YXN0YXRlbWVudEJORik7XG5cbiAgICByZXR1cm4gY3VzdG9tR3JhbW1hcjtcbiAgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xyXG5cclxuY29uc3QgZW50cmllcyA9IFtcclxuICB7XHJcbiAgICBcInNwZWNpYWxcIjogXCJeKD86XFxcXCRcXFxcJHxcXFxcJHxcXFxcXFxcXFxcXFwofFxcXFxcXFxcXFxcXCl8XFxcXFxcXFxcXFxcW3xcXFxcXFxcXFxcXFxdKVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcInVuYXNzaWduZWRcIjogXCJeKD86Lis/KD89XFxcXCRcXFxcJHxcXFxcJHxcXFxcXFxcXFxcXFwofFxcXFxcXFxcXFxcXCl8XFxcXFxcXFxcXFxcW3xcXFxcXFxcXFxcXFxdKXwuKylcIlxyXG4gIH1cclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGVudHJpZXM7XHJcblxyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgeyBDb21tb25MZXhlciwgV2hpdGVzcGFjZVRva2VuLCBFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xyXG5cclxuaW1wb3J0IGVudHJpZXMgZnJvbSBcIi4vZW50cmllc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVYTGV4ZXIgZXh0ZW5kcyBDb21tb25MZXhlciB7XHJcbiAgc3RhdGljIGVudHJpZXMgPSBlbnRyaWVzO1xyXG5cclxuICBzdGF0aWMgRW5kT2ZMaW5lVG9rZW4gPSBFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuO1xyXG5cclxuICBzdGF0aWMgV2hpdGVzcGFjZVRva2VuID0gV2hpdGVzcGFjZVRva2VuO1xyXG5cclxuICBzdGF0aWMgRW5kT2ZMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIFNpbmdsZUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgUmVndWxhckV4cHJlc3Npb25Ub2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIE1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIFNpbmdseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7IHJldHVybiBDb21tb25MZXhlci5mcm9tTm90aGluZyhUZVhMZXhlcik7IH1cclxuXHJcbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uTGV4ZXIuZnJvbVJ1bGVzKFRlWExleGVyLCBydWxlcyk7IH1cclxuXHJcbiAgc3RhdGljIGZyb21FbnRyaWVzKGVudHJpZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21FbnRyaWVzKFRlWExleGVyLCBlbnRyaWVzKTsgfVxyXG59XHJcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgYm5mID0gYFxuXG5cbiAgICBkb2N1bWVudCAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgICggZGVsaW1pdGVkVGVYIHwgZXZlcnl0aGluZ0Vsc2UgKSsgO1xuICAgIFxuICAgIFxuICAgIFxuICAgIGRlbGltaXRlZFRlWCAgICAgICAgICAgICAgICAgICAgOjo9ICAgZG9sbGFyRGVsaW1pdGVyIGlubGluZVRlWCBkb2xsYXJEZWxpbWl0ZXIgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBkb3VibGVEb2xsYXJEZWxpbWl0ZXIgZGlzcGxheVRlWCBkb3VibGVEb2xsYXJEZWxpbWl0ZXIgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBvcGVuaW5nQnJhY2tldERlbGltaXRlciBpbmxpbmVUZVggY2xvc2luZ0JyYWNrZXREZWxpbWl0ZXIgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBvcGVuaW5nU3F1YXJlQnJhY2tldERlbGltaXRlciBkaXNwbGF5VGVYIGNsb3NpbmdTcXVhcmVCcmFja2V0RGVsaW1pdGVyIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xuICAgIFxuXG4gICAgXG4gICAgaW5saW5lVGVYICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBbdW5hc3NpZ25lZF0qIDtcblxuICAgIGRpc3BsYXlUZVggICAgICAgICAgICAgICAgICAgICAgOjo9ICAgW3VuYXNzaWduZWRdKiA7XG5cblxuXG4gICAgZG9sbGFyRGVsaW1pdGVyICAgICAgICAgICAgICAgICA6Oj0gICBcIiRcIiA7XG4gXG4gICAgZG91YmxlRG9sbGFyRGVsaW1pdGVyICAgICAgICAgICA6Oj0gICBcIiQkXCIgO1xuICAgIFxuXG4gICAgXG4gICAgb3BlbmluZ0JyYWNrZXREZWxpbWl0ZXIgICAgICAgICA6Oj0gICBcIlxcXFwoXCIgO1xuXG4gICAgY2xvc2luZ0JyYWNrZXREZWxpbWl0ZXIgICAgICAgICA6Oj0gICBcIlxcXFwpXCIgO1xuXG4gICAgb3BlbmluZ1NxdWFyZUJyYWNrZXREZWxpbWl0ZXIgICA6Oj0gICBcIlxcXFxbXCIgO1xuICAgIFxuICAgIGNsb3NpbmdTcXVhcmVCcmFja2V0RGVsaW1pdGVyICAgOjo9ICAgXCJcXFxcXVwiIDtcbiAgICBcbiAgICBcbiAgICBcbiAgICBldmVyeXRoaW5nRWxzZSAgICAgICAgICAgICAgICAgIDo6PSAgIC4gO1xuXG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ29tbW9uUGFyc2VyIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuaW1wb3J0IGJuZiBmcm9tIFwiLi9ibmZcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVYUGFyc2VyIGV4dGVuZHMgQ29tbW9uUGFyc2VyIHtcbiAgc3RhdGljIGJuZiA9IGJuZjtcblxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7IHJldHVybiBDb21tb25QYXJzZXIuZnJvbU5vdGhpbmcoVGVYUGFyc2VyKTsgfVxuXG4gIHN0YXRpYyBmcm9tQk5GKGJuZikgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21CTkYoVGVYUGFyc2VyLCBibmYpOyB9XG5cbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21SdWxlcyhUZVhQYXJzZXIsIHJ1bGVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xyXG5cclxuY29uc3QgZW50cmllcyA9IFtcclxuICB7XHJcbiAgICBcInVuYXNzaWduZWRcIjogXCJeW15cXFxcc10rXCJcclxuICB9XHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBlbnRyaWVzO1xyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgeyBDb21tb25MZXhlciwgV2hpdGVzcGFjZVRva2VuLCBFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuIH0gZnJvbSBcIm9jY2FtLWxleGVyc1wiO1xyXG5cclxuaW1wb3J0IGVudHJpZXMgZnJvbSBcIi4vZW50cmllc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxhaW5MZXhlciBleHRlbmRzIENvbW1vbkxleGVyIHtcclxuICBzdGF0aWMgZW50cmllcyA9IGVudHJpZXM7XHJcblxyXG4gIHN0YXRpYyBFbmRPZkxpbmVUb2tlbiA9IEVuZE9mTGluZVNpZ25pZmljYW50VG9rZW47XHJcblxyXG4gIHN0YXRpYyBXaGl0ZXNwYWNlVG9rZW4gPSBXaGl0ZXNwYWNlVG9rZW47XHJcblxyXG4gIHN0YXRpYyBFbmRPZkxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgU2luZ2xlTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBSZWd1bGFyRXhwcmVzc2lvblRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIFN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBmcm9tTm90aGluZygpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21Ob3RoaW5nKFBsYWluTGV4ZXIpOyB9XHJcblxyXG4gIHN0YXRpYyBmcm9tUnVsZXMocnVsZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21SdWxlcyhQbGFpbkxleGVyLCBydWxlcyk7IH1cclxuXHJcbiAgc3RhdGljIGZyb21FbnRyaWVzKGVudHJpZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21FbnRyaWVzKFBsYWluTGV4ZXIsIGVudHJpZXMpOyB9XHJcbn1cclxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBibmYgPSBgXG5cblxuICAgIGRvY3VtZW50ICAgICAgIDo6PSAgKCBsaW5lIHwgdmVydGljYWxTcGFjZSApKyA7XG5cblxuICAgIGxpbmUgICAgICAgICAgIDo6PSAgW3VuYXNzaWduZWRdKyA7XG5cblxuICAgIHZlcnRpY2FsU3BhY2UgIDo6PSAgPEVORF9PRl9MSU5FPisgO1xuXG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ29tbW9uUGFyc2VyIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuaW1wb3J0IGJuZiBmcm9tIFwiLi9ibmZcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxhaW5QYXJzZXIgZXh0ZW5kcyBDb21tb25QYXJzZXIge1xuICBzdGF0aWMgYm5mID0gYm5mO1xuXG4gIHN0YXRpYyBmcm9tTm90aGluZygpIHsgcmV0dXJuIENvbW1vblBhcnNlci5mcm9tTm90aGluZyhQbGFpblBhcnNlcik7IH1cblxuICBzdGF0aWMgZnJvbUJORihibmYpIHsgcmV0dXJuIENvbW1vblBhcnNlci5mcm9tQk5GKFBsYWluUGFyc2VyLCBibmYpOyB9XG5cbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21SdWxlcyhQbGFpblBhcnNlciwgcnVsZXMpOyB9XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5jb25zdCBlbnRyaWVzID0gW1xyXG4gIHtcclxuICAgIFwidW5hc3NpZ25lZFwiOiBcIl5bXlxcXFxzXStcIlxyXG4gIH1cclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGVudHJpZXM7XHJcbiIsICJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmltcG9ydCB7IENvbW1vbkxleGVyLCBXaGl0ZXNwYWNlVG9rZW4sIEVuZE9mTGluZVNpZ25pZmljYW50VG9rZW4gfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XHJcblxyXG5pbXBvcnQgZW50cmllcyBmcm9tIFwiLi9lbnRyaWVzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWFkbWVMZXhlciBleHRlbmRzIENvbW1vbkxleGVyIHtcclxuICBzdGF0aWMgZW50cmllcyA9IGVudHJpZXM7XHJcblxyXG4gIHN0YXRpYyBFbmRPZkxpbmVUb2tlbiA9IEVuZE9mTGluZVNpZ25pZmljYW50VG9rZW47XHJcblxyXG4gIHN0YXRpYyBXaGl0ZXNwYWNlVG9rZW4gPSBXaGl0ZXNwYWNlVG9rZW47XHJcblxyXG4gIHN0YXRpYyBFbmRPZkxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgU2luZ2xlTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBSZWd1bGFyRXhwcmVzc2lvblRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIFN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBmcm9tTm90aGluZygpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21Ob3RoaW5nKFJlYWRtZUxleGVyKTsgfVxyXG5cclxuICBzdGF0aWMgZnJvbVJ1bGVzKHJ1bGVzKSB7IHJldHVybiBDb21tb25MZXhlci5mcm9tUnVsZXMoUmVhZG1lTGV4ZXIsIHJ1bGVzKTsgfVxyXG5cclxuICBzdGF0aWMgZnJvbUVudHJpZXMoZW50cmllcykgeyByZXR1cm4gQ29tbW9uTGV4ZXIuZnJvbUVudHJpZXMoUmVhZG1lTGV4ZXIsIGVudHJpZXMpOyB9XHJcbn1cclxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBibmYgPSBgXG5cblxuICAgIGRvY3VtZW50ICAgICAgIDo6PSAgKCBsaW5lIHwgdmVydGljYWxTcGFjZSApKyA7XG5cblxuICAgIGxpbmUgICAgICAgICAgIDo6PSAgW3VuYXNzaWduZWRdKyA7XG5cblxuICAgIHZlcnRpY2FsU3BhY2UgIDo6PSAgPEVORF9PRl9MSU5FPisgO1xuXG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ29tbW9uUGFyc2VyIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuaW1wb3J0IGJuZiBmcm9tIFwiLi9ibmZcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVhZG1lUGFyc2VyIGV4dGVuZHMgQ29tbW9uUGFyc2VyIHtcbiAgc3RhdGljIGJuZiA9IGJuZjtcblxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7IHJldHVybiBDb21tb25QYXJzZXIuZnJvbU5vdGhpbmcoUmVhZG1lUGFyc2VyKTsgfVxuXG4gIHN0YXRpYyBmcm9tQk5GKGJuZikgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21CTkYoUmVhZG1lUGFyc2VyLCBibmYpOyB9XG5cbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21SdWxlcyhSZWFkbWVQYXJzZXIsIHJ1bGVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xyXG5cclxuY29uc3QgZW50cmllcyA9IFtcclxuICB7XHJcbiAgICBcInNwZWNpYWxcIjogXCJeKD86LHw6fFxcXFxbfFxcXFxdfFxcXFx7fFxcXFx9KVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcInVuYXNzaWduZWRcIjogXCJeW15cXFxcc10rXCJcclxuICB9XHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBlbnRyaWVzO1xyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgeyBDb21tb25MZXhlcixcclxuICAgICAgICAgV2hpdGVzcGFjZVRva2VuLFxyXG4gICAgICAgICBFbmRPZkxpbmVOb25TaWduaWZpY2FudFRva2VuLFxyXG4gICAgICAgICBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XHJcblxyXG5pbXBvcnQgZW50cmllcyBmcm9tIFwiLi9lbnRyaWVzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXRhSlNPTkxleGVyIGV4dGVuZHMgQ29tbW9uTGV4ZXIge1xyXG4gIHN0YXRpYyBlbnRyaWVzID0gZW50cmllcztcclxuXHJcbiAgc3RhdGljIEVuZE9mTGluZVRva2VuID0gRW5kT2ZMaW5lTm9uU2lnbmlmaWNhbnRUb2tlbjsgLy8vXHJcblxyXG4gIHN0YXRpYyBXaGl0ZXNwYWNlVG9rZW4gPSBXaGl0ZXNwYWNlVG9rZW47XHJcblxyXG4gIHN0YXRpYyBFbmRPZkxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgUmVndWxhckV4cHJlc3Npb25Ub2tlbiA9IG51bGw7XHJcblxyXG4gIHN0YXRpYyBTaW5nbGVMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIFN0YXJ0T2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xyXG5cclxuICBzdGF0aWMgU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbFRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbiA9IERvdWJseVF1b3RlZFN0cmluZ0xpdGVyYWxUb2tlbjtcclxuXHJcbiAgc3RhdGljIGZyb21Ob3RoaW5nKCkgeyByZXR1cm4gQ29tbW9uTGV4ZXIuZnJvbU5vdGhpbmcoTWV0YUpTT05MZXhlcik7IH1cclxuXHJcbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uTGV4ZXIuZnJvbVJ1bGVzKE1ldGFKU09OTGV4ZXIsIHJ1bGVzKTsgfVxyXG5cclxuICBzdGF0aWMgZnJvbUVudHJpZXMoZW50cmllcykgeyByZXR1cm4gQ29tbW9uTGV4ZXIuZnJvbUVudHJpZXMoTWV0YUpTT05MZXhlciwgZW50cmllcyk7IH1cclxufVxyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGJuZiA9IGBcblxuXG4gICAgZG9jdW1lbnQgICAgICAgICAgOjo9ICAoIG1ldGFKU09OIGVycm9yKiApIHwgZXJyb3IrIDtcblxuXG4gICAgbWV0YUpTT04gICAgICAgICAgOjo9ICBcIntcIiAoICggcmVwb3NpdG9yeVBhaXIgKCBcIixcIiBkZXBlbmRlbmNpZXNQYWlyICk/ICkgfCAoIGRlcGVuZGVuY2llc1BhaXIgXCIsXCIgcmVwb3NpdG9yeVBhaXIgKSApIFwifVwiIDtcblxuXG4gICAgZGVwZW5kZW5jaWVzUGFpciAgOjo9ICBcIlxcXFxcImRlcGVuZGVuY2llc1xcXFxcIlwiIFwiOlwiIGRlcGVuZGVuY2llcyA7XG4gICAgXG4gICAgXG4gICAgcmVwb3NpdG9yeVBhaXIgICAgOjo9ICBcIlxcXFxcInJlcG9zaXRvcnlcXFxcXCJcIiBcIjpcIiByZXBvc2l0b3J5IDtcblxuXG4gICAgZGVwZW5kZW5jaWVzICAgICAgOjo9ICBcIltcIiAoZGVwZW5kZW5jeSAoIFwiLFwiIGRlcGVuZGVuY3kgKSopPyBcIl1cIiA7XG4gIFxuXG4gICAgZGVwZW5kZW5jeSAgICAgICAgOjo9ICBbc3RyaW5nLWxpdGVyYWxdIDtcblxuXG4gICAgcmVwb3NpdG9yeSAgICAgICAgOjo9ICBbc3RyaW5nLWxpdGVyYWxdIDtcblxuXG4gICAgZXJyb3IgICAgICAgICAgICAgOjo9ICAuIDtcblxuYDtcblxuZXhwb3J0IGRlZmF1bHQgYm5mO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBDb21tb25QYXJzZXIgfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuXG5pbXBvcnQgYm5mIGZyb20gXCIuL2JuZlwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXRhSlNPTlBhcnNlciBleHRlbmRzIENvbW1vblBhcnNlciB7XG4gIHN0YXRpYyBibmYgPSBibmY7XG5cbiAgc3RhdGljIGZyb21Ob3RoaW5nKCkgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21Ob3RoaW5nKE1ldGFKU09OUGFyc2VyKTsgfVxuXG4gIHN0YXRpYyBmcm9tQk5GKGJuZikgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21CTkYoTWV0YUpTT05QYXJzZXIsIGJuZik7IH1cblxuICBzdGF0aWMgZnJvbVJ1bGVzKHJ1bGVzKSB7IHJldHVybiBDb21tb25QYXJzZXIuZnJvbVJ1bGVzKE1ldGFKU09OUGFyc2VyLCBydWxlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmNvbnN0IGVudHJpZXMgPSBbXHJcbiAge1xyXG4gICAgXCJzcGVjaWFsXCI6IFwiXig/Oix8PXw6Onw6fFxcXFx8LXxcXFxcKHxcXFxcKSl8XFxcXFt8XFxcXF18XFxcXC5cXFxcLlxcXFwuXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwia2V5d29yZFwiOiBcIl4oPzpSdWxlfEF4aW9tfFRoZW9yZW18TGVtbWF8Q29uamVjdHVyZXxNZXRhbGVtbWF8TWV0YXRoZW9yZW18UHJlbWlzZXN8UHJlbWlzZXxDb25jbHVzaW9ufFByb29mfFRoZXJlZm9yZXxTdXBwb3NlfFRoZW58SGVuY2V8VHlwZXN8VHlwZXxWYXJpYWJsZXN8VmFyaWFibGV8Q29uc3RydWN0b3JzfENvbnN0cnVjdG9yfENvbWJpbmF0b3JzfENvbWJpbmF0b3J8RGVwZW5kZW50VHlwZXN8RGVwZW5kZW50VHlwZXxEaXNqb2ludFR5cGVzfERpc2pvaW50VHlwZXxNZXRhdmFyaWFibGVzfE1ldGF2YXJpYWJsZXxBYmJyZXZpYXRpb25zfEFiYnJldmlhdGlvbnxMZXR8Zm9yfGZyb218YnkpXFxcXGJcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJyZXNlcnZlZFwiOiBcIl4oPzp1bmRlZmluZWR8ZnJlZXxub3R8aW58aXMpXFxcXGJcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJuYW1lXCI6IFwiXltBLVphLXpcdTAzOTEtXHUwM0E5XHUwM0IxLVx1MDNDOV8wLTldK1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcInVuYXNzaWduZWRcIjogXCJeW15cXFxcc10rXCJcclxuICB9XHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBlbnRyaWVzO1xyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQgeyBDb21tb25MZXhlcixcclxuICAgICAgICAgV2hpdGVzcGFjZVRva2VuLFxyXG4gICAgICAgICBFbmRPZkxpbmVTaWduaWZpY2FudFRva2VuLFxyXG4gICAgICAgICBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4sXHJcbiAgICAgICAgIEVuZE9mTGluZUNvbW1lbnRTaWduaWZpY2FudFRva2VuLFxyXG4gICAgICAgICBQeXRob25TdHlsZVNpbmdsZUxpbmVDb21tZW50VG9rZW4sXHJcbiAgICAgICAgIFB5dGhvblN0eWxlRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4sXHJcbiAgICAgICAgIFB5dGhvblN0eWxlU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbixcclxuICAgICAgICAgUHl0aG9uU3R5bGVNaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUb2tlbiB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcclxuXHJcbmltcG9ydCBlbnRyaWVzIGZyb20gXCIuL2VudHJpZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZsb3JlbmNlTGV4ZXIgZXh0ZW5kcyBDb21tb25MZXhlciB7XHJcbiAgbWF0Y2hSZWd1bGFyRXhwcmVzc2lvbihjb250ZW50KSB7IHJldHVybiBudWxsOyB9XHJcblxyXG4gIG1hdGNoU2luZ2x5UXVvdGVkU3RyaW5nTGl0ZXJhbChjb250ZW50KSB7IHJldHVybiBudWxsOyB9XHJcblxyXG4gIHN0YXRpYyBlbnRyaWVzID0gZW50cmllcztcclxuXHJcbiAgc3RhdGljIEVuZE9mTGluZVRva2VuID0gRW5kT2ZMaW5lU2lnbmlmaWNhbnRUb2tlbjsgLy8vXHJcblxyXG4gIHN0YXRpYyBXaGl0ZXNwYWNlVG9rZW4gPSBXaGl0ZXNwYWNlVG9rZW47XHJcblxyXG4gIHN0YXRpYyBSZWd1bGFyRXhwcmVzc2lvblRva2VuID0gbnVsbDtcclxuXHJcbiAgc3RhdGljIEVuZE9mTGluZUNvbW1lbnRUb2tlbiA9IEVuZE9mTGluZUNvbW1lbnRTaWduaWZpY2FudFRva2VuO1xyXG5cclxuICBzdGF0aWMgU2luZ2xlTGluZUNvbW1lbnRUb2tlbiA9IFB5dGhvblN0eWxlU2luZ2xlTGluZUNvbW1lbnRUb2tlbjtcclxuXHJcbiAgc3RhdGljIEVuZE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gUHl0aG9uU3R5bGVFbmRPZk11bHRpTGluZUNvbW1lbnRUb2tlbjsgIC8vL1xyXG5cclxuICBzdGF0aWMgU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbiA9IFB5dGhvblN0eWxlU3RhcnRPZk11bHRpTGluZUNvbW1lbnRUb2tlbjsgIC8vL1xyXG5cclxuICBzdGF0aWMgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBQeXRob25TdHlsZU1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFRva2VuOyAgLy8vXHJcblxyXG4gIHN0YXRpYyBTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBudWxsOyAgLy8vXHJcblxyXG4gIHN0YXRpYyBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW47XHJcblxyXG4gIHN0YXRpYyBmcm9tTm90aGluZygpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21Ob3RoaW5nKEZsb3JlbmNlTGV4ZXIpOyB9XHJcblxyXG4gIHN0YXRpYyBmcm9tUnVsZXMocnVsZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21SdWxlcyhGbG9yZW5jZUxleGVyLCBydWxlcyk7IH1cclxuXHJcbiAgc3RhdGljIGZyb21FbnRyaWVzKGVudHJpZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21FbnRyaWVzKEZsb3JlbmNlTGV4ZXIsIGVudHJpZXMpOyB9XHJcbn1cclxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBibmYgPSBgZG9jdW1lbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgICggdG9wTGV2ZWxJbnN0cnVjdGlvbiB8IHZlcnRpY2FsU3BhY2UgfCBlcnJvciApKyA7XG5cblxuXG50b3BMZXZlbEluc3RydWN0aW9uICAgICAgICAgICAgICAgICAgOjo9ICAgcnVsZSBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIGF4aW9tIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgbGVtbWEgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICB0aGVvcmVtIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgY29uamVjdHVyZSBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIG1ldGFsZW1tYSBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIG1ldGF0aGVvcmVtIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgbWV0YWNvbmplY3R1cmUgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICB0eXBlRGVjbGFyYXRpb24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgdmFyaWFibGVEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBjb21iaW5hdG9yRGVjbGFyYXRpb24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgY29uc3RydWN0b3JEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBkaXNqb2ludFR5cGVEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBtZXRhdmFyaWFibGVEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBkZXBlbmRlbnRUeXBlRGVjbGFyYXRpb24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgYWJicmV2aWF0aW9uRGVjbGFyYXRpb24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgdHlwZXNEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICB2YXJpYWJsZXNEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBjb21iaW5hdG9yc0RlY2xhcmF0aW9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIGNvbnN0cnVjdG9yc0RlY2xhcmF0aW9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIGRpc2pvaW50VHlwZXNEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBtZXRhdmFyaWFibGVzRGVjbGFyYXRpb24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgZGVwZW5kZW50VHlwZXNEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBhYmJyZXZpYXRpb25zRGVjbGFyYXRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xuXG5cblxudmVydGljYWxTcGFjZSAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIDxFTkRfT0ZfTElORT4rIDtcblxuXG5cbmVycm9yICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICAuIDtcblxuXG5cbnJ1bGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIlJ1bGVcIiBcIihcIiBsYWJlbHMgXCIpXCIgPEVORF9PRl9MSU5FPiAoIHByZW1pc2UgfCBwcmVtaXNlcyApPyBjb25jbHVzaW9uIG1ldGFwcm9vZj8gO1xuXG5heGlvbSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgXCJBeGlvbVwiIFwiKFwiIGxhYmVscyBcIilcIiA8RU5EX09GX0xJTkU+ICggaW5kaWNhdGl2ZUNvbmRpdGlvbmFsIHwgdW5xdWFsaWZpZWRTdGF0ZW1lbnQgfCB1bnF1YWxpZmllZE5vbnNlbnNlICkgOyBcblxubGVtbWEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiTGVtbWFcIiBcIihcIiBsYWJlbHMgXCIpXCI/IDxFTkRfT0ZfTElORT4gKCBpbmRpY2F0aXZlQ29uZGl0aW9uYWwgfCB1bnF1YWxpZmllZFN0YXRlbWVudCB8IHVucXVhbGlmaWVkTm9uc2Vuc2UgKSBwcm9vZiA7XG5cbnRoZW9yZW0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIlRoZW9yZW1cIiBcIihcIiBsYWJlbHMgXCIpXCIgPEVORF9PRl9MSU5FPiAoIGluZGljYXRpdmVDb25kaXRpb25hbCB8IHVucXVhbGlmaWVkU3RhdGVtZW50IHwgdW5xdWFsaWZpZWROb25zZW5zZSApIHByb29mIDtcblxuY29uamVjdHVyZSAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiQ29uamVjdHVyZVwiIFwiKFwiIGxhYmVscyBcIilcIiA8RU5EX09GX0xJTkU+ICggaW5kaWNhdGl2ZUNvbmRpdGlvbmFsIHwgdW5xdWFsaWZpZWRTdGF0ZW1lbnQgfCB1bnF1YWxpZmllZE5vbnNlbnNlICkgcHJvb2Y/IDtcblxubWV0YWxlbW1hICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiTWV0YWxlbW1hXCIgXCIoXCIgbGFiZWxzIFwiKVwiIDxFTkRfT0ZfTElORT4gKCBtZXRhSW5kaWNhdGl2ZUNvbmRpdGlvbmFsIHwgdW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50IHwgdW5xdWFsaWZpZWROb25zZW5zZSApIG1ldGFwcm9vZiA7XG5cbm1ldGF0aGVvcmVtICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIk1ldGF0aGVvcmVtXCIgXCIoXCIgbGFiZWxzIFwiKVwiIDxFTkRfT0ZfTElORT4gKCBtZXRhSW5kaWNhdGl2ZUNvbmRpdGlvbmFsIHwgdW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50IHwgdW5xdWFsaWZpZWROb25zZW5zZSApIG1ldGFwcm9vZiA7XG5cbm1ldGFjb25qZWN0dXJlICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIk1ldGFjb25qZWN0dXJlXCIgXCIoXCIgbGFiZWxzIFwiKVwiIDxFTkRfT0ZfTElORT4gKCBtZXRhSW5kaWNhdGl2ZUNvbmRpdGlvbmFsIHwgdW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50IHwgdW5xdWFsaWZpZWROb25zZW5zZSApIDtcblxudHlwZURlY2xhcmF0aW9uICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiVHlwZVwiIHR5cGVOYW1lICggXCI6XCIgdHlwZU5hbWUgKT8gPEVORF9PRl9MSU5FPiA7XG4gXG52YXJpYWJsZURlY2xhcmF0aW9uICAgICAgICAgICAgICAgICAgOjo9ICAgXCJWYXJpYWJsZVwiIHZhcmlhYmxlTmFtZSBcIjpcIiB0eXBlTmFtZSA8RU5EX09GX0xJTkU+IDtcbiBcbmNvbWJpbmF0b3JEZWNsYXJhdGlvbiAgICAgICAgICAgICAgICA6Oj0gICBcIkNvbWJpbmF0b3JcIiBleHByZXNzaW9uICggXCI6XCIgdHlwZU5hbWUgKT8gPEVORF9PRl9MSU5FPiA7XG4gXG5jb25zdHJ1Y3RvckRlY2xhcmF0aW9uICAgICAgICAgICAgICAgOjo9ICAgXCJDb25zdHJ1Y3RvclwiIHRlcm0gKCBcIjpcIiB0eXBlTmFtZSApPyA8RU5EX09GX0xJTkU+IDtcbiBcbmRpc2pvaW50VHlwZURlY2xhcmF0aW9uICAgICAgICAgICAgICA6Oj0gICBcIkRpc2pvaW50VHlwZVwiIHR5cGVOYW1lIFwiOlwiIHR5cGVOYW1lcyA8RU5EX09GX0xJTkU+IDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxubWV0YXZhcmlhYmxlRGVjbGFyYXRpb24gICAgICAgICAgICAgIDo6PSAgIFwiTWV0YXZhcmlhYmxlXCIgbWV0YXZhcmlhYmxlTmFtZSB0eXBlUGFyYW1ldGVyPyBcIjpcIiAoIFwiU3RhdGVtZW50XCIgfCBcIkNvbnRleHRcIiApIDxFTkRfT0ZfTElORT4gO1xuIFxuZGVwZW5kZW50VHlwZURlY2xhcmF0aW9uICAgICAgICAgICAgIDo6PSAgIFwiRGVwZW5kZW50VHlwZVwiIHR5cGVOYW1lIHR5cGVQYXJhbWV0ZXIgXCI6XCIgdHlwZU5hbWUgPEVORF9PRl9MSU5FPiA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbmFiYnJldmlhdGlvbkRlY2xhcmF0aW9uICAgICAgICAgICAgICA6Oj0gICBcIkFiYnJldmlhdGlvblwiIGFiYnJldmlhdGlvbiA8RU5EX09GX0xJTkU+IDtcblxudHlwZXNEZWNsYXJhdGlvbiAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiVHlwZXNcIiB0eXBlTmFtZXMgKCBcIjpcIiB0eXBlTmFtZSApPyA8RU5EX09GX0xJTkU+IDtcblxudmFyaWFibGVzRGVjbGFyYXRpb24gICAgICAgICAgICAgICAgIDo6PSAgIFwiVmFyaWFibGVzXCIgdmFyaWFibGVOYW1lICggXCIsXCIgdmFyaWFibGVOYW1lICkrIFwiOlwiIHR5cGVOYW1lIDxFTkRfT0ZfTElORT4gO1xuIFxuY29tYmluYXRvcnNEZWNsYXJhdGlvbiAgICAgICAgICAgICAgIDo6PSAgIFwiQ29tYmluYXRvcnNcIiBleHByZXNzaW9uICggXCIsXCIgZXhwcmVzc2lvbiApKyAoIFwiOlwiIHR5cGVOYW1lICk/IDxFTkRfT0ZfTElORT4gO1xuIFxuY29uc3RydWN0b3JzRGVjbGFyYXRpb24gICAgICAgICAgICAgIDo6PSAgIFwiQ29uc3RydWN0b3JzXCIgdGVybSAoIFwiLFwiIHRlcm0gKSsgKCBcIjpcIiB0eXBlTmFtZSApPyA8RU5EX09GX0xJTkU+IDtcbiBcbmRpc2pvaW50VHlwZXNEZWNsYXJhdGlvbiAgICAgICAgICAgICA6Oj0gICBcIkRpc2pvaW50VHlwZXNcIiB0eXBlTmFtZXMgXCI6XCIgdHlwZU5hbWVzIDxFTkRfT0ZfTElORT4gO1xuIFxubWV0YXZhcmlhYmxlc0RlY2xhcmF0aW9uICAgICAgICAgICAgIDo6PSAgIFwiTWV0YXZhcmlhYmxlc1wiIG1ldGF2YXJpYWJsZU5hbWUgdHlwZVBhcmFtZXRlcj8gKCBcIixcIiBtZXRhdmFyaWFibGVOYW1lIHR5cGVQYXJhbWV0ZXI/ICkrIFwiOlwiICggXCJTdGF0ZW1lbnRcIiB8IFwiQ29udGV4dFwiICkgPEVORF9PRl9MSU5FPiA7XG4gXG5kZXBlbmRlbnRUeXBlc0RlY2xhcmF0aW9uICAgICAgICAgICAgOjo9ICAgXCJEZXBlbmRlbnRUeXBlc1wiIHR5cGVOYW1lIHR5cGVQYXJhbWV0ZXIgKCBcIixcIiB0eXBlTmFtZSB0eXBlUGFyYW1ldGVyICkrIFwiOlwiIHR5cGVOYW1lIDxFTkRfT0ZfTElORT4gO1xuIFxuYWJicmV2aWF0aW9uc0RlY2xhcmF0aW9uICAgICAgICAgICAgIDo6PSAgIFwiQWJicmV2aWF0aW9uc1wiIGFiYnJldmlhdGlvbiAoIFwiLFwiIGFiYnJldmlhdGlvbiApKyA8RU5EX09GX0xJTkU+IDtcbiBcblxuICBcbnByZW1pc2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIlByZW1pc2VcIiA8RU5EX09GX0xJTkU+ICggdW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50IHwgdW5xdWFsaWZpZWROb25zZW5zZSApIDtcblxucHJlbWlzZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiUHJlbWlzZXNcIiA8RU5EX09GX0xJTkU+ICggdW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50IHwgdW5xdWFsaWZpZWROb25zZW5zZSApICggdW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50IHwgdW5xdWFsaWZpZWROb25zZW5zZSApKyA7XG5cbmNvbmNsdXNpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIkNvbmNsdXNpb25cIiA8RU5EX09GX0xJTkU+ICggcXVhbGlmaWVkTWV0YXN0YXRlbWVudCB8IHF1YWxpZmllZE5vbnNlbnNlICkgO1xuXG5cblxubWV0YXByb29mICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiUHJvb2ZcIiA8RU5EX09GX0xJTkU+IFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YXN0YXRlbWVudERlZmluaXRpb24qXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub25zZW5zZURlZmluaXRpb24qXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhUHJvb2ZEZXJpdmF0aW9uPyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICggcXVhbGlmaWVkTWV0YXN0YXRlbWVudCB8IHF1YWxpZmllZE5vbnNlbnNlICkgO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxubWV0YVByb29mRGVyaXZhdGlvbiAgICAgICAgICAgICAgICAgIDo6PSAgICggbWV0YVN1YmxlbW1hIHwgcXVhbGlmaWVkTWV0YXN0YXRlbWVudCB8IHF1YWxpZmllZFN0YXRlbWVudCB8IHF1YWxpZmllZE5vbnNlbnNlICkrICBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiVGhlcmVmb3JlXCIgPEVORF9PRl9MSU5FPiA7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5tZXRhSW5kaWNhdGl2ZUNvbmRpdGlvbmFsICAgICAgICAgICAgOjo9ICAgXCJTdXBwb3NlXCIgPEVORF9PRl9MSU5FPiAoIHVucXVhbGlmaWVkTWV0YXN0YXRlbWVudCB8IHVucXVhbGlmaWVkTm9uc2Vuc2UgKSsgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkhlbmNlXCIgPEVORF9PRl9MSU5FPiAoIHF1YWxpZmllZE1ldGFzdGF0ZW1lbnQgfCBxdWFsaWZpZWROb25zZW5zZSApIDtcblxubWV0YVN1YmxlbW1hICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiU3VwcG9zZVwiIDxFTkRfT0ZfTElORT4gXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIG1ldGFTdWJsZW1tYSB8IHF1YWxpZmllZE1ldGFzdGF0ZW1lbnQgfCBxdWFsaWZpZWRTdGF0ZW1lbnQgfCBxdWFsaWZpZWROb25zZW5zZSApKyBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICggXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiVGhlblwiIDxFTkRfT0ZfTElORT4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCBtZXRhU3VibGVtbWEgfCBxdWFsaWZpZWRNZXRhc3RhdGVtZW50IHwgcXVhbGlmaWVkU3RhdGVtZW50IHwgcXVhbGlmaWVkTm9uc2Vuc2UgKSsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApPyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiSGVuY2VcIiA8RU5EX09GX0xJTkU+ICggcXVhbGlmaWVkTWV0YXN0YXRlbWVudCB8IHF1YWxpZmllZE5vbnNlbnNlICkgO1xuXG5cblxucHJvb2YgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiUHJvb2ZcIiA8RU5EX09GX0xJTkU+IFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGVtZW50RGVmaW5pdGlvbipcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vbnNlbnNlRGVmaW5pdGlvbipcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb29mRGVyaXZhdGlvbj8gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIHF1YWxpZmllZFN0YXRlbWVudCB8IHF1YWxpZmllZE5vbnNlbnNlICkgO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxucHJvb2ZEZXJpdmF0aW9uICAgICAgICAgICAgICAgICAgICAgIDo6PSAgICggc3VibGVtbWEgfCBxdWFsaWZpZWRTdGF0ZW1lbnQgfCBxdWFsaWZpZWROb25zZW5zZSApKyBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiVGhlcmVmb3JlXCIgPEVORF9PRl9MSU5FPiA7XG5cbmluZGljYXRpdmVDb25kaXRpb25hbCAgICAgICAgICAgICAgICA6Oj0gICBcIlN1cHBvc2VcIiA8RU5EX09GX0xJTkU+ICggdW5xdWFsaWZpZWRTdGF0ZW1lbnQgfCB1bnF1YWxpZmllZE5vbnNlbnNlICkrIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJIZW5jZVwiIDxFTkRfT0ZfTElORT4gKCBxdWFsaWZpZWRTdGF0ZW1lbnQgfCBxdWFsaWZpZWROb25zZW5zZSApIDtcblxuc3VibGVtbWEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFwiU3VwcG9zZVwiIDxFTkRfT0ZfTElORT4gXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIHN1YkxlbW1hIHwgcXVhbGlmaWVkU3RhdGVtZW50IHwgcXVhbGlmaWVkTm9uc2Vuc2UgKSsgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlRoZW5cIiA8RU5EX09GX0xJTkU+IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICggc3ViTGVtbWEgfCBxdWFsaWZpZWRTdGF0ZW1lbnQgfCBxdWFsaWZpZWROb25zZW5zZSApKyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk/IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJIZW5jZVwiIDxFTkRfT0ZfTElORT4gKCBxdWFsaWZpZWRTdGF0ZW1lbnQgfCBxdWFsaWZpZWROb25zZW5zZSApIDtcblxuXG5cbm1ldGFzdGF0ZW1lbnREZWZpbml0aW9uICAgICAgICAgICAgICA6Oj0gICBcIkxldFwiIHVucXVhbGlmaWVkTWV0YXN0YXRlbWVudCA7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5zdGF0ZW1lbnREZWZpbml0aW9uICAgICAgICAgICAgICAgICAgOjo9ICAgXCJMZXRcIiB1bnF1YWxpZmllZFN0YXRlbWVudCA7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5ub25zZW5zZURlZmluaXRpb24gICAgICAgICAgICAgICAgICAgOjo9ICAgXCJMZXRcIiB1bnF1YWxpZmllZE5vbnNlbnNlIDsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG51bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnQgICAgICAgICAgICAgOjo9ICAgbWV0YXN0YXRlbWVudCEgPEVORF9PRl9MSU5FPiA7XG5cbnVucXVhbGlmaWVkU3RhdGVtZW50ICAgICAgICAgICAgICAgICA6Oj0gICBzdGF0ZW1lbnQhIDxFTkRfT0ZfTElORT4gO1xuXG51bnF1YWxpZmllZE5vbnNlbnNlICAgICAgICAgICAgICAgICAgOjo9ICAgbm9uc2Vuc2UhIDxFTkRfT0ZfTElORT4gO1xuXG5cblxucXVhbGlmaWVkTWV0YXN0YXRlbWVudCAgICAgICAgICAgICAgIDo6PSAgIG1ldGFzdGF0ZW1lbnQhIHF1YWxpZmljYXRpb24/IDxFTkRfT0ZfTElORT4gO1xuXG5xdWFsaWZpZWRTdGF0ZW1lbnQgICAgICAgICAgICAgICAgICAgOjo9ICAgc3RhdGVtZW50ISBxdWFsaWZpY2F0aW9uPyA8RU5EX09GX0xJTkU+IDtcblxucXVhbGlmaWVkTm9uc2Vuc2UgICAgICAgICAgICAgICAgICAgIDo6PSAgIG5vbnNlbnNlISBxdWFsaWZpY2F0aW9uPyA8RU5EX09GX0xJTkU+IDtcblxuXG5cbm5vbnNlbnNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICAoIFtuYW1lXSB8IFtjdXN0b21dIHwgW3NwZWNpYWxdIHwgW3Jlc2VydmVkXSB8IFt1bmFzc2lnbmVkXSApKyA7XG5cblxuXG5xdWFsaWZpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgKCBcImJ5XCIgfCBcImZyb21cIiApIHJlZmVyZW5jZSA7XG5cblxuXG50eXBlUGFyYW1ldGVyICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgKCA8Tk9fV0hJVEVTUEFDRT5cIihcIiB0eXBlTmFtZSBcIilcIiApIDtcblxuXG5cbmFiYnJldmlhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBbY3VzdG9tXSBcImZvclwiIFtjdXN0b21dIHwgbmFtZSBcImZvclwiIG5hbWUgO1xuXG5cblxubWV0YXZhcmlhYmxlICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIG1ldGF2YXJpYWJsZU5hbWUgKCA8Tk9fV0hJVEVTUEFDRT5cIihcIiB0ZXJtIFwiKVwiICk/IDtcblxucmVmZXJlbmNlICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIHJlZmVyZW5jZU5hbWUgKCA8Tk9fV0hJVEVTUEFDRT5cIihcIiB0ZXJtIFwiKVwiICk/IDtcblxuY29udGV4dCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIGNvbnRleHROYW1lICggPE5PX1dISVRFU1BBQ0U+XCIoXCIgdGVybSBcIilcIiApPyA7XG5cbmxhYmVsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBsYWJlbE5hbWUgKCA8Tk9fV0hJVEVTUEFDRT5cIihcIiB0ZXJtIFwiKVwiICk/IDtcblxuXG5cbnR5cGVOYW1lcyAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICB0eXBlTmFtZSAoIFwiLFwiIHR5cGVOYW1lICkqIDtcblxubGFiZWxzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIGxhYmVsICggXCIsXCIgbGFiZWwgKSogO1xuXG5cblxubWV0YXZhcmlhYmxlTmFtZSAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFtuYW1lXSA7XG5cbnJlZmVyZW5jZU5hbWUgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBbbmFtZV0gO1xuXG52YXJpYWJsZU5hbWUgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgW25hbWVdIDtcblxuY29udGV4dE5hbWUgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFtuYW1lXSA7XG5cbmxhYmVsTmFtZSAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBbbmFtZV0gO1xuXG50eXBlTmFtZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgW25hbWVdIDtcblxubmFtZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6PSAgIFtuYW1lXSA7YDtcblxuZXhwb3J0IGRlZmF1bHQgYm5mO1xuIiwgIlwidXNlIHN0cmljdFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGxleGljYWxQYXR0ZXJuID0gXCJcIjtcclxuXHJcbmV4cG9ydCBjb25zdCB0ZXJtQk5GID0gYHRlcm0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBuYW1lIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYDtcclxuXHJcbmV4cG9ydCBjb25zdCBleHByZXNzaW9uQk5GID0gYGV4cHJlc3Npb24gICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIihcIiBleHByZXNzaW9uIFwiKVwiXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgdGVybSBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGA7XHJcblxyXG5leHBvcnQgY29uc3Qgc3RhdGVtZW50Qk5GID0gYHN0YXRlbWVudCAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIihcIiBzdGF0ZW1lbnQgXCIpXCJcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBleHByZXNzaW9uIFwiPVwiIGV4cHJlc3Npb25cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIGV4cHJlc3Npb25cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGA7XHJcblxyXG5leHBvcnQgY29uc3QgbWV0YXN0YXRlbWVudEJORiA9IGBtZXRhc3RhdGVtZW50ICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgXCIoXCIgbWV0YXN0YXRlbWVudCBcIilcIlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIGNvbnRleHREZWZpbml0aW9uIFxyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgcHJvb2ZBc3NlcnRpb25cclxuICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgdHlwZUFzc2VydGlvbiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIG1ldGF2YXJpYWJsZSBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICBzdWJwcm9vZiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XHJcblxyXG5jb250ZXh0RGVmaW5pdGlvbiAgICAgICAgICAgICAgICAgICAgOjo9ICAgY29udGV4dCBcIj1cIiAoIGp1ZGdlbWVudCB8IGNvbnRleHQgKSAoIFwiLFwiICgganVkZ2VtZW50IHwgY29udGV4dCApICkqIDtcclxuXHJcbnByb29mQXNzZXJ0aW9uICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBjb250ZXh0IFwifC1cIiBqdWRnZW1lbnQgO1xyXG4gXHJcbnR5cGVBc3NlcnRpb24gICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICAoIHR5cGUgfCBleHByZXNzaW9uICkgXCI6XCIgdHlwZU5hbWUgXHJcblxyXG5qdWRnZW1lbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjo9ICAgcmVmZXJlbmNlIFwiOjpcIiBtZXRhc3RhdGVtZW50IDtcclxuXHJcbnN1YnByb29mICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Oj0gICBcIltcIiBtZXRhc3RhdGVtZW50IFwiXVwiIFwiLi4uXCIgbWV0YXN0YXRlbWVudCA7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIGxleGljYWxQYXR0ZXJuLFxyXG4gIHRlcm1CTkYsXHJcbiAgZXhwcmVzc2lvbkJORixcclxuICBzdGF0ZW1lbnRCTkYsXHJcbiAgbWV0YXN0YXRlbWVudEJORlxyXG59O1xyXG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IENvbW1vblBhcnNlciB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5cbmltcG9ydCBibmYgZnJvbSBcIi4vYm5mXCI7XG5cbmltcG9ydCB7IHRlcm1CTkYsIGV4cHJlc3Npb25CTkYsIHN0YXRlbWVudEJORiwgbWV0YXN0YXRlbWVudEJORiB9IGZyb20gXCIuL2RlZmF1bHRDdXN0b21HcmFtbWFyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZsb3JlbmNlUGFyc2VyIGV4dGVuZHMgQ29tbW9uUGFyc2VyIHtcbiAgc3RhdGljIGJuZiA9IGJuZjtcblxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7IHJldHVybiBDb21tb25QYXJzZXIuZnJvbU5vdGhpbmcoRmxvcmVuY2VQYXJzZXIpOyB9XG5cbiAgc3RhdGljIGZyb21CTkYoYm5mKSB7XG4gICAgYm5mID0gYFxuICAgIFxuICAgICAgJHtibmZ9XG4gICAgICBcbiAgICAgICR7dGVybUJORn1cbiAgICAgIFxuICAgICAgJHtleHByZXNzaW9uQk5GfVxuICAgICAgXG4gICAgICAke3N0YXRlbWVudEJORn1cbiAgICAgIFxuICAgICAgJHttZXRhc3RhdGVtZW50Qk5GfVxuICAgICAgXG4gICAgYDsgLy8vXG5cbiAgICByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21CTkYoRmxvcmVuY2VQYXJzZXIsIGJuZik7XG4gIH1cblxuICBzdGF0aWMgZnJvbVJ1bGVzKHJ1bGVzKSB7IHJldHVybiBDb21tb25QYXJzZXIuZnJvbVJ1bGVzKEZsb3JlbmNlUGFyc2VyLCBydWxlcyk7IH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQk5GTGV4ZXIgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1c3RvbUdyYW1tYXJCTkZMZXhlciBleHRlbmRzIEJORkxleGVyIHt9XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEJORlBhcnNlciB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1c3RvbUdyYW1tYXJCTkZQYXJzZXIgZXh0ZW5kcyBCTkZQYXJzZXIge31cbiIsICJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmNvbnN0IGVudHJpZXMgPSBbXHJcbiAge1xyXG4gICAgXCJ1bmFzc2lnbmVkXCI6IFwiXi5cIlxyXG4gIH1cclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGVudHJpZXM7XHJcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ29tbW9uTGV4ZXIsIFdoaXRlc3BhY2VUb2tlbiwgRW5kT2ZMaW5lU2lnbmlmaWNhbnRUb2tlbiB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcblxuaW1wb3J0IGVudHJpZXMgZnJvbSBcIi4vZW50cmllc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5MZXhlciBleHRlbmRzIENvbW1vbkxleGVyIHtcbiAgc3RhdGljIGVudHJpZXMgPSBlbnRyaWVzO1xuXG4gIHN0YXRpYyBFbmRPZkxpbmVUb2tlbiA9IEVuZE9mTGluZVNpZ25pZmljYW50VG9rZW47IC8vL1xuXG4gIHN0YXRpYyBXaGl0ZXNwYWNlVG9rZW4gPSBXaGl0ZXNwYWNlVG9rZW47XG5cbiAgc3RhdGljIEVuZE9mTGluZUNvbW1lbnRUb2tlbiA9IG51bGw7XG5cbiAgc3RhdGljIFNpbmdsZUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xuXG4gIHN0YXRpYyBSZWd1bGFyRXhwcmVzc2lvblRva2VuID0gbnVsbDtcblxuICBzdGF0aWMgRW5kT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xuXG4gIHN0YXRpYyBTdGFydE9mTXVsdGlMaW5lQ29tbWVudFRva2VuID0gbnVsbDtcblxuICBzdGF0aWMgTWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VG9rZW4gPSBudWxsO1xuXG4gIHN0YXRpYyBTaW5nbHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBudWxsO1xuXG4gIHN0YXRpYyBEb3VibHlRdW90ZWRTdHJpbmdMaXRlcmFsVG9rZW4gPSBudWxsO1xuXG4gIHN0YXRpYyBmcm9tTm90aGluZygpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21Ob3RoaW5nKEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkxleGVyKTsgfVxuXG4gIHN0YXRpYyBmcm9tUnVsZXMocnVsZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21SdWxlcyhDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5MZXhlciwgcnVsZXMpOyB9XG5cbiAgc3RhdGljIGZyb21FbnRyaWVzKGVudHJpZXMpIHsgcmV0dXJuIENvbW1vbkxleGVyLmZyb21FbnRyaWVzKEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkxleGVyLCBlbnRyaWVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBibmYgPSBgXG5cblxuICAgIGRvY3VtZW50ICAgICAgIDo6PSAgbGV4aWNhbFBhdHRlcm4gKCB2ZXJ0aWNhbFNwYWNlIHwgZXJyb3IgKSogfCAoIHZlcnRpY2FsU3BhY2UgfCBlcnJvciApKyA7XG5cblxuICAgIGxleGljYWxQYXR0ZXJuIDo6PSAgW3VuYXNzaWduZWRdKyA7XG5cblxuICAgIHZlcnRpY2FsU3BhY2UgIDo6PSAgPEVORF9PRl9MSU5FPisgO1xuXG5cbiAgICBlcnJvciAgICAgICAgICA6Oj0gIC4gO1xuXG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ29tbW9uUGFyc2VyIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcblxuaW1wb3J0IGJuZiBmcm9tIFwiLi9ibmZcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuUGFyc2VyIGV4dGVuZHMgQ29tbW9uUGFyc2VyIHtcbiAgc3RhdGljIGJuZiA9IGJuZjtcblxuICBzdGF0aWMgZnJvbU5vdGhpbmcoKSB7IHJldHVybiBDb21tb25QYXJzZXIuZnJvbU5vdGhpbmcoQ3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuUGFyc2VyKTsgfVxuXG4gIHN0YXRpYyBmcm9tQk5GKGJuZikgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21CTkYoQ3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuUGFyc2VyLCBibmYpOyB9XG5cbiAgc3RhdGljIGZyb21SdWxlcyhydWxlcykgeyByZXR1cm4gQ29tbW9uUGFyc2VyLmZyb21SdWxlcyhDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm5QYXJzZXIsIHJ1bGVzKTsgfVxufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIFRlWExleGVyIH0gZnJvbSBcIi4vdGVYL2xleGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFRlWFBhcnNlciB9IGZyb20gXCIuL3RlWC9wYXJzZXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUGxhaW5MZXhlciB9IGZyb20gXCIuL3BsYWluL2xleGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFBsYWluUGFyc2VyIH0gZnJvbSBcIi4vcGxhaW4vcGFyc2VyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFJlYWRtZUxleGVyIH0gZnJvbSBcIi4vcmVhZG1lL2xleGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFJlYWRtZVBhcnNlciB9IGZyb20gXCIuL3JlYWRtZS9wYXJzZXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTWV0YUpTT05MZXhlciB9IGZyb20gXCIuL21ldGFKU09OL2xleGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE1ldGFKU09OUGFyc2VyIH0gZnJvbSBcIi4vbWV0YUpTT04vcGFyc2VyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEZsb3JlbmNlTGV4ZXIgfSBmcm9tIFwiLi9mbG9yZW5jZS9sZXhlclwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBGbG9yZW5jZVBhcnNlciB9IGZyb20gXCIuL2Zsb3JlbmNlL3BhcnNlclwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBkZWZhdWx0Q3VzdG9tR3JhbW1hciB9IGZyb20gXCIuL2Zsb3JlbmNlL2RlZmF1bHRDdXN0b21HcmFtbWFyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEN1c3RvbUdyYW1tYXJCTkZMZXhlciB9IGZyb20gXCIuL2N1c3RvbUdyYW1tYXJCTkYvbGV4ZXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ3VzdG9tR3JhbW1hckJORlBhcnNlciB9IGZyb20gXCIuL2N1c3RvbUdyYW1tYXJCTkYvcGFyc2VyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybkxleGVyIH0gZnJvbSBcIi4vY3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuL2xleGVyXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVyblBhcnNlciB9IGZyb20gXCIuL2N1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybi9wYXJzZXJcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUnVsZSB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcbmltcG9ydCB7IEZsb3JlbmNlTGV4ZXIgfSBmcm9tIFwib2NjYW0tZ3JhbW1hcnNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZsb3JlbmNlTGV4ZXJGcm9tQ29tYmluZWRDdXN0b21HcmFtbWFyKGNvbWJpbmVkQ3VzdG9tR3JhbW1hcikge1xuICBjb25zdCB7IGVudHJpZXMgfSA9IEZsb3JlbmNlTGV4ZXIsXG4gICAgICAgIGZsb3JlbmNlTGV4ZXIgPSBmbG9yZW5jZUxleGVyRnJvbUVudHJpZXNBbmRDb21iaW5lZEN1c3RvbUdyYW1tYXIoZW50cmllcywgY29tYmluZWRDdXN0b21HcmFtbWFyKTtcblxuICByZXR1cm4gZmxvcmVuY2VMZXhlcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZsb3JlbmNlTGV4ZXJGcm9tRW50cmllc0FuZENvbWJpbmVkQ3VzdG9tR3JhbW1hcihlbnRyaWVzLCBjb21iaW5lZEN1c3RvbUdyYW1tYXIpIHtcbiAgY29uc3QgY29tYmluZWRDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm4gPSBjb21iaW5lZEN1c3RvbUdyYW1tYXIuZ2V0TGV4aWNhbFBhdHRlcm4oKSxcbiAgICAgICAgY3VzdG9tID0gY29tYmluZWRDdXN0b21HcmFtbWFyTGV4aWNhbFBhdHRlcm4sIC8vL1xuICAgICAgICBjdXN0b21HcmFtbWFyRW50cnkgPSB7XG4gICAgICAgICAgY3VzdG9tXG4gICAgICAgIH0sXG4gICAgICAgIGN1c3RvbUdyYW1tYXJSdWxlID0gIFJ1bGUuZnJvbUVudHJ5KGN1c3RvbUdyYW1tYXJFbnRyeSksXG4gICAgICAgIHJ1bGVzID0gZW50cmllcy5tYXAoKGVudHJ5KSA9PiBSdWxlLmZyb21FbnRyeShlbnRyeSkpO1xuXG4gIHJ1bGVzLnVuc2hpZnQoY3VzdG9tR3JhbW1hclJ1bGUpO1xuXG4gIGNvbnN0IGZsb3JlbmNlTGV4ZXIgPSBGbG9yZW5jZUxleGVyLmZyb21SdWxlcyhydWxlcyk7XG5cbiAgcmV0dXJuIGZsb3JlbmNlTGV4ZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZmxvcmVuY2VMZXhlckZyb21Db21iaW5lZEN1c3RvbUdyYW1tYXIsXG4gIGZsb3JlbmNlTGV4ZXJGcm9tRW50cmllc0FuZENvbWJpbmVkQ3VzdG9tR3JhbW1hclxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQk5GTGV4ZXIgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5pbXBvcnQgeyBCTkZQYXJzZXIgfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuaW1wb3J0IHsgRmxvcmVuY2VQYXJzZXIgfSBmcm9tIFwib2NjYW0tZ3JhbW1hcnNcIjtcbmltcG9ydCB7IGFycmF5VXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5jb25zdCB7IHB1c2ggfSA9IGFycmF5VXRpbGl0aWVzO1xuXG5leHBvcnQgZnVuY3Rpb24gZmxvcmVuY2VQYXJzZXJGcm9tQ29tYmluZWRDdXN0b21HcmFtbWFyKGNvbWJpbmVkQ3VzdG9tR3JhbW1hcikge1xuICBjb25zdCB7IGJuZiB9ID0gRmxvcmVuY2VQYXJzZXIsXG4gICAgICAgIGZsb3JlbmNlUGFyc2VyID0gZmxvcmVuY2VQYXJzZXJGcm9tQk5GQW5kQ29tYmluZWRDdXN0b21HcmFtbWFyKGJuZiwgY29tYmluZWRDdXN0b21HcmFtbWFyKTtcblxuICByZXR1cm4gZmxvcmVuY2VQYXJzZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmbG9yZW5jZVBhcnNlckZyb21CTkZBbmRDb21iaW5lZEN1c3RvbUdyYW1tYXIoYm5mLCBjb21iaW5lZEN1c3RvbUdyYW1tYXIpIHtcbiAgY29uc3QgY29tYmluZWRDdXN0b21HcmFtbWFyUnVsZU1hcCA9IGNvbWJpbmVkQ3VzdG9tR3JhbW1hci5nZXRSdWxlTWFwKCksXG4gICAgICAgIGJuZkxleGVyID0gQk5GTGV4ZXIuZnJvbU5vdGhpbmcoKSxcbiAgICAgICAgYm5mUGFyc2VyID0gQk5GUGFyc2VyLmZyb21Ob3RoaW5nKCksXG4gICAgICAgIHRva2VucyA9IGJuZkxleGVyLnRva2Vuc0Zyb21CTkYoYm5mKSxcbiAgICAgICAgcnVsZXMgPSBibmZQYXJzZXIucnVsZXNGcm9tVG9rZW5zKHRva2VucyksXG4gICAgICAgIGNvbWJpbmVkQ3VzdG9tR3JhbW1hclJ1bGVzID0gT2JqZWN0LnZhbHVlcyhjb21iaW5lZEN1c3RvbUdyYW1tYXJSdWxlTWFwKTtcblxuICBwdXNoKHJ1bGVzLCBjb21iaW5lZEN1c3RvbUdyYW1tYXJSdWxlcyk7XG5cbiAgY29uc3QgZmxvcmVuY2VQYXJzZXIgPSBGbG9yZW5jZVBhcnNlci5mcm9tUnVsZXMocnVsZXMpO1xuXG4gIHJldHVybiBmbG9yZW5jZVBhcnNlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBmbG9yZW5jZVBhcnNlckZyb21Db21iaW5lZEN1c3RvbUdyYW1tYXIsXG4gIGZsb3JlbmNlUGFyc2VyRnJvbUJORkFuZENvbWJpbmVkQ3VzdG9tR3JhbW1hclxufTtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgZGVmYXVsdEN1c3RvbUdyYW1tYXIgfSBmcm9tIFwib2NjYW0tZ3JhbW1hcnNcIjtcblxuaW1wb3J0IEN1c3RvbUdyYW1tYXIgZnJvbSBcIi4vY3VzdG9tR3JhbW1hclwiO1xuXG5pbXBvcnQgeyBERUZBVUxUX0NVU1RPTV9HUkFNTUFSX05BTUUgfSBmcm9tIFwiLi9ncmFtbWFyTmFtZXNcIjtcblxuY29uc3QgeyBsZXhpY2FsUGF0dGVybiwgdGVybUJORiwgZXhwcmVzc2lvbkJORiwgc3RhdGVtZW50Qk5GLCBtZXRhc3RhdGVtZW50Qk5GIH0gPSBkZWZhdWx0Q3VzdG9tR3JhbW1hcjtcblxuY29uc3QgbmFtZSA9IERFRkFVTFRfQ1VTVE9NX0dSQU1NQVJfTkFNRSxcbiAgICAgIGpzb24gPSB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGxleGljYWxQYXR0ZXJuLFxuICAgICAgICB0ZXJtQk5GLFxuICAgICAgICBleHByZXNzaW9uQk5GLFxuICAgICAgICBzdGF0ZW1lbnRCTkYsXG4gICAgICAgIG1ldGFzdGF0ZW1lbnRCTkZcbiAgICAgIH07XG5cbmV4cG9ydCBkZWZhdWx0IEN1c3RvbUdyYW1tYXIuZnJvbUpTT04oanNvbik7ICAvLy9cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRSdWxlQnlSdWxlTmFtZShydWxlTmFtZSwgcnVsZXMpIHtcbiAgY29uc3QgbmFtZSA9IHJ1bGVOYW1lLCAgLy8vXG4gICAgICAgIHJ1bGUgPSBydWxlcy5maW5kKChydWxlKSA9PiB7XG4gICAgICAgICAgY29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKTtcblxuICAgICAgICAgIGlmIChydWxlTmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9KSB8fCBudWxsOyAvLy9cblxuICByZXR1cm4gcnVsZTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQk5GTGV4ZXIgfSBmcm9tIFwib2NjYW0tbGV4ZXJzXCI7XG5pbXBvcnQgeyBCTkZQYXJzZXIsIFJ1bGUgfSBmcm9tIFwib2NjYW0tcGFyc2Vyc1wiO1xuXG5pbXBvcnQgeyBFTVBUWV9TVFJJTkcgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5cbmNvbnN0IGJuZkxleGVyID0gQk5GTGV4ZXIuZnJvbU5vdGhpbmcoKSxcbiAgICAgIGJuZlBhcnNlciA9IEJORlBhcnNlci5mcm9tTm90aGluZygpO1xuXG5leHBvcnQgZnVuY3Rpb24gcnVsZXNGcm9tQk5GKGJuZikge1xuICBsZXQgcnVsZXMgPSBbXTtcblxuICBjb25zdCB0b2tlbnMgPSBibmZMZXhlci50b2tlbnNGcm9tQk5GKGJuZiksXG4gICAgICAgIG5vZGUgPSBibmZQYXJzZXIucGFyc2UodG9rZW5zKTtcblxuICBpZiAobm9kZSAhPT0gbnVsbCkge1xuICAgIHJ1bGVzID0gbm9kZS5nZW5lcmF0ZVJ1bGVzKFJ1bGUpO1xuICB9XG5cbiAgcmV0dXJuIHJ1bGVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVsZXNBc1N0cmluZyhydWxlcywgbXVsdGlMaW5lKSB7XG4gIGNvbnN0IG1heGltdW1SdWxlTmFtZUxlbmd0aCA9IHJ1bGVzLnJlZHVjZSgobWF4aW11bVJ1bGVOYW1lTGVuZ3RoLCBydWxlKSA9PiB7XG4gICAgICAgICAgY29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKSxcbiAgICAgICAgICAgICAgICBydWxlTmFtZUxlbmd0aCA9IHJ1bGVOYW1lLmxlbmd0aDtcblxuICAgICAgICAgIG1heGltdW1SdWxlTmFtZUxlbmd0aCA9IE1hdGgubWF4KG1heGltdW1SdWxlTmFtZUxlbmd0aCwgcnVsZU5hbWVMZW5ndGgpO1xuXG4gICAgICAgICAgcmV0dXJuIG1heGltdW1SdWxlTmFtZUxlbmd0aDtcbiAgICAgICAgfSwgMCksXG4gICAgICAgIHJ1bGVzU3RyaW5nID0gcnVsZXMucmVkdWNlKChydWxlc1N0cmluZywgcnVsZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHJ1bGVTdHJpbmcgPSBydWxlLmFzU3RyaW5nKG1heGltdW1SdWxlTmFtZUxlbmd0aCwgbXVsdGlMaW5lKTtcblxuICAgICAgICAgIHJ1bGVzU3RyaW5nICs9IHJ1bGVTdHJpbmc7XG5cbiAgICAgICAgICByZXR1cm4gcnVsZXNTdHJpbmc7XG4gICAgICAgIH0sIEVNUFRZX1NUUklORykucmVwbGFjZSgvXlxcblxcbi8sIEVNUFRZX1NUUklORyk7XG5cbiAgcmV0dXJuIHJ1bGVzU3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVsZU1hcEZyb21SdWxlcyhydWxlcykge1xuICBjb25zdCBydWxlTWFwID0gcnVsZXMucmVkdWNlKChydWxlTWFwLCBydWxlKSA9PiB7XG4gICAgY29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKTtcblxuICAgIHJ1bGVNYXBbcnVsZU5hbWVdID0gcnVsZTtcblxuICAgIHJldHVybiBydWxlTWFwO1xuICB9LCB7fSk7XG5cbiAgcmV0dXJuIHJ1bGVNYXA7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBsZXhpY2FsUGF0dGVybnNGcm9tQ3VzdG9tR3JhbW1hcnMoY3VzdG9tR3JhbW1hcnMpIHtcbiAgY29uc3QgbGV4aWNhbFBhdHRlcm5zID0gW107XG5cbiAgY3VzdG9tR3JhbW1hcnMuZm9yRWFjaCgoY3VzdG9tR3JhbW1hcikgPT4ge1xuICAgIGNvbnN0IGxleGljYWxQYXR0ZXJuID0gY3VzdG9tR3JhbW1hci5nZXRMZXhpY2FsUGF0dGVybigpO1xuXG4gICAgaWYgKGxleGljYWxQYXR0ZXJuKSB7IC8vL1xuICAgICAgbGV4aWNhbFBhdHRlcm5zLnB1c2gobGV4aWNhbFBhdHRlcm4pO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGxleGljYWxQYXR0ZXJucztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJuZnNGcm9tUnVsZU5hbWVBbmRDdXN0b21HcmFtbWFycyhydWxlTmFtZSwgY3VzdG9tR3JhbW1hcnMpIHtcbiAgY29uc3QgYm5mcyA9IFtdO1xuXG4gIGN1c3RvbUdyYW1tYXJzLmZvckVhY2goKGN1c3RvbUdyYW1tYXIpID0+IHtcbiAgICBjb25zdCBibmYgPSBjdXN0b21HcmFtbWFyLmdldEJORihydWxlTmFtZSk7XG5cbiAgICBpZiAoYm5mKSB7ICAvLy9cbiAgICAgIGJuZnMucHVzaChibmYpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGJuZnM7XG59XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFRFUk0sIFNUQVRFTUVOVCwgRVhQUkVTU0lPTiwgTUVUQVNUQVRFTUVOVCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgY29uc3QgVEVSTV9SVUxFX05BTUUgPSBURVJNO1xuZXhwb3J0IGNvbnN0IFNUQVJUX1JVTEVfTkFNRSA9IFwic3RhcnRcIjtcbmV4cG9ydCBjb25zdCBTVEFURU1FTlRfUlVMRV9OQU1FID0gU1RBVEVNRU5UO1xuZXhwb3J0IGNvbnN0IEVYUFJFU1NJT05fUlVMRV9OQU1FID0gRVhQUkVTU0lPTjtcbmV4cG9ydCBjb25zdCBNRVRBU1RBVEVNRU5UX1JVTEVfTkFNRSA9IE1FVEFTVEFURU1FTlQ7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGFycmF5VXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuaW1wb3J0IHsgZWxpbWluYXRlTGVmdFJlY3Vyc2lvbiB9IGZyb20gXCJvY2NhbS1ncmFtbWFyLXV0aWxpdGllc1wiO1xuXG5pbXBvcnQgZGVmYXVsdEN1c3RvbUdyYW1tYXIgZnJvbSBcIi4vZGVmYXVsdEN1c3RvbUdyYW1tYXJcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBmaW5kUnVsZUJ5UnVsZU5hbWUgfSBmcm9tIFwiLi91dGlsaXRpZXMvcnVsZU5hbWVcIjtcbmltcG9ydCB7IHJ1bGVzRnJvbUJORiwgcnVsZU1hcEZyb21SdWxlcyB9IGZyb20gXCIuL3V0aWxpdGllcy9ydWxlc1wiO1xuaW1wb3J0IHsgbGV4aWNhbFBhdHRlcm5zRnJvbUN1c3RvbUdyYW1tYXJzLCBibmZzRnJvbVJ1bGVOYW1lQW5kQ3VzdG9tR3JhbW1hcnMgfSBmcm9tIFwiLi91dGlsaXRpZXMvY3VzdG9tR3JhbW1hcnNcIjtcbmltcG9ydCB7IFNUQVJUX1JVTEVfTkFNRSwgVEVSTV9SVUxFX05BTUUsIEVYUFJFU1NJT05fUlVMRV9OQU1FLCBTVEFURU1FTlRfUlVMRV9OQU1FLCBNRVRBU1RBVEVNRU5UX1JVTEVfTkFNRSB9IGZyb20gXCIuL3J1bGVOYW1lc1wiO1xuXG5jb25zdCB7IGZpcnN0LCBmaWx0ZXIsIHVuc2hpZnQgfSA9IGFycmF5VXRpbGl0aWVzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21iaW5lZEN1c3RvbUdyYW1tYXIge1xuICBjb25zdHJ1Y3RvcihsZXhpY2FsUGF0dGVybiwgcnVsZU1hcCkge1xuICAgIHRoaXMubGV4aWNhbFBhdHRlcm4gPSBsZXhpY2FsUGF0dGVybjtcbiAgICB0aGlzLnJ1bGVNYXAgPSBydWxlTWFwO1xuICB9XG4gIFxuICBnZXRMZXhpY2FsUGF0dGVybigpIHtcbiAgICByZXR1cm4gdGhpcy5sZXhpY2FsUGF0dGVybjtcbiAgfVxuXG4gIGdldFJ1bGVNYXAoKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZU1hcDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tQ3VzdG9tR3JhbW1hcnMoY3VzdG9tR3JhbW1hcnMpIHtcbiAgICBjb25zdCBtZXRhc3RhdGVtZW50UnVsZXMgPSBtZXRhc3RhdGVtZW50UnVsZXNGcm9tQ3VzdG9tR3JhbW1hcnNBbmREZWZhdWx0Qk5GKGN1c3RvbUdyYW1tYXJzKSxcbiAgICAgICAgICBzdGF0ZW1lbnRSdWxlcyA9IHN0YXRlbWVudFJ1bGVzRnJvbUN1c3RvbUdyYW1tYXJzQW5kRGVmYXVsdEJORihjdXN0b21HcmFtbWFycyksXG4gICAgICAgICAgZXhwcmVzc2lvblJ1bGVzID0gZXhwcmVzc2lvblJ1bGVzRnJvbUN1c3RvbUdyYW1tYXJzQW5kRGVmYXVsdEJORihjdXN0b21HcmFtbWFycyksXG4gICAgICAgICAgdGVybVJ1bGVzID0gdGVybVJ1bGVzRnJvbUN1c3RvbUdyYW1tYXJzQW5kRGVmYXVsdEJORihjdXN0b21HcmFtbWFycyksXG4gICAgICAgICAgcnVsZXMgPSBbXS5jb25jYXQobWV0YXN0YXRlbWVudFJ1bGVzKS5jb25jYXQoc3RhdGVtZW50UnVsZXMpLmNvbmNhdChleHByZXNzaW9uUnVsZXMpLmNvbmNhdCh0ZXJtUnVsZXMpLFxuICAgICAgICAgIHN0YXJ0UnVsZSA9IHN0YXJ0UnVsZUZyb21Ob3RoaW5nKCksXG4gICAgICAgICAgbGV4aWNhbFBhdHRlcm4gPSBsZXhpY2FsUGF0dGVybkZyb21DdXN0b21HcmFtbWFycyhjdXN0b21HcmFtbWFycyksXG4gICAgICAgICAgcnVsZU1hcCA9IHJ1bGVNYXBGcm9tUnVsZXMocnVsZXMpO1xuXG4gICAgcnVsZU1hcFtTVEFSVF9SVUxFX05BTUVdID0gc3RhcnRSdWxlO1xuXG4gICAgZWxpbWluYXRlTGVmdFJlY3Vyc2lvbihzdGFydFJ1bGUsIHJ1bGVNYXApO1xuXG4gICAgZGVsZXRlIHJ1bGVNYXBbU1RBUlRfUlVMRV9OQU1FXTtcblxuICAgIGNvbnN0IGNvbWJpbmVkQ3VzdG9tR3JhbW1hciA9IG5ldyBDb21iaW5lZEN1c3RvbUdyYW1tYXIobGV4aWNhbFBhdHRlcm4sIHJ1bGVNYXApO1xuICAgIFxuICAgIHJldHVybiBjb21iaW5lZEN1c3RvbUdyYW1tYXI7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWV0YXN0YXRlbWVudFJ1bGVzRnJvbUN1c3RvbUdyYW1tYXJzQW5kRGVmYXVsdEJORihjdXN0b21HcmFtbWFycykge1xuICBjb25zdCBtZXRhc3RhdGVtZW50UnVsZU5hbWUgPSBNRVRBU1RBVEVNRU5UX1JVTEVfTkFNRSwgIC8vL1xuICAgICAgICBtZXRhc3RhdGVtZW50UnVsZXMgPSBydWxlc0Zyb21SdWxlTmFtZUN1c3RvbUdyYW1tYXJzQW5kRGVmYXVsdEJORihtZXRhc3RhdGVtZW50UnVsZU5hbWUsIGN1c3RvbUdyYW1tYXJzKTtcblxuICByZXR1cm4gbWV0YXN0YXRlbWVudFJ1bGVzO1xufVxuXG5mdW5jdGlvbiBzdGF0ZW1lbnRSdWxlc0Zyb21DdXN0b21HcmFtbWFyc0FuZERlZmF1bHRCTkYoY3VzdG9tR3JhbW1hcnMpIHtcbiAgY29uc3Qgc3RhdGVtZW50UnVsZU5hbWUgPSBTVEFURU1FTlRfUlVMRV9OQU1FLCAgLy8vXG4gICAgICAgIHN0YXRlbWVudFJ1bGVzID0gcnVsZXNGcm9tUnVsZU5hbWVDdXN0b21HcmFtbWFyc0FuZERlZmF1bHRCTkYoc3RhdGVtZW50UnVsZU5hbWUsIGN1c3RvbUdyYW1tYXJzKTtcblxuICByZXR1cm4gc3RhdGVtZW50UnVsZXM7XG59XG5cbmZ1bmN0aW9uIGV4cHJlc3Npb25SdWxlc0Zyb21DdXN0b21HcmFtbWFyc0FuZERlZmF1bHRCTkYoY3VzdG9tR3JhbW1hcnMpIHtcbiAgY29uc3QgZXhwcmVzc2lvblJ1bGVOYW1lID0gRVhQUkVTU0lPTl9SVUxFX05BTUUsICAvLy9cbiAgICAgICAgZXhwcmVzc2lvblJ1bGVzID0gcnVsZXNGcm9tUnVsZU5hbWVDdXN0b21HcmFtbWFyc0FuZERlZmF1bHRCTkYoZXhwcmVzc2lvblJ1bGVOYW1lLCBjdXN0b21HcmFtbWFycyk7XG5cbiAgcmV0dXJuIGV4cHJlc3Npb25SdWxlcztcbn1cblxuZnVuY3Rpb24gdGVybVJ1bGVzRnJvbUN1c3RvbUdyYW1tYXJzQW5kRGVmYXVsdEJORihjdXN0b21HcmFtbWFycykge1xuICBjb25zdCB0ZXJtUnVsZU5hbWUgPSBURVJNX1JVTEVfTkFNRSwgIC8vL1xuICAgICAgICB0ZXJtUnVsZXMgPSBydWxlc0Zyb21SdWxlTmFtZUN1c3RvbUdyYW1tYXJzQW5kRGVmYXVsdEJORih0ZXJtUnVsZU5hbWUsIGN1c3RvbUdyYW1tYXJzKTtcblxuICByZXR1cm4gdGVybVJ1bGVzO1xufVxuXG5mdW5jdGlvbiBsZXhpY2FsUGF0dGVybkZyb21DdXN0b21HcmFtbWFycyhjdXN0b21HcmFtbWFycykge1xuICBjb25zdCBsZXhpY2FsUGF0dGVybnMgPSBsZXhpY2FsUGF0dGVybnNGcm9tQ3VzdG9tR3JhbW1hcnMoY3VzdG9tR3JhbW1hcnMpLFxuICAgICAgICBkZWZhdWx0Q3VzdG9tR3JhbW1hckxleGljYWxQYXR0ZXJuID0gZGVmYXVsdEN1c3RvbUdyYW1tYXIuZ2V0TGV4aWNhbFBhdHRlcm4oKSxcbiAgICAgICAgZGVmYXVsdExleGljYWxQYXR0ZXJuID0gZGVmYXVsdEN1c3RvbUdyYW1tYXJMZXhpY2FsUGF0dGVybjsgLy8vXG5cbiAgbGV4aWNhbFBhdHRlcm5zLnJldmVyc2UoKTtcblxuICBsZXhpY2FsUGF0dGVybnMucHVzaChkZWZhdWx0TGV4aWNhbFBhdHRlcm4pO1xuXG4gIGZpbHRlcihsZXhpY2FsUGF0dGVybnMsIChsZXhpY2FsUGF0dGVybikgPT4ge1xuICAgIGlmIChsZXhpY2FsUGF0dGVybiAhPT0gRU1QVFlfU1RSSU5HKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGxleGljYWxQYXR0ZXJuc1N0cmluZyA9IGxleGljYWxQYXR0ZXJucy5qb2luKFwifFwiKSwgLy8vXG4gICAgICAgIGxleGljYWxQYXR0ZXJuID0gYF4oPzoke2xleGljYWxQYXR0ZXJuc1N0cmluZ30pYDtcblxuICByZXR1cm4gbGV4aWNhbFBhdHRlcm47XG59XG5cbmZ1bmN0aW9uIHN0YXJ0UnVsZUZyb21Ob3RoaW5nKCkge1xuICBjb25zdCBzdGFydFJ1bGVzQk5GID0gYCAke1NUQVJUX1JVTEVfTkFNRX0gOjo9ICR7TUVUQVNUQVRFTUVOVF9SVUxFX05BTUV9IHwgJHtTVEFURU1FTlRfUlVMRV9OQU1FfSB8ICR7RVhQUkVTU0lPTl9SVUxFX05BTUV9IHwgJHtURVJNX1JVTEVfTkFNRX0gOyBgLFxuICAgICAgICBzdGFydFJ1bGVzID0gcnVsZXNGcm9tQk5GKHN0YXJ0UnVsZXNCTkYpLFxuICAgICAgICBmaXJzdFN0YXJ0UnVsZSA9IGZpcnN0KHN0YXJ0UnVsZXMpLFxuICAgICAgICBzdGFydFJ1bGUgPSBmaXJzdFN0YXJ0UnVsZTsgLy8vXG5cbiAgcmV0dXJuIHN0YXJ0UnVsZTtcbn1cblxuZnVuY3Rpb24gcmVtYWluaW5nUnVsZXNGcm9tUnVsZXNBbmRNYWluUnVsZShydWxlcywgbWFpblJ1bGUpIHtcbiAgY29uc3QgcmVtYWluaW5nUnVsZXMgPSBydWxlcy5maWx0ZXIoKHJ1bGUpID0+IHtcbiAgICBpZiAocnVsZSAhPT0gbWFpblJ1bGUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHJlbWFpbmluZ1J1bGVzO1xufVxuXG5mdW5jdGlvbiBtYWluUnVsZUZyb21SdWxlTmFtZURlZmF1bHRCTkZBbmRCTkZzKHJ1bGVOYW1lLCBibmZzKSB7XG4gIGNvbnN0IGRlZmF1bHRDdXN0b21HcmFtbWFyQk5GID0gZGVmYXVsdEN1c3RvbUdyYW1tYXIuZ2V0Qk5GKHJ1bGVOYW1lKSxcbiAgICAgICAgZGVmYXVsdEJORiA9IGRlZmF1bHRDdXN0b21HcmFtbWFyQk5GLCAvLy9cbiAgICAgICAgZGVmYXVsdFJ1bGVzID0gcnVsZXNGcm9tQk5GKGRlZmF1bHRCTkYpLFxuICAgICAgICBkZWZhdWx0TWFpblJ1bGUgPSBmaW5kUnVsZUJ5UnVsZU5hbWUocnVsZU5hbWUsIGRlZmF1bHRSdWxlcyksXG4gICAgICAgIGRlZmF1bHRNYWluUnVsZURlZmluaXRpb25zID0gZGVmYXVsdE1haW5SdWxlLmdldERlZmluaXRpb25zKCk7XG5cbiAgYm5mcy5mb3JFYWNoKChibmYpID0+IHtcbiAgICBjb25zdCBydWxlcyA9IHJ1bGVzRnJvbUJORihibmYpLFxuICAgICAgICAgIG1haW5SdWxlID0gZmluZFJ1bGVCeVJ1bGVOYW1lKHJ1bGVOYW1lLCBydWxlcyksXG4gICAgICAgICAgbWFpblJ1bGVEZWZpbml0aW9ucyA9IChtYWluUnVsZSAhPT0gbnVsbCkgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1haW5SdWxlLmdldERlZmluaXRpb25zKCkgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW107XG5cbiAgICB1bnNoaWZ0KGRlZmF1bHRNYWluUnVsZURlZmluaXRpb25zLCBtYWluUnVsZURlZmluaXRpb25zKTtcbiAgfSk7XG5cbiAgY29uc3QgbWFpblJ1bGUgPSBkZWZhdWx0TWFpblJ1bGU7IC8vL1xuXG4gIHJldHVybiBtYWluUnVsZTtcbn1cblxuZnVuY3Rpb24gcmVtYWluaW5nUnVsZXNGcm9tUnVsZU5hbWVEZWZhdWx0Qk5GQW5kQk5GcyhydWxlTmFtZSwgYm5mcykge1xuICBjb25zdCBkZWZhdWx0Q3VzdG9tR3JhbW1hckJORiA9IGRlZmF1bHRDdXN0b21HcmFtbWFyLmdldEJORihydWxlTmFtZSksXG4gICAgICAgIGRlZmF1bHRCTkYgPSBkZWZhdWx0Q3VzdG9tR3JhbW1hckJORiwgLy8vXG4gICAgICAgIGRlZmF1bHRSdWxlcyA9IHJ1bGVzRnJvbUJORihkZWZhdWx0Qk5GKSxcbiAgICAgICAgZGVmYXVsdE1haW5SdWxlID0gZmluZFJ1bGVCeVJ1bGVOYW1lKHJ1bGVOYW1lLCBkZWZhdWx0UnVsZXMpLFxuICAgICAgICBkZWZhdWx0UmVtYWluaW5nUnVsZXMgPSByZW1haW5pbmdSdWxlc0Zyb21SdWxlc0FuZE1haW5SdWxlKGRlZmF1bHRSdWxlcywgZGVmYXVsdE1haW5SdWxlKTtcblxuICBibmZzLmZvckVhY2goKGJuZikgPT4ge1xuICAgIGNvbnN0IHJ1bGVzID0gcnVsZXNGcm9tQk5GKGJuZiksXG4gICAgICAgICAgbWFpblJ1bGUgPSBmaW5kUnVsZUJ5UnVsZU5hbWUocnVsZU5hbWUsIHJ1bGVzKSxcbiAgICAgICAgICByZW1haW5pbmdSdWxlcyA9IHJlbWFpbmluZ1J1bGVzRnJvbVJ1bGVzQW5kTWFpblJ1bGUocnVsZXMsIG1haW5SdWxlKTtcblxuICAgIHVuc2hpZnQoZGVmYXVsdFJlbWFpbmluZ1J1bGVzLCByZW1haW5pbmdSdWxlcyk7XG4gIH0pO1xuXG4gIGNvbnN0IHJlbWFpbmluZ1J1bGVzID0gZGVmYXVsdFJlbWFpbmluZ1J1bGVzOyAvLy9cblxuICByZXR1cm4gcmVtYWluaW5nUnVsZXM7XG59XG5cbmZ1bmN0aW9uIHJ1bGVzRnJvbVJ1bGVOYW1lQ3VzdG9tR3JhbW1hcnNBbmREZWZhdWx0Qk5GKHJ1bGVOYW1lLCBjdXN0b21HcmFtbWFycykge1xuICBjb25zdCBibmZzID0gYm5mc0Zyb21SdWxlTmFtZUFuZEN1c3RvbUdyYW1tYXJzKHJ1bGVOYW1lLCBjdXN0b21HcmFtbWFycyksXG4gICAgICAgIG1haW5SdWxlID0gbWFpblJ1bGVGcm9tUnVsZU5hbWVEZWZhdWx0Qk5GQW5kQk5GcyhydWxlTmFtZSwgYm5mcyksXG4gICAgICAgIHJlbWFpbmluZ1J1bGVzID0gcmVtYWluaW5nUnVsZXNGcm9tUnVsZU5hbWVEZWZhdWx0Qk5GQW5kQk5GcyhydWxlTmFtZSwgYm5mcyksXG4gICAgICAgIHJ1bGVzID0gW10uY29uY2F0KG1haW5SdWxlKS5jb25jYXQocmVtYWluaW5nUnVsZXMpO1xuXG4gIHJldHVybiBydWxlcztcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IHsgREVGQVVMVF9DVVNUT01fR1JBTU1BUl9OQU1FIH0gZnJvbSBcIi4vZ3JhbW1hck5hbWVzXCI7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ3VzdG9tR3JhbW1hciB9IGZyb20gXCIuL2N1c3RvbUdyYW1tYXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbGV4ZXJzVXRpbGl0aWVzIH0gZnJvbSBcIi4vdXRpbGl0aWVzL2xleGVyc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXJzZXJzVXRpbGl0aWVzIH0gZnJvbSBcIi4vdXRpbGl0aWVzL3BhcnNlcnNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZGVmYXVsdEN1c3RvbUdyYW1tYXIgfSBmcm9tIFwiLi9kZWZhdWx0Q3VzdG9tR3JhbW1hclwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBDb21iaW5lZEN1c3RvbUdyYW1tYXIgfSBmcm9tIFwiLi9jb21iaW5lZEN1c3RvbUdyYW1tYXJcIjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHdpdGhTdHlsZSBmcm9tIFwiZWFzeS13aXRoLXN0eWxlXCI7ICAvLy9cblxuY29uc3QgUGFyYWdyYXBoID0gd2l0aFN0eWxlLnBgXG5cbiAgbWFyZ2luOiAycmVtIDAgMCAwO1xuICBmb250LXNpemU6IDEuN3JlbTtcblxuYDtcblxuZXhwb3J0IGRlZmF1bHQgUGFyYWdyYXBoO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5jb25zdCBTdWJIZWFkaW5nID0gd2l0aFN0eWxlLmgyYFxuXG4gIG1hcmdpbjogMXJlbSAwIDAuNXJlbSAwO1xuICBmb250LXNpemU6IDJyZW07XG4gIFxuICA6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuXG5gO1xuXG5leHBvcnQgZGVmYXVsdCBTdWJIZWFkaW5nO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBTZWxlY3QgfSBmcm9tIFwiZWFzeVwiO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGUoU2VsZWN0KWBcblxuICBib3JkZXI6IDFweCBzb2xpZCBkYXJrZ3JleTtcbiAgcGFkZGluZzogMC4yNXJlbTtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG5cbmA7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBTZWxlY3QgZnJvbSBcIi4uL3NlbGVjdFwiO1xuXG5pbXBvcnQgeyBERUZBVUxUX0NVU1RPTV9HUkFNTUFSX05BTUUsIFVTRVJfREVGSU5FRF9DVVNUT01fR1JBTU1BUl9OQU1FIH0gZnJvbSBcIi4uLy4uL2dyYW1tYXJOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYW1lU2VsZWN0IGV4dGVuZHMgU2VsZWN0IHtcbiAgZ2V0TmFtZSgpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0VmFsdWUoKSxcbiAgICAgICAgICBuYW1lID0gdmFsdWU7IC8vL1xuXG4gICAgcmV0dXJuIG5hbWU7XG4gIH1cblxuICBjaGlsZEVsZW1lbnRzKCkge1xuICAgIGNvbnN0IGRlZmF1bHROYW1lID0gREVGQVVMVF9DVVNUT01fR1JBTU1BUl9OQU1FLFxuICAgICAgICAgIGRlZmF1bHRWYWx1ZSA9IGRlZmF1bHROYW1lLCAvLy9cbiAgICAgICAgICB1c2VyRGVmaW5lZE5hbWUgPSBVU0VSX0RFRklORURfQ1VTVE9NX0dSQU1NQVJfTkFNRSxcbiAgICAgICAgICB1c2VyRGVmaW5lZFZhbHVlID0gdXNlckRlZmluZWROYW1lOyAvLy9cblxuICAgIHJldHVybiAoW1xuXG4gICAgICA8b3B0aW9uIHZhbHVlPXtkZWZhdWx0VmFsdWV9IHNlbGVjdGVkID5cbiAgICAgICAge2RlZmF1bHROYW1lfVxuICAgICAgPC9vcHRpb24+LFxuICAgICAgPG9wdGlvbiB2YWx1ZT17dXNlckRlZmluZWRWYWx1ZX0+XG4gICAgICAgIHt1c2VyRGVmaW5lZE5hbWV9XG4gICAgICA8L29wdGlvbj4sXG5cbiAgICBdKTtcbiAgfVxuXG4gIHBhcmVudENvbnRleHQoKSB7XG4gICAgY29uc3QgZ2V0TmFtZSA9IHRoaXMuZ2V0TmFtZS5iaW5kKHRoaXMpOyAvLy9cblxuICAgIHJldHVybiAoe1xuICAgICAgZ2V0TmFtZVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJuYW1lXCIsXG4gICAgc3BlbGxDaGVjazogXCJmYWxzZVwiXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHdpdGhTdHlsZSBmcm9tIFwiZWFzeS13aXRoLXN0eWxlXCI7ICAvLy9cblxuaW1wb3J0IHsgU2l6ZWFibGVEaXYgfSBmcm9tIFwiZWFzeS1sYXlvdXRcIjtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlKFNpemVhYmxlRGl2KWBcblxuICB3aWR0aDogNDhyZW07XG4gIG1pbi13aWR0aDogMjRyZW07XG4gIFxuYDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHdpdGhTdHlsZSBmcm9tIFwiZWFzeS13aXRoLXN0eWxlXCI7ICAvLy9cblxuaW1wb3J0IHsgVGV4dGFyZWEgfSBmcm9tIFwiZWFzeVwiO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGUoVGV4dGFyZWEpYFxuXG4gIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtncmV5O1xuICBoZWlnaHQ6IDI0cmVtO1xuICByZXNpemU6IHZlcnRpY2FsO1xuICBwYWRkaW5nOiAwLjI1cmVtO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgd2hpdGUtc3BhY2U6IHByZTtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcblxuYDtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRleHRhcmVhIGZyb20gXCIuLi90ZXh0YXJlYVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCTkZUZXh0YXJlYSBleHRlbmRzIFRleHRhcmVhIHtcbiAgZ2V0Qk5GKCkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpLFxuICAgICAgICAgIGJuZiA9IHZhbHVlOyAvLy9cblxuICAgIHJldHVybiBibmY7XG4gIH1cblxuICBzZXRCTkYoYm5mKSB7XG4gICAgY29uc3QgdmFsdWUgPSBibmY7XG5cbiAgICB0aGlzLnNldFZhbHVlKHZhbHVlKTtcbiAgfVxuXG4gIHBhcmVudENvbnRleHQoKSB7XG4gICAgY29uc3QgZ2V0Qk5GID0gdGhpcy5nZXRCTkYuYmluZCh0aGlzKSxcbiAgICAgICAgICBzZXRCTkYgPSB0aGlzLnNldEJORi5iaW5kKHRoaXMpLFxuICAgICAgICAgIHNldEJORlJlYWRPbmx5ID0gdGhpcy5zZXRSZWFkT25seS5iaW5kKHRoaXMpO1xuXG4gICAgcmV0dXJuICh7XG4gICAgICBnZXRCTkYsXG4gICAgICBzZXRCTkYsXG4gICAgICBzZXRCTkZSZWFkT25seVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJibmZcIixcbiAgICBzcGVsbENoZWNrOiBcImZhbHNlXCJcbiAgfTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFNlbGVjdCBmcm9tIFwiLi4vc2VsZWN0XCI7XG5cbmltcG9ydCB7IFRFUk1fUlVMRV9OQU1FLCBFWFBSRVNTSU9OX1JVTEVfTkFNRSwgU1RBVEVNRU5UX1JVTEVfTkFNRSwgTUVUQVNUQVRFTUVOVF9SVUxFX05BTUUgfSAgZnJvbSBcIi4uLy4uL3J1bGVOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSdWxlTmFtZVNlbGVjdCBleHRlbmRzIFNlbGVjdCB7XG4gIGdldFJ1bGVOYW1lKCkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpLFxuICAgICAgICAgIHJ1bGVOYW1lID0gdmFsdWU7IC8vL1xuXG4gICAgcmV0dXJuIHJ1bGVOYW1lO1xuICB9XG5cbiAgY2hpbGRFbGVtZW50cygpIHtcbiAgICBjb25zdCB0ZXJtTmFtZSA9IFRFUk1fUlVMRV9OQU1FLFxuICAgICAgICAgIHRlcm1WYWx1ZSA9IHRlcm1OYW1lLCAvLy9cbiAgICAgICAgICBleHByZXNzaW9uTmFtZSA9IEVYUFJFU1NJT05fUlVMRV9OQU1FLFxuICAgICAgICAgIGV4cHJlc3Npb25WYWx1ZSA9IGV4cHJlc3Npb25OYW1lLCAvLy9cbiAgICAgICAgICBzdGF0ZW1lbnROYW1lID0gU1RBVEVNRU5UX1JVTEVfTkFNRSxcbiAgICAgICAgICBzdGF0ZW1lbnRWYWx1ZSA9IHN0YXRlbWVudE5hbWUsIC8vL1xuICAgICAgICAgIG1ldGFzdGF0ZW1lbnROYW1lID0gTUVUQVNUQVRFTUVOVF9SVUxFX05BTUUsXG4gICAgICAgICAgbWV0YXN0YXRlbWVudFZhbHVlID0gbWV0YXN0YXRlbWVudE5hbWU7IC8vL1xuXG4gICAgcmV0dXJuIChbXG5cbiAgICAgIDxvcHRpb24gdmFsdWU9e3Rlcm1WYWx1ZX0gc2VsZWN0ZWQgPlxuICAgICAgICB7dGVybU5hbWV9XG4gICAgICA8L29wdGlvbj4sXG4gICAgICA8b3B0aW9uIHZhbHVlPXtleHByZXNzaW9uVmFsdWV9IHNlbGVjdGVkID5cbiAgICAgICAge2V4cHJlc3Npb25OYW1lfVxuICAgICAgPC9vcHRpb24+LFxuICAgICAgPG9wdGlvbiB2YWx1ZT17c3RhdGVtZW50VmFsdWV9IHNlbGVjdGVkID5cbiAgICAgICAge3N0YXRlbWVudE5hbWV9XG4gICAgICA8L29wdGlvbj4sXG4gICAgICA8b3B0aW9uIHZhbHVlPXttZXRhc3RhdGVtZW50VmFsdWV9IHNlbGVjdGVkID5cbiAgICAgICAge21ldGFzdGF0ZW1lbnROYW1lfVxuICAgICAgPC9vcHRpb24+LFxuXG4gICAgXSk7XG4gIH1cblxuICBwYXJlbnRDb250ZXh0KCkge1xuICAgIGNvbnN0IGdldFJ1bGVOYW1lID0gdGhpcy5nZXRSdWxlTmFtZS5iaW5kKHRoaXMpOyAvLy9cblxuICAgIHJldHVybiAoe1xuICAgICAgZ2V0UnVsZU5hbWVcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcGVydGllcyA9IHtcbiAgICBjbGFzc05hbWU6IFwicnVsZS1uYW1lXCIsXG4gICAgc3BlbGxDaGVjazogXCJmYWxzZVwiXG4gIH1cbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRleHRhcmVhIGZyb20gXCIuLi90ZXh0YXJlYVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250ZW50VGV4dGFyZWEgZXh0ZW5kcyBUZXh0YXJlYSB7XG4gIGdldENvbnRlbnQoKSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldFZhbHVlKCksXG4gICAgICAgICAgY29udGVudCA9IHZhbHVlOyAvLy9cblxuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgc2V0Q29udGVudChjb250ZW50KSB7XG4gICAgY29uc3QgdmFsdWUgPSBjb250ZW50O1xuXG4gICAgdGhpcy5zZXRWYWx1ZSh2YWx1ZSk7XG4gIH1cblxuICBwYXJlbnRDb250ZXh0KCkge1xuICAgIGNvbnN0IGdldENvbnRlbnQgPSB0aGlzLmdldENvbnRlbnQuYmluZCh0aGlzKSxcbiAgICAgICAgICBzZXRDb250ZW50ID0gdGhpcy5zZXRDb250ZW50LmJpbmQodGhpcyk7XG5cbiAgICByZXR1cm4gKHtcbiAgICAgIGdldENvbnRlbnQsXG4gICAgICBzZXRDb250ZW50XG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BlcnRpZXMgPSB7XG4gICAgY2xhc3NOYW1lOiBcImNvbnRlbnRcIixcbiAgICBzcGVsbENoZWNrOiBcImZhbHNlXCJcbiAgfTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRleHRhcmVhIGZyb20gXCIuLi90ZXh0YXJlYVwiO1xuXG5pbXBvcnQgeyBFTVBUWV9TVFJJTkcgfSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhcnNlVHJlZVRleHRhcmVhIGV4dGVuZHMgVGV4dGFyZWEge1xuICBzZXRQYXJzZVRyZWUocGFyc2VUcmVlKSB7XG4gICAgaWYgKHBhcnNlVHJlZSAhPT0gbnVsbCkge1xuICAgICAgcGFyc2VUcmVlLnNoaWZ0TGluZSgpOyAgLy9cblxuICAgICAgY29uc3QgcGFyc2VUcmVlU3RyaW5nID0gcGFyc2VUcmVlLmFzU3RyaW5nKCksXG4gICAgICAgICAgICB2YWx1ZSA9IHBhcnNlVHJlZVN0cmluZzsgIC8vL1xuXG4gICAgICB0aGlzLnNldFZhbHVlKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jbGVhclBhcnNlVHJlZSgpO1xuICAgIH1cbiAgfVxuXG4gIGNsZWFyUGFyc2VUcmVlKCkge1xuICAgIGNvbnN0IHZhbHVlID0gRU1QVFlfU1RSSU5HO1xuXG4gICAgdGhpcy5zZXRWYWx1ZSh2YWx1ZSk7XG4gIH1cblxuICBwYXJlbnRDb250ZXh0KCkge1xuICAgIGNvbnN0IHNldFBhcnNlVHJlZSA9IHRoaXMuc2V0UGFyc2VUcmVlLmJpbmQodGhpcyksXG4gICAgICAgICAgY2xlYXJQYXJzZVRyZWUgPSB0aGlzLmNsZWFyUGFyc2VUcmVlLmJpbmQodGhpcyk7XG5cbiAgICByZXR1cm4gKHtcbiAgICAgIHNldFBhcnNlVHJlZSxcbiAgICAgIGNsZWFyUGFyc2VUcmVlXG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BlcnRpZXMgPSB7XG4gICAgY2xhc3NOYW1lOiBcInRva2Vuc1wiLFxuICAgIHNwZWxsQ2hlY2s6IFwiZmFsc2VcIixcbiAgICByZWFkT25seTogdHJ1ZVxuICB9O1xufVxuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJlYXN5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZShJbnB1dClgXG5cbiAgYm9yZGVyOiAxcHggc29saWQgZGFya2dyZXk7XG4gIHBhZGRpbmc6IDAuMjVyZW07XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuXG5gO1xuIiwgIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgSW5wdXQgZnJvbSBcIi4uL2lucHV0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0YXJ0UnVsZU5hbWVJbnB1dCBleHRlbmRzIElucHV0IHtcbiAgZ2V0U3RhcnRSdWxlTmFtZSgpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0VmFsdWUoKSxcbiAgICAgICAgICBzdGFydFJ1bGVOYW1lID0gdmFsdWU7IC8vL1xuXG4gICAgcmV0dXJuIHN0YXJ0UnVsZU5hbWU7XG4gIH1cblxuICBwYXJlbnRDb250ZXh0KCkge1xuICAgIGNvbnN0IGdldFN0YXJ0UnVsZU5hbWUgPSB0aGlzLmdldFN0YXJ0UnVsZU5hbWUuYmluZCh0aGlzKTtcblxuICAgIHJldHVybiAoe1xuICAgICAgZ2V0U3RhcnRSdWxlTmFtZVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJzdGFydC1ydWxlLW5hbWVcIixcbiAgICBzcGVsbENoZWNrOiBcImZhbHNlXCJcbiAgfTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IElucHV0IGZyb20gXCIuLi9pbnB1dFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMZXhpY2FsUGF0dGVybklucHV0IGV4dGVuZHMgSW5wdXQge1xuICBnZXRMZXhpY2FsUGF0dGVybigpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0VmFsdWUoKSxcbiAgICAgICAgICBsZXhpY2FsUGF0dGVybiA9IHZhbHVlOyAvLy9cblxuICAgIHJldHVybiBsZXhpY2FsUGF0dGVybjtcbiAgfVxuXG4gIHNldExleGljYWxQYXR0ZXJuKGxleGljYWxQYXR0ZXJuKSB7XG4gICAgY29uc3QgdmFsdWUgPSBsZXhpY2FsUGF0dGVybjsgLy8vXG5cbiAgICB0aGlzLnNldFZhbHVlKHZhbHVlKTtcbiAgfVxuXG4gIHBhcmVudENvbnRleHQoKSB7XG4gICAgY29uc3QgZ2V0TGV4aWNhbFBhdHRlcm4gPSB0aGlzLmdldExleGljYWxQYXR0ZXJuLmJpbmQodGhpcyksXG4gICAgICAgICAgc2V0TGV4aWNhbFBhdHRlcm4gPSB0aGlzLnNldExleGljYWxQYXR0ZXJuLmJpbmQodGhpcyksXG4gICAgICAgICAgc2V0TGV4aWNhbFBhdHRlcm5SZWFkT25seSA9IHRoaXMuc2V0UmVhZE9ubHkuYmluZCh0aGlzKTsgLy8vO1xuXG4gICAgcmV0dXJuICh7XG4gICAgICBnZXRMZXhpY2FsUGF0dGVybixcbiAgICAgIHNldExleGljYWxQYXR0ZXJuLFxuICAgICAgc2V0TGV4aWNhbFBhdHRlcm5SZWFkT25seVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJsZXhpY2FsLXBhdHRlcm5cIixcbiAgICBzcGVsbENoZWNrOiBcImZhbHNlXCJcbiAgfTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFRleHRhcmVhIGZyb20gXCIuLi90ZXh0YXJlYVwiO1xuXG5pbXBvcnQgeyBFTVBUWV9TVFJJTkcgfSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbWJpbmVkQk5GVGV4dGFyZWEgZXh0ZW5kcyBUZXh0YXJlYSB7XG4gIGdldENvbWJpbmVkQk5GKCkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpLFxuICAgICAgICAgIGNvbWJpbmVkQk5GID0gdmFsdWU7IC8vL1xuXG4gICAgcmV0dXJuIGNvbWJpbmVkQk5GO1xuICB9XG5cbiAgc2V0Q29tYmluZWRCTkYoY29tYmluZWRCTkYpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGNvbWJpbmVkQk5GOyAgLy8vXG5cbiAgICB0aGlzLnNldFZhbHVlKHZhbHVlKTtcbiAgfVxuXG4gIGNsZWFyQ29tYmluZWRCTkYoKSB7XG4gICAgY29uc3QgdmFsdWUgPSBFTVBUWV9TVFJJTkc7XG5cbiAgICB0aGlzLnNldFZhbHVlKHZhbHVlKTtcbiAgfVxuXG4gIHBhcmVudENvbnRleHQoKSB7XG4gICAgY29uc3QgZ2V0Q29tYmluZWRCTkYgPSB0aGlzLmdldENvbWJpbmVkQk5GLmJpbmQodGhpcyksXG4gICAgICAgICAgc2V0Q29tYmluZWRCTkYgPSB0aGlzLnNldENvbWJpbmVkQk5GLmJpbmQodGhpcyksXG4gICAgICAgICAgY2xlYXJDb21iaW5lZEJORiA9IHRoaXMuY2xlYXJDb21iaW5lZEJORi5iaW5kKHRoaXMpO1xuXG4gICAgcmV0dXJuICh7XG4gICAgICBnZXRDb21iaW5lZEJORixcbiAgICAgIHNldENvbWJpbmVkQk5GLFxuICAgICAgY2xlYXJDb21iaW5lZEJORlxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJjb21iaW5lZC1ibmZcIixcbiAgICBzcGVsbENoZWNrOiBcImZhbHNlXCJcbiAgfTtcbn1cbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgQ3VzdG9tR3JhbW1hciB9IGZyb20gXCIuLi9pbmRleFwiOyAvLy9cblxuaW1wb3J0IHsgVVNFUl9ERUZJTkVEX0NVU1RPTV9HUkFNTUFSX05BTUUgfSBmcm9tIFwiLi4vZ3JhbW1hck5hbWVzXCI7XG5cbmNvbnN0IG5hbWUgPSBVU0VSX0RFRklORURfQ1VTVE9NX0dSQU1NQVJfTkFNRSxcbiAgICAgIGxleGljYWxQYXR0ZXJuID0gYDw9fFxcXFwrfFxcXFwtfFxcXFx8fGluc2VydHxkZWxldGV8ZW1wdHlgLFxuICAgICAgdGVybUJORiA9IGAgICAgICAgICAgICAgICAgdGVybSAgOjo9ICBvcGVyYXRpb25cblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgb3BlcmF0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBzdWJzdHJpbmdcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgc3RyaW5nTGVuZ3RoXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG4gICAgICAgICAgIG9wZXJhdGlvbiAgOjo9ICBvcGVyYXRvcjxOT19XSElURVNQQUNFPlwiKFwiIHRlcm0gXCIpXCIgO1xuXG5cbiAgICAgICAgICAgIG9wZXJhdG9yICA6Oj0gIFwiaW5zZXJ0XCI8Tk9fV0hJVEVTUEFDRT5cIihcIiB0ZXJtIFwiLFwiIHRlcm0gXCIpXCJcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgXCJkZWxldGVcIjxOT19XSElURVNQQUNFPlwiKFwiIHRlcm0gXCIsXCIgdGVybSBcIilcIiBcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgXCJlbXB0eVwiPE5PX1dISVRFU1BBQ0U+XCIoXCI8Tk9fV0hJVEVTUEFDRT5cIilcIlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuICAgICAgICAgICBzdWJzdHJpbmcgIDo6PSAgbmFtZTxOT19XSElURVNQQUNFPlwiW1wiIFwiLi4uXCIgZXhwcmVzc2lvbiBcIl1cIiBcblxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgbmFtZTxOT19XSElURVNQQUNFPlwiW1wiIGV4cHJlc3Npb24gXCIuLi5cIiBleHByZXNzaW9uIFwiXVwiIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICBuYW1lPE5PX1dISVRFU1BBQ0U+XCJbXCIgZXhwcmVzc2lvbiBcIi4uLlwiICBcIl1cIiBcblxuICAgICAgICAgICAgICAgICAgICAgICAgO1xuXG5cbiAgICAgIHN0cmluZ0xlbmd0aCAgOjo9ICBcInxcIiB0ZXJtIFwifFwiIDtgLFxuICAgICAgZXhwcmVzc2lvbkJORiA9IGAgICAgICAgICAgZXhwcmVzc2lvbiAgOjpgLFxuICAgICAgc3RhdGVtZW50Qk5GID0gYCAgICAgICAgICAgc3RhdGVtZW50ICA6Oj0gIGxlc3NUaGFuT3JFcXVhbFRvXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDtcblxuXG4gICBsZXNzVGhhbk9yRXF1YWxUbyAgOjo9ICBleHByZXNzaW9uIFwiPD1cIiBleHByZXNzaW9uIDtgLFxuICAgICAgbWV0YXN0YXRlbWVudEJORiA9IGBgLFxuICAgICAganNvbiA9IHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgbGV4aWNhbFBhdHRlcm4sXG4gICAgICAgIHRlcm1CTkYsXG4gICAgICAgIGV4cHJlc3Npb25CTkYsXG4gICAgICAgIHN0YXRlbWVudEJORixcbiAgICAgICAgbWV0YXN0YXRlbWVudEJORlxuICAgICAgfSxcbiAgICAgIHVzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hciA9IEN1c3RvbUdyYW1tYXIuZnJvbUpTT04oanNvbik7XG5cbmV4cG9ydCBkZWZhdWx0IHVzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hcjtcbiIsICJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHdpdGhTdHlsZSBmcm9tIFwiZWFzeS13aXRoLXN0eWxlXCI7ICAvLy9cblxuaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tIFwiZWFzeVwiO1xuXG5jbGFzcyBSZW1vdmVPclJlbmFtZUludGVybWVkaWF0ZU5vZGVzQ2hlY2tib3ggZXh0ZW5kcyBDaGVja2JveCB7XG4gIHBhcmVudENvbnRleHQoKSB7XG4gICAgY29uc3QgaXNSZW1vdmVPclJlbmFtZUludGVybWVkaWF0ZU5vZGVzQ2hlY2tib3hDaGVja2VkID0gdGhpcy5pc0NoZWNrZWQuYmluZCh0aGlzKTsgLy8vXG5cbiAgICByZXR1cm4gKHtcbiAgICAgIGlzUmVtb3ZlT3JSZW5hbWVJbnRlcm1lZGlhdGVOb2Rlc0NoZWNrYm94Q2hlY2tlZFxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wZXJ0aWVzID0ge1xuICAgIGNsYXNzTmFtZTogXCJyZW1vdmUtb3ItcmVuYW1lLWludGVybWVkaWF0ZS1ub2Rlc1wiLFxuICAgIHNwZWxsQ2hlY2s6IFwiZmFsc2VcIlxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGUoUmVtb3ZlT3JSZW5hbWVJbnRlcm1lZGlhdGVOb2Rlc0NoZWNrYm94KWBcblxuICB6b29tOiAxLjU7XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICBcbmA7XG4iLCAiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX2Vhc3lXaXRoU3R5bGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJlYXN5LXdpdGgtc3R5bGVcIikpO1xudmFyIF9lYXN5ID0gcmVxdWlyZShcImVhc3lcIik7XG52YXIgX29jY2FtR3JhbW1hclV0aWxpdGllcyA9IHJlcXVpcmUoXCJvY2NhbS1ncmFtbWFyLXV0aWxpdGllc1wiKTtcbnZhciBfZWFzeUxheW91dCA9IHJlcXVpcmUoXCJlYXN5LWxheW91dFwiKTtcbnZhciBfaW5kZXggPSByZXF1aXJlKFwiLi4vaW5kZXhcIik7XG52YXIgX3BhcmFncmFwaCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcGFyYWdyYXBoXCIpKTtcbnZhciBfc3ViSGVhZGluZyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc3ViSGVhZGluZ1wiKSk7XG52YXIgX25hbWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NlbGVjdC9uYW1lXCIpKTtcbnZhciBfc2l6ZWFibGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2Rpdi9zaXplYWJsZVwiKSk7XG52YXIgX2JuZiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdGV4dGFyZWEvYm5mXCIpKTtcbnZhciBfcnVsZU5hbWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NlbGVjdC9ydWxlTmFtZVwiKSk7XG52YXIgX2NvbnRlbnQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3RleHRhcmVhL2NvbnRlbnRcIikpO1xudmFyIF9wYXJzZVRyZWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3RleHRhcmVhL3BhcnNlVHJlZVwiKSk7XG52YXIgX3N0YXJ0UnVsZU5hbWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2lucHV0L3N0YXJ0UnVsZU5hbWVcIikpO1xudmFyIF9sZXhpY2FsUGF0dGVybiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaW5wdXQvbGV4aWNhbFBhdHRlcm5cIikpO1xudmFyIF9jb21iaW5lZEJORiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdGV4dGFyZWEvY29tYmluZWRCTkZcIikpO1xudmFyIF91c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hclwiKSk7XG52YXIgX3JlbW92ZU9yUmVuYW1lSW50ZXJtZWRpYXRlTm9kZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NoZWNrYm94L3JlbW92ZU9yUmVuYW1lSW50ZXJtZWRpYXRlTm9kZXNcIikpO1xudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzXCIpO1xudmFyIF9ydWxlcyA9IHJlcXVpcmUoXCIuLi91dGlsaXRpZXMvcnVsZXNcIik7XG52YXIgX2dyYW1tYXJOYW1lcyA9IHJlcXVpcmUoXCIuLi9ncmFtbWFyTmFtZXNcIik7XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGY7XG59XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbigpIHt9KSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgIGlmIChpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkge1xuICAgICAgICBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgICAgICAgICAgdmFyIGEgPSBbXG4gICAgICAgICAgICAgICAgbnVsbFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGEucHVzaC5hcHBseShhLCBhcmdzKTtcbiAgICAgICAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuICAgICAgICAgICAgaWYgKENsYXNzKSBfc2V0UHJvdG90eXBlT2YoaW5zdGFuY2UsIENsYXNzLnByb3RvdHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5IGluIG9iaikge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICAgIH07XG4gICAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICAgIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cbmZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKGZuKSB7XG4gICAgcmV0dXJuIEZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwoZm4pLmluZGV4T2YoXCJbbmF0aXZlIGNvZGVdXCIpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgICAgICByZXR1cm4gY2FsbDtcbiAgICB9XG4gICAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgICAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgICAgIHJldHVybiBvO1xuICAgIH07XG4gICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cbmZ1bmN0aW9uIF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoc3RyaW5ncywgcmF3KSB7XG4gICAgaWYgKCFyYXcpIHtcbiAgICAgICAgcmF3ID0gc3RyaW5ncy5zbGljZSgwKTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3RyaW5ncywge1xuICAgICAgICByYXc6IHtcbiAgICAgICAgICAgIHZhbHVlOiBPYmplY3QuZnJlZXplKHJhdylcbiAgICAgICAgfVxuICAgIH0pKTtcbn1cbnZhciBfdHlwZW9mID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgXCJAc3djL2hlbHBlcnMgLSB0eXBlb2ZcIjtcbiAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5mdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gICAgdmFyIF9jYWNoZSA9IHR5cGVvZiBNYXAgPT09IFwiZnVuY3Rpb25cIiA/IG5ldyBNYXAoKSA6IHVuZGVmaW5lZDtcbiAgICBfd3JhcE5hdGl2ZVN1cGVyID0gZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykge1xuICAgICAgICBpZiAoQ2xhc3MgPT09IG51bGwgfHwgIV9pc05hdGl2ZUZ1bmN0aW9uKENsYXNzKSkgcmV0dXJuIENsYXNzO1xuICAgICAgICBpZiAodHlwZW9mIENsYXNzICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIF9jYWNoZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgaWYgKF9jYWNoZS5oYXMoQ2xhc3MpKSByZXR1cm4gX2NhY2hlLmdldChDbGFzcyk7XG4gICAgICAgICAgICBfY2FjaGUuc2V0KENsYXNzLCBXcmFwcGVyKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBXcmFwcGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9jb25zdHJ1Y3QoQ2xhc3MsIGFyZ3VtZW50cywgX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTtcbiAgICAgICAgfVxuICAgICAgICBXcmFwcGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICAgICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBXcmFwcGVyLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihXcmFwcGVyLCBDbGFzcyk7XG4gICAgfTtcbiAgICByZXR1cm4gX3dyYXBOYXRpdmVTdXBlcihDbGFzcyk7XG59XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG4gICAgdHJ5IHtcbiAgICAgICAgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbigpIHt9KSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7XG4gICAgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkge1xuICAgICAgICB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDtcbiAgICAgICAgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHtcbiAgICAgICAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7XG4gICAgICAgICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTtcbiAgICB9O1xufVxuZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkge1xuICAgIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbXG4gICAgICAgIFwiXFxuXFxuICBwYWRkaW5nOiAxcmVtO1xcblwiXG4gICAgXSk7XG4gICAgX3RlbXBsYXRlT2JqZWN0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkge1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9O1xuICAgIHJldHVybiBkYXRhO1xufVxudmFyIGZsb3JlbmNlTGV4ZXJGcm9tQ29tYmluZWRDdXN0b21HcmFtbWFyID0gX2luZGV4LmxleGVyc1V0aWxpdGllcy5mbG9yZW5jZUxleGVyRnJvbUNvbWJpbmVkQ3VzdG9tR3JhbW1hciwgZmxvcmVuY2VQYXJzZXJGcm9tQ29tYmluZWRDdXN0b21HcmFtbWFyID0gX2luZGV4LnBhcnNlcnNVdGlsaXRpZXMuZmxvcmVuY2VQYXJzZXJGcm9tQ29tYmluZWRDdXN0b21HcmFtbWFyO1xudmFyIFZpZXcgPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKEVsZW1lbnQpIHtcbiAgICBfaW5oZXJpdHMoVmlldywgRWxlbWVudCk7XG4gICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihWaWV3KTtcbiAgICBmdW5jdGlvbiBWaWV3KCkge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmlldyk7XG4gICAgICAgIHZhciBfdGhpcztcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImluaXRpYWxDb250ZW50XCIsIF9jb25zdGFudHMuRU1QVFlfU1RSSU5HKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBfY3JlYXRlQ2xhc3MoVmlldywgW1xuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwia2V5VXBIYW5kbGVyXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24ga2V5VXBIYW5kbGVyKCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuYW1lID0gdGhpcy5nZXROYW1lKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChuYW1lID09PSBfZ3JhbW1hck5hbWVzLlVTRVJfREVGSU5FRF9DVVNUT01fR1JBTU1BUl9OQU1FKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYm5mID0gdGhpcy5nZXRCTkYoKSwgcnVsZU5hbWUgPSB0aGlzLmdldFJ1bGVOYW1lKCksIGxleGljYWxQYXR0ZXJuID0gdGhpcy5nZXRMZXhpY2FsUGF0dGVybigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3VzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hci5kZWZhdWx0LnNldEJORihydWxlTmFtZSwgYm5mKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF91c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIuZGVmYXVsdC5zZXRMZXhpY2FsUGF0dGVybihsZXhpY2FsUGF0dGVybik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1c3RvbUdyYW1tYXJzID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgX3VzZXJEZWZpbmVkQ3VzdG9tR3JhbW1hci5kZWZhdWx0XG4gICAgICAgICAgICAgICAgICAgIF0sIGNvbWJpbmVkQ3VzdG9tR3JhbW1hciA9IF9pbmRleC5Db21iaW5lZEN1c3RvbUdyYW1tYXIuZnJvbUN1c3RvbUdyYW1tYXJzKGN1c3RvbUdyYW1tYXJzKSwgY29tYmluZWRDdXN0b21HcmFtbWFyUnVsZU1hcCA9IGNvbWJpbmVkQ3VzdG9tR3JhbW1hci5nZXRSdWxlTWFwKCksIGNvbWJpbmVkQ3VzdG9tR3JhbW1hclJ1bGVzID0gT2JqZWN0LnZhbHVlcyhjb21iaW5lZEN1c3RvbUdyYW1tYXJSdWxlTWFwKSwgbXVsdGlMaW5lID0gdHJ1ZSwgY29tYmluZWRDdXN0b21HcmFtbWFyUnVsZXNTdHJpbmcgPSAoMCwgX3J1bGVzKS5ydWxlc0FzU3RyaW5nKGNvbWJpbmVkQ3VzdG9tR3JhbW1hclJ1bGVzLCBtdWx0aUxpbmUpLCBjb21iaW5lZEJORiA9IGNvbWJpbmVkQ3VzdG9tR3JhbW1hclJ1bGVzU3RyaW5nLCBmbG9yZW5jZUxleGVyID0gZmxvcmVuY2VMZXhlckZyb21Db21iaW5lZEN1c3RvbUdyYW1tYXIoY29tYmluZWRDdXN0b21HcmFtbWFyKSwgZmxvcmVuY2VQYXJzZXIgPSBmbG9yZW5jZVBhcnNlckZyb21Db21iaW5lZEN1c3RvbUdyYW1tYXIoY29tYmluZWRDdXN0b21HcmFtbWFyKSwgcnVsZU1hcCA9IGZsb3JlbmNlUGFyc2VyLmdldFJ1bGVNYXAoKSwgc3RhcnRSdWxlTmFtZSA9IHRoaXMuZ2V0U3RhcnRSdWxlTmFtZSgpLCBzdGFydFJ1bGUgPSBydWxlTWFwW3N0YXJ0UnVsZU5hbWVdLCBjb250ZW50ID0gdGhpcy5nZXRDb250ZW50KCksIHRva2VucyA9IGZsb3JlbmNlTGV4ZXIudG9rZW5pc2UoY29udGVudCksIG5vZGUgPSBmbG9yZW5jZVBhcnNlci5wYXJzZSh0b2tlbnMsIHN0YXJ0UnVsZSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJzZVRyZWUgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlbW92ZU9yUmVuYW1lSW50ZXJtZWRpYXRlTm9kZXNDaGVja2JveENoZWNrZWQgPSB0aGlzLmlzUmVtb3ZlT3JSZW5hbWVJbnRlcm1lZGlhdGVOb2Rlc0NoZWNrYm94Q2hlY2tlZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlbW92ZU9yUmVuYW1lSW50ZXJtZWRpYXRlTm9kZXNDaGVja2JveENoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoMCwgX29jY2FtR3JhbW1hclV0aWxpdGllcykucmVtb3ZlT3JSZW5hbWVJbnRlcm1lZGlhdGVOb2Rlcyhub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlVHJlZSA9IG5vZGUuYXNQYXJzZVRyZWUodG9rZW5zKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFBhcnNlVHJlZShwYXJzZVRyZWUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENvbWJpbmVkQk5GKGNvbWJpbmVkQk5GKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJQYXJzZVRyZWUoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhckNvbWJpbmVkQk5GKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiY2hhbmdlSGFuZGxlclwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNoYW5nZUhhbmRsZXIoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5hbWUgPSB0aGlzLmdldE5hbWUoKSwgcnVsZU5hbWUgPSB0aGlzLmdldFJ1bGVOYW1lKCksIHJlYWRPbmx5ID0gbmFtZSA9PT0gX2dyYW1tYXJOYW1lcy5ERUZBVUxUX0NVU1RPTV9HUkFNTUFSX05BTUUsIGN1c3RvbUdyYW1tYXIgPSByZWFkT25seSA/IF9pbmRleC5kZWZhdWx0Q3VzdG9tR3JhbW1hciA6IF91c2VyRGVmaW5lZEN1c3RvbUdyYW1tYXIuZGVmYXVsdCwgYm5mID0gY3VzdG9tR3JhbW1hci5nZXRCTkYocnVsZU5hbWUpLCBsZXhpY2FsUGF0dGVybiA9IGN1c3RvbUdyYW1tYXIuZ2V0TGV4aWNhbFBhdHRlcm4oKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEJORihibmYpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0Qk5GUmVhZE9ubHkocmVhZE9ubHkpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0TGV4aWNhbFBhdHRlcm4obGV4aWNhbFBhdHRlcm4pO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0TGV4aWNhbFBhdHRlcm5SZWFkT25seShyZWFkT25seSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjaGlsZEVsZW1lbnRzXCIsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY2hpbGRFbGVtZW50cygpIHtcbiAgICAgICAgICAgICAgICB2YXIga2V5VXBIYW5kbGVyID0gdGhpcy5rZXlVcEhhbmRsZXIuYmluZCh0aGlzKSwgY2hhbmdlSGFuZGxlciA9IHRoaXMuY2hhbmdlSGFuZGxlci5iaW5kKHRoaXMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlRWxlbWVudChfZWFzeUxheW91dC5Db2x1bW5zRGl2LCBudWxsLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX3NpemVhYmxlLmRlZmF1bHQsIG51bGwsIC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlRWxlbWVudChfZWFzeUxheW91dC5Sb3dzRGl2LCBudWxsLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX3N1YkhlYWRpbmcuZGVmYXVsdCwgbnVsbCwgXCJOYW1lXCIpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX25hbWUuZGVmYXVsdCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IGNoYW5nZUhhbmRsZXJcbiAgICAgICAgICAgICAgICAgICAgfSksIC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlRWxlbWVudChfc3ViSGVhZGluZy5kZWZhdWx0LCBudWxsLCBcIlJ1bGUgbmFtZVwiKSwgLyojX19QVVJFX18qLyBSZWFjdC5jcmVhdGVFbGVtZW50KF9ydWxlTmFtZS5kZWZhdWx0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogY2hhbmdlSGFuZGxlclxuICAgICAgICAgICAgICAgICAgICB9KSwgLyojX19QVVJFX18qLyBSZWFjdC5jcmVhdGVFbGVtZW50KF9zdWJIZWFkaW5nLmRlZmF1bHQsIG51bGwsIFwiTGV4aWNhbCBwYXR0ZXJuXCIpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX2xleGljYWxQYXR0ZXJuLmRlZmF1bHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uS2V5VXA6IGtleVVwSGFuZGxlclxuICAgICAgICAgICAgICAgICAgICB9KSwgLyojX19QVVJFX18qLyBSZWFjdC5jcmVhdGVFbGVtZW50KF9zdWJIZWFkaW5nLmRlZmF1bHQsIG51bGwsIFwiQk5GXCIpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX2JuZi5kZWZhdWx0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbktleVVwOiBrZXlVcEhhbmRsZXJcbiAgICAgICAgICAgICAgICAgICAgfSksIC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlRWxlbWVudChfc3ViSGVhZGluZy5kZWZhdWx0LCBudWxsLCBcIlN0YXJ0IHJ1bGUgbmFtZVwiKSwgLyojX19QVVJFX18qLyBSZWFjdC5jcmVhdGVFbGVtZW50KF9zdGFydFJ1bGVOYW1lLmRlZmF1bHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uS2V5VXA6IGtleVVwSGFuZGxlclxuICAgICAgICAgICAgICAgICAgICB9KSkpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX2Vhc3lMYXlvdXQuVmVydGljYWxTcGxpdHRlckRpdiwgbnVsbCksIC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlRWxlbWVudChfZWFzeUxheW91dC5Db2x1bW5EaXYsIG51bGwsIC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlRWxlbWVudChfZWFzeUxheW91dC5Sb3dzRGl2LCBudWxsLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX3N1YkhlYWRpbmcuZGVmYXVsdCwgbnVsbCwgXCJDb250ZW50XCIpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX2NvbnRlbnQuZGVmYXVsdCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25LZXlVcDoga2V5VXBIYW5kbGVyXG4gICAgICAgICAgICAgICAgICAgIH0pLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX3N1YkhlYWRpbmcuZGVmYXVsdCwgbnVsbCwgXCJQYXJzZSB0cmVlXCIpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX3BhcnNlVHJlZS5kZWZhdWx0LCBudWxsKSwgLyojX19QVVJFX18qLyBSZWFjdC5jcmVhdGVFbGVtZW50KF9zdWJIZWFkaW5nLmRlZmF1bHQsIG51bGwsIFwiQ29tYmluZWQgQk5GXCIpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX2NvbWJpbmVkQk5GLmRlZmF1bHQsIG51bGwpLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX3BhcmFncmFwaC5kZWZhdWx0LCBudWxsLCAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX3JlbW92ZU9yUmVuYW1lSW50ZXJtZWRpYXRlTm9kZXMuZGVmYXVsdCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IGtleVVwSGFuZGxlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfSksIFwiUmVtb3ZlIG9yIHJlbmFtZSBpbnRlcm1lZGlhdGUgbm9kZXNcIikpKSlcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiaW5pdGlhbGlzZVwiLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRpYWxpc2UoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hc3NpZ25Db250ZXh0KCk7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLmluaXRpYWxDb250ZW50O1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0Q29udGVudChjb250ZW50KTtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUhhbmRsZXIoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmtleVVwSGFuZGxlcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIFZpZXc7XG59KF93cmFwTmF0aXZlU3VwZXIoX2Vhc3kuRWxlbWVudCkpO1xuX2RlZmluZVByb3BlcnR5KFZpZXcsIFwidGFnTmFtZVwiLCBcImRpdlwiKTtcbl9kZWZpbmVQcm9wZXJ0eShWaWV3LCBcImRlZmF1bHRQcm9wZXJ0aWVzXCIsIHtcbiAgICBjbGFzc05hbWU6IFwidmlld1wiXG59KTtcbnZhciBfZGVmYXVsdCA9ICgwLCBfZWFzeVdpdGhTdHlsZSkuZGVmYXVsdChWaWV3KShfdGVtcGxhdGVPYmplY3QoKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMM055WXk5bGVHRnRjR3hsTDNacFpYY3Vhbk1pWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVhDSjFjMlVnYzNSeWFXTjBYQ0k3WEc1Y2JtbHRjRzl5ZENCM2FYUm9VM1I1YkdVZ1puSnZiU0JjSW1WaGMza3RkMmwwYUMxemRIbHNaVndpT3lBZ0x5OHZYRzVjYm1sdGNHOXlkQ0I3SUVWc1pXMWxiblFnZlNCbWNtOXRJRndpWldGemVWd2lPMXh1YVcxd2IzSjBJSHNnY21WdGIzWmxUM0pTWlc1aGJXVkpiblJsY20xbFpHbGhkR1ZPYjJSbGN5QjlJR1p5YjIwZ1hDSnZZMk5oYlMxbmNtRnRiV0Z5TFhWMGFXeHBkR2xsYzF3aU8xeHVhVzF3YjNKMElIc2dVbTkzYzBScGRpd2dRMjlzZFcxdVJHbDJMQ0JEYjJ4MWJXNXpSR2wyTENCV1pYSjBhV05oYkZOd2JHbDBkR1Z5UkdsMklIMGdabkp2YlNCY0ltVmhjM2t0YkdGNWIzVjBYQ0k3WEc1cGJYQnZjblFnZXlCa1pXWmhkV3gwUTNWemRHOXRSM0poYlcxaGNpd2dRMjl0WW1sdVpXUkRkWE4wYjIxSGNtRnRiV0Z5TENCc1pYaGxjbk5WZEdsc2FYUnBaWE1zSUhCaGNuTmxjbk5WZEdsc2FYUnBaWE1nZlNCbWNtOXRJRndpTGk0dmFXNWtaWGhjSWpzZ0lDOHZMMXh1WEc1cGJYQnZjblFnVUdGeVlXZHlZWEJvSUdaeWIyMGdYQ0l1TDNCaGNtRm5jbUZ3YUZ3aU8xeHVhVzF3YjNKMElGTjFZa2hsWVdScGJtY2dabkp2YlNCY0lpNHZjM1ZpU0dWaFpHbHVaMXdpTzF4dWFXMXdiM0owSUU1aGJXVlRaV3hsWTNRZ1puSnZiU0JjSWk0dmMyVnNaV04wTDI1aGJXVmNJanRjYm1sdGNHOXlkQ0JUYVhwbFlXSnNaVVJwZGlCbWNtOXRJRndpTGk5a2FYWXZjMmw2WldGaWJHVmNJanRjYm1sdGNHOXlkQ0JDVGtaVVpYaDBZWEpsWVNCbWNtOXRJRndpTGk5MFpYaDBZWEpsWVM5aWJtWmNJanRjYm1sdGNHOXlkQ0JTZFd4bFRtRnRaVk5sYkdWamRDQm1jbTl0SUZ3aUxpOXpaV3hsWTNRdmNuVnNaVTVoYldWY0lqdGNibWx0Y0c5eWRDQkRiMjUwWlc1MFZHVjRkR0Z5WldFZ1puSnZiU0JjSWk0dmRHVjRkR0Z5WldFdlkyOXVkR1Z1ZEZ3aU8xeHVhVzF3YjNKMElGQmhjbk5sVkhKbFpWUmxlSFJoY21WaElHWnliMjBnWENJdUwzUmxlSFJoY21WaEwzQmhjbk5sVkhKbFpWd2lPMXh1YVcxd2IzSjBJRk4wWVhKMFVuVnNaVTVoYldWSmJuQjFkQ0JtY205dElGd2lMaTlwYm5CMWRDOXpkR0Z5ZEZKMWJHVk9ZVzFsWENJN1hHNXBiWEJ2Y25RZ1RHVjRhV05oYkZCaGRIUmxjbTVKYm5CMWRDQm1jbTl0SUZ3aUxpOXBibkIxZEM5c1pYaHBZMkZzVUdGMGRHVnlibHdpTzF4dWFXMXdiM0owSUVOdmJXSnBibVZrUWs1R1ZHVjRkR0Z5WldFZ1puSnZiU0JjSWk0dmRHVjRkR0Z5WldFdlkyOXRZbWx1WldSQ1RrWmNJanRjYm1sdGNHOXlkQ0IxYzJWeVJHVm1hVzVsWkVOMWMzUnZiVWR5WVcxdFlYSWdabkp2YlNCY0lpNHZkWE5sY2tSbFptbHVaV1JEZFhOMGIyMUhjbUZ0YldGeVhDSTdYRzVwYlhCdmNuUWdVbVZ0YjNabFQzSlNaVzVoYldWSmJuUmxjbTFsWkdsaGRHVk9iMlJsYzBOb1pXTnJZbTk0SUdaeWIyMGdYQ0l1TDJOb1pXTnJZbTk0TDNKbGJXOTJaVTl5VW1WdVlXMWxTVzUwWlhKdFpXUnBZWFJsVG05a1pYTmNJbHh1WEc1cGJYQnZjblFnZXlCRlRWQlVXVjlUVkZKSlRrY2dmU0JtY205dElGd2lMaTR2WTI5dWMzUmhiblJ6WENJN1hHNXBiWEJ2Y25RZ2V5QnlkV3hsYzBGelUzUnlhVzVuSUgwZ1puSnZiU0JjSWk0dUwzVjBhV3hwZEdsbGN5OXlkV3hsYzF3aU8xeHVhVzF3YjNKMElIc2dSRVZHUVZWTVZGOURWVk5VVDAxZlIxSkJUVTFCVWw5T1FVMUZMQ0JWVTBWU1gwUkZSa2xPUlVSZlExVlRWRTlOWDBkU1FVMU5RVkpmVGtGTlJTQjlJR1p5YjIwZ1hDSXVMaTluY21GdGJXRnlUbUZ0WlhOY0lqdGNibHh1WTI5dWMzUWdleUJtYkc5eVpXNWpaVXhsZUdWeVJuSnZiVU52YldKcGJtVmtRM1Z6ZEc5dFIzSmhiVzFoY2lCOUlEMGdiR1Y0WlhKelZYUnBiR2wwYVdWekxGeHVJQ0FnSUNBZ2V5Qm1iRzl5Wlc1alpWQmhjbk5sY2taeWIyMURiMjFpYVc1bFpFTjFjM1J2YlVkeVlXMXRZWElnZlNBOUlIQmhjbk5sY25OVmRHbHNhWFJwWlhNN1hHNWNibU5zWVhOeklGWnBaWGNnWlhoMFpXNWtjeUJGYkdWdFpXNTBJSHRjYmlBZ2FXNXBkR2xoYkVOdmJuUmxiblFnUFNCRlRWQlVXVjlUVkZKSlRrYzdYRzVjYmlBZ2EyVjVWWEJJWVc1a2JHVnlLQ2tnZTF4dUlDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNCamIyNXpkQ0J1WVcxbElEMGdkR2hwY3k1blpYUk9ZVzFsS0NrN1hHNWNiaUFnSUNBZ0lHbG1JQ2h1WVcxbElEMDlQU0JWVTBWU1gwUkZSa2xPUlVSZlExVlRWRTlOWDBkU1FVMU5RVkpmVGtGTlJTa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmlibVlnUFNCMGFHbHpMbWRsZEVKT1JpZ3BMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnlkV3hsVG1GdFpTQTlJSFJvYVhNdVoyVjBVblZzWlU1aGJXVW9LU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1Y0YVdOaGJGQmhkSFJsY200Z1BTQjBhR2x6TG1kbGRFeGxlR2xqWVd4UVlYUjBaWEp1S0NrN1hHNWNiaUFnSUNBZ0lDQWdkWE5sY2tSbFptbHVaV1JEZFhOMGIyMUhjbUZ0YldGeUxuTmxkRUpPUmloeWRXeGxUbUZ0WlN3Z1ltNW1LVHRjYmx4dUlDQWdJQ0FnSUNCMWMyVnlSR1ZtYVc1bFpFTjFjM1J2YlVkeVlXMXRZWEl1YzJWMFRHVjRhV05oYkZCaGRIUmxjbTRvYkdWNGFXTmhiRkJoZEhSbGNtNHBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1emRDQmpkWE4wYjIxSGNtRnRiV0Z5Y3lBOUlGdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2RYTmxja1JsWm1sdVpXUkRkWE4wYjIxSGNtRnRiV0Z5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXRZbWx1WldSRGRYTjBiMjFIY21GdGJXRnlJRDBnUTI5dFltbHVaV1JEZFhOMGIyMUhjbUZ0YldGeUxtWnliMjFEZFhOMGIyMUhjbUZ0YldGeWN5aGpkWE4wYjIxSGNtRnRiV0Z5Y3lrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjIxaWFXNWxaRU4xYzNSdmJVZHlZVzF0WVhKU2RXeGxUV0Z3SUQwZ1kyOXRZbWx1WldSRGRYTjBiMjFIY21GdGJXRnlMbWRsZEZKMWJHVk5ZWEFvS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJR052YldKcGJtVmtRM1Z6ZEc5dFIzSmhiVzFoY2xKMWJHVnpJRDBnVDJKcVpXTjBMblpoYkhWbGN5aGpiMjFpYVc1bFpFTjFjM1J2YlVkeVlXMXRZWEpTZFd4bFRXRndLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHMTFiSFJwVEdsdVpTQTlJSFJ5ZFdVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjIxaWFXNWxaRU4xYzNSdmJVZHlZVzF0WVhKU2RXeGxjMU4wY21sdVp5QTlJSEoxYkdWelFYTlRkSEpwYm1jb1kyOXRZbWx1WldSRGRYTjBiMjFIY21GdGJXRnlVblZzWlhNc0lHMTFiSFJwVEdsdVpTa3NYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyMWlhVzVsWkVKT1JpQTlJR052YldKcGJtVmtRM1Z6ZEc5dFIzSmhiVzFoY2xKMWJHVnpVM1J5YVc1bkxDQWdMeTh2WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iRzl5Wlc1alpVeGxlR1Z5SUQwZ1pteHZjbVZ1WTJWTVpYaGxja1p5YjIxRGIyMWlhVzVsWkVOMWMzUnZiVWR5WVcxdFlYSW9ZMjl0WW1sdVpXUkRkWE4wYjIxSGNtRnRiV0Z5S1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJR1pzYjNKbGJtTmxVR0Z5YzJWeUlEMGdabXh2Y21WdVkyVlFZWEp6WlhKR2NtOXRRMjl0WW1sdVpXUkRkWE4wYjIxSGNtRnRiV0Z5S0dOdmJXSnBibVZrUTNWemRHOXRSM0poYlcxaGNpa3NYRzRnSUNBZ0lDQWdJQ0FnSUNCeWRXeGxUV0Z3SUQwZ1pteHZjbVZ1WTJWUVlYSnpaWEl1WjJWMFVuVnNaVTFoY0NncExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUlNkV3hsVG1GdFpTQTlJSFJvYVhNdVoyVjBVM1JoY25SU2RXeGxUbUZ0WlNncExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUlNkV3hsSUQwZ2NuVnNaVTFoY0Z0emRHRnlkRkoxYkdWT1lXMWxYU3dnTHk4dlhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBJRDBnZEdocGN5NW5aWFJEYjI1MFpXNTBLQ2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiMnRsYm5NZ1BTQm1iRzl5Wlc1alpVeGxlR1Z5TG5SdmEyVnVhWE5sS0dOdmJuUmxiblFwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibTlrWlNBOUlHWnNiM0psYm1ObFVHRnljMlZ5TG5CaGNuTmxLSFJ2YTJWdWN5d2djM1JoY25SU2RXeGxLVHRjYmx4dUlDQWdJQ0FnYkdWMElIQmhjbk5sVkhKbFpTQTlJRzUxYkd3N1hHNWNiaUFnSUNBZ0lHbG1JQ2h1YjJSbElDRTlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElISmxiVzkyWlU5eVVtVnVZVzFsU1c1MFpYSnRaV1JwWVhSbFRtOWtaWE5EYUdWamEySnZlRU5vWldOclpXUWdQU0IwYUdsekxtbHpVbVZ0YjNabFQzSlNaVzVoYldWSmJuUmxjbTFsWkdsaGRHVk9iMlJsYzBOb1pXTnJZbTk0UTJobFkydGxaQ2dwTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2h5WlcxdmRtVlBjbEpsYm1GdFpVbHVkR1Z5YldWa2FXRjBaVTV2WkdWelEyaGxZMnRpYjNoRGFHVmphMlZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdjbVZ0YjNabFQzSlNaVzVoYldWSmJuUmxjbTFsWkdsaGRHVk9iMlJsY3lodWIyUmxLVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIQmhjbk5sVkhKbFpTQTlJRzV2WkdVdVlYTlFZWEp6WlZSeVpXVW9kRzlyWlc1ektUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkR2hwY3k1elpYUlFZWEp6WlZSeVpXVW9jR0Z5YzJWVWNtVmxLVHRjYmx4dUlDQWdJQ0FnZEdocGN5NXpaWFJEYjIxaWFXNWxaRUpPUmloamIyMWlhVzVsWkVKT1JpazdYRzRnSUNBZ2ZTQmpZWFJqYUNBb1pYSnliM0lwSUh0Y2JpQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktHVnljbTl5S1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVqYkdWaGNsQmhjbk5sVkhKbFpTZ3BPMXh1WEc0Z0lDQWdJQ0IwYUdsekxtTnNaV0Z5UTI5dFltbHVaV1JDVGtZb0tUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQmphR0Z1WjJWSVlXNWtiR1Z5S0NrZ2UxeHVJQ0FnSUdOdmJuTjBJRzVoYldVZ1BTQjBhR2x6TG1kbGRFNWhiV1VvS1N4Y2JpQWdJQ0FnSUNBZ0lDQnlkV3hsVG1GdFpTQTlJSFJvYVhNdVoyVjBVblZzWlU1aGJXVW9LU3hjYmlBZ0lDQWdJQ0FnSUNCeVpXRmtUMjVzZVNBOUlDaHVZVzFsSUQwOVBTQkVSVVpCVlV4VVgwTlZVMVJQVFY5SFVrRk5UVUZTWDA1QlRVVXBMRnh1SUNBZ0lDQWdJQ0FnSUdOMWMzUnZiVWR5WVcxdFlYSWdQU0J5WldGa1QyNXNlU0EvSUNBdkx5OWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBRM1Z6ZEc5dFIzSmhiVzFoY2lBNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxYzJWeVJHVm1hVzVsWkVOMWMzUnZiVWR5WVcxdFlYSXNYRzRnSUNBZ0lDQWdJQ0FnWW01bUlEMGdZM1Z6ZEc5dFIzSmhiVzFoY2k1blpYUkNUa1lvY25Wc1pVNWhiV1VwTEZ4dUlDQWdJQ0FnSUNBZ0lHeGxlR2xqWVd4UVlYUjBaWEp1SUQwZ1kzVnpkRzl0UjNKaGJXMWhjaTVuWlhSTVpYaHBZMkZzVUdGMGRHVnliaWdwTzF4dVhHNGdJQ0FnZEdocGN5NXpaWFJDVGtZb1ltNW1LVHRjYmx4dUlDQWdJSFJvYVhNdWMyVjBRazVHVW1WaFpFOXViSGtvY21WaFpFOXViSGtwTzF4dVhHNGdJQ0FnZEdocGN5NXpaWFJNWlhocFkyRnNVR0YwZEdWeWJpaHNaWGhwWTJGc1VHRjBkR1Z5YmlrN1hHNWNiaUFnSUNCMGFHbHpMbk5sZEV4bGVHbGpZV3hRWVhSMFpYSnVVbVZoWkU5dWJIa29jbVZoWkU5dWJIa3BPMXh1SUNCOVhHNWNiaUFnWTJocGJHUkZiR1Z0Wlc1MGN5Z3BJSHRjYmlBZ0lDQmpiMjV6ZENCclpYbFZjRWhoYm1Sc1pYSWdQU0IwYUdsekxtdGxlVlZ3U0dGdVpHeGxjaTVpYVc1a0tIUm9hWE1wTEZ4dUlDQWdJQ0FnSUNBZ0lHTm9ZVzVuWlVoaGJtUnNaWElnUFNCMGFHbHpMbU5vWVc1blpVaGhibVJzWlhJdVltbHVaQ2gwYUdsektUdGNibHh1SUNBZ0lISmxkSFZ5YmlBb1cxeHVYRzRnSUNBZ0lDQThRMjlzZFcxdWMwUnBkajVjYmlBZ0lDQWdJQ0FnUEZOcGVtVmhZbXhsUkdsMlBseHVJQ0FnSUNBZ0lDQWdJRHhTYjNkelJHbDJQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BGTjFZa2hsWVdScGJtYytYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lFNWhiV1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZVM1ZpU0dWaFpHbHVaejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEeE9ZVzFsVTJWc1pXTjBJRzl1UTJoaGJtZGxQWHRqYUdGdVoyVklZVzVrYkdWeWZTQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BGTjFZa2hsWVdScGJtYytYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lGSjFiR1VnYm1GdFpWeHVJQ0FnSUNBZ0lDQWdJQ0FnUEM5VGRXSklaV0ZrYVc1blBseHVJQ0FnSUNBZ0lDQWdJQ0FnUEZKMWJHVk9ZVzFsVTJWc1pXTjBJRzl1UTJoaGJtZGxQWHRqYUdGdVoyVklZVzVrYkdWeWZTQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BGTjFZa2hsWVdScGJtYytYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lFeGxlR2xqWVd3Z2NHRjBkR1Z5Ymx4dUlDQWdJQ0FnSUNBZ0lDQWdQQzlUZFdKSVpXRmthVzVuUGx4dUlDQWdJQ0FnSUNBZ0lDQWdQRXhsZUdsallXeFFZWFIwWlhKdVNXNXdkWFFnYjI1TFpYbFZjRDE3YTJWNVZYQklZVzVrYkdWeWZTQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BGTjFZa2hsWVdScGJtYytYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lFSk9SbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BDOVRkV0pJWldGa2FXNW5QbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BFSk9SbFJsZUhSaGNtVmhJRzl1UzJWNVZYQTllMnRsZVZWd1NHRnVaR3hsY24wZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUR4VGRXSklaV0ZrYVc1blBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCVGRHRnlkQ0J5ZFd4bElHNWhiV1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZVM1ZpU0dWaFpHbHVaejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEeFRkR0Z5ZEZKMWJHVk9ZVzFsU1c1d2RYUWdiMjVMWlhsVmNEMTdhMlY1VlhCSVlXNWtiR1Z5ZlNBdlBseHVJQ0FnSUNBZ0lDQWdJRHd2VW05M2MwUnBkajVjYmlBZ0lDQWdJQ0FnUEM5VGFYcGxZV0pzWlVScGRqNWNiaUFnSUNBZ0lDQWdQRlpsY25ScFkyRnNVM0JzYVhSMFpYSkVhWFlnTHo1Y2JpQWdJQ0FnSUNBZ1BFTnZiSFZ0YmtScGRqNWNiaUFnSUNBZ0lDQWdJQ0E4VW05M2MwUnBkajVjYmlBZ0lDQWdJQ0FnSUNBZ0lEeFRkV0pJWldGa2FXNW5QbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQkRiMjUwWlc1MFhHNGdJQ0FnSUNBZ0lDQWdJQ0E4TDFOMVlraGxZV1JwYm1jK1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4UTI5dWRHVnVkRlJsZUhSaGNtVmhJRzl1UzJWNVZYQTllMnRsZVZWd1NHRnVaR3hsY24wZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUR4VGRXSklaV0ZrYVc1blBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCUVlYSnpaU0IwY21WbFhHNGdJQ0FnSUNBZ0lDQWdJQ0E4TDFOMVlraGxZV1JwYm1jK1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4VUdGeWMyVlVjbVZsVkdWNGRHRnlaV0VnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJRHhUZFdKSVpXRmthVzVuUGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JEYjIxaWFXNWxaQ0JDVGtaY2JpQWdJQ0FnSUNBZ0lDQWdJRHd2VTNWaVNHVmhaR2x1Wno1Y2JpQWdJQ0FnSUNBZ0lDQWdJRHhEYjIxaWFXNWxaRUpPUmxSbGVIUmhjbVZoSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4VUdGeVlXZHlZWEJvUGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0E4VW1WdGIzWmxUM0pTWlc1aGJXVkpiblJsY20xbFpHbGhkR1ZPYjJSbGMwTm9aV05yWW05NElHOXVRMmhoYm1kbFBYdHJaWGxWY0VoaGJtUnNaWEo5SUdOb1pXTnJaV1FnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnVW1WdGIzWmxJRzl5SUhKbGJtRnRaU0JwYm5SbGNtMWxaR2xoZEdVZ2JtOWtaWE5jYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZVR0Z5WVdkeVlYQm9QbHh1SUNBZ0lDQWdJQ0FnSUR3dlVtOTNjMFJwZGo1Y2JpQWdJQ0FnSUNBZ1BDOURiMngxYlc1RWFYWStYRzRnSUNBZ0lDQThMME52YkhWdGJuTkVhWFkrWEc1Y2JpQWdJQ0JkS1R0Y2JpQWdmVnh1WEc0Z0lHbHVhWFJwWVd4cGMyVW9LU0I3WEc0Z0lDQWdkR2hwY3k1aGMzTnBaMjVEYjI1MFpYaDBLQ2s3WEc1Y2JpQWdJQ0JqYjI1emRDQmpiMjUwWlc1MElEMGdkR2hwY3k1cGJtbDBhV0ZzUTI5dWRHVnVkRHRjYmx4dUlDQWdJSFJvYVhNdWMyVjBRMjl1ZEdWdWRDaGpiMjUwWlc1MEtUdGNibHh1SUNBZ0lIUm9hWE11WTJoaGJtZGxTR0Z1Wkd4bGNpZ3BPMXh1WEc0Z0lDQWdkR2hwY3k1clpYbFZjRWhoYm1Sc1pYSW9LVHRjYmlBZ2ZWeHVYRzRnSUhOMFlYUnBZeUIwWVdkT1lXMWxJRDBnWENKa2FYWmNJanRjYmx4dUlDQnpkR0YwYVdNZ1pHVm1ZWFZzZEZCeWIzQmxjblJwWlhNZ1BTQjdYRzRnSUNBZ1kyeGhjM05PWVcxbE9pQmNJblpwWlhkY0lseHVJQ0I5TzF4dWZWeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQjNhWFJvVTNSNWJHVW9WbWxsZHlsZ1hHNWNiaUFnY0dGa1pHbHVaem9nTVhKbGJUdGNibUE3SWwwc0ltNWhiV1Z6SWpwYkltWnNiM0psYm1ObFRHVjRaWEpHY205dFEyOXRZbWx1WldSRGRYTjBiMjFIY21GdGJXRnlJaXdpYkdWNFpYSnpWWFJwYkdsMGFXVnpJaXdpWm14dmNtVnVZMlZRWVhKelpYSkdjbTl0UTI5dFltbHVaV1JEZFhOMGIyMUhjbUZ0YldGeUlpd2ljR0Z5YzJWeWMxVjBhV3hwZEdsbGN5SXNJbFpwWlhjaUxDSnBibWwwYVdGc1EyOXVkR1Z1ZENJc0lrVk5VRlJaWDFOVVVrbE9SeUlzSW10bGVWVndTR0Z1Wkd4bGNpSXNJbTVoYldVaUxDSm5aWFJPWVcxbElpd2lWVk5GVWw5RVJVWkpUa1ZFWDBOVlUxUlBUVjlIVWtGTlRVRlNYMDVCVFVVaUxDSmlibVlpTENKblpYUkNUa1lpTENKeWRXeGxUbUZ0WlNJc0ltZGxkRkoxYkdWT1lXMWxJaXdpYkdWNGFXTmhiRkJoZEhSbGNtNGlMQ0puWlhSTVpYaHBZMkZzVUdGMGRHVnliaUlzSW5WelpYSkVaV1pwYm1Wa1EzVnpkRzl0UjNKaGJXMWhjaUlzSW5ObGRFSk9SaUlzSW5ObGRFeGxlR2xqWVd4UVlYUjBaWEp1SWl3aVkzVnpkRzl0UjNKaGJXMWhjbk1pTENKamIyMWlhVzVsWkVOMWMzUnZiVWR5WVcxdFlYSWlMQ0pEYjIxaWFXNWxaRU4xYzNSdmJVZHlZVzF0WVhJaUxDSm1jbTl0UTNWemRHOXRSM0poYlcxaGNuTWlMQ0pqYjIxaWFXNWxaRU4xYzNSdmJVZHlZVzF0WVhKU2RXeGxUV0Z3SWl3aVoyVjBVblZzWlUxaGNDSXNJbU52YldKcGJtVmtRM1Z6ZEc5dFIzSmhiVzFoY2xKMWJHVnpJaXdpVDJKcVpXTjBJaXdpZG1Gc2RXVnpJaXdpYlhWc2RHbE1hVzVsSWl3aVkyOXRZbWx1WldSRGRYTjBiMjFIY21GdGJXRnlVblZzWlhOVGRISnBibWNpTENKeWRXeGxjMEZ6VTNSeWFXNW5JaXdpWTI5dFltbHVaV1JDVGtZaUxDSm1iRzl5Wlc1alpVeGxlR1Z5SWl3aVpteHZjbVZ1WTJWUVlYSnpaWElpTENKeWRXeGxUV0Z3SWl3aWMzUmhjblJTZFd4bFRtRnRaU0lzSW1kbGRGTjBZWEowVW5Wc1pVNWhiV1VpTENKemRHRnlkRkoxYkdVaUxDSmpiMjUwWlc1MElpd2laMlYwUTI5dWRHVnVkQ0lzSW5SdmEyVnVjeUlzSW5SdmEyVnVhWE5sSWl3aWJtOWtaU0lzSW5CaGNuTmxJaXdpY0dGeWMyVlVjbVZsSWl3aWNtVnRiM1psVDNKU1pXNWhiV1ZKYm5SbGNtMWxaR2xoZEdWT2IyUmxjME5vWldOclltOTRRMmhsWTJ0bFpDSXNJbWx6VW1WdGIzWmxUM0pTWlc1aGJXVkpiblJsY20xbFpHbGhkR1ZPYjJSbGMwTm9aV05yWW05NFEyaGxZMnRsWkNJc0luSmxiVzkyWlU5eVVtVnVZVzFsU1c1MFpYSnRaV1JwWVhSbFRtOWtaWE1pTENKaGMxQmhjbk5sVkhKbFpTSXNJbk5sZEZCaGNuTmxWSEpsWlNJc0luTmxkRU52YldKcGJtVmtRazVHSWl3aVpYSnliM0lpTENKamIyNXpiMnhsSWl3aWJHOW5JaXdpWTJ4bFlYSlFZWEp6WlZSeVpXVWlMQ0pqYkdWaGNrTnZiV0pwYm1Wa1FrNUdJaXdpWTJoaGJtZGxTR0Z1Wkd4bGNpSXNJbkpsWVdSUGJteDVJaXdpUkVWR1FWVk1WRjlEVlZOVVQwMWZSMUpCVFUxQlVsOU9RVTFGSWl3aVkzVnpkRzl0UjNKaGJXMWhjaUlzSW1SbFptRjFiSFJEZFhOMGIyMUhjbUZ0YldGeUlpd2ljMlYwUWs1R1VtVmhaRTl1YkhraUxDSnpaWFJNWlhocFkyRnNVR0YwZEdWeWJsSmxZV1JQYm14NUlpd2lZMmhwYkdSRmJHVnRaVzUwY3lJc0ltSnBibVFpTENKRGIyeDFiVzV6UkdsMklpd2lVMmw2WldGaWJHVkVhWFlpTENKU2IzZHpSR2wySWl3aVUzVmlTR1ZoWkdsdVp5SXNJazVoYldWVFpXeGxZM1FpTENKdmJrTm9ZVzVuWlNJc0lsSjFiR1ZPWVcxbFUyVnNaV04wSWl3aVRHVjRhV05oYkZCaGRIUmxjbTVKYm5CMWRDSXNJbTl1UzJWNVZYQWlMQ0pDVGtaVVpYaDBZWEpsWVNJc0lsTjBZWEowVW5Wc1pVNWhiV1ZKYm5CMWRDSXNJbFpsY25ScFkyRnNVM0JzYVhSMFpYSkVhWFlpTENKRGIyeDFiVzVFYVhZaUxDSkRiMjUwWlc1MFZHVjRkR0Z5WldFaUxDSlFZWEp6WlZSeVpXVlVaWGgwWVhKbFlTSXNJa052YldKcGJtVmtRazVHVkdWNGRHRnlaV0VpTENKUVlYSmhaM0poY0dnaUxDSlNaVzF2ZG1WUGNsSmxibUZ0WlVsdWRHVnliV1ZrYVdGMFpVNXZaR1Z6UTJobFkydGliM2dpTENKamFHVmphMlZrSWl3aWFXNXBkR2xoYkdselpTSXNJbUZ6YzJsbmJrTnZiblJsZUhRaUxDSnpaWFJEYjI1MFpXNTBJaXdpUld4bGJXVnVkQ0lzSW5SaFowNWhiV1VpTENKa1pXWmhkV3gwVUhKdmNHVnlkR2xsY3lJc0ltTnNZWE56VG1GdFpTSXNJbmRwZEdoVGRIbHNaU0pkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzUTBGQldTeFhRVUZCTEVOQlFVTTdPenRGUVVGaU8zZENRVUZCTzBGQlJYTkNMRWRCUVdsQ0xFTkJRV3BDTEdOQlFXbENPMEZCUldZc1IwRkJUU3hEUVVGT0xFdEJRVTA3UVVGRGEwSXNSMEZCZVVJc1EwRkJla0lzYzBKQlFYbENPMEZCUTB3c1IwRkJZU3hEUVVGaUxGZEJRV0U3UVVGRFl5eEhRVUZWTEVOQlFWWXNUVUZCVlR0QlFVVnVSaXhIUVVGaExFTkJRV0lzVlVGQllUdEJRVU5hTEVkQlFXTXNRMEZCWkN4WFFVRmpPMEZCUTJRc1IwRkJaU3hEUVVGbUxFdEJRV1U3UVVGRFpDeEhRVUZuUWl4RFFVRm9RaXhUUVVGblFqdEJRVU5vUWl4SFFVRm5RaXhEUVVGb1FpeEpRVUZuUWp0QlFVTmlMRWRCUVcxQ0xFTkJRVzVDTEZOQlFXMUNPMEZCUTJ4Q0xFZEJRVzlDTEVOQlFYQkNMRkZCUVc5Q08wRkJRMnhDTEVkQlFYTkNMRU5CUVhSQ0xGVkJRWE5DTzBGQlEzSkNMRWRCUVhWQ0xFTkJRWFpDTEdOQlFYVkNPMEZCUTNSQ0xFZEJRWGRDTEVOQlFYaENMR1ZCUVhkQ08wRkJRM2hDTEVkQlFYZENMRU5CUVhoQ0xGbEJRWGRDTzBGQlEyNUNMRWRCUVRSQ0xFTkJRVFZDTEhsQ1FVRTBRanRCUVVOaUxFZEJRVFJETEVOQlFUVkRMR2REUVVFMFF6dEJRVVZ1UlN4SFFVRmpMRU5CUVdRc1ZVRkJZenRCUVVOaUxFZEJRVzlDTEVOQlFYQkNMRTFCUVc5Q08wRkJRelJDTEVkQlFXbENMRU5CUVdwQ0xHRkJRV2xDT3pzN096czdPenM3T3pzN096czdPenRuUmtGNlFpOUdPenM3T3pzN096dHpRMEZCUVRzN096czdPMmxEUVVGQk96czdhVVZCUVVFN08xTkJRVUU3T3pzN096czdPRVJCUVVFN2MwTkJRVUU3TmtSQlFVRTdhVVZCUVVFN096czdkMFZCUVVFN1owVkJRVUU3T3pzN096czdPenM3VlVGQlFUczdkMEpCUVVFN096czdPenM3UzBGQlFUczdPenM3T3pzN096czdPenROUVVGQk8zbEVRVUZCT3pzN096czdPenM3T3pzN096czdPenM3ZFVKQlFVRTdPMHRCUVVFN096czdPemhDUVVGQk96czdPenM3T3pzN01rSkJRVUU3T3pzN096czdPenM3T3p0elEwRkJRVHM3T3pzN096czdPenM3TzFWQlFVRTdPMHRCUVVFN096czdPenM3TzNGR1FVRkJPenM3T3pzN096czdPenM3YlVWQlFVRTdPMmxFUVVGQk96czdPenM3TzFGQmQwd3JRaXhEUVVjdlFqczdPenRMUVROTVFUczdPMEZCTWtKQkxFZEJRVXNzUTBGQlIwRXNjME5CUVhORExFZEJRVXRETEUxQlFXVXNhVUpCUVRGRVJDeHpRMEZCYzBNc1JVRkRkRU5GTEhWRFFVRjFReXhIUVVGTFF5eE5RVUZuUWl4clFrRkJOVVJFTEhWRFFVRjFRenRCUVVVdlF5eEhRVUZMTEVOQlFVTkZMRWxCUVVrc2FVSkJRVllzVVVGQlVUczBRa0U1UWxJN08yRkJPRUpOUVN4SlFVRkpPMjFEUVRsQ1ZqczdOa05CUVVFN2RVUkJLMEpGUXl4RFFVRmpMR2xDUVVGSFF5eFZRVUZaTEdOREwwSXZRaXhEUkN0Q1owTTdPenM3TzFsQlJUbENReXhIUVVGWkxFVkJRVnBCTEVOQlFWazdiVUpCUVZwQkxGRkJRVkVzUTBGQlVrRXNXVUZCV1N4SFFVRkhMRU5CUVVNN1owSkJRMlFzUjBGQlJ5eERRVUZETEVOQlFVTTdiMEpCUTBnc1IwRkJTeXhEUVVGRFF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRReXhQUVVGUE8yOUNRVVY2UWl4RlFVRkZMRVZCUVVWRUxFbEJRVWtzUzBGQlMwVXNZVUZCWjBNc2JVTkJRVVVzUTBGQlF6dDNRa0ZET1VNc1IwRkJTeXhEUVVGRFF5eEhRVUZITEVkQlFVY3NTVUZCU1N4RFFVRkRReXhOUVVGTkxFbEJRMnBDUXl4UlFVRlJMRWRCUVVjc1NVRkJTU3hEUVVGRFF5eFhRVUZYTEVsQlF6TkNReXhqUVVGakxFZEJRVWNzU1VGQlNTeERRVUZEUXl4cFFrRkJhVUk3ZDBKQlJUZERReXg1UWtGQmQwSXNVMEZCUTBNc1RVRkJUU3hEUVVGRFRDeFJRVUZSTEVWQlFVVkdMRWRCUVVjc1EwRkJReXhEUVVGRE8zZENRVVV2UTAwc2VVSkJRWGRDTEZOQlFVTkZMR2xDUVVGcFFpeERRVUZEU2l4alFVRmpMRU5CUVVNc1EwRkJRenR2UWtGRE4wUXNRMEZCUXp0dlFrRkZSQ3hIUVVGTExFTkJRVU5MTEdOQlFXTXNSMEZCUnl4RFFVRkRPM2RDUVVOb1FrZ3NlVUpCUVhkQ08yOUNRVU14UWl4RFFVRkRMRVZCUTBSSkxIRkNRVUZ4UWl4SFFVRkhReXhOUVVGeFFpeDFRa0ZCUTBNc2EwSkJRV3RDTEVOQlFVTklMR05CUVdNc1IwRkRMMFZKTERSQ1FVRTBRaXhIUVVGSFNDeHhRa0ZCY1VJc1EwRkJRMGtzVlVGQlZTeEpRVU12UkVNc01FSkJRVEJDTEVkQlFVZERMRTFCUVUwc1EwRkJRME1zVFVGQlRTeERRVUZEU2l3MFFrRkJORUlzUjBGRGRrVkxMRk5CUVZNc1IwRkJSeXhKUVVGSkxFVkJRMmhDUXl4blEwRkJaME1zVDBGQlIwTXNUVUZCWVN4blFrRkJRMHdzTUVKQlFUQkNMRVZCUVVWSExGTkJRVk1zUjBGRGRFWkhMRmRCUVZjc1IwRkJSMFlzWjBOQlFXZERMRVZCUXpsRFJ5eGhRVUZoTEVkQlFVZHFReXh6UTBGQmMwTXNRMEZCUTNGQ0xIRkNRVUZ4UWl4SFFVTTFSV0VzWTBGQll5eEhRVUZIYUVNc2RVTkJRWFZETEVOQlFVTnRRaXh4UWtGQmNVSXNSMEZET1VWakxFOUJRVThzUjBGQlIwUXNZMEZCWXl4RFFVRkRWQ3hWUVVGVkxFbEJRMjVEVnl4aFFVRmhMRWRCUVVjc1NVRkJTU3hEUVVGRFF5eG5Ra0ZCWjBJc1NVRkRja05ETEZOQlFWTXNSMEZCUjBnc1QwRkJUeXhEUVVGRFF5eGhRVUZoTEVkQlEycERSeXhQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZEUXl4VlFVRlZMRWxCUTNwQ1F5eE5RVUZOTEVkQlFVZFNMR0ZCUVdFc1EwRkJRMU1zVVVGQlVTeERRVUZEU0N4UFFVRlBMRWRCUTNaRFNTeEpRVUZKTEVkQlFVZFVMR05CUVdNc1EwRkJRMVVzUzBGQlN5eERRVUZEU0N4TlFVRk5MRVZCUVVWSUxGTkJRVk03YjBKQlJXNUVMRWRCUVVjc1EwRkJRMDhzVTBGQlV5eEhRVUZITEVsQlFVazdiMEpCUlhCQ0xFVkJRVVVzUlVGQlJVWXNTVUZCU1N4TFFVRkxMRWxCUVVrc1JVRkJSU3hEUVVGRE8zZENRVU5zUWl4SFFVRkxMRU5CUVVOSExEaERRVUU0UXl4SFFVRkhMRWxCUVVrc1EwRkJRME1zWjBSQlFXZEVPM2RDUVVVMVJ5eEZRVUZGTEVWQlFVVkVMRGhEUVVFNFF5eEZRVUZGTEVOQlFVTTdaME5CUTI1RVJTeHpRa0ZCSzBJc2EwTkJRVU5NTEVsQlFVa3NRMEZCUXl4RFFVRkRPM2RDUVVONFF5eERRVUZETzNkQ1FVVkVSU3hUUVVGVExFZEJRVWRHTEVsQlFVa3NRMEZCUTAwc1YwRkJWeXhEUVVGRFVpeE5RVUZOTEVOQlFVTXNRMEZCUXp0dlFrRkRka01zUTBGQlF6dHZRa0ZGUkN4SlFVRkpMRU5CUVVOVExGbEJRVmtzUTBGQlEwd3NVMEZCVXl4RFFVRkRMRU5CUVVNN2IwSkJSVGRDTEVsQlFVa3NRMEZCUTAwc1kwRkJZeXhEUVVGRGJrSXNWMEZCVnl4RFFVRkRMRU5CUVVNN1owSkJRMjVETEVOQlFVTXNRMEZCUXl4TFFVRkxMRVZCUVVWdlFpeExRVUZMTEVWQlFVVXNRMEZCUXp0dlFrRkRaa01zVDBGQlR5eERRVUZEUXl4SFFVRkhMRU5CUVVOR0xFdEJRVXNzUTBGQlF5eERRVUZETzI5Q1FVVnVRaXhKUVVGSkxFTkJRVU5ITEdOQlFXTXNSVUZCUlN4RFFVRkRPMjlDUVVWMFFpeEpRVUZKTEVOQlFVTkRMR2RDUVVGblFpeEZRVUZGTEVOQlFVTTdaMEpCUXpGQ0xFTkJRVU03V1VGRFNDeERRVUZET3pzN1dVRkZSRU1zUjBGQllTeEZRVUZpUVN4RFFVRmhPMjFDUVVGaVFTeFJRVUZSTEVOQlFWSkJMR0ZCUVdFc1IwRkJSeXhEUVVGRE8yZENRVU5tTEVkQlFVc3NRMEZCUTJwRUxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTkRMRTlCUVU4c1NVRkRia0pKTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVORExGZEJRVmNzU1VGRE0wSTBReXhSUVVGUkxFZEJRVWxzUkN4SlFVRkpMRXRCUVV0dFJDeGhRVUV5UWl3NFFrRkRhRVJETEdGQlFXRXNSMEZCUjBZc1VVRkJVU3hIUVVOT1J5eE5RVUZ2UWl4M1FrRkRiRUkxUXl4NVFrRkJkMElzVlVGRE5VTk9MRWRCUVVjc1IwRkJSMmxFTEdGQlFXRXNRMEZCUTJoRUxFMUJRVTBzUTBGQlEwTXNVVUZCVVN4SFFVTnVRMFVzWTBGQll5eEhRVUZITmtNc1lVRkJZU3hEUVVGRE5VTXNhVUpCUVdsQ08yZENRVVYwUkN4SlFVRkpMRU5CUVVORkxFMUJRVTBzUTBGQlExQXNSMEZCUnl4RFFVRkRMRU5CUVVNN1owSkJSV3BDTEVsQlFVa3NRMEZCUTIxRUxHTkJRV01zUTBGQlEwb3NVVUZCVVN4RFFVRkRMRU5CUVVNN1owSkJSVGxDTEVsQlFVa3NRMEZCUTNaRExHbENRVUZwUWl4RFFVRkRTaXhqUVVGakxFTkJRVU1zUTBGQlF6dG5Ra0ZGZGtNc1NVRkJTU3hEUVVGRFowUXNlVUpCUVhsQ0xFTkJRVU5NTEZGQlFWRXNRMEZCUXl4RFFVRkRPMWxCUXpORExFTkJRVU03T3p0WlFVVkVUU3hIUVVGaExFVkJRV0pCTEVOQlFXRTdiVUpCUVdKQkxGRkJRVkVzUTBGQlVrRXNZVUZCWVN4SFFVRkhMRU5CUVVNN1owSkJRMllzUjBGQlN5eERRVUZEZWtRc1dVRkJXU3hIUVVGSExFbEJRVWtzUTBGQlEwRXNXVUZCV1N4RFFVRkRNRVFzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZETVVOU0xHRkJRV0VzUjBGQlJ5eEpRVUZKTEVOQlFVTkJMR0ZCUVdFc1EwRkJRMUVzU1VGQlNTeERRVUZETEVsQlFVazdaMEpCUld4RUxFMUJRVTBzUTBGQlJTeERRVUZETzNORVFVVk9ReXhYUVVGVkxIRkVRVU5TUXl4VFFVRlhMR3RFUVVOVVF5eFhRVUZQTEd0RVFVTk1ReXhYUVVGVkxHZENRVUZETEVOQlJWb3NNRU5CUTBORExFdEJRVlU3ZDBKQlFVTkRMRkZCUVZFc1JVRkJSV1FzWVVGQllUc3dSRUZEYkVOWkxGZEJRVlVzWjBKQlFVTXNRMEZGV2l3clEwRkRRMGNzVTBGQll6dDNRa0ZCUTBRc1VVRkJVU3hGUVVGRlpDeGhRVUZoT3pCRVFVTjBRMWtzVjBGQlZTeG5Ra0ZCUXl4RFFVVmFMSEZFUVVORFNTeGxRVUZ0UWp0M1FrRkJRME1zVDBGQlR5eEZRVUZGYmtVc1dVRkJXVHN3UkVGRGVrTTRSQ3hYUVVGVkxHZENRVUZETEVOQlJWb3NlVU5CUTBOTkxFbEJRVmM3ZDBKQlFVTkVMRTlCUVU4c1JVRkJSVzVGTEZsQlFWazdNRVJCUTJwRE9FUXNWMEZCVlN4blFrRkJReXhEUVVWYUxIRkVRVU5EVHl4alFVRnJRanQzUWtGQlEwWXNUMEZCVHl4RlFVRkZia1VzV1VGQldUczBSRUZITlVOelJTeFhRVUZ0UWl3clJFRkRia0pETEZkQlFWTXNiMFJCUTFCV0xGZEJRVThzYTBSQlEweERMRmRCUVZVc1owSkJRVU1zUTBGRldpdzJRMEZEUTFVc1VVRkJaVHQzUWtGQlEwd3NUMEZCVHl4RlFVRkZia1VzV1VGQldUc3dSRUZEY2tNNFJDeFhRVUZWTEdkQ1FVRkRMRU5CUlZvc1owUkJRME5YTEZWQlFXbENMRzFFUVVOcVFsZ3NWMEZCVlN4blFrRkJReXhEUVVWYUxHdEVRVU5EV1N4WlFVRnRRaXh0UkVGRGJrSkRMRlZCUVZNc2EwUkJRMUJETEdkRFFVRjFRenQzUWtGQlExb3NVVUZCVVN4RlFVRkZhRVVzV1VGQldUdDNRa0ZCUlRaRkxFOUJRVThzUlVGQlVFRXNTVUZCVHp0M1FrRkJSeXhEUVVVM1JUdG5Ra0ZMVWl4RFFVRkRPMWxCUTBnc1EwRkJRenM3TzFsQlJVUkRMRWRCUVZVc1JVRkJWa0VzUTBGQlZUdHRRa0ZCVmtFc1VVRkJVU3hEUVVGU1FTeFZRVUZWTEVkQlFVY3NRMEZCUXp0blFrRkRXaXhKUVVGSkxFTkJRVU5ETEdGQlFXRXNSVUZCUlN4RFFVRkRPMmRDUVVWeVFpeEhRVUZMTEVOQlFVTXZReXhQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZEYkVNc1kwRkJZenRuUWtGRmJrTXNTVUZCU1N4RFFVRkRhMFlzVlVGQlZTeERRVUZEYUVRc1QwRkJUeXhEUVVGRExFTkJRVU03WjBKQlJYcENMRWxCUVVrc1EwRkJRMnRDTEdGQlFXRXNSVUZCUlN4RFFVRkRPMmRDUVVWeVFpeEpRVUZKTEVOQlFVTnNSQ3haUVVGWkxFVkJRVVVzUTBGQlF6dFpRVU4wUWl4RFFVRkRPenROUVM5TFNEczdiVUpCT0VKdFFtbEdMRXRCUVU4N1owSkJRWEJDY0VZc1NVRkJTU3hGUVcxS1JIRkdMRU5CUVU4c1ZVRkJSeXhEUVVGTExFdEJha3g0UWp0blFrRTRRazF5Uml4SlFVRkpMRVZCY1VwRWMwWXNRMEZCYVVJc2IwSkJRVWNzUTBGQlF6dEpRVU14UWtNc1UwRkJVeXhGUVVGRkxFTkJRVTA3UVVGRGJrSXNRMEZCUXl4RFFYSk1TRHR0UWtGM1RHVkRMR05CUVZNc1ZVRkJRM2hHTEVsQlFVazdNRUpCZUV3M1FpSjkiLCAiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBcImp1eHRhcG9zZVwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBCb2R5IH0gZnJvbSBcImVhc3lcIjtcblxuaW1wb3J0IFZpZXcgZnJvbSBcIi4vZXhhbXBsZS92aWV3XCI7XG5cbmNvbnN0IHsgcmVuZGVyU3R5bGVzIH0gPSB3aXRoU3R5bGU7XG5cbmNvbnN0IGJvZHkgPSBuZXcgQm9keSgpO1xuXG5yZW5kZXJTdHlsZXMoKTtcblxuYm9keS5tb3VudChcblxuICA8Vmlldy8+XG5cbik7XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUFFcUIsU0FBTiwyQkFBUTt1QkFDVCxLQUFLLE1BQUk7O0FBQ25CLGFBQUssTUFBTTtBQUNYLGFBQUssT0FBTzs7OztVQUdkLEtBQUE7aUJBQUEsa0JBQVM7QUFDUCxtQkFBTyxLQUFLOzs7O1VBR2QsS0FBQTtpQkFBQSxtQkFBVTtBQUNSLG1CQUFPLEtBQUs7Ozs7OztzQkFYSzs7OztBQ0ZyQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUVxQixTQUFOLDJCQUFRO3VCQUNULEtBQUssTUFBTSxPQUFPLFFBQU07O0FBQ2xDLGFBQUssTUFBTTtBQUNYLGFBQUssT0FBTztBQUNaLGFBQUssUUFBUTtBQUNiLGFBQUssU0FBUzs7OztVQUdoQixLQUFBO2lCQUFBLGtCQUFTO0FBQ1AsbUJBQU8sS0FBSzs7OztVQUdkLEtBQUE7aUJBQUEsbUJBQVU7QUFDUixtQkFBTyxLQUFLOzs7O1VBR2QsS0FBQTtpQkFBQSxvQkFBVztBQUNULG1CQUFPLEtBQUs7Ozs7VUFHZCxLQUFBO2lCQUFBLHFCQUFZO0FBQ1YsbUJBQU8sS0FBSzs7OztVQUdkLEtBQUE7aUJBQUEsb0JBQVc7QUFDVCxnQkFBTSxRQUFTLEtBQUssUUFBUSxLQUFLO0FBRWpDLG1CQUFPOzs7O1VBR1QsS0FBQTtpQkFBQSxxQkFBWTtBQUNWLGdCQUFNLFNBQVUsS0FBSyxTQUFTLEtBQUs7QUFFbkMsbUJBQU87Ozs7VUFHVCxLQUFBO2lCQUFBLGdCQUFPLEtBQUs7QUFDVixpQkFBSyxNQUFNOzs7O1VBR2IsS0FBQTtpQkFBQSxpQkFBUSxNQUFNO0FBQ1osaUJBQUssT0FBTzs7OztVQUdkLEtBQUE7aUJBQUEsa0JBQVMsT0FBTztBQUNkLGlCQUFLLFFBQVE7Ozs7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
